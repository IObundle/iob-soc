
TEST_DDR3.elf:     file format elf32-littlenios2
TEST_DDR3.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x410401c0

Program Header:
    LOAD off    0x00001000 vaddr 0x41040000 paddr 0x41040000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x41040020 paddr 0x41040020 align 2**12
         filesz 0x000101a4 memsz 0x000101a4 flags r-x
    LOAD off    0x000111c4 vaddr 0x410501c4 paddr 0x41051cb0 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x0001379c vaddr 0x4105379c paddr 0x4105379c align 2**12
         filesz 0x00000000 memsz 0x0000015c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  41040000  41040000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   000001a0  41040020  41040020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000fb88  410401c0  410401c0  000011c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000047c  4104fd48  4104fd48  00010d48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  410501c4  41051cb0  000111c4  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000015c  4105379c  4105379c  0001379c  2**2
                  ALLOC, SMALL_DATA
  6 .mem_if_ddr3_emif 00000000  00000000  00000000  00012cb0  2**0
                  CONTENTS
  7 .onchip_memory2 00000000  410538f8  410538f8  00012cb0  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00012cb0  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000f28  00000000  00000000  00012cd8  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   000252d6  00000000  00000000  00013c00  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00009670  00000000  00000000  00038ed6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000bcd8  00000000  00000000  00042546  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  0000214c  00000000  00000000  0004e220  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00003686  00000000  00000000  0005036c  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00017b0d  00000000  00000000  000539f2  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000030  00000000  00000000  0006b500  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001920  00000000  00000000  0006b530  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  0007003e  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000a  00000000  00000000  00070041  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  0007004b  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  0007004c  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  0007004d  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  00070051  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  00070055  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   00000009  00000000  00000000  00070059  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    00000009  00000000  00000000  00070062  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   00000009  00000000  00000000  0007006b  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 0000000c  00000000  00000000  00070074  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 00000047  00000000  00000000  00070080  2**0
                  CONTENTS, READONLY
 30 .jdi          0000412e  00000000  00000000  000700c7  2**0
                  CONTENTS, READONLY
 31 .sopcinfo     000a6572  00000000  00000000  000741f5  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
41040000 l    d  .entry	00000000 .entry
41040020 l    d  .exceptions	00000000 .exceptions
410401c0 l    d  .text	00000000 .text
4104fd48 l    d  .rodata	00000000 .rodata
410501c4 l    d  .rwdata	00000000 .rwdata
4105379c l    d  .bss	00000000 .bss
00000000 l    d  .mem_if_ddr3_emif	00000000 .mem_if_ddr3_emif
410538f8 l    d  .onchip_memory2	00000000 .onchip_memory2
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../TEST_DDR3_bsp//obj/HAL/src/crt0.o
41040208 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_exception_entry.o
41040094 l       .exceptions	00000000 alt_exception_unknown
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 mem_verify.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
4104ff12 l     O .rodata	00000010 zeroes.4404
41043298 l     F .text	000000bc __sbprintf
4104ff22 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
410434a8 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
41044fd8 l     F .text	00000008 __fp_unlock
41044fec l     F .text	0000019c __sinit.part.1
41045188 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
410501c4 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
41050608 l     O .rwdata	00000020 lc_ctype_charset
410505e8 l     O .rwdata	00000020 lc_message_charset
41050628 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
4104ff54 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
410485a4 l     F .text	000000fc __sprint_r.part.0
41050088 l     O .rodata	00000010 blanks.4348
41050078 l     O .rodata	00000010 zeroes.4349
41049b30 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
4104d638 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev.c
4104d78c l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
4104d7b8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
4104d8a4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
4104d984 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
4104da70 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
4104dc44 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
41051ca0 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 alt_write.c
4104e034 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
4104e168 l     F .text	00000034 alt_dev_reg
41050c10 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
4104e458 l     F .text	0000020c altera_avalon_jtag_uart_irq
4104e664 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
4104ec9c l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
4104eebc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
4104f330 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
4104f470 l     F .text	0000003c alt_get_errno
4104f4ac l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
41040e88 g     F .text	00000018 putchar
41047a80 g     F .text	00000074 _mprec_log10
41047b6c g     F .text	0000008c __any_on
4104a224 g     F .text	00000054 _isatty_r
4104ff60 g     O .rodata	00000028 __mprec_tinytens
4104db80 g     F .text	0000007c alt_main
41040ea0 g     F .text	000000c0 _puts_r
410537f8 g     O .bss	00000100 alt_irq
4104a278 g     F .text	00000060 _lseek_r
41051cb0 g       *ABS*	00000000 __flash_rwdata_start
4104c164 g     F .text	00000088 .hidden __eqdf2
410538f8 g       *ABS*	00000000 __alt_heap_start
41040e44 g     F .text	0000003c printf
4104a338 g     F .text	0000009c _wcrtomb_r
41048464 g     F .text	0000005c __sseek
41045328 g     F .text	00000010 __sinit
41049bec g     F .text	00000140 __swbuf_r
41045df0 g     F .text	0000007c _setlocale_r
41045190 g     F .text	00000068 __sfmoreglue
4104dc20 g     F .text	00000024 __malloc_unlock
41046978 g     F .text	0000015c memmove
41045310 g     F .text	00000018 _cleanup
41046bfc g     F .text	000000a8 _Balloc
4104c1ec g     F .text	000000dc .hidden __gtdf2
4104f6c4 g     F .text	00000024 altera_nios2_gen2_irq_init
41040000 g     F .entry	0000001c __reset
41040020 g       *ABS*	00000000 __flash_exceptions_start
4104a1c8 g     F .text	0000005c _fstat_r
410537b4 g     O .bss	00000004 errno
410483e0 g     F .text	00000008 __seofread
410537bc g     O .bss	00000004 alt_argv
41059c70 g       *ABS*	00000000 _gp
00000000 g       *ABS*	00000000 __alt_mem_mem_if_ddr3_emif
41050a90 g     O .rwdata	00000180 alt_fd_list
41040e80 g     F .text	00000008 _putchar_r
4104f6e8 g     F .text	00000090 alt_find_dev
41040ccc g     F .text	00000148 memcpy
41040404 g     F .text	000004d8 TMEM_Verify
41044fe0 g     F .text	0000000c _cleanup_r
4104d450 g     F .text	000000dc .hidden __floatsidf
4104f3f4 g     F .text	0000007c alt_io_redirect
4104c2c8 g     F .text	000000f4 .hidden __ltdf2
4104fd48 g       *ABS*	00000000 __DTOR_END__
41040f60 g     F .text	00000014 puts
410482c4 g     F .text	00000074 __fpclassifyd
410479dc g     F .text	000000a4 __ratio
41049b14 g     F .text	0000001c __vfiprintf_internal
4104e85c g     F .text	0000021c altera_avalon_jtag_uart_read
41040e14 g     F .text	00000030 _printf_r
41040c10 g     F .text	00000064 .hidden __udivsi3
4104d8e0 g     F .text	000000a4 isatty
4104ffb0 g     O .rodata	000000c8 __mprec_tens
41045e6c g     F .text	0000000c __locale_charset
4104f924 g     F .text	00000090 alt_icache_flush
410537b0 g     O .bss	00000004 __malloc_top_pad
41051c78 g     O .rwdata	00000004 __mb_cur_max
41045e9c g     F .text	0000000c _localeconv_r
41047008 g     F .text	0000003c __i2b
410457ac g     F .text	000004bc __sfvwrite_r
41048338 g     F .text	00000054 _sbrk_r
4104a2d8 g     F .text	00000060 _read_r
41051c98 g     O .rwdata	00000004 alt_max_fd
41049ebc g     F .text	000000f0 _fclose_r
41044fa8 g     F .text	00000030 fflush
410537ac g     O .bss	00000004 __malloc_max_sbrked_mem
4104afd0 g     F .text	000008ac .hidden __adddf3
41047784 g     F .text	0000010c __b2d
4104aa98 g     F .text	00000538 .hidden __umoddi3
4104daac g     F .text	000000d4 lseek
41051c70 g     O .rwdata	00000004 _global_impure_ptr
41047d60 g     F .text	00000564 _realloc_r
410538f8 g       *ABS*	00000000 __bss_end
4104f240 g     F .text	000000f0 alt_iic_isr_register
4104df2c g     F .text	00000108 alt_tick
4104a520 g     F .text	00000578 .hidden __udivdi3
4104a124 g     F .text	00000024 _fputwc_r
4104ff88 g     O .rodata	00000028 __mprec_bigtens
41046dec g     F .text	00000104 __s2b
4104d52c g     F .text	000000a8 .hidden __floatunsidf
410474c4 g     F .text	00000060 __mcmp
41045348 g     F .text	00000018 __fp_lock_all
4104f1f4 g     F .text	0000004c alt_ic_irq_enabled
4104de90 g     F .text	0000009c alt_alarm_stop
410537cc g     O .bss	00000004 alt_irq_active
410400ec g     F .exceptions	000000d4 alt_irq_handler
41050a68 g     O .rwdata	00000028 alt_dev_null
4104d744 g     F .text	00000048 alt_dcache_flush_all
41046ef0 g     F .text	00000068 __hi0bits
4104d3d0 g     F .text	00000080 .hidden __fixdfsi
41051cb0 g       *ABS*	00000000 __ram_rwdata_end
41051c90 g     O .rwdata	00000008 alt_dev_list
4104e070 g     F .text	000000f8 write
41047bf8 g     F .text	000000a0 _putc_r
410501c4 g       *ABS*	00000000 __ram_rodata_end
4104d7f4 g     F .text	000000b0 fstat
4104c2c8 g     F .text	000000f4 .hidden __ledf2
4104723c g     F .text	00000140 __pow5mult
410486b8 g     F .text	0000145c ___vfiprintf_internal_r
410537a4 g     O .bss	00000004 __nlocale_changed
41040c74 g     F .text	00000058 .hidden __umodsi3
410538f8 g       *ABS*	00000000 end
4104e398 g     F .text	000000c0 altera_avalon_jtag_uart_init
4104fd48 g       *ABS*	00000000 __CTOR_LIST__
4107e800 g       *ABS*	00000000 __alt_stack_pointer
4104ed14 g     F .text	0000007c alt_avalon_timer_sc_init
4104d5d4 g     F .text	00000064 .hidden __clzsi2
4104ea78 g     F .text	00000224 altera_avalon_jtag_uart_write
41045338 g     F .text	00000004 __sfp_lock_acquire
41046894 g     F .text	000000e4 memchr
41041084 g     F .text	000021f8 ___vfprintf_internal_r
4104549c g     F .text	00000310 _free_r
41045e78 g     F .text	00000010 __locale_mb_cur_max
4104fb94 g     F .text	00000180 __call_exitprocs
410537a0 g     O .bss	00000004 __mlocale_changed
41051c7c g     O .rwdata	00000004 __malloc_sbrk_base
410401c0 g     F .text	0000004c _start
410537c4 g     O .bss	00000004 _alt_tick_rate
41040f8c g     F .text	00000060 rand
4104737c g     F .text	00000148 __lshift
410537c8 g     O .bss	00000004 _alt_nticks
4104dc80 g     F .text	000000fc read
4104e1d4 g     F .text	00000060 alt_sys_init
4104fa7c g     F .text	00000118 __register_exitproc
41047044 g     F .text	000001f8 __multiply
4104e704 g     F .text	00000068 altera_avalon_jtag_uart_close
410501c4 g       *ABS*	00000000 __ram_rwdata_start
4104fd48 g       *ABS*	00000000 __ram_rodata_start
410537d0 g     O .bss	00000028 __malloc_current_mallinfo
41047890 g     F .text	0000014c __d2b
4104e234 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
4104f880 g     F .text	000000a4 alt_get_fd
41049da4 g     F .text	00000054 _close_r
4104fa00 g     F .text	0000007c memcmp
4104e2f4 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
410538f8 g       *ABS*	00000000 __alt_stack_base
4104e344 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
41043354 g     F .text	00000154 __swsetup_r
4104b87c g     F .text	000008e8 .hidden __divdf3
410451f8 g     F .text	00000118 __sfp
41047af4 g     F .text	00000078 __copybits
41050660 g     O .rwdata	00000408 __malloc_av_
41045344 g     F .text	00000004 __sinit_lock_release
4104c3bc g     F .text	00000718 .hidden __muldf3
4104838c g     F .text	00000054 __sread
4104f778 g     F .text	00000108 alt_find_file
4104eef8 g     F .text	000000a4 alt_dev_llist_insert
4104dbfc g     F .text	00000024 __malloc_lock
4104dde0 g     F .text	000000b0 sbrk
41044f4c g     F .text	0000005c _fflush_r
41049df8 g     F .text	000000c4 _calloc_r
4105379c g       *ABS*	00000000 __bss_start
41046ad4 g     F .text	00000128 memset
4104020c g     F .text	000001f8 main
410537c0 g     O .bss	00000004 alt_envp
410537a8 g     O .bss	00000004 __malloc_max_total_mem
4104e294 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
41049d2c g     F .text	00000018 __swbuf
41040f74 g     F .text	00000018 srand
410484c0 g     F .text	00000008 __sclose
4107e800 g       *ABS*	00000000 __alt_heap_limit
41049fac g     F .text	00000014 fclose
410436a8 g     F .text	00001688 _dtoa_r
41046088 g     F .text	0000080c _malloc_r
4104a494 g     F .text	00000030 __ascii_wctomb
41051c9c g     O .rwdata	00000004 alt_errno
41045c68 g     F .text	000000c4 _fwalk
41047c98 g     F .text	000000c8 putc
41040b18 g     F .text	00000084 .hidden __divsi3
41045378 g     F .text	00000124 _malloc_trim_r
4104fd48 g       *ABS*	00000000 __CTOR_END__
410484c8 g     F .text	000000dc strcmp
4104fd48 g       *ABS*	00000000 __flash_rodata_start
4104fd48 g       *ABS*	00000000 __DTOR_LIST__
4104c164 g     F .text	00000088 .hidden __nedf2
4104e19c g     F .text	00000038 alt_irq_init
4104dd7c g     F .text	00000064 alt_release_fd
41050098 g     O .rodata	00000100 .hidden __clz_tab
4105379c g     O .bss	00000004 _PathLocale
4104f9b4 g     F .text	00000014 atexit
41049d44 g     F .text	00000060 _write_r
41045ea8 g     F .text	00000018 setlocale
41051c74 g     O .rwdata	00000004 _impure_ptr
410537b8 g     O .bss	00000004 alt_argc
41044d30 g     F .text	0000021c __sflush_r
4104effc g     F .text	00000060 _do_dtors
41045e94 g     F .text	00000008 __locale_cjk_lang
41040020 g       .exceptions	00000000 alt_irq_entry
41047720 g     F .text	00000064 __ulp
41045360 g     F .text	00000018 __fp_unlock_all
41051c88 g     O .rwdata	00000008 alt_fs_list
41040020 g       *ABS*	00000000 __ram_exceptions_start
41045ec0 g     F .text	0000000c localeconv
41040000 g       *ABS*	00000000 __alt_mem_onchip_memory2
4104f090 g     F .text	00000050 alt_ic_isr_register
41051cb0 g       *ABS*	00000000 _edata
410538f8 g       *ABS*	00000000 _end
41049fc0 g     F .text	00000164 __fputwc
410401c0 g       *ABS*	00000000 __ram_exceptions_end
4104e76c g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
4104f168 g     F .text	0000008c alt_ic_irq_disable
410483e8 g     F .text	0000007c __swrite
41051c80 g     O .rwdata	00000004 __malloc_trim_threshold
41045e88 g     F .text	0000000c __locale_msgcharset
4104f9c8 g     F .text	00000038 exit
41045d2c g     F .text	000000c4 _fwalk_reent
41047524 g     F .text	000001fc __mdiff
41040b9c g     F .text	00000074 .hidden __modsi3
410408dc g     F .text	0000023c TMEM_QuickVerify
4107e800 g       *ABS*	00000000 __alt_data_end
41040020 g     F .exceptions	00000000 alt_exception
4104533c g     F .text	00000004 __sfp_lock_release
4104fd14 g     F .text	00000034 _exit
4104ed90 g     F .text	0000012c alt_alarm_start
41045ecc g     F .text	000001bc __smakebuf_r
41040fec g     F .text	00000098 strlen
4104f570 g     F .text	00000154 open
4104c1ec g     F .text	000000dc .hidden __gedf2
41051c84 g     O .rwdata	00000004 __wctomb
410486a0 g     F .text	00000018 __sprint_r
4104f05c g     F .text	00000034 alt_icache_flush_all
41051cac g     O .rwdata	00000004 alt_priority_mask
4104f0e0 g     F .text	00000088 alt_ic_irq_enable
4104327c g     F .text	0000001c __vfprintf_internal
4104a4c4 g     F .text	0000005c _wctomb_r
4104cad4 g     F .text	000008fc .hidden __subdf3
41046f58 g     F .text	000000b0 __lo0bits
41051ca4 g     O .rwdata	00000008 alt_alarm_list
4104ef9c g     F .text	00000060 _do_ctors
4104a3d4 g     F .text	000000c0 wcrtomb
4104d674 g     F .text	000000d0 close
4104d9ec g     F .text	00000084 alt_load
4104a148 g     F .text	00000080 fputwc
41045340 g     F .text	00000004 __sinit_lock_acquire
41046ccc g     F .text	00000120 __multadd
41046ca4 g     F .text	00000028 _Bfree



Disassembly of section .entry:

41040000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
41040000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
41040004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
41040008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
4104000c:	00bffd16 	blt	zero,r2,41040004 <__alt_data_end+0xfffc1804>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
41040010:	00504134 	movhi	at,16644
    ori r1, r1, %lo(_start)
41040014:	08407014 	ori	at,at,448
    jmp r1
41040018:	0800683a 	jmp	at
4104001c:	00000000 	call	40000000 <__alt_mem_mem_if_ddr3_emif+0x40000000>

Disassembly of section .exceptions:

41040020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
41040020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
41040024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
41040028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
4104002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
41040030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
41040034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
41040038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
4104003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
41040040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
41040044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
41040048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
4104004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
41040050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
41040054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
41040058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
4104005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
41040060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
41040064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
41040068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
4104006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
41040070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
41040074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
41040078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
4104007c:	10000326 	beq	r2,zero,4104008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
41040080:	20000226 	beq	r4,zero,4104008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
41040084:	10400ec0 	call	410400ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
41040088:	00000306 	br	41040098 <alt_exception_unknown+0x4>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
4104008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
41040090:	e8bfff17 	ldw	r2,-4(ea)

41040094 <alt_exception_unknown>:
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
41040094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
41040098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
4104009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
410400a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
410400a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
410400a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
410400ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
410400b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
410400b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
410400b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
410400bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
410400c0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
410400c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
410400c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
410400cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
410400d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
410400d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
410400d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
410400dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
410400e0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
410400e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
410400e8:	ef80083a 	eret

410400ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
410400ec:	defff904 	addi	sp,sp,-28
410400f0:	dfc00615 	stw	ra,24(sp)
410400f4:	df000515 	stw	fp,20(sp)
410400f8:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
410400fc:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
41040100:	0005313a 	rdctl	r2,ipending
41040104:	e0bffe15 	stw	r2,-8(fp)

  return active;
41040108:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
4104010c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
41040110:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
41040114:	00800044 	movi	r2,1
41040118:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
4104011c:	e0fffb17 	ldw	r3,-20(fp)
41040120:	e0bffc17 	ldw	r2,-16(fp)
41040124:	1884703a 	and	r2,r3,r2
41040128:	10001426 	beq	r2,zero,4104017c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
4104012c:	00904174 	movhi	r2,16645
41040130:	108dfe04 	addi	r2,r2,14328
41040134:	e0fffd17 	ldw	r3,-12(fp)
41040138:	180690fa 	slli	r3,r3,3
4104013c:	10c5883a 	add	r2,r2,r3
41040140:	10c00017 	ldw	r3,0(r2)
41040144:	00904174 	movhi	r2,16645
41040148:	108dfe04 	addi	r2,r2,14328
4104014c:	e13ffd17 	ldw	r4,-12(fp)
41040150:	200890fa 	slli	r4,r4,3
41040154:	1105883a 	add	r2,r2,r4
41040158:	10800104 	addi	r2,r2,4
4104015c:	10800017 	ldw	r2,0(r2)
41040160:	1009883a 	mov	r4,r2
41040164:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
41040168:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
4104016c:	0005313a 	rdctl	r2,ipending
41040170:	e0bfff15 	stw	r2,-4(fp)

  return active;
41040174:	e0bfff17 	ldw	r2,-4(fp)
41040178:	00000706 	br	41040198 <alt_irq_handler+0xac>
      }
      mask <<= 1;
4104017c:	e0bffc17 	ldw	r2,-16(fp)
41040180:	1085883a 	add	r2,r2,r2
41040184:	e0bffc15 	stw	r2,-16(fp)
      i++;
41040188:	e0bffd17 	ldw	r2,-12(fp)
4104018c:	10800044 	addi	r2,r2,1
41040190:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
41040194:	003fe106 	br	4104011c <__alt_data_end+0xfffc191c>

    active = alt_irq_pending ();
41040198:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
4104019c:	e0bffb17 	ldw	r2,-20(fp)
410401a0:	103fdb1e 	bne	r2,zero,41040110 <__alt_data_end+0xfffc1910>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
410401a4:	0001883a 	nop
}
410401a8:	0001883a 	nop
410401ac:	e037883a 	mov	sp,fp
410401b0:	dfc00117 	ldw	ra,4(sp)
410401b4:	df000017 	ldw	fp,0(sp)
410401b8:	dec00204 	addi	sp,sp,8
410401bc:	f800283a 	ret

Disassembly of section .text:

410401c0 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
410401c0:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
410401c4:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
410401c8:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
410401cc:	00bffd16 	blt	zero,r2,410401c4 <__alt_data_end+0xfffc19c4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
410401d0:	06d041f4 	movhi	sp,16647
    ori sp, sp, %lo(__alt_stack_pointer)
410401d4:	defa0014 	ori	sp,sp,59392
    movhi gp, %hi(_gp)
410401d8:	06904174 	movhi	gp,16645
    ori gp, gp, %lo(_gp)
410401dc:	d6a71c14 	ori	gp,gp,40048
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
410401e0:	00904174 	movhi	r2,16645
    ori r2, r2, %lo(__bss_start)
410401e4:	108de714 	ori	r2,r2,14236

    movhi r3, %hi(__bss_end)
410401e8:	00d04174 	movhi	r3,16645
    ori r3, r3, %lo(__bss_end)
410401ec:	18ce3e14 	ori	r3,r3,14584

    beq r2, r3, 1f
410401f0:	10c00326 	beq	r2,r3,41040200 <_start+0x40>

0:
    stw zero, (r2)
410401f4:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
410401f8:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
410401fc:	10fffd36 	bltu	r2,r3,410401f4 <__alt_data_end+0xfffc19f4>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
41040200:	104d9ec0 	call	4104d9ec <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
41040204:	104db800 	call	4104db80 <alt_main>

41040208 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
41040208:	003fff06 	br	41040208 <__alt_data_end+0xfffc1a08>

4104020c <main>:
#define STATUS_BIT_FAIL 	0x02
#define STATUS_BIT_SUCCESS 	0x04


int main()
{
4104020c:	defff404 	addi	sp,sp,-48
41040210:	dfc00b15 	stw	ra,44(sp)
41040214:	df000a15 	stw	fp,40(sp)
41040218:	dc000915 	stw	r16,36(sp)
4104021c:	df000a04 	addi	fp,sp,40
	bool bPass, bLoop;
	int TestIndex ;
	alt_u32 InitValue = 0x01;
41040220:	00800044 	movi	r2,1
41040224:	e0bffa15 	stw	r2,-24(fp)
	bool bShowMessage = TRUE;
41040228:	00800044 	movi	r2,1
4104022c:	e0bffb15 	stw	r2,-20(fp)
	alt_u32 TimeStart, TimeElapsed;
	alt_u8 Status,ButtonStatus;
	const alt_u8 ButtonMask = 0x0F; // 4 button
41040230:	008003c4 	movi	r2,15
41040234:	e0bffc05 	stb	r2,-16(fp)



	printf("===== DDR3 Test! Size=%dMB (CPU Clock:%d)=====\r\n", MEM_IF_DDR3_EMIF_SPAN/1024/1024, ALT_CPU_CPU_FREQ);
41040238:	0182fb34 	movhi	r6,3052
4104023c:	31b08004 	addi	r6,r6,-15872
41040240:	01410004 	movi	r5,1024
41040244:	01104174 	movhi	r4,16645
41040248:	213f5204 	addi	r4,r4,-696
4104024c:	1040e440 	call	41040e44 <printf>
	Status = IORD(DDR3_STATUS_BASE, 0x00);
41040250:	00900034 	movhi	r2,16384
41040254:	10800c04 	addi	r2,r2,48
41040258:	10800037 	ldwio	r2,0(r2)
4104025c:	e0bffc45 	stb	r2,-15(fp)

	while(1){
        printf("\n==========================================================\n");
41040260:	01104174 	movhi	r4,16645
41040264:	213f5f04 	addi	r4,r4,-644
41040268:	1040f600 	call	41040f60 <puts>
        printf("Press any BUTTON to start test [BUTTON0 for continued test] \n");
4104026c:	01104174 	movhi	r4,16645
41040270:	213f6e04 	addi	r4,r4,-584
41040274:	1040f600 	call	41040f60 <puts>
        ButtonStatus = ButtonMask;
41040278:	e0bffc03 	ldbu	r2,-16(fp)
4104027c:	e0bff905 	stb	r2,-28(fp)
        while((ButtonStatus & ButtonMask) == ButtonMask){
41040280:	00000406 	br	41040294 <main+0x88>
        	ButtonStatus = IORD(BUTTON_BASE, 0);
41040284:	00900034 	movhi	r2,16384
41040288:	10800804 	addi	r2,r2,32
4104028c:	10800037 	ldwio	r2,0(r2)
41040290:	e0bff905 	stb	r2,-28(fp)

	while(1){
        printf("\n==========================================================\n");
        printf("Press any BUTTON to start test [BUTTON0 for continued test] \n");
        ButtonStatus = ButtonMask;
        while((ButtonStatus & ButtonMask) == ButtonMask){
41040294:	e0fff903 	ldbu	r3,-28(fp)
41040298:	e0bffc03 	ldbu	r2,-16(fp)
4104029c:	1884703a 	and	r2,r3,r2
410402a0:	10c03fcc 	andi	r3,r2,255
410402a4:	e0bffc03 	ldbu	r2,-16(fp)
410402a8:	18bff626 	beq	r3,r2,41040284 <__alt_data_end+0xfffc1a84>
        	ButtonStatus = IORD(BUTTON_BASE, 0);
        }

        if ((ButtonStatus & 0x01) == 0x00){
410402ac:	e0bff903 	ldbu	r2,-28(fp)
410402b0:	1080004c 	andi	r2,r2,1
410402b4:	1000031e 	bne	r2,zero,410402c4 <main+0xb8>
            bLoop = TRUE;
410402b8:	00800044 	movi	r2,1
410402bc:	e0bff715 	stw	r2,-36(fp)
410402c0:	00000106 	br	410402c8 <main+0xbc>
        }else{
            bLoop = FALSE;
410402c4:	e03ff715 	stw	zero,-36(fp)
        }

		//
        bPass = TRUE;
410402c8:	00800044 	movi	r2,1
410402cc:	e0bff615 	stw	r2,-40(fp)
        TestIndex = 0;
410402d0:	e03ff815 	stw	zero,-32(fp)

        do{
        	TestIndex++;
410402d4:	e0bff817 	ldw	r2,-32(fp)
410402d8:	10800044 	addi	r2,r2,1
410402dc:	e0bff815 	stw	r2,-32(fp)
        	printf("=====> DDR3 Testing, Iteration: %d\n", TestIndex);
410402e0:	e17ff817 	ldw	r5,-32(fp)
410402e4:	01104174 	movhi	r4,16645
410402e8:	213f7e04 	addi	r4,r4,-520
410402ec:	1040e440 	call	41040e44 <printf>
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
410402f0:	d0a6d617 	ldw	r2,-25768(gp)
        	TimeStart = alt_nticks();
410402f4:	e0bffd15 	stw	r2,-12(fp)

        	if ((Status & STATUS_BIT_DONE) != STATUS_BIT_DONE){
410402f8:	e0bffc43 	ldbu	r2,-15(fp)
410402fc:	1080004c 	andi	r2,r2,1
41040300:	1000041e 	bne	r2,zero,41040314 <main+0x108>
        		printf("local init done: fail\r\n");
41040304:	01104174 	movhi	r4,16645
41040308:	213f8704 	addi	r4,r4,-484
4104030c:	1040f600 	call	41040f60 <puts>
        		bPass = FALSE;
41040310:	e03ff615 	stw	zero,-40(fp)
        	}

        	if (bPass && (((Status & STATUS_BIT_FAIL) == STATUS_BIT_FAIL) || ((Status & STATUS_BIT_SUCCESS) != STATUS_BIT_SUCCESS))){
41040314:	e0bff617 	ldw	r2,-40(fp)
41040318:	10000a26 	beq	r2,zero,41040344 <main+0x138>
4104031c:	e0bffc43 	ldbu	r2,-15(fp)
41040320:	1080008c 	andi	r2,r2,2
41040324:	1000031e 	bne	r2,zero,41040334 <main+0x128>
41040328:	e0bffc43 	ldbu	r2,-15(fp)
4104032c:	1080010c 	andi	r2,r2,4
41040330:	1000041e 	bne	r2,zero,41040344 <main+0x138>
        		printf("local init: fail\r\n");
41040334:	01104174 	movhi	r4,16645
41040338:	213f8d04 	addi	r4,r4,-460
4104033c:	1040f600 	call	41040f60 <puts>
        		bPass = FALSE;
41040340:	e03ff615 	stw	zero,-40(fp)
        	}

        	if (bPass)
41040344:	e0bff617 	ldw	r2,-40(fp)
41040348:	10000626 	beq	r2,zero,41040364 <main+0x158>
        		bPass = TMEM_Verify(MEM_IF_DDR3_EMIF_BASE, MEM_IF_DDR3_EMIF_SPAN, InitValue,  bShowMessage);
4104034c:	e1fffb17 	ldw	r7,-20(fp)
41040350:	e1bffa17 	ldw	r6,-24(fp)
41040354:	01500034 	movhi	r5,16384
41040358:	0009883a 	mov	r4,zero
4104035c:	10404040 	call	41040404 <TMEM_Verify>
41040360:	e0bff615 	stw	r2,-40(fp)
41040364:	d0e6d617 	ldw	r3,-25768(gp)

        	TimeElapsed = alt_nticks() - TimeStart;
41040368:	e0bffd17 	ldw	r2,-12(fp)
4104036c:	1885c83a 	sub	r2,r3,r2
41040370:	e0bffe15 	stw	r2,-8(fp)
        	printf("DDR3 test:%s, %d seconds\r\n", bPass?"Pass":"NG", (int)(TimeElapsed/alt_ticks_per_second()));
41040374:	e0bff617 	ldw	r2,-40(fp)
41040378:	10000326 	beq	r2,zero,41040388 <main+0x17c>
4104037c:	04104174 	movhi	r16,16645
41040380:	843f9204 	addi	r16,r16,-440
41040384:	00000206 	br	41040390 <main+0x184>
41040388:	04104174 	movhi	r16,16645
4104038c:	843f9404 	addi	r16,r16,-432
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
41040390:	d0a6d517 	ldw	r2,-25772(gp)
41040394:	100b883a 	mov	r5,r2
41040398:	e13ffe17 	ldw	r4,-8(fp)
4104039c:	1040c100 	call	41040c10 <__udivsi3>
410403a0:	100d883a 	mov	r6,r2
410403a4:	800b883a 	mov	r5,r16
410403a8:	01104174 	movhi	r4,16645
410403ac:	213f9504 	addi	r4,r4,-428
410403b0:	1040e440 	call	41040e44 <printf>


            if (bPass && bLoop){  // is abort loop?
410403b4:	e0bff617 	ldw	r2,-40(fp)
410403b8:	10000d26 	beq	r2,zero,410403f0 <main+0x1e4>
410403bc:	e0bff717 	ldw	r2,-36(fp)
410403c0:	10000b26 	beq	r2,zero,410403f0 <main+0x1e4>
            	ButtonStatus = IORD(BUTTON_BASE, 0);
410403c4:	00900034 	movhi	r2,16384
410403c8:	10800804 	addi	r2,r2,32
410403cc:	10800037 	ldwio	r2,0(r2)
410403d0:	e0bff905 	stb	r2,-28(fp)
            	if ((ButtonStatus & ButtonMask) != ButtonMask)
410403d4:	e0fff903 	ldbu	r3,-28(fp)
410403d8:	e0bffc03 	ldbu	r2,-16(fp)
410403dc:	1884703a 	and	r2,r3,r2
410403e0:	10c03fcc 	andi	r3,r2,255
410403e4:	e0bffc03 	ldbu	r2,-16(fp)
410403e8:	18800126 	beq	r3,r2,410403f0 <main+0x1e4>
            		bLoop = FALSE; // press any key to abort continued test
410403ec:	e03ff715 	stw	zero,-36(fp)
            }

        }while(bLoop && bPass);
410403f0:	e0bff717 	ldw	r2,-36(fp)
410403f4:	103f9a26 	beq	r2,zero,41040260 <__alt_data_end+0xfffc1a60>
410403f8:	e0bff617 	ldw	r2,-40(fp)
410403fc:	103fb51e 	bne	r2,zero,410402d4 <__alt_data_end+0xfffc1ad4>
	} // while(1)
41040400:	003f9706 	br	41040260 <__alt_data_end+0xfffc1a60>

41040404 <TMEM_Verify>:


//#define SHOW_PROGRESS


bool TMEM_Verify(alt_u32 BaseAddr, alt_u32 ByteLen, alt_u32 InitValue, bool bShowMessage){
41040404:	defee304 	addi	sp,sp,-1140
41040408:	dfc11c15 	stw	ra,1136(sp)
4104040c:	df011b15 	stw	fp,1132(sp)
41040410:	dc411a15 	stw	r17,1128(sp)
41040414:	dc011915 	stw	r16,1124(sp)
41040418:	df011b04 	addi	fp,sp,1132
4104041c:	e13ffa15 	stw	r4,-24(fp)
41040420:	e17ffb15 	stw	r5,-20(fp)
41040424:	e1bffc15 	stw	r6,-16(fp)
41040428:	e1fffd15 	stw	r7,-12(fp)
    bool bPass = TRUE;
4104042c:	00800044 	movi	r2,1
41040430:	e0bee515 	stw	r2,-1132(fp)
    typedef alt_u32 my_data;
    my_data szData[257];
    int i, nRemainedLen, nAccessLen;
    my_data *pDes, *pSrc;
    int nItemNum, nPos;
    const int my_data_size = sizeof(my_data);
41040434:	00800104 	movi	r2,4
41040438:	e0beed15 	stw	r2,-1100(fp)
    int nProgressIndex=0;
4104043c:	e03eec15 	stw	zero,-1104(fp)
    alt_u32 szProgress[10];
    
    if (bShowMessage){
41040440:	e0bffd17 	ldw	r2,-12(fp)
41040444:	10001a26 	beq	r2,zero,410404b0 <TMEM_Verify+0xac>
        for(i=0;i<10;i++){
41040448:	e03ee615 	stw	zero,-1128(fp)
4104044c:	00001506 	br	410404a4 <TMEM_Verify+0xa0>
            szProgress[i] = ByteLen/10*(i+1);     
41040450:	e0fffb17 	ldw	r3,-20(fp)
41040454:	00b33374 	movhi	r2,52429
41040458:	10b33344 	addi	r2,r2,-13107
4104045c:	1888383a 	mulxuu	r4,r3,r2
41040460:	1885383a 	mul	r2,r3,r2
41040464:	1011883a 	mov	r8,r2
41040468:	2013883a 	mov	r9,r4
4104046c:	4804d0fa 	srli	r2,r9,3
41040470:	e0fee617 	ldw	r3,-1128(fp)
41040474:	18c00044 	addi	r3,r3,1
41040478:	10c7383a 	mul	r3,r2,r3
4104047c:	e0bee617 	ldw	r2,-1128(fp)
41040480:	1085883a 	add	r2,r2,r2
41040484:	1085883a 	add	r2,r2,r2
41040488:	e13ee504 	addi	r4,fp,-1132
4104048c:	2085883a 	add	r2,r4,r2
41040490:	10810b04 	addi	r2,r2,1068
41040494:	10c00015 	stw	r3,0(r2)
    const int my_data_size = sizeof(my_data);
    int nProgressIndex=0;
    alt_u32 szProgress[10];
    
    if (bShowMessage){
        for(i=0;i<10;i++){
41040498:	e0bee617 	ldw	r2,-1128(fp)
4104049c:	10800044 	addi	r2,r2,1
410404a0:	e0bee615 	stw	r2,-1128(fp)
410404a4:	e0bee617 	ldw	r2,-1128(fp)
410404a8:	10800290 	cmplti	r2,r2,10
410404ac:	103fe81e 	bne	r2,zero,41040450 <__alt_data_end+0xfffc1c50>
            szProgress[i] = ByteLen/10*(i+1);     
        }
    }        
    
    
    nItemNum = sizeof(szData)/sizeof(szData[0]);
410404b0:	00804044 	movi	r2,257
410404b4:	e0beea15 	stw	r2,-1112(fp)
    for(i=0;i<nItemNum;i++){
410404b8:	e03ee615 	stw	zero,-1128(fp)
410404bc:	00001e06 	br	41040538 <TMEM_Verify+0x134>
        if (i == 0)
410404c0:	e0bee617 	ldw	r2,-1128(fp)
410404c4:	1000091e 	bne	r2,zero,410404ec <TMEM_Verify+0xe8>
            szData[i] = InitValue;
410404c8:	e0bee617 	ldw	r2,-1128(fp)
410404cc:	1085883a 	add	r2,r2,r2
410404d0:	1085883a 	add	r2,r2,r2
410404d4:	e0fee504 	addi	r3,fp,-1132
410404d8:	1885883a 	add	r2,r3,r2
410404dc:	10800a04 	addi	r2,r2,40
410404e0:	e0fffc17 	ldw	r3,-16(fp)
410404e4:	10c00015 	stw	r3,0(r2)
410404e8:	00001006 	br	4104052c <TMEM_Verify+0x128>
        else     
            szData[i] = szData[i-1] * 13;
410404ec:	e0bee617 	ldw	r2,-1128(fp)
410404f0:	10bfffc4 	addi	r2,r2,-1
410404f4:	1085883a 	add	r2,r2,r2
410404f8:	1085883a 	add	r2,r2,r2
410404fc:	e13ee504 	addi	r4,fp,-1132
41040500:	2085883a 	add	r2,r4,r2
41040504:	10800a04 	addi	r2,r2,40
41040508:	10800017 	ldw	r2,0(r2)
4104050c:	10c00364 	muli	r3,r2,13
41040510:	e0bee617 	ldw	r2,-1128(fp)
41040514:	1085883a 	add	r2,r2,r2
41040518:	1085883a 	add	r2,r2,r2
4104051c:	e13ee504 	addi	r4,fp,-1132
41040520:	2085883a 	add	r2,r4,r2
41040524:	10800a04 	addi	r2,r2,40
41040528:	10c00015 	stw	r3,0(r2)
        }
    }        
    
    
    nItemNum = sizeof(szData)/sizeof(szData[0]);
    for(i=0;i<nItemNum;i++){
4104052c:	e0bee617 	ldw	r2,-1128(fp)
41040530:	10800044 	addi	r2,r2,1
41040534:	e0bee615 	stw	r2,-1128(fp)
41040538:	e0fee617 	ldw	r3,-1128(fp)
4104053c:	e0beea17 	ldw	r2,-1112(fp)
41040540:	18bfdf16 	blt	r3,r2,410404c0 <__alt_data_end+0xfffc1cc0>
        if (i == 0)
            szData[i] = InitValue;
        else     
            szData[i] = szData[i-1] * 13;
    }
    szData[nItemNum-1] = 0xAAAAAAAA;
41040544:	e0beea17 	ldw	r2,-1112(fp)
41040548:	10bfffc4 	addi	r2,r2,-1
4104054c:	1085883a 	add	r2,r2,r2
41040550:	1085883a 	add	r2,r2,r2
41040554:	e0fee504 	addi	r3,fp,-1132
41040558:	1885883a 	add	r2,r3,r2
4104055c:	10c00a04 	addi	r3,r2,40
41040560:	00aaaaf4 	movhi	r2,43691
41040564:	10aaaa84 	addi	r2,r2,-21846
41040568:	18800015 	stw	r2,0(r3)
    szData[nItemNum-2] = 0x55555555;
4104056c:	e0beea17 	ldw	r2,-1112(fp)
41040570:	10bfff84 	addi	r2,r2,-2
41040574:	1085883a 	add	r2,r2,r2
41040578:	1085883a 	add	r2,r2,r2
4104057c:	e13ee504 	addi	r4,fp,-1132
41040580:	2085883a 	add	r2,r4,r2
41040584:	10c00a04 	addi	r3,r2,40
41040588:	00955574 	movhi	r2,21845
4104058c:	10955544 	addi	r2,r2,21845
41040590:	18800015 	stw	r2,0(r3)
    szData[nItemNum-3] = 0x00000000;
41040594:	e0beea17 	ldw	r2,-1112(fp)
41040598:	10bfff44 	addi	r2,r2,-3
4104059c:	1085883a 	add	r2,r2,r2
410405a0:	1085883a 	add	r2,r2,r2
410405a4:	e0fee504 	addi	r3,fp,-1132
410405a8:	1885883a 	add	r2,r3,r2
410405ac:	10800a04 	addi	r2,r2,40
410405b0:	10000015 	stw	zero,0(r2)
    szData[nItemNum-4] = 0xFFFFFFFF;
410405b4:	e0beea17 	ldw	r2,-1112(fp)
410405b8:	10bfff04 	addi	r2,r2,-4
410405bc:	1085883a 	add	r2,r2,r2
410405c0:	1085883a 	add	r2,r2,r2
410405c4:	e13ee504 	addi	r4,fp,-1132
410405c8:	2085883a 	add	r2,r4,r2
410405cc:	10800a04 	addi	r2,r2,40
410405d0:	00ffffc4 	movi	r3,-1
410405d4:	10c00015 	stw	r3,0(r2)

    if (bShowMessage)    
410405d8:	e0bffd17 	ldw	r2,-12(fp)
410405dc:	10000326 	beq	r2,zero,410405ec <TMEM_Verify+0x1e8>
        printf("write...\n");
410405e0:	01104174 	movhi	r4,16645
410405e4:	213f9c04 	addi	r4,r4,-400
410405e8:	1040f600 	call	41040f60 <puts>
    // write
    pDes = (my_data *)BaseAddr;
410405ec:	e0bffa17 	ldw	r2,-24(fp)
410405f0:	e0bee815 	stw	r2,-1120(fp)
    nAccessLen = sizeof(szData);
410405f4:	00810104 	movi	r2,1028
410405f8:	e0bee715 	stw	r2,-1124(fp)
    nItemNum = nAccessLen / my_data_size;
410405fc:	e17eed17 	ldw	r5,-1100(fp)
41040600:	e13ee717 	ldw	r4,-1124(fp)
41040604:	1040b180 	call	41040b18 <__divsi3>
41040608:	e0beea15 	stw	r2,-1112(fp)
    nPos = 0;
4104060c:	e03eeb15 	stw	zero,-1108(fp)
    while(nPos < ByteLen){
41040610:	00003506 	br	410406e8 <TMEM_Verify+0x2e4>
        nRemainedLen = ByteLen - nPos;
41040614:	e0beeb17 	ldw	r2,-1108(fp)
41040618:	e0fffb17 	ldw	r3,-20(fp)
4104061c:	1885c83a 	sub	r2,r3,r2
41040620:	e0beee15 	stw	r2,-1096(fp)
        if (nAccessLen > nRemainedLen){
41040624:	e0bee717 	ldw	r2,-1124(fp)
41040628:	e0feee17 	ldw	r3,-1096(fp)
4104062c:	1880060e 	bge	r3,r2,41040648 <TMEM_Verify+0x244>
            nAccessLen = nRemainedLen;
41040630:	e0beee17 	ldw	r2,-1096(fp)
41040634:	e0bee715 	stw	r2,-1124(fp)
            nItemNum = nAccessLen / my_data_size;
41040638:	e17eed17 	ldw	r5,-1100(fp)
4104063c:	e13ee717 	ldw	r4,-1124(fp)
41040640:	1040b180 	call	41040b18 <__divsi3>
41040644:	e0beea15 	stw	r2,-1112(fp)
        }    
        memcpy(pDes, szData, nAccessLen);
41040648:	e0fee717 	ldw	r3,-1124(fp)
4104064c:	e0beef04 	addi	r2,fp,-1092
41040650:	180d883a 	mov	r6,r3
41040654:	100b883a 	mov	r5,r2
41040658:	e13ee817 	ldw	r4,-1120(fp)
4104065c:	1040ccc0 	call	41040ccc <memcpy>
        pDes += nItemNum;
41040660:	e0beea17 	ldw	r2,-1112(fp)
41040664:	1085883a 	add	r2,r2,r2
41040668:	1085883a 	add	r2,r2,r2
4104066c:	1007883a 	mov	r3,r2
41040670:	e0bee817 	ldw	r2,-1120(fp)
41040674:	10c5883a 	add	r2,r2,r3
41040678:	e0bee815 	stw	r2,-1120(fp)
        nPos += nAccessLen;
4104067c:	e0feeb17 	ldw	r3,-1108(fp)
41040680:	e0bee717 	ldw	r2,-1124(fp)
41040684:	1885883a 	add	r2,r3,r2
41040688:	e0beeb15 	stw	r2,-1108(fp)
        
        if (bShowMessage){
4104068c:	e0bffd17 	ldw	r2,-12(fp)
41040690:	10001526 	beq	r2,zero,410406e8 <TMEM_Verify+0x2e4>
            if (nProgressIndex <= 9 && nPos >= szProgress[nProgressIndex]){
41040694:	e0beec17 	ldw	r2,-1104(fp)
41040698:	10800288 	cmpgei	r2,r2,10
4104069c:	1000121e 	bne	r2,zero,410406e8 <TMEM_Verify+0x2e4>
410406a0:	e0beec17 	ldw	r2,-1104(fp)
410406a4:	1085883a 	add	r2,r2,r2
410406a8:	1085883a 	add	r2,r2,r2
410406ac:	e0fee504 	addi	r3,fp,-1132
410406b0:	1885883a 	add	r2,r3,r2
410406b4:	10810b04 	addi	r2,r2,1068
410406b8:	10800017 	ldw	r2,0(r2)
410406bc:	e0feeb17 	ldw	r3,-1108(fp)
410406c0:	18800936 	bltu	r3,r2,410406e8 <TMEM_Verify+0x2e4>
                nProgressIndex++;
410406c4:	e0beec17 	ldw	r2,-1104(fp)
410406c8:	10800044 	addi	r2,r2,1
410406cc:	e0beec15 	stw	r2,-1104(fp)
                printf("%02d%% ", nProgressIndex*10);
410406d0:	e0beec17 	ldw	r2,-1104(fp)
410406d4:	108002a4 	muli	r2,r2,10
410406d8:	100b883a 	mov	r5,r2
410406dc:	01104174 	movhi	r4,16645
410406e0:	213f9f04 	addi	r4,r4,-388
410406e4:	1040e440 	call	41040e44 <printf>
    // write
    pDes = (my_data *)BaseAddr;
    nAccessLen = sizeof(szData);
    nItemNum = nAccessLen / my_data_size;
    nPos = 0;
    while(nPos < ByteLen){
410406e8:	e0feeb17 	ldw	r3,-1108(fp)
410406ec:	e0bffb17 	ldw	r2,-20(fp)
410406f0:	18bfc836 	bltu	r3,r2,41040614 <__alt_data_end+0xfffc1e14>
                printf("%02d%% ", nProgressIndex*10);
            }
        }            
    } 
    
    alt_dcache_flush_all();
410406f4:	104d7440 	call	4104d744 <alt_dcache_flush_all>
    
    if (bShowMessage){
410406f8:	e0bffd17 	ldw	r2,-12(fp)
410406fc:	10000426 	beq	r2,zero,41040710 <TMEM_Verify+0x30c>
        nProgressIndex = 0;
41040700:	e03eec15 	stw	zero,-1104(fp)
        printf("\nread/verify...\n");
41040704:	01104174 	movhi	r4,16645
41040708:	213fa104 	addi	r4,r4,-380
4104070c:	1040f600 	call	41040f60 <puts>
    }        
    
    // read & verify
    pSrc = (my_data *)BaseAddr;
41040710:	e0bffa17 	ldw	r2,-24(fp)
41040714:	e0bee915 	stw	r2,-1116(fp)
    nAccessLen = sizeof(szData);
41040718:	00810104 	movi	r2,1028
4104071c:	e0bee715 	stw	r2,-1124(fp)
    nItemNum = nAccessLen / my_data_size;
41040720:	e17eed17 	ldw	r5,-1100(fp)
41040724:	e13ee717 	ldw	r4,-1124(fp)
41040728:	1040b180 	call	41040b18 <__divsi3>
4104072c:	e0beea15 	stw	r2,-1112(fp)
    nPos = 0;
41040730:	e03eeb15 	stw	zero,-1108(fp)
    while(bPass && nPos < ByteLen){
41040734:	00005806 	br	41040898 <TMEM_Verify+0x494>
        nRemainedLen = ByteLen - nPos;
41040738:	e0beeb17 	ldw	r2,-1108(fp)
4104073c:	e0fffb17 	ldw	r3,-20(fp)
41040740:	1885c83a 	sub	r2,r3,r2
41040744:	e0beee15 	stw	r2,-1096(fp)
        if (nAccessLen > nRemainedLen){
41040748:	e0bee717 	ldw	r2,-1124(fp)
4104074c:	e0feee17 	ldw	r3,-1096(fp)
41040750:	1880060e 	bge	r3,r2,4104076c <TMEM_Verify+0x368>
            nAccessLen = nRemainedLen;
41040754:	e0beee17 	ldw	r2,-1096(fp)
41040758:	e0bee715 	stw	r2,-1124(fp)
            nItemNum = nAccessLen / my_data_size;
4104075c:	e17eed17 	ldw	r5,-1100(fp)
41040760:	e13ee717 	ldw	r4,-1124(fp)
41040764:	1040b180 	call	41040b18 <__divsi3>
41040768:	e0beea15 	stw	r2,-1112(fp)
        }            
        pDes = szData;
4104076c:	e0beef04 	addi	r2,fp,-1092
41040770:	e0bee815 	stw	r2,-1120(fp)
        for(i=0;i<nItemNum && bPass;i++){
41040774:	e03ee615 	stw	zero,-1128(fp)
41040778:	00002706 	br	41040818 <TMEM_Verify+0x414>
            if (*pSrc++ != *pDes++){ 
4104077c:	e0bee917 	ldw	r2,-1116(fp)
41040780:	10c00104 	addi	r3,r2,4
41040784:	e0fee915 	stw	r3,-1116(fp)
41040788:	10c00017 	ldw	r3,0(r2)
4104078c:	e0bee817 	ldw	r2,-1120(fp)
41040790:	11000104 	addi	r4,r2,4
41040794:	e13ee815 	stw	r4,-1120(fp)
41040798:	10800017 	ldw	r2,0(r2)
4104079c:	18801b26 	beq	r3,r2,4104080c <TMEM_Verify+0x408>
                if (bShowMessage)        
410407a0:	e0bffd17 	ldw	r2,-12(fp)
410407a4:	10001826 	beq	r2,zero,41040808 <TMEM_Verify+0x404>
                    printf("verify ng, read=%08Xh, expected=%08Xh, WordIndex=%Xh\n", (int)*(pSrc-1), (int)szData[i], (nPos/my_data_size)+i);
410407a8:	e0bee917 	ldw	r2,-1116(fp)
410407ac:	10bfff04 	addi	r2,r2,-4
410407b0:	10800017 	ldw	r2,0(r2)
410407b4:	1021883a 	mov	r16,r2
410407b8:	e0bee617 	ldw	r2,-1128(fp)
410407bc:	1085883a 	add	r2,r2,r2
410407c0:	1085883a 	add	r2,r2,r2
410407c4:	e13ee504 	addi	r4,fp,-1132
410407c8:	2085883a 	add	r2,r4,r2
410407cc:	10800a04 	addi	r2,r2,40
410407d0:	10800017 	ldw	r2,0(r2)
410407d4:	1023883a 	mov	r17,r2
410407d8:	e17eed17 	ldw	r5,-1100(fp)
410407dc:	e13eeb17 	ldw	r4,-1108(fp)
410407e0:	1040b180 	call	41040b18 <__divsi3>
410407e4:	1007883a 	mov	r3,r2
410407e8:	e0bee617 	ldw	r2,-1128(fp)
410407ec:	1885883a 	add	r2,r3,r2
410407f0:	100f883a 	mov	r7,r2
410407f4:	880d883a 	mov	r6,r17
410407f8:	800b883a 	mov	r5,r16
410407fc:	01104174 	movhi	r4,16645
41040800:	213fa504 	addi	r4,r4,-364
41040804:	1040e440 	call	41040e44 <printf>
                bPass = FALSE;
41040808:	e03ee515 	stw	zero,-1132(fp)
        if (nAccessLen > nRemainedLen){
            nAccessLen = nRemainedLen;
            nItemNum = nAccessLen / my_data_size;
        }            
        pDes = szData;
        for(i=0;i<nItemNum && bPass;i++){
4104080c:	e0bee617 	ldw	r2,-1128(fp)
41040810:	10800044 	addi	r2,r2,1
41040814:	e0bee615 	stw	r2,-1128(fp)
41040818:	e0fee617 	ldw	r3,-1128(fp)
4104081c:	e0beea17 	ldw	r2,-1112(fp)
41040820:	1880020e 	bge	r3,r2,4104082c <TMEM_Verify+0x428>
41040824:	e0bee517 	ldw	r2,-1132(fp)
41040828:	103fd41e 	bne	r2,zero,4104077c <__alt_data_end+0xfffc1f7c>
                if (bShowMessage)        
                    printf("verify ng, read=%08Xh, expected=%08Xh, WordIndex=%Xh\n", (int)*(pSrc-1), (int)szData[i], (nPos/my_data_size)+i);
                bPass = FALSE;
            }    
        }
        nPos += nAccessLen;
4104082c:	e0feeb17 	ldw	r3,-1108(fp)
41040830:	e0bee717 	ldw	r2,-1124(fp)
41040834:	1885883a 	add	r2,r3,r2
41040838:	e0beeb15 	stw	r2,-1108(fp)
        if (bShowMessage){
4104083c:	e0bffd17 	ldw	r2,-12(fp)
41040840:	10001526 	beq	r2,zero,41040898 <TMEM_Verify+0x494>
            if (nProgressIndex <= 9 && nPos >= szProgress[nProgressIndex]){
41040844:	e0beec17 	ldw	r2,-1104(fp)
41040848:	10800288 	cmpgei	r2,r2,10
4104084c:	1000121e 	bne	r2,zero,41040898 <TMEM_Verify+0x494>
41040850:	e0beec17 	ldw	r2,-1104(fp)
41040854:	1085883a 	add	r2,r2,r2
41040858:	1085883a 	add	r2,r2,r2
4104085c:	e0fee504 	addi	r3,fp,-1132
41040860:	1885883a 	add	r2,r3,r2
41040864:	10810b04 	addi	r2,r2,1068
41040868:	10800017 	ldw	r2,0(r2)
4104086c:	e0feeb17 	ldw	r3,-1108(fp)
41040870:	18800936 	bltu	r3,r2,41040898 <TMEM_Verify+0x494>
                nProgressIndex++;
41040874:	e0beec17 	ldw	r2,-1104(fp)
41040878:	10800044 	addi	r2,r2,1
4104087c:	e0beec15 	stw	r2,-1104(fp)
                printf("%02d%% ", nProgressIndex*10);
41040880:	e0beec17 	ldw	r2,-1104(fp)
41040884:	108002a4 	muli	r2,r2,10
41040888:	100b883a 	mov	r5,r2
4104088c:	01104174 	movhi	r4,16645
41040890:	213f9f04 	addi	r4,r4,-388
41040894:	1040e440 	call	41040e44 <printf>
    // read & verify
    pSrc = (my_data *)BaseAddr;
    nAccessLen = sizeof(szData);
    nItemNum = nAccessLen / my_data_size;
    nPos = 0;
    while(bPass && nPos < ByteLen){
41040898:	e0bee517 	ldw	r2,-1132(fp)
4104089c:	10000326 	beq	r2,zero,410408ac <TMEM_Verify+0x4a8>
410408a0:	e0feeb17 	ldw	r3,-1108(fp)
410408a4:	e0bffb17 	ldw	r2,-20(fp)
410408a8:	18bfa336 	bltu	r3,r2,41040738 <__alt_data_end+0xfffc1f38>
                printf("%02d%% ", nProgressIndex*10);
            }
        }            
    }     

    if (bShowMessage)    
410408ac:	e0bffd17 	ldw	r2,-12(fp)
410408b0:	10000226 	beq	r2,zero,410408bc <TMEM_Verify+0x4b8>
        printf("\n");
410408b4:	01000284 	movi	r4,10
410408b8:	1040e880 	call	41040e88 <putchar>
    
    return bPass;
410408bc:	e0bee517 	ldw	r2,-1132(fp)
}
410408c0:	e6fffe04 	addi	sp,fp,-8
410408c4:	dfc00317 	ldw	ra,12(sp)
410408c8:	df000217 	ldw	fp,8(sp)
410408cc:	dc400117 	ldw	r17,4(sp)
410408d0:	dc000017 	ldw	r16,0(sp)
410408d4:	dec00404 	addi	sp,sp,16
410408d8:	f800283a 	ret

410408dc <TMEM_QuickVerify>:


bool TMEM_QuickVerify(alt_u32 BaseAddr, alt_u32 DataSize, alt_u32 DataWidth, alt_u32 AddrWidth){
410408dc:	defff104 	addi	sp,sp,-60
410408e0:	dfc00e15 	stw	ra,56(sp)
410408e4:	df000d15 	stw	fp,52(sp)
410408e8:	df000d04 	addi	fp,sp,52
410408ec:	e13ffc15 	stw	r4,-16(fp)
410408f0:	e17ffd15 	stw	r5,-12(fp)
410408f4:	e1bffe15 	stw	r6,-8(fp)
410408f8:	e1ffff15 	stw	r7,-4(fp)
    bool bPass = TRUE;
410408fc:	00800044 	movi	r2,1
41040900:	e0bff315 	stw	r2,-52(fp)
    const alt_u32 TestNum = 1024*1024*2;
41040904:	00800834 	movhi	r2,32
41040908:	e0bff615 	stw	r2,-40(fp)
    const alt_u32 TestPattern = 0xAA;
4104090c:	00802a84 	movi	r2,170
41040910:	e0bff715 	stw	r2,-36(fp)
    alt_u32 mask, Read32, Addr32, TestData32, TestAddr32;
    int i;
    
    //alt_u32 *pMem = (alt_u32 *)BaseAddr;
    // test address line
    mask = 0x01;
41040914:	00800044 	movi	r2,1
41040918:	e0bff415 	stw	r2,-48(fp)
    for(i=0;i<AddrWidth && bPass;i++){
4104091c:	e03ff515 	stw	zero,-44(fp)
41040920:	00001b06 	br	41040990 <TMEM_QuickVerify+0xb4>
        //*(pMem + mask) = TestPattern;
        IOWR(BaseAddr, mask, TestPattern);
41040924:	e0bff417 	ldw	r2,-48(fp)
41040928:	1085883a 	add	r2,r2,r2
4104092c:	1085883a 	add	r2,r2,r2
41040930:	1007883a 	mov	r3,r2
41040934:	e0bffc17 	ldw	r2,-16(fp)
41040938:	1885883a 	add	r2,r3,r2
4104093c:	1007883a 	mov	r3,r2
41040940:	e0bff717 	ldw	r2,-36(fp)
41040944:	18800035 	stwio	r2,0(r3)
        //if (*(pMem + mask) != TestPattern)
        Read32 = IORD(BaseAddr, mask);
41040948:	e0bff417 	ldw	r2,-48(fp)
4104094c:	1085883a 	add	r2,r2,r2
41040950:	1085883a 	add	r2,r2,r2
41040954:	1007883a 	mov	r3,r2
41040958:	e0bffc17 	ldw	r2,-16(fp)
4104095c:	1885883a 	add	r2,r3,r2
41040960:	10800037 	ldwio	r2,0(r2)
41040964:	e0bff815 	stw	r2,-32(fp)
        if (Read32 != TestPattern)
41040968:	e0fff817 	ldw	r3,-32(fp)
4104096c:	e0bff717 	ldw	r2,-36(fp)
41040970:	18800126 	beq	r3,r2,41040978 <TMEM_QuickVerify+0x9c>
            bPass = FALSE;
41040974:	e03ff315 	stw	zero,-52(fp)
        mask <<= 1;    
41040978:	e0bff417 	ldw	r2,-48(fp)
4104097c:	1085883a 	add	r2,r2,r2
41040980:	e0bff415 	stw	r2,-48(fp)
    int i;
    
    //alt_u32 *pMem = (alt_u32 *)BaseAddr;
    // test address line
    mask = 0x01;
    for(i=0;i<AddrWidth && bPass;i++){
41040984:	e0bff517 	ldw	r2,-44(fp)
41040988:	10800044 	addi	r2,r2,1
4104098c:	e0bff515 	stw	r2,-44(fp)
41040990:	e0fff517 	ldw	r3,-44(fp)
41040994:	e0bfff17 	ldw	r2,-4(fp)
41040998:	1880022e 	bgeu	r3,r2,410409a4 <TMEM_QuickVerify+0xc8>
4104099c:	e0bff317 	ldw	r2,-52(fp)
410409a0:	103fe01e 	bne	r2,zero,41040924 <__alt_data_end+0xfffc2124>
            bPass = FALSE;
        mask <<= 1;    
    }
    
    // test data line
    mask = 0x01;
410409a4:	00800044 	movi	r2,1
410409a8:	e0bff415 	stw	r2,-48(fp)
    for(i=0;i<DataWidth && bPass;i++){
410409ac:	e03ff515 	stw	zero,-44(fp)
410409b0:	00002206 	br	41040a3c <TMEM_QuickVerify+0x160>
        //*(pMem+i/32) = mask;
        Addr32 = i*13;
410409b4:	e0bff517 	ldw	r2,-44(fp)
410409b8:	10800364 	muli	r2,r2,13
410409bc:	e0bff915 	stw	r2,-28(fp)
        IOWR(BaseAddr, Addr32, mask);
410409c0:	e0bff917 	ldw	r2,-28(fp)
410409c4:	1085883a 	add	r2,r2,r2
410409c8:	1085883a 	add	r2,r2,r2
410409cc:	1007883a 	mov	r3,r2
410409d0:	e0bffc17 	ldw	r2,-16(fp)
410409d4:	1885883a 	add	r2,r3,r2
410409d8:	1007883a 	mov	r3,r2
410409dc:	e0bff417 	ldw	r2,-48(fp)
410409e0:	18800035 	stwio	r2,0(r3)
        Read32 = IORD(BaseAddr, Addr32);
410409e4:	e0bff917 	ldw	r2,-28(fp)
410409e8:	1085883a 	add	r2,r2,r2
410409ec:	1085883a 	add	r2,r2,r2
410409f0:	1007883a 	mov	r3,r2
410409f4:	e0bffc17 	ldw	r2,-16(fp)
410409f8:	1885883a 	add	r2,r3,r2
410409fc:	10800037 	ldwio	r2,0(r2)
41040a00:	e0bff815 	stw	r2,-32(fp)
        //if (*(pMem+i/32) != mask)
        if (Read32 != mask)
41040a04:	e0fff817 	ldw	r3,-32(fp)
41040a08:	e0bff417 	ldw	r2,-48(fp)
41040a0c:	18800126 	beq	r3,r2,41040a14 <TMEM_QuickVerify+0x138>
            bPass = FALSE;
41040a10:	e03ff315 	stw	zero,-52(fp)
        mask <<= 1;
41040a14:	e0bff417 	ldw	r2,-48(fp)
41040a18:	1085883a 	add	r2,r2,r2
41040a1c:	e0bff415 	stw	r2,-48(fp)
        if (mask == 0x00)
41040a20:	e0bff417 	ldw	r2,-48(fp)
41040a24:	1000021e 	bne	r2,zero,41040a30 <TMEM_QuickVerify+0x154>
            mask = 0x01;    
41040a28:	00800044 	movi	r2,1
41040a2c:	e0bff415 	stw	r2,-48(fp)
        mask <<= 1;    
    }
    
    // test data line
    mask = 0x01;
    for(i=0;i<DataWidth && bPass;i++){
41040a30:	e0bff517 	ldw	r2,-44(fp)
41040a34:	10800044 	addi	r2,r2,1
41040a38:	e0bff515 	stw	r2,-44(fp)
41040a3c:	e0fff517 	ldw	r3,-44(fp)
41040a40:	e0bffe17 	ldw	r2,-8(fp)
41040a44:	1880022e 	bgeu	r3,r2,41040a50 <TMEM_QuickVerify+0x174>
41040a48:	e0bff317 	ldw	r2,-52(fp)
41040a4c:	103fd91e 	bne	r2,zero,410409b4 <__alt_data_end+0xfffc21b4>
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
41040a50:	d0a6d617 	ldw	r2,-25768(gp)
        if (mask == 0x00)
            mask = 0x01;    
    }
    
    // random data test
    srand(alt_nticks());
41040a54:	1009883a 	mov	r4,r2
41040a58:	1040f740 	call	41040f74 <srand>
    for(i=0;i<TestNum && bPass;i++){
41040a5c:	e03ff515 	stw	zero,-44(fp)
41040a60:	00002206 	br	41040aec <TMEM_QuickVerify+0x210>
        TestAddr32 = rand()%(DataSize/4);
41040a64:	1040f8c0 	call	41040f8c <rand>
41040a68:	1007883a 	mov	r3,r2
41040a6c:	e0bffd17 	ldw	r2,-12(fp)
41040a70:	1004d0ba 	srli	r2,r2,2
41040a74:	100b883a 	mov	r5,r2
41040a78:	1809883a 	mov	r4,r3
41040a7c:	1040c740 	call	41040c74 <__umodsi3>
41040a80:	e0bffa15 	stw	r2,-24(fp)
        TestData32 = rand();
41040a84:	1040f8c0 	call	41040f8c <rand>
41040a88:	e0bffb15 	stw	r2,-20(fp)
        IOWR(BaseAddr, TestAddr32, TestData32);
41040a8c:	e0bffa17 	ldw	r2,-24(fp)
41040a90:	1085883a 	add	r2,r2,r2
41040a94:	1085883a 	add	r2,r2,r2
41040a98:	1007883a 	mov	r3,r2
41040a9c:	e0bffc17 	ldw	r2,-16(fp)
41040aa0:	1885883a 	add	r2,r3,r2
41040aa4:	1007883a 	mov	r3,r2
41040aa8:	e0bffb17 	ldw	r2,-20(fp)
41040aac:	18800035 	stwio	r2,0(r3)
        Read32 = IORD(BaseAddr, TestAddr32);
41040ab0:	e0bffa17 	ldw	r2,-24(fp)
41040ab4:	1085883a 	add	r2,r2,r2
41040ab8:	1085883a 	add	r2,r2,r2
41040abc:	1007883a 	mov	r3,r2
41040ac0:	e0bffc17 	ldw	r2,-16(fp)
41040ac4:	1885883a 	add	r2,r3,r2
41040ac8:	10800037 	ldwio	r2,0(r2)
41040acc:	e0bff815 	stw	r2,-32(fp)
        if (Read32 != TestData32)
41040ad0:	e0fff817 	ldw	r3,-32(fp)
41040ad4:	e0bffb17 	ldw	r2,-20(fp)
41040ad8:	18800126 	beq	r3,r2,41040ae0 <TMEM_QuickVerify+0x204>
            bPass = FALSE;        
41040adc:	e03ff315 	stw	zero,-52(fp)
            mask = 0x01;    
    }
    
    // random data test
    srand(alt_nticks());
    for(i=0;i<TestNum && bPass;i++){
41040ae0:	e0bff517 	ldw	r2,-44(fp)
41040ae4:	10800044 	addi	r2,r2,1
41040ae8:	e0bff515 	stw	r2,-44(fp)
41040aec:	e0fff517 	ldw	r3,-44(fp)
41040af0:	e0bff617 	ldw	r2,-40(fp)
41040af4:	1880022e 	bgeu	r3,r2,41040b00 <TMEM_QuickVerify+0x224>
41040af8:	e0bff317 	ldw	r2,-52(fp)
41040afc:	103fd91e 	bne	r2,zero,41040a64 <__alt_data_end+0xfffc2264>
        if (Read32 != TestData32)
            bPass = FALSE;        
        
    }
    
    return bPass;
41040b00:	e0bff317 	ldw	r2,-52(fp)
}
41040b04:	e037883a 	mov	sp,fp
41040b08:	dfc00117 	ldw	ra,4(sp)
41040b0c:	df000017 	ldw	fp,0(sp)
41040b10:	dec00204 	addi	sp,sp,8
41040b14:	f800283a 	ret

41040b18 <__divsi3>:
41040b18:	20001b16 	blt	r4,zero,41040b88 <__divsi3+0x70>
41040b1c:	000f883a 	mov	r7,zero
41040b20:	28001616 	blt	r5,zero,41040b7c <__divsi3+0x64>
41040b24:	200d883a 	mov	r6,r4
41040b28:	29001a2e 	bgeu	r5,r4,41040b94 <__divsi3+0x7c>
41040b2c:	00800804 	movi	r2,32
41040b30:	00c00044 	movi	r3,1
41040b34:	00000106 	br	41040b3c <__divsi3+0x24>
41040b38:	10000d26 	beq	r2,zero,41040b70 <__divsi3+0x58>
41040b3c:	294b883a 	add	r5,r5,r5
41040b40:	10bfffc4 	addi	r2,r2,-1
41040b44:	18c7883a 	add	r3,r3,r3
41040b48:	293ffb36 	bltu	r5,r4,41040b38 <__alt_data_end+0xfffc2338>
41040b4c:	0005883a 	mov	r2,zero
41040b50:	18000726 	beq	r3,zero,41040b70 <__divsi3+0x58>
41040b54:	0005883a 	mov	r2,zero
41040b58:	31400236 	bltu	r6,r5,41040b64 <__divsi3+0x4c>
41040b5c:	314dc83a 	sub	r6,r6,r5
41040b60:	10c4b03a 	or	r2,r2,r3
41040b64:	1806d07a 	srli	r3,r3,1
41040b68:	280ad07a 	srli	r5,r5,1
41040b6c:	183ffa1e 	bne	r3,zero,41040b58 <__alt_data_end+0xfffc2358>
41040b70:	38000126 	beq	r7,zero,41040b78 <__divsi3+0x60>
41040b74:	0085c83a 	sub	r2,zero,r2
41040b78:	f800283a 	ret
41040b7c:	014bc83a 	sub	r5,zero,r5
41040b80:	39c0005c 	xori	r7,r7,1
41040b84:	003fe706 	br	41040b24 <__alt_data_end+0xfffc2324>
41040b88:	0109c83a 	sub	r4,zero,r4
41040b8c:	01c00044 	movi	r7,1
41040b90:	003fe306 	br	41040b20 <__alt_data_end+0xfffc2320>
41040b94:	00c00044 	movi	r3,1
41040b98:	003fee06 	br	41040b54 <__alt_data_end+0xfffc2354>

41040b9c <__modsi3>:
41040b9c:	20001716 	blt	r4,zero,41040bfc <__modsi3+0x60>
41040ba0:	000f883a 	mov	r7,zero
41040ba4:	2005883a 	mov	r2,r4
41040ba8:	28001216 	blt	r5,zero,41040bf4 <__modsi3+0x58>
41040bac:	2900162e 	bgeu	r5,r4,41040c08 <__modsi3+0x6c>
41040bb0:	01800804 	movi	r6,32
41040bb4:	00c00044 	movi	r3,1
41040bb8:	00000106 	br	41040bc0 <__modsi3+0x24>
41040bbc:	30000a26 	beq	r6,zero,41040be8 <__modsi3+0x4c>
41040bc0:	294b883a 	add	r5,r5,r5
41040bc4:	31bfffc4 	addi	r6,r6,-1
41040bc8:	18c7883a 	add	r3,r3,r3
41040bcc:	293ffb36 	bltu	r5,r4,41040bbc <__alt_data_end+0xfffc23bc>
41040bd0:	18000526 	beq	r3,zero,41040be8 <__modsi3+0x4c>
41040bd4:	1806d07a 	srli	r3,r3,1
41040bd8:	11400136 	bltu	r2,r5,41040be0 <__modsi3+0x44>
41040bdc:	1145c83a 	sub	r2,r2,r5
41040be0:	280ad07a 	srli	r5,r5,1
41040be4:	183ffb1e 	bne	r3,zero,41040bd4 <__alt_data_end+0xfffc23d4>
41040be8:	38000126 	beq	r7,zero,41040bf0 <__modsi3+0x54>
41040bec:	0085c83a 	sub	r2,zero,r2
41040bf0:	f800283a 	ret
41040bf4:	014bc83a 	sub	r5,zero,r5
41040bf8:	003fec06 	br	41040bac <__alt_data_end+0xfffc23ac>
41040bfc:	0109c83a 	sub	r4,zero,r4
41040c00:	01c00044 	movi	r7,1
41040c04:	003fe706 	br	41040ba4 <__alt_data_end+0xfffc23a4>
41040c08:	00c00044 	movi	r3,1
41040c0c:	003ff106 	br	41040bd4 <__alt_data_end+0xfffc23d4>

41040c10 <__udivsi3>:
41040c10:	200d883a 	mov	r6,r4
41040c14:	2900152e 	bgeu	r5,r4,41040c6c <__udivsi3+0x5c>
41040c18:	28001416 	blt	r5,zero,41040c6c <__udivsi3+0x5c>
41040c1c:	00800804 	movi	r2,32
41040c20:	00c00044 	movi	r3,1
41040c24:	00000206 	br	41040c30 <__udivsi3+0x20>
41040c28:	10000e26 	beq	r2,zero,41040c64 <__udivsi3+0x54>
41040c2c:	28000516 	blt	r5,zero,41040c44 <__udivsi3+0x34>
41040c30:	294b883a 	add	r5,r5,r5
41040c34:	10bfffc4 	addi	r2,r2,-1
41040c38:	18c7883a 	add	r3,r3,r3
41040c3c:	293ffa36 	bltu	r5,r4,41040c28 <__alt_data_end+0xfffc2428>
41040c40:	18000826 	beq	r3,zero,41040c64 <__udivsi3+0x54>
41040c44:	0005883a 	mov	r2,zero
41040c48:	31400236 	bltu	r6,r5,41040c54 <__udivsi3+0x44>
41040c4c:	314dc83a 	sub	r6,r6,r5
41040c50:	10c4b03a 	or	r2,r2,r3
41040c54:	1806d07a 	srli	r3,r3,1
41040c58:	280ad07a 	srli	r5,r5,1
41040c5c:	183ffa1e 	bne	r3,zero,41040c48 <__alt_data_end+0xfffc2448>
41040c60:	f800283a 	ret
41040c64:	0005883a 	mov	r2,zero
41040c68:	f800283a 	ret
41040c6c:	00c00044 	movi	r3,1
41040c70:	003ff406 	br	41040c44 <__alt_data_end+0xfffc2444>

41040c74 <__umodsi3>:
41040c74:	2005883a 	mov	r2,r4
41040c78:	2900122e 	bgeu	r5,r4,41040cc4 <__umodsi3+0x50>
41040c7c:	28001116 	blt	r5,zero,41040cc4 <__umodsi3+0x50>
41040c80:	01800804 	movi	r6,32
41040c84:	00c00044 	movi	r3,1
41040c88:	00000206 	br	41040c94 <__umodsi3+0x20>
41040c8c:	30000c26 	beq	r6,zero,41040cc0 <__umodsi3+0x4c>
41040c90:	28000516 	blt	r5,zero,41040ca8 <__umodsi3+0x34>
41040c94:	294b883a 	add	r5,r5,r5
41040c98:	31bfffc4 	addi	r6,r6,-1
41040c9c:	18c7883a 	add	r3,r3,r3
41040ca0:	293ffa36 	bltu	r5,r4,41040c8c <__alt_data_end+0xfffc248c>
41040ca4:	18000626 	beq	r3,zero,41040cc0 <__umodsi3+0x4c>
41040ca8:	1806d07a 	srli	r3,r3,1
41040cac:	11400136 	bltu	r2,r5,41040cb4 <__umodsi3+0x40>
41040cb0:	1145c83a 	sub	r2,r2,r5
41040cb4:	280ad07a 	srli	r5,r5,1
41040cb8:	183ffb1e 	bne	r3,zero,41040ca8 <__alt_data_end+0xfffc24a8>
41040cbc:	f800283a 	ret
41040cc0:	f800283a 	ret
41040cc4:	00c00044 	movi	r3,1
41040cc8:	003ff706 	br	41040ca8 <__alt_data_end+0xfffc24a8>

41040ccc <memcpy>:
41040ccc:	defffd04 	addi	sp,sp,-12
41040cd0:	dfc00215 	stw	ra,8(sp)
41040cd4:	dc400115 	stw	r17,4(sp)
41040cd8:	dc000015 	stw	r16,0(sp)
41040cdc:	00c003c4 	movi	r3,15
41040ce0:	2005883a 	mov	r2,r4
41040ce4:	1980452e 	bgeu	r3,r6,41040dfc <memcpy+0x130>
41040ce8:	2906b03a 	or	r3,r5,r4
41040cec:	18c000cc 	andi	r3,r3,3
41040cf0:	1800441e 	bne	r3,zero,41040e04 <memcpy+0x138>
41040cf4:	347ffc04 	addi	r17,r6,-16
41040cf8:	8822d13a 	srli	r17,r17,4
41040cfc:	28c00104 	addi	r3,r5,4
41040d00:	23400104 	addi	r13,r4,4
41040d04:	8820913a 	slli	r16,r17,4
41040d08:	2b000204 	addi	r12,r5,8
41040d0c:	22c00204 	addi	r11,r4,8
41040d10:	84000504 	addi	r16,r16,20
41040d14:	2a800304 	addi	r10,r5,12
41040d18:	22400304 	addi	r9,r4,12
41040d1c:	2c21883a 	add	r16,r5,r16
41040d20:	2811883a 	mov	r8,r5
41040d24:	200f883a 	mov	r7,r4
41040d28:	41000017 	ldw	r4,0(r8)
41040d2c:	1fc00017 	ldw	ra,0(r3)
41040d30:	63c00017 	ldw	r15,0(r12)
41040d34:	39000015 	stw	r4,0(r7)
41040d38:	53800017 	ldw	r14,0(r10)
41040d3c:	6fc00015 	stw	ra,0(r13)
41040d40:	5bc00015 	stw	r15,0(r11)
41040d44:	4b800015 	stw	r14,0(r9)
41040d48:	18c00404 	addi	r3,r3,16
41040d4c:	39c00404 	addi	r7,r7,16
41040d50:	42000404 	addi	r8,r8,16
41040d54:	6b400404 	addi	r13,r13,16
41040d58:	63000404 	addi	r12,r12,16
41040d5c:	5ac00404 	addi	r11,r11,16
41040d60:	52800404 	addi	r10,r10,16
41040d64:	4a400404 	addi	r9,r9,16
41040d68:	1c3fef1e 	bne	r3,r16,41040d28 <__alt_data_end+0xfffc2528>
41040d6c:	89c00044 	addi	r7,r17,1
41040d70:	380e913a 	slli	r7,r7,4
41040d74:	310003cc 	andi	r4,r6,15
41040d78:	02c000c4 	movi	r11,3
41040d7c:	11c7883a 	add	r3,r2,r7
41040d80:	29cb883a 	add	r5,r5,r7
41040d84:	5900212e 	bgeu	r11,r4,41040e0c <memcpy+0x140>
41040d88:	1813883a 	mov	r9,r3
41040d8c:	2811883a 	mov	r8,r5
41040d90:	200f883a 	mov	r7,r4
41040d94:	42800017 	ldw	r10,0(r8)
41040d98:	4a400104 	addi	r9,r9,4
41040d9c:	39ffff04 	addi	r7,r7,-4
41040da0:	4abfff15 	stw	r10,-4(r9)
41040da4:	42000104 	addi	r8,r8,4
41040da8:	59fffa36 	bltu	r11,r7,41040d94 <__alt_data_end+0xfffc2594>
41040dac:	213fff04 	addi	r4,r4,-4
41040db0:	2008d0ba 	srli	r4,r4,2
41040db4:	318000cc 	andi	r6,r6,3
41040db8:	21000044 	addi	r4,r4,1
41040dbc:	2109883a 	add	r4,r4,r4
41040dc0:	2109883a 	add	r4,r4,r4
41040dc4:	1907883a 	add	r3,r3,r4
41040dc8:	290b883a 	add	r5,r5,r4
41040dcc:	30000626 	beq	r6,zero,41040de8 <memcpy+0x11c>
41040dd0:	198d883a 	add	r6,r3,r6
41040dd4:	29c00003 	ldbu	r7,0(r5)
41040dd8:	18c00044 	addi	r3,r3,1
41040ddc:	29400044 	addi	r5,r5,1
41040de0:	19ffffc5 	stb	r7,-1(r3)
41040de4:	19bffb1e 	bne	r3,r6,41040dd4 <__alt_data_end+0xfffc25d4>
41040de8:	dfc00217 	ldw	ra,8(sp)
41040dec:	dc400117 	ldw	r17,4(sp)
41040df0:	dc000017 	ldw	r16,0(sp)
41040df4:	dec00304 	addi	sp,sp,12
41040df8:	f800283a 	ret
41040dfc:	2007883a 	mov	r3,r4
41040e00:	003ff206 	br	41040dcc <__alt_data_end+0xfffc25cc>
41040e04:	2007883a 	mov	r3,r4
41040e08:	003ff106 	br	41040dd0 <__alt_data_end+0xfffc25d0>
41040e0c:	200d883a 	mov	r6,r4
41040e10:	003fee06 	br	41040dcc <__alt_data_end+0xfffc25cc>

41040e14 <_printf_r>:
41040e14:	defffd04 	addi	sp,sp,-12
41040e18:	2805883a 	mov	r2,r5
41040e1c:	dfc00015 	stw	ra,0(sp)
41040e20:	d9800115 	stw	r6,4(sp)
41040e24:	d9c00215 	stw	r7,8(sp)
41040e28:	21400217 	ldw	r5,8(r4)
41040e2c:	d9c00104 	addi	r7,sp,4
41040e30:	100d883a 	mov	r6,r2
41040e34:	10410840 	call	41041084 <___vfprintf_internal_r>
41040e38:	dfc00017 	ldw	ra,0(sp)
41040e3c:	dec00304 	addi	sp,sp,12
41040e40:	f800283a 	ret

41040e44 <printf>:
41040e44:	defffc04 	addi	sp,sp,-16
41040e48:	dfc00015 	stw	ra,0(sp)
41040e4c:	d9400115 	stw	r5,4(sp)
41040e50:	d9800215 	stw	r6,8(sp)
41040e54:	d9c00315 	stw	r7,12(sp)
41040e58:	00904174 	movhi	r2,16645
41040e5c:	10871d04 	addi	r2,r2,7284
41040e60:	10800017 	ldw	r2,0(r2)
41040e64:	200b883a 	mov	r5,r4
41040e68:	d9800104 	addi	r6,sp,4
41040e6c:	11000217 	ldw	r4,8(r2)
41040e70:	104327c0 	call	4104327c <__vfprintf_internal>
41040e74:	dfc00017 	ldw	ra,0(sp)
41040e78:	dec00404 	addi	sp,sp,16
41040e7c:	f800283a 	ret

41040e80 <_putchar_r>:
41040e80:	21800217 	ldw	r6,8(r4)
41040e84:	1047bf81 	jmpi	41047bf8 <_putc_r>

41040e88 <putchar>:
41040e88:	00904174 	movhi	r2,16645
41040e8c:	10871d04 	addi	r2,r2,7284
41040e90:	200b883a 	mov	r5,r4
41040e94:	11000017 	ldw	r4,0(r2)
41040e98:	21800217 	ldw	r6,8(r4)
41040e9c:	1047bf81 	jmpi	41047bf8 <_putc_r>

41040ea0 <_puts_r>:
41040ea0:	defff604 	addi	sp,sp,-40
41040ea4:	dc000715 	stw	r16,28(sp)
41040ea8:	2021883a 	mov	r16,r4
41040eac:	2809883a 	mov	r4,r5
41040eb0:	dc400815 	stw	r17,32(sp)
41040eb4:	dfc00915 	stw	ra,36(sp)
41040eb8:	2823883a 	mov	r17,r5
41040ebc:	1040fec0 	call	41040fec <strlen>
41040ec0:	10c00044 	addi	r3,r2,1
41040ec4:	d8800115 	stw	r2,4(sp)
41040ec8:	00904174 	movhi	r2,16645
41040ecc:	10bfb304 	addi	r2,r2,-308
41040ed0:	d8800215 	stw	r2,8(sp)
41040ed4:	00800044 	movi	r2,1
41040ed8:	d8800315 	stw	r2,12(sp)
41040edc:	00800084 	movi	r2,2
41040ee0:	dc400015 	stw	r17,0(sp)
41040ee4:	d8c00615 	stw	r3,24(sp)
41040ee8:	dec00415 	stw	sp,16(sp)
41040eec:	d8800515 	stw	r2,20(sp)
41040ef0:	80000226 	beq	r16,zero,41040efc <_puts_r+0x5c>
41040ef4:	80800e17 	ldw	r2,56(r16)
41040ef8:	10001426 	beq	r2,zero,41040f4c <_puts_r+0xac>
41040efc:	81400217 	ldw	r5,8(r16)
41040f00:	2880030b 	ldhu	r2,12(r5)
41040f04:	10c8000c 	andi	r3,r2,8192
41040f08:	1800061e 	bne	r3,zero,41040f24 <_puts_r+0x84>
41040f0c:	29001917 	ldw	r4,100(r5)
41040f10:	00f7ffc4 	movi	r3,-8193
41040f14:	10880014 	ori	r2,r2,8192
41040f18:	20c6703a 	and	r3,r4,r3
41040f1c:	2880030d 	sth	r2,12(r5)
41040f20:	28c01915 	stw	r3,100(r5)
41040f24:	d9800404 	addi	r6,sp,16
41040f28:	8009883a 	mov	r4,r16
41040f2c:	10457ac0 	call	410457ac <__sfvwrite_r>
41040f30:	1000091e 	bne	r2,zero,41040f58 <_puts_r+0xb8>
41040f34:	00800284 	movi	r2,10
41040f38:	dfc00917 	ldw	ra,36(sp)
41040f3c:	dc400817 	ldw	r17,32(sp)
41040f40:	dc000717 	ldw	r16,28(sp)
41040f44:	dec00a04 	addi	sp,sp,40
41040f48:	f800283a 	ret
41040f4c:	8009883a 	mov	r4,r16
41040f50:	10453280 	call	41045328 <__sinit>
41040f54:	003fe906 	br	41040efc <__alt_data_end+0xfffc26fc>
41040f58:	00bfffc4 	movi	r2,-1
41040f5c:	003ff606 	br	41040f38 <__alt_data_end+0xfffc2738>

41040f60 <puts>:
41040f60:	00904174 	movhi	r2,16645
41040f64:	10871d04 	addi	r2,r2,7284
41040f68:	200b883a 	mov	r5,r4
41040f6c:	11000017 	ldw	r4,0(r2)
41040f70:	1040ea01 	jmpi	41040ea0 <_puts_r>

41040f74 <srand>:
41040f74:	00904174 	movhi	r2,16645
41040f78:	10871d04 	addi	r2,r2,7284
41040f7c:	10800017 	ldw	r2,0(r2)
41040f80:	11002915 	stw	r4,164(r2)
41040f84:	10002a15 	stw	zero,168(r2)
41040f88:	f800283a 	ret

41040f8c <rand>:
41040f8c:	00904174 	movhi	r2,16645
41040f90:	10871d04 	addi	r2,r2,7284
41040f94:	11c00017 	ldw	r7,0(r2)
41040f98:	01532574 	movhi	r5,19605
41040f9c:	019614b4 	movhi	r6,22610
41040fa0:	38c02917 	ldw	r3,164(r7)
41040fa4:	39002a17 	ldw	r4,168(r7)
41040fa8:	295fcb44 	addi	r5,r5,32557
41040fac:	31bd0b44 	addi	r6,r6,-3027
41040fb0:	1951383a 	mul	r8,r3,r5
41040fb4:	2149383a 	mul	r4,r4,r5
41040fb8:	198d383a 	mul	r6,r3,r6
41040fbc:	194a383a 	mulxuu	r5,r3,r5
41040fc0:	40800044 	addi	r2,r8,1
41040fc4:	2187883a 	add	r3,r4,r6
41040fc8:	1949883a 	add	r4,r3,r5
41040fcc:	38802915 	stw	r2,164(r7)
41040fd0:	1207803a 	cmpltu	r3,r2,r8
41040fd4:	00a00034 	movhi	r2,32768
41040fd8:	1907883a 	add	r3,r3,r4
41040fdc:	10bfffc4 	addi	r2,r2,-1
41040fe0:	38c02a15 	stw	r3,168(r7)
41040fe4:	1884703a 	and	r2,r3,r2
41040fe8:	f800283a 	ret

41040fec <strlen>:
41040fec:	208000cc 	andi	r2,r4,3
41040ff0:	10002026 	beq	r2,zero,41041074 <strlen+0x88>
41040ff4:	20800007 	ldb	r2,0(r4)
41040ff8:	10002026 	beq	r2,zero,4104107c <strlen+0x90>
41040ffc:	2005883a 	mov	r2,r4
41041000:	00000206 	br	4104100c <strlen+0x20>
41041004:	10c00007 	ldb	r3,0(r2)
41041008:	18001826 	beq	r3,zero,4104106c <strlen+0x80>
4104100c:	10800044 	addi	r2,r2,1
41041010:	10c000cc 	andi	r3,r2,3
41041014:	183ffb1e 	bne	r3,zero,41041004 <__alt_data_end+0xfffc2804>
41041018:	10c00017 	ldw	r3,0(r2)
4104101c:	01ffbff4 	movhi	r7,65279
41041020:	39ffbfc4 	addi	r7,r7,-257
41041024:	00ca303a 	nor	r5,zero,r3
41041028:	01a02074 	movhi	r6,32897
4104102c:	19c7883a 	add	r3,r3,r7
41041030:	31a02004 	addi	r6,r6,-32640
41041034:	1946703a 	and	r3,r3,r5
41041038:	1986703a 	and	r3,r3,r6
4104103c:	1800091e 	bne	r3,zero,41041064 <strlen+0x78>
41041040:	10800104 	addi	r2,r2,4
41041044:	10c00017 	ldw	r3,0(r2)
41041048:	19cb883a 	add	r5,r3,r7
4104104c:	00c6303a 	nor	r3,zero,r3
41041050:	28c6703a 	and	r3,r5,r3
41041054:	1986703a 	and	r3,r3,r6
41041058:	183ff926 	beq	r3,zero,41041040 <__alt_data_end+0xfffc2840>
4104105c:	00000106 	br	41041064 <strlen+0x78>
41041060:	10800044 	addi	r2,r2,1
41041064:	10c00007 	ldb	r3,0(r2)
41041068:	183ffd1e 	bne	r3,zero,41041060 <__alt_data_end+0xfffc2860>
4104106c:	1105c83a 	sub	r2,r2,r4
41041070:	f800283a 	ret
41041074:	2005883a 	mov	r2,r4
41041078:	003fe706 	br	41041018 <__alt_data_end+0xfffc2818>
4104107c:	0005883a 	mov	r2,zero
41041080:	f800283a 	ret

41041084 <___vfprintf_internal_r>:
41041084:	deffb804 	addi	sp,sp,-288
41041088:	dfc04715 	stw	ra,284(sp)
4104108c:	ddc04515 	stw	r23,276(sp)
41041090:	dd404315 	stw	r21,268(sp)
41041094:	d9002c15 	stw	r4,176(sp)
41041098:	282f883a 	mov	r23,r5
4104109c:	302b883a 	mov	r21,r6
410410a0:	d9c02d15 	stw	r7,180(sp)
410410a4:	df004615 	stw	fp,280(sp)
410410a8:	dd804415 	stw	r22,272(sp)
410410ac:	dd004215 	stw	r20,264(sp)
410410b0:	dcc04115 	stw	r19,260(sp)
410410b4:	dc804015 	stw	r18,256(sp)
410410b8:	dc403f15 	stw	r17,252(sp)
410410bc:	dc003e15 	stw	r16,248(sp)
410410c0:	1045e9c0 	call	41045e9c <_localeconv_r>
410410c4:	10800017 	ldw	r2,0(r2)
410410c8:	1009883a 	mov	r4,r2
410410cc:	d8803415 	stw	r2,208(sp)
410410d0:	1040fec0 	call	41040fec <strlen>
410410d4:	d8803715 	stw	r2,220(sp)
410410d8:	d8802c17 	ldw	r2,176(sp)
410410dc:	10000226 	beq	r2,zero,410410e8 <___vfprintf_internal_r+0x64>
410410e0:	10800e17 	ldw	r2,56(r2)
410410e4:	1000f926 	beq	r2,zero,410414cc <___vfprintf_internal_r+0x448>
410410e8:	b880030b 	ldhu	r2,12(r23)
410410ec:	10c8000c 	andi	r3,r2,8192
410410f0:	1800061e 	bne	r3,zero,4104110c <___vfprintf_internal_r+0x88>
410410f4:	b9001917 	ldw	r4,100(r23)
410410f8:	00f7ffc4 	movi	r3,-8193
410410fc:	10880014 	ori	r2,r2,8192
41041100:	20c6703a 	and	r3,r4,r3
41041104:	b880030d 	sth	r2,12(r23)
41041108:	b8c01915 	stw	r3,100(r23)
4104110c:	10c0020c 	andi	r3,r2,8
41041110:	1800c126 	beq	r3,zero,41041418 <___vfprintf_internal_r+0x394>
41041114:	b8c00417 	ldw	r3,16(r23)
41041118:	1800bf26 	beq	r3,zero,41041418 <___vfprintf_internal_r+0x394>
4104111c:	1080068c 	andi	r2,r2,26
41041120:	00c00284 	movi	r3,10
41041124:	10c0c426 	beq	r2,r3,41041438 <___vfprintf_internal_r+0x3b4>
41041128:	d8c00404 	addi	r3,sp,16
4104112c:	05104174 	movhi	r20,16645
41041130:	d9001e04 	addi	r4,sp,120
41041134:	a53fc484 	addi	r20,r20,-238
41041138:	d8c01e15 	stw	r3,120(sp)
4104113c:	d8002015 	stw	zero,128(sp)
41041140:	d8001f15 	stw	zero,124(sp)
41041144:	d8003315 	stw	zero,204(sp)
41041148:	d8003615 	stw	zero,216(sp)
4104114c:	d8003815 	stw	zero,224(sp)
41041150:	1811883a 	mov	r8,r3
41041154:	d8003915 	stw	zero,228(sp)
41041158:	d8003a15 	stw	zero,232(sp)
4104115c:	d8002f15 	stw	zero,188(sp)
41041160:	d9002815 	stw	r4,160(sp)
41041164:	a8800007 	ldb	r2,0(r21)
41041168:	10027b26 	beq	r2,zero,41041b58 <___vfprintf_internal_r+0xad4>
4104116c:	00c00944 	movi	r3,37
41041170:	a821883a 	mov	r16,r21
41041174:	10c0021e 	bne	r2,r3,41041180 <___vfprintf_internal_r+0xfc>
41041178:	00001406 	br	410411cc <___vfprintf_internal_r+0x148>
4104117c:	10c00326 	beq	r2,r3,4104118c <___vfprintf_internal_r+0x108>
41041180:	84000044 	addi	r16,r16,1
41041184:	80800007 	ldb	r2,0(r16)
41041188:	103ffc1e 	bne	r2,zero,4104117c <__alt_data_end+0xfffc297c>
4104118c:	8563c83a 	sub	r17,r16,r21
41041190:	88000e26 	beq	r17,zero,410411cc <___vfprintf_internal_r+0x148>
41041194:	d8c02017 	ldw	r3,128(sp)
41041198:	d8801f17 	ldw	r2,124(sp)
4104119c:	45400015 	stw	r21,0(r8)
410411a0:	1c47883a 	add	r3,r3,r17
410411a4:	10800044 	addi	r2,r2,1
410411a8:	d8c02015 	stw	r3,128(sp)
410411ac:	44400115 	stw	r17,4(r8)
410411b0:	d8801f15 	stw	r2,124(sp)
410411b4:	00c001c4 	movi	r3,7
410411b8:	1880a716 	blt	r3,r2,41041458 <___vfprintf_internal_r+0x3d4>
410411bc:	42000204 	addi	r8,r8,8
410411c0:	d9402f17 	ldw	r5,188(sp)
410411c4:	2c4b883a 	add	r5,r5,r17
410411c8:	d9402f15 	stw	r5,188(sp)
410411cc:	80800007 	ldb	r2,0(r16)
410411d0:	1000a826 	beq	r2,zero,41041474 <___vfprintf_internal_r+0x3f0>
410411d4:	84400047 	ldb	r17,1(r16)
410411d8:	00bfffc4 	movi	r2,-1
410411dc:	85400044 	addi	r21,r16,1
410411e0:	d8002785 	stb	zero,158(sp)
410411e4:	0007883a 	mov	r3,zero
410411e8:	000f883a 	mov	r7,zero
410411ec:	d8802915 	stw	r2,164(sp)
410411f0:	d8003115 	stw	zero,196(sp)
410411f4:	0025883a 	mov	r18,zero
410411f8:	01401604 	movi	r5,88
410411fc:	01800244 	movi	r6,9
41041200:	02800a84 	movi	r10,42
41041204:	02401b04 	movi	r9,108
41041208:	ad400044 	addi	r21,r21,1
4104120c:	88bff804 	addi	r2,r17,-32
41041210:	28830436 	bltu	r5,r2,41041e24 <___vfprintf_internal_r+0xda0>
41041214:	100490ba 	slli	r2,r2,2
41041218:	01104134 	movhi	r4,16644
4104121c:	21048b04 	addi	r4,r4,4652
41041220:	1105883a 	add	r2,r2,r4
41041224:	10800017 	ldw	r2,0(r2)
41041228:	1000683a 	jmp	r2
4104122c:	41041d44 	addi	r4,r8,4213
41041230:	41041e24 	muli	r4,r8,4216
41041234:	41041e24 	muli	r4,r8,4216
41041238:	41041d64 	muli	r4,r8,4213
4104123c:	41041e24 	muli	r4,r8,4216
41041240:	41041e24 	muli	r4,r8,4216
41041244:	41041e24 	muli	r4,r8,4216
41041248:	41041e24 	muli	r4,r8,4216
4104124c:	41041e24 	muli	r4,r8,4216
41041250:	41041e24 	muli	r4,r8,4216
41041254:	410414d8 	cmpnei	r4,r8,4179
41041258:	41041c80 	call	441041c8 <__alt_data_end+0x30859c8>
4104125c:	41041e24 	muli	r4,r8,4216
41041260:	410413a0 	cmpeqi	r4,r8,4174
41041264:	41041500 	call	44104150 <__alt_data_end+0x3085950>
41041268:	41041e24 	muli	r4,r8,4216
4104126c:	41041540 	call	44104154 <__alt_data_end+0x3085954>
41041270:	4104154c 	andi	r4,r8,4181
41041274:	4104154c 	andi	r4,r8,4181
41041278:	4104154c 	andi	r4,r8,4181
4104127c:	4104154c 	andi	r4,r8,4181
41041280:	4104154c 	andi	r4,r8,4181
41041284:	4104154c 	andi	r4,r8,4181
41041288:	4104154c 	andi	r4,r8,4181
4104128c:	4104154c 	andi	r4,r8,4181
41041290:	4104154c 	andi	r4,r8,4181
41041294:	41041e24 	muli	r4,r8,4216
41041298:	41041e24 	muli	r4,r8,4216
4104129c:	41041e24 	muli	r4,r8,4216
410412a0:	41041e24 	muli	r4,r8,4216
410412a4:	41041e24 	muli	r4,r8,4216
410412a8:	41041e24 	muli	r4,r8,4216
410412ac:	41041e24 	muli	r4,r8,4216
410412b0:	41041e24 	muli	r4,r8,4216
410412b4:	41041e24 	muli	r4,r8,4216
410412b8:	41041e24 	muli	r4,r8,4216
410412bc:	41041580 	call	44104158 <__alt_data_end+0x3085958>
410412c0:	4104163c 	xorhi	r4,r8,4184
410412c4:	41041e24 	muli	r4,r8,4216
410412c8:	4104163c 	xorhi	r4,r8,4184
410412cc:	41041e24 	muli	r4,r8,4216
410412d0:	41041e24 	muli	r4,r8,4216
410412d4:	41041e24 	muli	r4,r8,4216
410412d8:	41041e24 	muli	r4,r8,4216
410412dc:	410416dc 	xori	r4,r8,4187
410412e0:	41041e24 	muli	r4,r8,4216
410412e4:	41041e24 	muli	r4,r8,4216
410412e8:	410416e8 	cmpgeui	r4,r8,4187
410412ec:	41041e24 	muli	r4,r8,4216
410412f0:	41041e24 	muli	r4,r8,4216
410412f4:	41041e24 	muli	r4,r8,4216
410412f8:	41041e24 	muli	r4,r8,4216
410412fc:	41041e24 	muli	r4,r8,4216
41041300:	41041b60 	cmpeqi	r4,r8,4205
41041304:	41041e24 	muli	r4,r8,4216
41041308:	41041e24 	muli	r4,r8,4216
4104130c:	41041bc0 	call	441041bc <__alt_data_end+0x30859bc>
41041310:	41041e24 	muli	r4,r8,4216
41041314:	41041e24 	muli	r4,r8,4216
41041318:	41041e24 	muli	r4,r8,4216
4104131c:	41041e24 	muli	r4,r8,4216
41041320:	41041e24 	muli	r4,r8,4216
41041324:	41041e24 	muli	r4,r8,4216
41041328:	41041e24 	muli	r4,r8,4216
4104132c:	41041e24 	muli	r4,r8,4216
41041330:	41041e24 	muli	r4,r8,4216
41041334:	41041e24 	muli	r4,r8,4216
41041338:	41041dd0 	cmplti	r4,r8,4215
4104133c:	41041d70 	cmpltui	r4,r8,4213
41041340:	4104163c 	xorhi	r4,r8,4184
41041344:	4104163c 	xorhi	r4,r8,4184
41041348:	4104163c 	xorhi	r4,r8,4184
4104134c:	41041d80 	call	441041d8 <__alt_data_end+0x30859d8>
41041350:	41041d70 	cmpltui	r4,r8,4213
41041354:	41041e24 	muli	r4,r8,4216
41041358:	41041e24 	muli	r4,r8,4216
4104135c:	41041d8c 	andi	r4,r8,4214
41041360:	41041e24 	muli	r4,r8,4216
41041364:	41041d9c 	xori	r4,r8,4214
41041368:	41041c70 	cmpltui	r4,r8,4209
4104136c:	410413ac 	andhi	r4,r8,4174
41041370:	41041c90 	cmplti	r4,r8,4210
41041374:	41041e24 	muli	r4,r8,4216
41041378:	41041c9c 	xori	r4,r8,4210
4104137c:	41041e24 	muli	r4,r8,4216
41041380:	41041cf8 	rdprs	r4,r8,4211
41041384:	41041e24 	muli	r4,r8,4216
41041388:	41041e24 	muli	r4,r8,4216
4104138c:	41041d08 	cmpgei	r4,r8,4212
41041390:	d9003117 	ldw	r4,196(sp)
41041394:	d8802d15 	stw	r2,180(sp)
41041398:	0109c83a 	sub	r4,zero,r4
4104139c:	d9003115 	stw	r4,196(sp)
410413a0:	94800114 	ori	r18,r18,4
410413a4:	ac400007 	ldb	r17,0(r21)
410413a8:	003f9706 	br	41041208 <__alt_data_end+0xfffc2a08>
410413ac:	00800c04 	movi	r2,48
410413b0:	d9002d17 	ldw	r4,180(sp)
410413b4:	d9402917 	ldw	r5,164(sp)
410413b8:	d8802705 	stb	r2,156(sp)
410413bc:	00801e04 	movi	r2,120
410413c0:	d8802745 	stb	r2,157(sp)
410413c4:	d8002785 	stb	zero,158(sp)
410413c8:	20c00104 	addi	r3,r4,4
410413cc:	24c00017 	ldw	r19,0(r4)
410413d0:	002d883a 	mov	r22,zero
410413d4:	90800094 	ori	r2,r18,2
410413d8:	28029a16 	blt	r5,zero,41041e44 <___vfprintf_internal_r+0xdc0>
410413dc:	00bfdfc4 	movi	r2,-129
410413e0:	90a4703a 	and	r18,r18,r2
410413e4:	d8c02d15 	stw	r3,180(sp)
410413e8:	94800094 	ori	r18,r18,2
410413ec:	9802871e 	bne	r19,zero,41041e0c <___vfprintf_internal_r+0xd88>
410413f0:	00904174 	movhi	r2,16645
410413f4:	10bfbd04 	addi	r2,r2,-268
410413f8:	d8803915 	stw	r2,228(sp)
410413fc:	04401e04 	movi	r17,120
41041400:	d8802917 	ldw	r2,164(sp)
41041404:	0039883a 	mov	fp,zero
41041408:	1001e926 	beq	r2,zero,41041bb0 <___vfprintf_internal_r+0xb2c>
4104140c:	0027883a 	mov	r19,zero
41041410:	002d883a 	mov	r22,zero
41041414:	00020506 	br	41041c2c <___vfprintf_internal_r+0xba8>
41041418:	d9002c17 	ldw	r4,176(sp)
4104141c:	b80b883a 	mov	r5,r23
41041420:	10433540 	call	41043354 <__swsetup_r>
41041424:	1005ac1e 	bne	r2,zero,41042ad8 <___vfprintf_internal_r+0x1a54>
41041428:	b880030b 	ldhu	r2,12(r23)
4104142c:	00c00284 	movi	r3,10
41041430:	1080068c 	andi	r2,r2,26
41041434:	10ff3c1e 	bne	r2,r3,41041128 <__alt_data_end+0xfffc2928>
41041438:	b880038f 	ldh	r2,14(r23)
4104143c:	103f3a16 	blt	r2,zero,41041128 <__alt_data_end+0xfffc2928>
41041440:	d9c02d17 	ldw	r7,180(sp)
41041444:	d9002c17 	ldw	r4,176(sp)
41041448:	a80d883a 	mov	r6,r21
4104144c:	b80b883a 	mov	r5,r23
41041450:	10432980 	call	41043298 <__sbprintf>
41041454:	00001106 	br	4104149c <___vfprintf_internal_r+0x418>
41041458:	d9002c17 	ldw	r4,176(sp)
4104145c:	d9801e04 	addi	r6,sp,120
41041460:	b80b883a 	mov	r5,r23
41041464:	10486a00 	call	410486a0 <__sprint_r>
41041468:	1000081e 	bne	r2,zero,4104148c <___vfprintf_internal_r+0x408>
4104146c:	da000404 	addi	r8,sp,16
41041470:	003f5306 	br	410411c0 <__alt_data_end+0xfffc29c0>
41041474:	d8802017 	ldw	r2,128(sp)
41041478:	10000426 	beq	r2,zero,4104148c <___vfprintf_internal_r+0x408>
4104147c:	d9002c17 	ldw	r4,176(sp)
41041480:	d9801e04 	addi	r6,sp,120
41041484:	b80b883a 	mov	r5,r23
41041488:	10486a00 	call	410486a0 <__sprint_r>
4104148c:	b880030b 	ldhu	r2,12(r23)
41041490:	1080100c 	andi	r2,r2,64
41041494:	1005901e 	bne	r2,zero,41042ad8 <___vfprintf_internal_r+0x1a54>
41041498:	d8802f17 	ldw	r2,188(sp)
4104149c:	dfc04717 	ldw	ra,284(sp)
410414a0:	df004617 	ldw	fp,280(sp)
410414a4:	ddc04517 	ldw	r23,276(sp)
410414a8:	dd804417 	ldw	r22,272(sp)
410414ac:	dd404317 	ldw	r21,268(sp)
410414b0:	dd004217 	ldw	r20,264(sp)
410414b4:	dcc04117 	ldw	r19,260(sp)
410414b8:	dc804017 	ldw	r18,256(sp)
410414bc:	dc403f17 	ldw	r17,252(sp)
410414c0:	dc003e17 	ldw	r16,248(sp)
410414c4:	dec04804 	addi	sp,sp,288
410414c8:	f800283a 	ret
410414cc:	d9002c17 	ldw	r4,176(sp)
410414d0:	10453280 	call	41045328 <__sinit>
410414d4:	003f0406 	br	410410e8 <__alt_data_end+0xfffc28e8>
410414d8:	d8802d17 	ldw	r2,180(sp)
410414dc:	d9002d17 	ldw	r4,180(sp)
410414e0:	10800017 	ldw	r2,0(r2)
410414e4:	d8803115 	stw	r2,196(sp)
410414e8:	20800104 	addi	r2,r4,4
410414ec:	d9003117 	ldw	r4,196(sp)
410414f0:	203fa716 	blt	r4,zero,41041390 <__alt_data_end+0xfffc2b90>
410414f4:	d8802d15 	stw	r2,180(sp)
410414f8:	ac400007 	ldb	r17,0(r21)
410414fc:	003f4206 	br	41041208 <__alt_data_end+0xfffc2a08>
41041500:	ac400007 	ldb	r17,0(r21)
41041504:	aac00044 	addi	r11,r21,1
41041508:	8a872826 	beq	r17,r10,410431ac <___vfprintf_internal_r+0x2128>
4104150c:	88bff404 	addi	r2,r17,-48
41041510:	0009883a 	mov	r4,zero
41041514:	30867d36 	bltu	r6,r2,41042f0c <___vfprintf_internal_r+0x1e88>
41041518:	5c400007 	ldb	r17,0(r11)
4104151c:	210002a4 	muli	r4,r4,10
41041520:	5d400044 	addi	r21,r11,1
41041524:	a817883a 	mov	r11,r21
41041528:	2089883a 	add	r4,r4,r2
4104152c:	88bff404 	addi	r2,r17,-48
41041530:	30bff92e 	bgeu	r6,r2,41041518 <__alt_data_end+0xfffc2d18>
41041534:	2005c916 	blt	r4,zero,41042c5c <___vfprintf_internal_r+0x1bd8>
41041538:	d9002915 	stw	r4,164(sp)
4104153c:	003f3306 	br	4104120c <__alt_data_end+0xfffc2a0c>
41041540:	94802014 	ori	r18,r18,128
41041544:	ac400007 	ldb	r17,0(r21)
41041548:	003f2f06 	br	41041208 <__alt_data_end+0xfffc2a08>
4104154c:	a809883a 	mov	r4,r21
41041550:	d8003115 	stw	zero,196(sp)
41041554:	88bff404 	addi	r2,r17,-48
41041558:	0017883a 	mov	r11,zero
4104155c:	24400007 	ldb	r17,0(r4)
41041560:	5ac002a4 	muli	r11,r11,10
41041564:	ad400044 	addi	r21,r21,1
41041568:	a809883a 	mov	r4,r21
4104156c:	12d7883a 	add	r11,r2,r11
41041570:	88bff404 	addi	r2,r17,-48
41041574:	30bff92e 	bgeu	r6,r2,4104155c <__alt_data_end+0xfffc2d5c>
41041578:	dac03115 	stw	r11,196(sp)
4104157c:	003f2306 	br	4104120c <__alt_data_end+0xfffc2a0c>
41041580:	18c03fcc 	andi	r3,r3,255
41041584:	18072b1e 	bne	r3,zero,41043234 <___vfprintf_internal_r+0x21b0>
41041588:	94800414 	ori	r18,r18,16
4104158c:	9080080c 	andi	r2,r18,32
41041590:	10037b26 	beq	r2,zero,41042380 <___vfprintf_internal_r+0x12fc>
41041594:	d9402d17 	ldw	r5,180(sp)
41041598:	28800117 	ldw	r2,4(r5)
4104159c:	2cc00017 	ldw	r19,0(r5)
410415a0:	29400204 	addi	r5,r5,8
410415a4:	d9402d15 	stw	r5,180(sp)
410415a8:	102d883a 	mov	r22,r2
410415ac:	10044b16 	blt	r2,zero,410426dc <___vfprintf_internal_r+0x1658>
410415b0:	d9402917 	ldw	r5,164(sp)
410415b4:	df002783 	ldbu	fp,158(sp)
410415b8:	2803bc16 	blt	r5,zero,410424ac <___vfprintf_internal_r+0x1428>
410415bc:	00ffdfc4 	movi	r3,-129
410415c0:	9d84b03a 	or	r2,r19,r22
410415c4:	90e4703a 	and	r18,r18,r3
410415c8:	10017726 	beq	r2,zero,41041ba8 <___vfprintf_internal_r+0xb24>
410415cc:	b0038326 	beq	r22,zero,410423dc <___vfprintf_internal_r+0x1358>
410415d0:	dc402a15 	stw	r17,168(sp)
410415d4:	dc001e04 	addi	r16,sp,120
410415d8:	b023883a 	mov	r17,r22
410415dc:	402d883a 	mov	r22,r8
410415e0:	9809883a 	mov	r4,r19
410415e4:	880b883a 	mov	r5,r17
410415e8:	01800284 	movi	r6,10
410415ec:	000f883a 	mov	r7,zero
410415f0:	104aa980 	call	4104aa98 <__umoddi3>
410415f4:	10800c04 	addi	r2,r2,48
410415f8:	843fffc4 	addi	r16,r16,-1
410415fc:	9809883a 	mov	r4,r19
41041600:	880b883a 	mov	r5,r17
41041604:	80800005 	stb	r2,0(r16)
41041608:	01800284 	movi	r6,10
4104160c:	000f883a 	mov	r7,zero
41041610:	104a5200 	call	4104a520 <__udivdi3>
41041614:	1027883a 	mov	r19,r2
41041618:	10c4b03a 	or	r2,r2,r3
4104161c:	1823883a 	mov	r17,r3
41041620:	103fef1e 	bne	r2,zero,410415e0 <__alt_data_end+0xfffc2de0>
41041624:	d8c02817 	ldw	r3,160(sp)
41041628:	dc402a17 	ldw	r17,168(sp)
4104162c:	b011883a 	mov	r8,r22
41041630:	1c07c83a 	sub	r3,r3,r16
41041634:	d8c02e15 	stw	r3,184(sp)
41041638:	00005906 	br	410417a0 <___vfprintf_internal_r+0x71c>
4104163c:	18c03fcc 	andi	r3,r3,255
41041640:	1806fa1e 	bne	r3,zero,4104322c <___vfprintf_internal_r+0x21a8>
41041644:	9080020c 	andi	r2,r18,8
41041648:	10048a26 	beq	r2,zero,41042874 <___vfprintf_internal_r+0x17f0>
4104164c:	d8c02d17 	ldw	r3,180(sp)
41041650:	d9002d17 	ldw	r4,180(sp)
41041654:	d9402d17 	ldw	r5,180(sp)
41041658:	18c00017 	ldw	r3,0(r3)
4104165c:	21000117 	ldw	r4,4(r4)
41041660:	29400204 	addi	r5,r5,8
41041664:	d8c03615 	stw	r3,216(sp)
41041668:	d9003815 	stw	r4,224(sp)
4104166c:	d9402d15 	stw	r5,180(sp)
41041670:	d9003617 	ldw	r4,216(sp)
41041674:	d9403817 	ldw	r5,224(sp)
41041678:	da003d15 	stw	r8,244(sp)
4104167c:	04000044 	movi	r16,1
41041680:	10482c40 	call	410482c4 <__fpclassifyd>
41041684:	da003d17 	ldw	r8,244(sp)
41041688:	14041f1e 	bne	r2,r16,41042708 <___vfprintf_internal_r+0x1684>
4104168c:	d9003617 	ldw	r4,216(sp)
41041690:	d9403817 	ldw	r5,224(sp)
41041694:	000d883a 	mov	r6,zero
41041698:	000f883a 	mov	r7,zero
4104169c:	104c2c80 	call	4104c2c8 <__ledf2>
410416a0:	da003d17 	ldw	r8,244(sp)
410416a4:	1005be16 	blt	r2,zero,41042da0 <___vfprintf_internal_r+0x1d1c>
410416a8:	df002783 	ldbu	fp,158(sp)
410416ac:	008011c4 	movi	r2,71
410416b0:	1445330e 	bge	r2,r17,41042b80 <___vfprintf_internal_r+0x1afc>
410416b4:	04104174 	movhi	r16,16645
410416b8:	843fb504 	addi	r16,r16,-300
410416bc:	00c000c4 	movi	r3,3
410416c0:	00bfdfc4 	movi	r2,-129
410416c4:	d8c02a15 	stw	r3,168(sp)
410416c8:	90a4703a 	and	r18,r18,r2
410416cc:	d8c02e15 	stw	r3,184(sp)
410416d0:	d8002915 	stw	zero,164(sp)
410416d4:	d8003215 	stw	zero,200(sp)
410416d8:	00003706 	br	410417b8 <___vfprintf_internal_r+0x734>
410416dc:	94800214 	ori	r18,r18,8
410416e0:	ac400007 	ldb	r17,0(r21)
410416e4:	003ec806 	br	41041208 <__alt_data_end+0xfffc2a08>
410416e8:	18c03fcc 	andi	r3,r3,255
410416ec:	1806db1e 	bne	r3,zero,4104325c <___vfprintf_internal_r+0x21d8>
410416f0:	94800414 	ori	r18,r18,16
410416f4:	9080080c 	andi	r2,r18,32
410416f8:	1002d826 	beq	r2,zero,4104225c <___vfprintf_internal_r+0x11d8>
410416fc:	d9402d17 	ldw	r5,180(sp)
41041700:	d8c02917 	ldw	r3,164(sp)
41041704:	d8002785 	stb	zero,158(sp)
41041708:	28800204 	addi	r2,r5,8
4104170c:	2cc00017 	ldw	r19,0(r5)
41041710:	2d800117 	ldw	r22,4(r5)
41041714:	18048f16 	blt	r3,zero,41042954 <___vfprintf_internal_r+0x18d0>
41041718:	013fdfc4 	movi	r4,-129
4104171c:	9d86b03a 	or	r3,r19,r22
41041720:	d8802d15 	stw	r2,180(sp)
41041724:	9124703a 	and	r18,r18,r4
41041728:	1802d91e 	bne	r3,zero,41042290 <___vfprintf_internal_r+0x120c>
4104172c:	d8c02917 	ldw	r3,164(sp)
41041730:	0039883a 	mov	fp,zero
41041734:	1805c326 	beq	r3,zero,41042e44 <___vfprintf_internal_r+0x1dc0>
41041738:	0027883a 	mov	r19,zero
4104173c:	002d883a 	mov	r22,zero
41041740:	dc001e04 	addi	r16,sp,120
41041744:	9806d0fa 	srli	r3,r19,3
41041748:	b008977a 	slli	r4,r22,29
4104174c:	b02cd0fa 	srli	r22,r22,3
41041750:	9cc001cc 	andi	r19,r19,7
41041754:	98800c04 	addi	r2,r19,48
41041758:	843fffc4 	addi	r16,r16,-1
4104175c:	20e6b03a 	or	r19,r4,r3
41041760:	80800005 	stb	r2,0(r16)
41041764:	9d86b03a 	or	r3,r19,r22
41041768:	183ff61e 	bne	r3,zero,41041744 <__alt_data_end+0xfffc2f44>
4104176c:	90c0004c 	andi	r3,r18,1
41041770:	18013b26 	beq	r3,zero,41041c60 <___vfprintf_internal_r+0xbdc>
41041774:	10803fcc 	andi	r2,r2,255
41041778:	1080201c 	xori	r2,r2,128
4104177c:	10bfe004 	addi	r2,r2,-128
41041780:	00c00c04 	movi	r3,48
41041784:	10c13626 	beq	r2,r3,41041c60 <___vfprintf_internal_r+0xbdc>
41041788:	80ffffc5 	stb	r3,-1(r16)
4104178c:	d8c02817 	ldw	r3,160(sp)
41041790:	80bfffc4 	addi	r2,r16,-1
41041794:	1021883a 	mov	r16,r2
41041798:	1887c83a 	sub	r3,r3,r2
4104179c:	d8c02e15 	stw	r3,184(sp)
410417a0:	d8802e17 	ldw	r2,184(sp)
410417a4:	d9002917 	ldw	r4,164(sp)
410417a8:	1100010e 	bge	r2,r4,410417b0 <___vfprintf_internal_r+0x72c>
410417ac:	2005883a 	mov	r2,r4
410417b0:	d8802a15 	stw	r2,168(sp)
410417b4:	d8003215 	stw	zero,200(sp)
410417b8:	e7003fcc 	andi	fp,fp,255
410417bc:	e700201c 	xori	fp,fp,128
410417c0:	e73fe004 	addi	fp,fp,-128
410417c4:	e0000326 	beq	fp,zero,410417d4 <___vfprintf_internal_r+0x750>
410417c8:	d8c02a17 	ldw	r3,168(sp)
410417cc:	18c00044 	addi	r3,r3,1
410417d0:	d8c02a15 	stw	r3,168(sp)
410417d4:	90c0008c 	andi	r3,r18,2
410417d8:	d8c02b15 	stw	r3,172(sp)
410417dc:	18000326 	beq	r3,zero,410417ec <___vfprintf_internal_r+0x768>
410417e0:	d8c02a17 	ldw	r3,168(sp)
410417e4:	18c00084 	addi	r3,r3,2
410417e8:	d8c02a15 	stw	r3,168(sp)
410417ec:	90c0210c 	andi	r3,r18,132
410417f0:	d8c03015 	stw	r3,192(sp)
410417f4:	1801a31e 	bne	r3,zero,41041e84 <___vfprintf_internal_r+0xe00>
410417f8:	d9003117 	ldw	r4,196(sp)
410417fc:	d8c02a17 	ldw	r3,168(sp)
41041800:	20e7c83a 	sub	r19,r4,r3
41041804:	04c19f0e 	bge	zero,r19,41041e84 <___vfprintf_internal_r+0xe00>
41041808:	02400404 	movi	r9,16
4104180c:	d8c02017 	ldw	r3,128(sp)
41041810:	d8801f17 	ldw	r2,124(sp)
41041814:	4cc50d0e 	bge	r9,r19,41042c4c <___vfprintf_internal_r+0x1bc8>
41041818:	01504174 	movhi	r5,16645
4104181c:	297fc884 	addi	r5,r5,-222
41041820:	dc403b15 	stw	r17,236(sp)
41041824:	d9403515 	stw	r5,212(sp)
41041828:	9823883a 	mov	r17,r19
4104182c:	482d883a 	mov	r22,r9
41041830:	9027883a 	mov	r19,r18
41041834:	070001c4 	movi	fp,7
41041838:	8025883a 	mov	r18,r16
4104183c:	dc002c17 	ldw	r16,176(sp)
41041840:	00000306 	br	41041850 <___vfprintf_internal_r+0x7cc>
41041844:	8c7ffc04 	addi	r17,r17,-16
41041848:	42000204 	addi	r8,r8,8
4104184c:	b440130e 	bge	r22,r17,4104189c <___vfprintf_internal_r+0x818>
41041850:	01104174 	movhi	r4,16645
41041854:	18c00404 	addi	r3,r3,16
41041858:	10800044 	addi	r2,r2,1
4104185c:	213fc884 	addi	r4,r4,-222
41041860:	41000015 	stw	r4,0(r8)
41041864:	45800115 	stw	r22,4(r8)
41041868:	d8c02015 	stw	r3,128(sp)
4104186c:	d8801f15 	stw	r2,124(sp)
41041870:	e0bff40e 	bge	fp,r2,41041844 <__alt_data_end+0xfffc3044>
41041874:	d9801e04 	addi	r6,sp,120
41041878:	b80b883a 	mov	r5,r23
4104187c:	8009883a 	mov	r4,r16
41041880:	10486a00 	call	410486a0 <__sprint_r>
41041884:	103f011e 	bne	r2,zero,4104148c <__alt_data_end+0xfffc2c8c>
41041888:	8c7ffc04 	addi	r17,r17,-16
4104188c:	d8c02017 	ldw	r3,128(sp)
41041890:	d8801f17 	ldw	r2,124(sp)
41041894:	da000404 	addi	r8,sp,16
41041898:	b47fed16 	blt	r22,r17,41041850 <__alt_data_end+0xfffc3050>
4104189c:	9021883a 	mov	r16,r18
410418a0:	9825883a 	mov	r18,r19
410418a4:	8827883a 	mov	r19,r17
410418a8:	dc403b17 	ldw	r17,236(sp)
410418ac:	d9403517 	ldw	r5,212(sp)
410418b0:	98c7883a 	add	r3,r19,r3
410418b4:	10800044 	addi	r2,r2,1
410418b8:	41400015 	stw	r5,0(r8)
410418bc:	44c00115 	stw	r19,4(r8)
410418c0:	d8c02015 	stw	r3,128(sp)
410418c4:	d8801f15 	stw	r2,124(sp)
410418c8:	010001c4 	movi	r4,7
410418cc:	2082a316 	blt	r4,r2,4104235c <___vfprintf_internal_r+0x12d8>
410418d0:	df002787 	ldb	fp,158(sp)
410418d4:	42000204 	addi	r8,r8,8
410418d8:	e0000c26 	beq	fp,zero,4104190c <___vfprintf_internal_r+0x888>
410418dc:	d8801f17 	ldw	r2,124(sp)
410418e0:	d9002784 	addi	r4,sp,158
410418e4:	18c00044 	addi	r3,r3,1
410418e8:	10800044 	addi	r2,r2,1
410418ec:	41000015 	stw	r4,0(r8)
410418f0:	01000044 	movi	r4,1
410418f4:	41000115 	stw	r4,4(r8)
410418f8:	d8c02015 	stw	r3,128(sp)
410418fc:	d8801f15 	stw	r2,124(sp)
41041900:	010001c4 	movi	r4,7
41041904:	20823c16 	blt	r4,r2,410421f8 <___vfprintf_internal_r+0x1174>
41041908:	42000204 	addi	r8,r8,8
4104190c:	d8802b17 	ldw	r2,172(sp)
41041910:	10000c26 	beq	r2,zero,41041944 <___vfprintf_internal_r+0x8c0>
41041914:	d8801f17 	ldw	r2,124(sp)
41041918:	d9002704 	addi	r4,sp,156
4104191c:	18c00084 	addi	r3,r3,2
41041920:	10800044 	addi	r2,r2,1
41041924:	41000015 	stw	r4,0(r8)
41041928:	01000084 	movi	r4,2
4104192c:	41000115 	stw	r4,4(r8)
41041930:	d8c02015 	stw	r3,128(sp)
41041934:	d8801f15 	stw	r2,124(sp)
41041938:	010001c4 	movi	r4,7
4104193c:	20823616 	blt	r4,r2,41042218 <___vfprintf_internal_r+0x1194>
41041940:	42000204 	addi	r8,r8,8
41041944:	d9003017 	ldw	r4,192(sp)
41041948:	00802004 	movi	r2,128
4104194c:	20819926 	beq	r4,r2,41041fb4 <___vfprintf_internal_r+0xf30>
41041950:	d9402917 	ldw	r5,164(sp)
41041954:	d8802e17 	ldw	r2,184(sp)
41041958:	28adc83a 	sub	r22,r5,r2
4104195c:	0580310e 	bge	zero,r22,41041a24 <___vfprintf_internal_r+0x9a0>
41041960:	07000404 	movi	fp,16
41041964:	d8801f17 	ldw	r2,124(sp)
41041968:	e584140e 	bge	fp,r22,410429bc <___vfprintf_internal_r+0x1938>
4104196c:	01504174 	movhi	r5,16645
41041970:	297fc484 	addi	r5,r5,-238
41041974:	dc402915 	stw	r17,164(sp)
41041978:	d9402b15 	stw	r5,172(sp)
4104197c:	b023883a 	mov	r17,r22
41041980:	04c001c4 	movi	r19,7
41041984:	a82d883a 	mov	r22,r21
41041988:	902b883a 	mov	r21,r18
4104198c:	8025883a 	mov	r18,r16
41041990:	dc002c17 	ldw	r16,176(sp)
41041994:	00000306 	br	410419a4 <___vfprintf_internal_r+0x920>
41041998:	8c7ffc04 	addi	r17,r17,-16
4104199c:	42000204 	addi	r8,r8,8
410419a0:	e440110e 	bge	fp,r17,410419e8 <___vfprintf_internal_r+0x964>
410419a4:	18c00404 	addi	r3,r3,16
410419a8:	10800044 	addi	r2,r2,1
410419ac:	45000015 	stw	r20,0(r8)
410419b0:	47000115 	stw	fp,4(r8)
410419b4:	d8c02015 	stw	r3,128(sp)
410419b8:	d8801f15 	stw	r2,124(sp)
410419bc:	98bff60e 	bge	r19,r2,41041998 <__alt_data_end+0xfffc3198>
410419c0:	d9801e04 	addi	r6,sp,120
410419c4:	b80b883a 	mov	r5,r23
410419c8:	8009883a 	mov	r4,r16
410419cc:	10486a00 	call	410486a0 <__sprint_r>
410419d0:	103eae1e 	bne	r2,zero,4104148c <__alt_data_end+0xfffc2c8c>
410419d4:	8c7ffc04 	addi	r17,r17,-16
410419d8:	d8c02017 	ldw	r3,128(sp)
410419dc:	d8801f17 	ldw	r2,124(sp)
410419e0:	da000404 	addi	r8,sp,16
410419e4:	e47fef16 	blt	fp,r17,410419a4 <__alt_data_end+0xfffc31a4>
410419e8:	9021883a 	mov	r16,r18
410419ec:	a825883a 	mov	r18,r21
410419f0:	b02b883a 	mov	r21,r22
410419f4:	882d883a 	mov	r22,r17
410419f8:	dc402917 	ldw	r17,164(sp)
410419fc:	d9002b17 	ldw	r4,172(sp)
41041a00:	1d87883a 	add	r3,r3,r22
41041a04:	10800044 	addi	r2,r2,1
41041a08:	41000015 	stw	r4,0(r8)
41041a0c:	45800115 	stw	r22,4(r8)
41041a10:	d8c02015 	stw	r3,128(sp)
41041a14:	d8801f15 	stw	r2,124(sp)
41041a18:	010001c4 	movi	r4,7
41041a1c:	2081ee16 	blt	r4,r2,410421d8 <___vfprintf_internal_r+0x1154>
41041a20:	42000204 	addi	r8,r8,8
41041a24:	9080400c 	andi	r2,r18,256
41041a28:	1001181e 	bne	r2,zero,41041e8c <___vfprintf_internal_r+0xe08>
41041a2c:	d9402e17 	ldw	r5,184(sp)
41041a30:	d8801f17 	ldw	r2,124(sp)
41041a34:	44000015 	stw	r16,0(r8)
41041a38:	1947883a 	add	r3,r3,r5
41041a3c:	10800044 	addi	r2,r2,1
41041a40:	41400115 	stw	r5,4(r8)
41041a44:	d8c02015 	stw	r3,128(sp)
41041a48:	d8801f15 	stw	r2,124(sp)
41041a4c:	010001c4 	movi	r4,7
41041a50:	2081d316 	blt	r4,r2,410421a0 <___vfprintf_internal_r+0x111c>
41041a54:	42000204 	addi	r8,r8,8
41041a58:	9480010c 	andi	r18,r18,4
41041a5c:	90003226 	beq	r18,zero,41041b28 <___vfprintf_internal_r+0xaa4>
41041a60:	d9403117 	ldw	r5,196(sp)
41041a64:	d8802a17 	ldw	r2,168(sp)
41041a68:	28a1c83a 	sub	r16,r5,r2
41041a6c:	04002e0e 	bge	zero,r16,41041b28 <___vfprintf_internal_r+0xaa4>
41041a70:	04400404 	movi	r17,16
41041a74:	d8801f17 	ldw	r2,124(sp)
41041a78:	8c04a20e 	bge	r17,r16,41042d04 <___vfprintf_internal_r+0x1c80>
41041a7c:	01504174 	movhi	r5,16645
41041a80:	297fc884 	addi	r5,r5,-222
41041a84:	d9403515 	stw	r5,212(sp)
41041a88:	048001c4 	movi	r18,7
41041a8c:	dcc02c17 	ldw	r19,176(sp)
41041a90:	00000306 	br	41041aa0 <___vfprintf_internal_r+0xa1c>
41041a94:	843ffc04 	addi	r16,r16,-16
41041a98:	42000204 	addi	r8,r8,8
41041a9c:	8c00130e 	bge	r17,r16,41041aec <___vfprintf_internal_r+0xa68>
41041aa0:	01104174 	movhi	r4,16645
41041aa4:	18c00404 	addi	r3,r3,16
41041aa8:	10800044 	addi	r2,r2,1
41041aac:	213fc884 	addi	r4,r4,-222
41041ab0:	41000015 	stw	r4,0(r8)
41041ab4:	44400115 	stw	r17,4(r8)
41041ab8:	d8c02015 	stw	r3,128(sp)
41041abc:	d8801f15 	stw	r2,124(sp)
41041ac0:	90bff40e 	bge	r18,r2,41041a94 <__alt_data_end+0xfffc3294>
41041ac4:	d9801e04 	addi	r6,sp,120
41041ac8:	b80b883a 	mov	r5,r23
41041acc:	9809883a 	mov	r4,r19
41041ad0:	10486a00 	call	410486a0 <__sprint_r>
41041ad4:	103e6d1e 	bne	r2,zero,4104148c <__alt_data_end+0xfffc2c8c>
41041ad8:	843ffc04 	addi	r16,r16,-16
41041adc:	d8c02017 	ldw	r3,128(sp)
41041ae0:	d8801f17 	ldw	r2,124(sp)
41041ae4:	da000404 	addi	r8,sp,16
41041ae8:	8c3fed16 	blt	r17,r16,41041aa0 <__alt_data_end+0xfffc32a0>
41041aec:	d9403517 	ldw	r5,212(sp)
41041af0:	1c07883a 	add	r3,r3,r16
41041af4:	10800044 	addi	r2,r2,1
41041af8:	41400015 	stw	r5,0(r8)
41041afc:	44000115 	stw	r16,4(r8)
41041b00:	d8c02015 	stw	r3,128(sp)
41041b04:	d8801f15 	stw	r2,124(sp)
41041b08:	010001c4 	movi	r4,7
41041b0c:	2080060e 	bge	r4,r2,41041b28 <___vfprintf_internal_r+0xaa4>
41041b10:	d9002c17 	ldw	r4,176(sp)
41041b14:	d9801e04 	addi	r6,sp,120
41041b18:	b80b883a 	mov	r5,r23
41041b1c:	10486a00 	call	410486a0 <__sprint_r>
41041b20:	103e5a1e 	bne	r2,zero,4104148c <__alt_data_end+0xfffc2c8c>
41041b24:	d8c02017 	ldw	r3,128(sp)
41041b28:	d8803117 	ldw	r2,196(sp)
41041b2c:	d9002a17 	ldw	r4,168(sp)
41041b30:	1100010e 	bge	r2,r4,41041b38 <___vfprintf_internal_r+0xab4>
41041b34:	2005883a 	mov	r2,r4
41041b38:	d9402f17 	ldw	r5,188(sp)
41041b3c:	288b883a 	add	r5,r5,r2
41041b40:	d9402f15 	stw	r5,188(sp)
41041b44:	18019e1e 	bne	r3,zero,410421c0 <___vfprintf_internal_r+0x113c>
41041b48:	a8800007 	ldb	r2,0(r21)
41041b4c:	d8001f15 	stw	zero,124(sp)
41041b50:	da000404 	addi	r8,sp,16
41041b54:	103d851e 	bne	r2,zero,4104116c <__alt_data_end+0xfffc296c>
41041b58:	a821883a 	mov	r16,r21
41041b5c:	003d9b06 	br	410411cc <__alt_data_end+0xfffc29cc>
41041b60:	18c03fcc 	andi	r3,r3,255
41041b64:	1805c11e 	bne	r3,zero,4104326c <___vfprintf_internal_r+0x21e8>
41041b68:	94800414 	ori	r18,r18,16
41041b6c:	9080080c 	andi	r2,r18,32
41041b70:	10020c26 	beq	r2,zero,410423a4 <___vfprintf_internal_r+0x1320>
41041b74:	d8802d17 	ldw	r2,180(sp)
41041b78:	d9002917 	ldw	r4,164(sp)
41041b7c:	d8002785 	stb	zero,158(sp)
41041b80:	10c00204 	addi	r3,r2,8
41041b84:	14c00017 	ldw	r19,0(r2)
41041b88:	15800117 	ldw	r22,4(r2)
41041b8c:	20040f16 	blt	r4,zero,41042bcc <___vfprintf_internal_r+0x1b48>
41041b90:	013fdfc4 	movi	r4,-129
41041b94:	9d84b03a 	or	r2,r19,r22
41041b98:	d8c02d15 	stw	r3,180(sp)
41041b9c:	9124703a 	and	r18,r18,r4
41041ba0:	0039883a 	mov	fp,zero
41041ba4:	103e891e 	bne	r2,zero,410415cc <__alt_data_end+0xfffc2dcc>
41041ba8:	d9002917 	ldw	r4,164(sp)
41041bac:	2002c11e 	bne	r4,zero,410426b4 <___vfprintf_internal_r+0x1630>
41041bb0:	d8002915 	stw	zero,164(sp)
41041bb4:	d8002e15 	stw	zero,184(sp)
41041bb8:	dc001e04 	addi	r16,sp,120
41041bbc:	003ef806 	br	410417a0 <__alt_data_end+0xfffc2fa0>
41041bc0:	18c03fcc 	andi	r3,r3,255
41041bc4:	18059d1e 	bne	r3,zero,4104323c <___vfprintf_internal_r+0x21b8>
41041bc8:	01504174 	movhi	r5,16645
41041bcc:	297fb804 	addi	r5,r5,-288
41041bd0:	d9403915 	stw	r5,228(sp)
41041bd4:	9080080c 	andi	r2,r18,32
41041bd8:	10005226 	beq	r2,zero,41041d24 <___vfprintf_internal_r+0xca0>
41041bdc:	d8802d17 	ldw	r2,180(sp)
41041be0:	14c00017 	ldw	r19,0(r2)
41041be4:	15800117 	ldw	r22,4(r2)
41041be8:	10800204 	addi	r2,r2,8
41041bec:	d8802d15 	stw	r2,180(sp)
41041bf0:	9080004c 	andi	r2,r18,1
41041bf4:	10019026 	beq	r2,zero,41042238 <___vfprintf_internal_r+0x11b4>
41041bf8:	9d84b03a 	or	r2,r19,r22
41041bfc:	10036926 	beq	r2,zero,410429a4 <___vfprintf_internal_r+0x1920>
41041c00:	d8c02917 	ldw	r3,164(sp)
41041c04:	00800c04 	movi	r2,48
41041c08:	d8802705 	stb	r2,156(sp)
41041c0c:	dc402745 	stb	r17,157(sp)
41041c10:	d8002785 	stb	zero,158(sp)
41041c14:	90800094 	ori	r2,r18,2
41041c18:	18045d16 	blt	r3,zero,41042d90 <___vfprintf_internal_r+0x1d0c>
41041c1c:	00bfdfc4 	movi	r2,-129
41041c20:	90a4703a 	and	r18,r18,r2
41041c24:	94800094 	ori	r18,r18,2
41041c28:	0039883a 	mov	fp,zero
41041c2c:	d9003917 	ldw	r4,228(sp)
41041c30:	dc001e04 	addi	r16,sp,120
41041c34:	988003cc 	andi	r2,r19,15
41041c38:	b006973a 	slli	r3,r22,28
41041c3c:	2085883a 	add	r2,r4,r2
41041c40:	9826d13a 	srli	r19,r19,4
41041c44:	10800003 	ldbu	r2,0(r2)
41041c48:	b02cd13a 	srli	r22,r22,4
41041c4c:	843fffc4 	addi	r16,r16,-1
41041c50:	1ce6b03a 	or	r19,r3,r19
41041c54:	80800005 	stb	r2,0(r16)
41041c58:	9d84b03a 	or	r2,r19,r22
41041c5c:	103ff51e 	bne	r2,zero,41041c34 <__alt_data_end+0xfffc3434>
41041c60:	d8c02817 	ldw	r3,160(sp)
41041c64:	1c07c83a 	sub	r3,r3,r16
41041c68:	d8c02e15 	stw	r3,184(sp)
41041c6c:	003ecc06 	br	410417a0 <__alt_data_end+0xfffc2fa0>
41041c70:	18c03fcc 	andi	r3,r3,255
41041c74:	183e9f26 	beq	r3,zero,410416f4 <__alt_data_end+0xfffc2ef4>
41041c78:	d9c02785 	stb	r7,158(sp)
41041c7c:	003e9d06 	br	410416f4 <__alt_data_end+0xfffc2ef4>
41041c80:	00c00044 	movi	r3,1
41041c84:	01c00ac4 	movi	r7,43
41041c88:	ac400007 	ldb	r17,0(r21)
41041c8c:	003d5e06 	br	41041208 <__alt_data_end+0xfffc2a08>
41041c90:	94800814 	ori	r18,r18,32
41041c94:	ac400007 	ldb	r17,0(r21)
41041c98:	003d5b06 	br	41041208 <__alt_data_end+0xfffc2a08>
41041c9c:	d8c02d17 	ldw	r3,180(sp)
41041ca0:	d8002785 	stb	zero,158(sp)
41041ca4:	1c000017 	ldw	r16,0(r3)
41041ca8:	1cc00104 	addi	r19,r3,4
41041cac:	80041926 	beq	r16,zero,41042d14 <___vfprintf_internal_r+0x1c90>
41041cb0:	d9002917 	ldw	r4,164(sp)
41041cb4:	2003d016 	blt	r4,zero,41042bf8 <___vfprintf_internal_r+0x1b74>
41041cb8:	200d883a 	mov	r6,r4
41041cbc:	000b883a 	mov	r5,zero
41041cc0:	8009883a 	mov	r4,r16
41041cc4:	da003d15 	stw	r8,244(sp)
41041cc8:	10468940 	call	41046894 <memchr>
41041ccc:	da003d17 	ldw	r8,244(sp)
41041cd0:	10045426 	beq	r2,zero,41042e24 <___vfprintf_internal_r+0x1da0>
41041cd4:	1405c83a 	sub	r2,r2,r16
41041cd8:	d8802e15 	stw	r2,184(sp)
41041cdc:	1003cc16 	blt	r2,zero,41042c10 <___vfprintf_internal_r+0x1b8c>
41041ce0:	df002783 	ldbu	fp,158(sp)
41041ce4:	d8802a15 	stw	r2,168(sp)
41041ce8:	dcc02d15 	stw	r19,180(sp)
41041cec:	d8002915 	stw	zero,164(sp)
41041cf0:	d8003215 	stw	zero,200(sp)
41041cf4:	003eb006 	br	410417b8 <__alt_data_end+0xfffc2fb8>
41041cf8:	18c03fcc 	andi	r3,r3,255
41041cfc:	183f9b26 	beq	r3,zero,41041b6c <__alt_data_end+0xfffc336c>
41041d00:	d9c02785 	stb	r7,158(sp)
41041d04:	003f9906 	br	41041b6c <__alt_data_end+0xfffc336c>
41041d08:	18c03fcc 	andi	r3,r3,255
41041d0c:	1805551e 	bne	r3,zero,41043264 <___vfprintf_internal_r+0x21e0>
41041d10:	01504174 	movhi	r5,16645
41041d14:	297fbd04 	addi	r5,r5,-268
41041d18:	d9403915 	stw	r5,228(sp)
41041d1c:	9080080c 	andi	r2,r18,32
41041d20:	103fae1e 	bne	r2,zero,41041bdc <__alt_data_end+0xfffc33dc>
41041d24:	9080040c 	andi	r2,r18,16
41041d28:	1002de26 	beq	r2,zero,410428a4 <___vfprintf_internal_r+0x1820>
41041d2c:	d8c02d17 	ldw	r3,180(sp)
41041d30:	002d883a 	mov	r22,zero
41041d34:	1cc00017 	ldw	r19,0(r3)
41041d38:	18c00104 	addi	r3,r3,4
41041d3c:	d8c02d15 	stw	r3,180(sp)
41041d40:	003fab06 	br	41041bf0 <__alt_data_end+0xfffc33f0>
41041d44:	38803fcc 	andi	r2,r7,255
41041d48:	1080201c 	xori	r2,r2,128
41041d4c:	10bfe004 	addi	r2,r2,-128
41041d50:	1002d21e 	bne	r2,zero,4104289c <___vfprintf_internal_r+0x1818>
41041d54:	00c00044 	movi	r3,1
41041d58:	01c00804 	movi	r7,32
41041d5c:	ac400007 	ldb	r17,0(r21)
41041d60:	003d2906 	br	41041208 <__alt_data_end+0xfffc2a08>
41041d64:	94800054 	ori	r18,r18,1
41041d68:	ac400007 	ldb	r17,0(r21)
41041d6c:	003d2606 	br	41041208 <__alt_data_end+0xfffc2a08>
41041d70:	18c03fcc 	andi	r3,r3,255
41041d74:	183e0526 	beq	r3,zero,4104158c <__alt_data_end+0xfffc2d8c>
41041d78:	d9c02785 	stb	r7,158(sp)
41041d7c:	003e0306 	br	4104158c <__alt_data_end+0xfffc2d8c>
41041d80:	94801014 	ori	r18,r18,64
41041d84:	ac400007 	ldb	r17,0(r21)
41041d88:	003d1f06 	br	41041208 <__alt_data_end+0xfffc2a08>
41041d8c:	ac400007 	ldb	r17,0(r21)
41041d90:	8a438726 	beq	r17,r9,41042bb0 <___vfprintf_internal_r+0x1b2c>
41041d94:	94800414 	ori	r18,r18,16
41041d98:	003d1b06 	br	41041208 <__alt_data_end+0xfffc2a08>
41041d9c:	18c03fcc 	andi	r3,r3,255
41041da0:	1805341e 	bne	r3,zero,41043274 <___vfprintf_internal_r+0x21f0>
41041da4:	9080080c 	andi	r2,r18,32
41041da8:	1002cd26 	beq	r2,zero,410428e0 <___vfprintf_internal_r+0x185c>
41041dac:	d9402d17 	ldw	r5,180(sp)
41041db0:	d9002f17 	ldw	r4,188(sp)
41041db4:	28800017 	ldw	r2,0(r5)
41041db8:	2007d7fa 	srai	r3,r4,31
41041dbc:	29400104 	addi	r5,r5,4
41041dc0:	d9402d15 	stw	r5,180(sp)
41041dc4:	11000015 	stw	r4,0(r2)
41041dc8:	10c00115 	stw	r3,4(r2)
41041dcc:	003ce506 	br	41041164 <__alt_data_end+0xfffc2964>
41041dd0:	d8c02d17 	ldw	r3,180(sp)
41041dd4:	d9002d17 	ldw	r4,180(sp)
41041dd8:	d8002785 	stb	zero,158(sp)
41041ddc:	18800017 	ldw	r2,0(r3)
41041de0:	21000104 	addi	r4,r4,4
41041de4:	00c00044 	movi	r3,1
41041de8:	d8c02a15 	stw	r3,168(sp)
41041dec:	d8801405 	stb	r2,80(sp)
41041df0:	d9002d15 	stw	r4,180(sp)
41041df4:	d8c02e15 	stw	r3,184(sp)
41041df8:	d8002915 	stw	zero,164(sp)
41041dfc:	d8003215 	stw	zero,200(sp)
41041e00:	dc001404 	addi	r16,sp,80
41041e04:	0039883a 	mov	fp,zero
41041e08:	003e7206 	br	410417d4 <__alt_data_end+0xfffc2fd4>
41041e0c:	01104174 	movhi	r4,16645
41041e10:	213fbd04 	addi	r4,r4,-268
41041e14:	0039883a 	mov	fp,zero
41041e18:	d9003915 	stw	r4,228(sp)
41041e1c:	04401e04 	movi	r17,120
41041e20:	003f8206 	br	41041c2c <__alt_data_end+0xfffc342c>
41041e24:	18c03fcc 	andi	r3,r3,255
41041e28:	1805061e 	bne	r3,zero,41043244 <___vfprintf_internal_r+0x21c0>
41041e2c:	883d9126 	beq	r17,zero,41041474 <__alt_data_end+0xfffc2c74>
41041e30:	00c00044 	movi	r3,1
41041e34:	d8c02a15 	stw	r3,168(sp)
41041e38:	dc401405 	stb	r17,80(sp)
41041e3c:	d8002785 	stb	zero,158(sp)
41041e40:	003fec06 	br	41041df4 <__alt_data_end+0xfffc35f4>
41041e44:	01504174 	movhi	r5,16645
41041e48:	297fbd04 	addi	r5,r5,-268
41041e4c:	d9403915 	stw	r5,228(sp)
41041e50:	d8c02d15 	stw	r3,180(sp)
41041e54:	1025883a 	mov	r18,r2
41041e58:	04401e04 	movi	r17,120
41041e5c:	9d84b03a 	or	r2,r19,r22
41041e60:	1000fc1e 	bne	r2,zero,41042254 <___vfprintf_internal_r+0x11d0>
41041e64:	0039883a 	mov	fp,zero
41041e68:	00800084 	movi	r2,2
41041e6c:	10803fcc 	andi	r2,r2,255
41041e70:	00c00044 	movi	r3,1
41041e74:	10c20f26 	beq	r2,r3,410426b4 <___vfprintf_internal_r+0x1630>
41041e78:	00c00084 	movi	r3,2
41041e7c:	10fd6326 	beq	r2,r3,4104140c <__alt_data_end+0xfffc2c0c>
41041e80:	003e2d06 	br	41041738 <__alt_data_end+0xfffc2f38>
41041e84:	d8c02017 	ldw	r3,128(sp)
41041e88:	003e9306 	br	410418d8 <__alt_data_end+0xfffc30d8>
41041e8c:	00801944 	movi	r2,101
41041e90:	14407e0e 	bge	r2,r17,4104208c <___vfprintf_internal_r+0x1008>
41041e94:	d9003617 	ldw	r4,216(sp)
41041e98:	d9403817 	ldw	r5,224(sp)
41041e9c:	000d883a 	mov	r6,zero
41041ea0:	000f883a 	mov	r7,zero
41041ea4:	d8c03c15 	stw	r3,240(sp)
41041ea8:	da003d15 	stw	r8,244(sp)
41041eac:	104c1640 	call	4104c164 <__eqdf2>
41041eb0:	d8c03c17 	ldw	r3,240(sp)
41041eb4:	da003d17 	ldw	r8,244(sp)
41041eb8:	1000f71e 	bne	r2,zero,41042298 <___vfprintf_internal_r+0x1214>
41041ebc:	d8801f17 	ldw	r2,124(sp)
41041ec0:	01104174 	movhi	r4,16645
41041ec4:	213fc404 	addi	r4,r4,-240
41041ec8:	18c00044 	addi	r3,r3,1
41041ecc:	10800044 	addi	r2,r2,1
41041ed0:	41000015 	stw	r4,0(r8)
41041ed4:	01000044 	movi	r4,1
41041ed8:	41000115 	stw	r4,4(r8)
41041edc:	d8c02015 	stw	r3,128(sp)
41041ee0:	d8801f15 	stw	r2,124(sp)
41041ee4:	010001c4 	movi	r4,7
41041ee8:	2082b816 	blt	r4,r2,410429cc <___vfprintf_internal_r+0x1948>
41041eec:	42000204 	addi	r8,r8,8
41041ef0:	d8802617 	ldw	r2,152(sp)
41041ef4:	d9403317 	ldw	r5,204(sp)
41041ef8:	11400216 	blt	r2,r5,41041f04 <___vfprintf_internal_r+0xe80>
41041efc:	9080004c 	andi	r2,r18,1
41041f00:	103ed526 	beq	r2,zero,41041a58 <__alt_data_end+0xfffc3258>
41041f04:	d8803717 	ldw	r2,220(sp)
41041f08:	d9003417 	ldw	r4,208(sp)
41041f0c:	d9403717 	ldw	r5,220(sp)
41041f10:	1887883a 	add	r3,r3,r2
41041f14:	d8801f17 	ldw	r2,124(sp)
41041f18:	41000015 	stw	r4,0(r8)
41041f1c:	41400115 	stw	r5,4(r8)
41041f20:	10800044 	addi	r2,r2,1
41041f24:	d8c02015 	stw	r3,128(sp)
41041f28:	d8801f15 	stw	r2,124(sp)
41041f2c:	010001c4 	movi	r4,7
41041f30:	20832916 	blt	r4,r2,41042bd8 <___vfprintf_internal_r+0x1b54>
41041f34:	42000204 	addi	r8,r8,8
41041f38:	d8803317 	ldw	r2,204(sp)
41041f3c:	143fffc4 	addi	r16,r2,-1
41041f40:	043ec50e 	bge	zero,r16,41041a58 <__alt_data_end+0xfffc3258>
41041f44:	04400404 	movi	r17,16
41041f48:	d8801f17 	ldw	r2,124(sp)
41041f4c:	8c00880e 	bge	r17,r16,41042170 <___vfprintf_internal_r+0x10ec>
41041f50:	01504174 	movhi	r5,16645
41041f54:	297fc484 	addi	r5,r5,-238
41041f58:	d9402b15 	stw	r5,172(sp)
41041f5c:	058001c4 	movi	r22,7
41041f60:	dcc02c17 	ldw	r19,176(sp)
41041f64:	00000306 	br	41041f74 <___vfprintf_internal_r+0xef0>
41041f68:	42000204 	addi	r8,r8,8
41041f6c:	843ffc04 	addi	r16,r16,-16
41041f70:	8c00820e 	bge	r17,r16,4104217c <___vfprintf_internal_r+0x10f8>
41041f74:	18c00404 	addi	r3,r3,16
41041f78:	10800044 	addi	r2,r2,1
41041f7c:	45000015 	stw	r20,0(r8)
41041f80:	44400115 	stw	r17,4(r8)
41041f84:	d8c02015 	stw	r3,128(sp)
41041f88:	d8801f15 	stw	r2,124(sp)
41041f8c:	b0bff60e 	bge	r22,r2,41041f68 <__alt_data_end+0xfffc3768>
41041f90:	d9801e04 	addi	r6,sp,120
41041f94:	b80b883a 	mov	r5,r23
41041f98:	9809883a 	mov	r4,r19
41041f9c:	10486a00 	call	410486a0 <__sprint_r>
41041fa0:	103d3a1e 	bne	r2,zero,4104148c <__alt_data_end+0xfffc2c8c>
41041fa4:	d8c02017 	ldw	r3,128(sp)
41041fa8:	d8801f17 	ldw	r2,124(sp)
41041fac:	da000404 	addi	r8,sp,16
41041fb0:	003fee06 	br	41041f6c <__alt_data_end+0xfffc376c>
41041fb4:	d9403117 	ldw	r5,196(sp)
41041fb8:	d8802a17 	ldw	r2,168(sp)
41041fbc:	28adc83a 	sub	r22,r5,r2
41041fc0:	05be630e 	bge	zero,r22,41041950 <__alt_data_end+0xfffc3150>
41041fc4:	07000404 	movi	fp,16
41041fc8:	d8801f17 	ldw	r2,124(sp)
41041fcc:	e5838f0e 	bge	fp,r22,41042e0c <___vfprintf_internal_r+0x1d88>
41041fd0:	01504174 	movhi	r5,16645
41041fd4:	297fc484 	addi	r5,r5,-238
41041fd8:	dc403015 	stw	r17,192(sp)
41041fdc:	d9402b15 	stw	r5,172(sp)
41041fe0:	b023883a 	mov	r17,r22
41041fe4:	04c001c4 	movi	r19,7
41041fe8:	a82d883a 	mov	r22,r21
41041fec:	902b883a 	mov	r21,r18
41041ff0:	8025883a 	mov	r18,r16
41041ff4:	dc002c17 	ldw	r16,176(sp)
41041ff8:	00000306 	br	41042008 <___vfprintf_internal_r+0xf84>
41041ffc:	8c7ffc04 	addi	r17,r17,-16
41042000:	42000204 	addi	r8,r8,8
41042004:	e440110e 	bge	fp,r17,4104204c <___vfprintf_internal_r+0xfc8>
41042008:	18c00404 	addi	r3,r3,16
4104200c:	10800044 	addi	r2,r2,1
41042010:	45000015 	stw	r20,0(r8)
41042014:	47000115 	stw	fp,4(r8)
41042018:	d8c02015 	stw	r3,128(sp)
4104201c:	d8801f15 	stw	r2,124(sp)
41042020:	98bff60e 	bge	r19,r2,41041ffc <__alt_data_end+0xfffc37fc>
41042024:	d9801e04 	addi	r6,sp,120
41042028:	b80b883a 	mov	r5,r23
4104202c:	8009883a 	mov	r4,r16
41042030:	10486a00 	call	410486a0 <__sprint_r>
41042034:	103d151e 	bne	r2,zero,4104148c <__alt_data_end+0xfffc2c8c>
41042038:	8c7ffc04 	addi	r17,r17,-16
4104203c:	d8c02017 	ldw	r3,128(sp)
41042040:	d8801f17 	ldw	r2,124(sp)
41042044:	da000404 	addi	r8,sp,16
41042048:	e47fef16 	blt	fp,r17,41042008 <__alt_data_end+0xfffc3808>
4104204c:	9021883a 	mov	r16,r18
41042050:	a825883a 	mov	r18,r21
41042054:	b02b883a 	mov	r21,r22
41042058:	882d883a 	mov	r22,r17
4104205c:	dc403017 	ldw	r17,192(sp)
41042060:	d9002b17 	ldw	r4,172(sp)
41042064:	1d87883a 	add	r3,r3,r22
41042068:	10800044 	addi	r2,r2,1
4104206c:	41000015 	stw	r4,0(r8)
41042070:	45800115 	stw	r22,4(r8)
41042074:	d8c02015 	stw	r3,128(sp)
41042078:	d8801f15 	stw	r2,124(sp)
4104207c:	010001c4 	movi	r4,7
41042080:	20818e16 	blt	r4,r2,410426bc <___vfprintf_internal_r+0x1638>
41042084:	42000204 	addi	r8,r8,8
41042088:	003e3106 	br	41041950 <__alt_data_end+0xfffc3150>
4104208c:	d9403317 	ldw	r5,204(sp)
41042090:	00800044 	movi	r2,1
41042094:	18c00044 	addi	r3,r3,1
41042098:	1141530e 	bge	r2,r5,410425e8 <___vfprintf_internal_r+0x1564>
4104209c:	dc401f17 	ldw	r17,124(sp)
410420a0:	00800044 	movi	r2,1
410420a4:	40800115 	stw	r2,4(r8)
410420a8:	8c400044 	addi	r17,r17,1
410420ac:	44000015 	stw	r16,0(r8)
410420b0:	d8c02015 	stw	r3,128(sp)
410420b4:	dc401f15 	stw	r17,124(sp)
410420b8:	008001c4 	movi	r2,7
410420bc:	14416b16 	blt	r2,r17,4104266c <___vfprintf_internal_r+0x15e8>
410420c0:	42000204 	addi	r8,r8,8
410420c4:	d8803717 	ldw	r2,220(sp)
410420c8:	d9003417 	ldw	r4,208(sp)
410420cc:	8c400044 	addi	r17,r17,1
410420d0:	10c7883a 	add	r3,r2,r3
410420d4:	40800115 	stw	r2,4(r8)
410420d8:	41000015 	stw	r4,0(r8)
410420dc:	d8c02015 	stw	r3,128(sp)
410420e0:	dc401f15 	stw	r17,124(sp)
410420e4:	008001c4 	movi	r2,7
410420e8:	14416916 	blt	r2,r17,41042690 <___vfprintf_internal_r+0x160c>
410420ec:	45800204 	addi	r22,r8,8
410420f0:	d9003617 	ldw	r4,216(sp)
410420f4:	d9403817 	ldw	r5,224(sp)
410420f8:	000d883a 	mov	r6,zero
410420fc:	000f883a 	mov	r7,zero
41042100:	d8c03c15 	stw	r3,240(sp)
41042104:	104c1640 	call	4104c164 <__eqdf2>
41042108:	d8c03c17 	ldw	r3,240(sp)
4104210c:	1000bc26 	beq	r2,zero,41042400 <___vfprintf_internal_r+0x137c>
41042110:	d9403317 	ldw	r5,204(sp)
41042114:	84000044 	addi	r16,r16,1
41042118:	8c400044 	addi	r17,r17,1
4104211c:	28bfffc4 	addi	r2,r5,-1
41042120:	1887883a 	add	r3,r3,r2
41042124:	b0800115 	stw	r2,4(r22)
41042128:	b4000015 	stw	r16,0(r22)
4104212c:	d8c02015 	stw	r3,128(sp)
41042130:	dc401f15 	stw	r17,124(sp)
41042134:	008001c4 	movi	r2,7
41042138:	14414316 	blt	r2,r17,41042648 <___vfprintf_internal_r+0x15c4>
4104213c:	b5800204 	addi	r22,r22,8
41042140:	d9003a17 	ldw	r4,232(sp)
41042144:	df0022c4 	addi	fp,sp,139
41042148:	8c400044 	addi	r17,r17,1
4104214c:	20c7883a 	add	r3,r4,r3
41042150:	b7000015 	stw	fp,0(r22)
41042154:	b1000115 	stw	r4,4(r22)
41042158:	d8c02015 	stw	r3,128(sp)
4104215c:	dc401f15 	stw	r17,124(sp)
41042160:	008001c4 	movi	r2,7
41042164:	14400e16 	blt	r2,r17,410421a0 <___vfprintf_internal_r+0x111c>
41042168:	b2000204 	addi	r8,r22,8
4104216c:	003e3a06 	br	41041a58 <__alt_data_end+0xfffc3258>
41042170:	01104174 	movhi	r4,16645
41042174:	213fc484 	addi	r4,r4,-238
41042178:	d9002b15 	stw	r4,172(sp)
4104217c:	d9002b17 	ldw	r4,172(sp)
41042180:	1c07883a 	add	r3,r3,r16
41042184:	44000115 	stw	r16,4(r8)
41042188:	41000015 	stw	r4,0(r8)
4104218c:	10800044 	addi	r2,r2,1
41042190:	d8c02015 	stw	r3,128(sp)
41042194:	d8801f15 	stw	r2,124(sp)
41042198:	010001c4 	movi	r4,7
4104219c:	20be2d0e 	bge	r4,r2,41041a54 <__alt_data_end+0xfffc3254>
410421a0:	d9002c17 	ldw	r4,176(sp)
410421a4:	d9801e04 	addi	r6,sp,120
410421a8:	b80b883a 	mov	r5,r23
410421ac:	10486a00 	call	410486a0 <__sprint_r>
410421b0:	103cb61e 	bne	r2,zero,4104148c <__alt_data_end+0xfffc2c8c>
410421b4:	d8c02017 	ldw	r3,128(sp)
410421b8:	da000404 	addi	r8,sp,16
410421bc:	003e2606 	br	41041a58 <__alt_data_end+0xfffc3258>
410421c0:	d9002c17 	ldw	r4,176(sp)
410421c4:	d9801e04 	addi	r6,sp,120
410421c8:	b80b883a 	mov	r5,r23
410421cc:	10486a00 	call	410486a0 <__sprint_r>
410421d0:	103e5d26 	beq	r2,zero,41041b48 <__alt_data_end+0xfffc3348>
410421d4:	003cad06 	br	4104148c <__alt_data_end+0xfffc2c8c>
410421d8:	d9002c17 	ldw	r4,176(sp)
410421dc:	d9801e04 	addi	r6,sp,120
410421e0:	b80b883a 	mov	r5,r23
410421e4:	10486a00 	call	410486a0 <__sprint_r>
410421e8:	103ca81e 	bne	r2,zero,4104148c <__alt_data_end+0xfffc2c8c>
410421ec:	d8c02017 	ldw	r3,128(sp)
410421f0:	da000404 	addi	r8,sp,16
410421f4:	003e0b06 	br	41041a24 <__alt_data_end+0xfffc3224>
410421f8:	d9002c17 	ldw	r4,176(sp)
410421fc:	d9801e04 	addi	r6,sp,120
41042200:	b80b883a 	mov	r5,r23
41042204:	10486a00 	call	410486a0 <__sprint_r>
41042208:	103ca01e 	bne	r2,zero,4104148c <__alt_data_end+0xfffc2c8c>
4104220c:	d8c02017 	ldw	r3,128(sp)
41042210:	da000404 	addi	r8,sp,16
41042214:	003dbd06 	br	4104190c <__alt_data_end+0xfffc310c>
41042218:	d9002c17 	ldw	r4,176(sp)
4104221c:	d9801e04 	addi	r6,sp,120
41042220:	b80b883a 	mov	r5,r23
41042224:	10486a00 	call	410486a0 <__sprint_r>
41042228:	103c981e 	bne	r2,zero,4104148c <__alt_data_end+0xfffc2c8c>
4104222c:	d8c02017 	ldw	r3,128(sp)
41042230:	da000404 	addi	r8,sp,16
41042234:	003dc306 	br	41041944 <__alt_data_end+0xfffc3144>
41042238:	d8802917 	ldw	r2,164(sp)
4104223c:	d8002785 	stb	zero,158(sp)
41042240:	103f0616 	blt	r2,zero,41041e5c <__alt_data_end+0xfffc365c>
41042244:	00ffdfc4 	movi	r3,-129
41042248:	9d84b03a 	or	r2,r19,r22
4104224c:	90e4703a 	and	r18,r18,r3
41042250:	103c6b26 	beq	r2,zero,41041400 <__alt_data_end+0xfffc2c00>
41042254:	0039883a 	mov	fp,zero
41042258:	003e7406 	br	41041c2c <__alt_data_end+0xfffc342c>
4104225c:	9080040c 	andi	r2,r18,16
41042260:	1001b326 	beq	r2,zero,41042930 <___vfprintf_internal_r+0x18ac>
41042264:	d9002d17 	ldw	r4,180(sp)
41042268:	d9402917 	ldw	r5,164(sp)
4104226c:	d8002785 	stb	zero,158(sp)
41042270:	20800104 	addi	r2,r4,4
41042274:	24c00017 	ldw	r19,0(r4)
41042278:	002d883a 	mov	r22,zero
4104227c:	2801b516 	blt	r5,zero,41042954 <___vfprintf_internal_r+0x18d0>
41042280:	00ffdfc4 	movi	r3,-129
41042284:	d8802d15 	stw	r2,180(sp)
41042288:	90e4703a 	and	r18,r18,r3
4104228c:	983d2726 	beq	r19,zero,4104172c <__alt_data_end+0xfffc2f2c>
41042290:	0039883a 	mov	fp,zero
41042294:	003d2a06 	br	41041740 <__alt_data_end+0xfffc2f40>
41042298:	dc402617 	ldw	r17,152(sp)
4104229c:	0441d30e 	bge	zero,r17,410429ec <___vfprintf_internal_r+0x1968>
410422a0:	dc403217 	ldw	r17,200(sp)
410422a4:	d8803317 	ldw	r2,204(sp)
410422a8:	1440010e 	bge	r2,r17,410422b0 <___vfprintf_internal_r+0x122c>
410422ac:	1023883a 	mov	r17,r2
410422b0:	04400a0e 	bge	zero,r17,410422dc <___vfprintf_internal_r+0x1258>
410422b4:	d8801f17 	ldw	r2,124(sp)
410422b8:	1c47883a 	add	r3,r3,r17
410422bc:	44000015 	stw	r16,0(r8)
410422c0:	10800044 	addi	r2,r2,1
410422c4:	44400115 	stw	r17,4(r8)
410422c8:	d8c02015 	stw	r3,128(sp)
410422cc:	d8801f15 	stw	r2,124(sp)
410422d0:	010001c4 	movi	r4,7
410422d4:	20826516 	blt	r4,r2,41042c6c <___vfprintf_internal_r+0x1be8>
410422d8:	42000204 	addi	r8,r8,8
410422dc:	88026116 	blt	r17,zero,41042c64 <___vfprintf_internal_r+0x1be0>
410422e0:	d9003217 	ldw	r4,200(sp)
410422e4:	2463c83a 	sub	r17,r4,r17
410422e8:	04407b0e 	bge	zero,r17,410424d8 <___vfprintf_internal_r+0x1454>
410422ec:	05800404 	movi	r22,16
410422f0:	d8801f17 	ldw	r2,124(sp)
410422f4:	b4419d0e 	bge	r22,r17,4104296c <___vfprintf_internal_r+0x18e8>
410422f8:	01104174 	movhi	r4,16645
410422fc:	213fc484 	addi	r4,r4,-238
41042300:	d9002b15 	stw	r4,172(sp)
41042304:	070001c4 	movi	fp,7
41042308:	dcc02c17 	ldw	r19,176(sp)
4104230c:	00000306 	br	4104231c <___vfprintf_internal_r+0x1298>
41042310:	42000204 	addi	r8,r8,8
41042314:	8c7ffc04 	addi	r17,r17,-16
41042318:	b441970e 	bge	r22,r17,41042978 <___vfprintf_internal_r+0x18f4>
4104231c:	18c00404 	addi	r3,r3,16
41042320:	10800044 	addi	r2,r2,1
41042324:	45000015 	stw	r20,0(r8)
41042328:	45800115 	stw	r22,4(r8)
4104232c:	d8c02015 	stw	r3,128(sp)
41042330:	d8801f15 	stw	r2,124(sp)
41042334:	e0bff60e 	bge	fp,r2,41042310 <__alt_data_end+0xfffc3b10>
41042338:	d9801e04 	addi	r6,sp,120
4104233c:	b80b883a 	mov	r5,r23
41042340:	9809883a 	mov	r4,r19
41042344:	10486a00 	call	410486a0 <__sprint_r>
41042348:	103c501e 	bne	r2,zero,4104148c <__alt_data_end+0xfffc2c8c>
4104234c:	d8c02017 	ldw	r3,128(sp)
41042350:	d8801f17 	ldw	r2,124(sp)
41042354:	da000404 	addi	r8,sp,16
41042358:	003fee06 	br	41042314 <__alt_data_end+0xfffc3b14>
4104235c:	d9002c17 	ldw	r4,176(sp)
41042360:	d9801e04 	addi	r6,sp,120
41042364:	b80b883a 	mov	r5,r23
41042368:	10486a00 	call	410486a0 <__sprint_r>
4104236c:	103c471e 	bne	r2,zero,4104148c <__alt_data_end+0xfffc2c8c>
41042370:	d8c02017 	ldw	r3,128(sp)
41042374:	df002787 	ldb	fp,158(sp)
41042378:	da000404 	addi	r8,sp,16
4104237c:	003d5606 	br	410418d8 <__alt_data_end+0xfffc30d8>
41042380:	9080040c 	andi	r2,r18,16
41042384:	10016126 	beq	r2,zero,4104290c <___vfprintf_internal_r+0x1888>
41042388:	d8802d17 	ldw	r2,180(sp)
4104238c:	14c00017 	ldw	r19,0(r2)
41042390:	10800104 	addi	r2,r2,4
41042394:	d8802d15 	stw	r2,180(sp)
41042398:	982dd7fa 	srai	r22,r19,31
4104239c:	b005883a 	mov	r2,r22
410423a0:	003c8206 	br	410415ac <__alt_data_end+0xfffc2dac>
410423a4:	9080040c 	andi	r2,r18,16
410423a8:	10003526 	beq	r2,zero,41042480 <___vfprintf_internal_r+0x13fc>
410423ac:	d9402d17 	ldw	r5,180(sp)
410423b0:	d8c02917 	ldw	r3,164(sp)
410423b4:	d8002785 	stb	zero,158(sp)
410423b8:	28800104 	addi	r2,r5,4
410423bc:	2cc00017 	ldw	r19,0(r5)
410423c0:	002d883a 	mov	r22,zero
410423c4:	18003716 	blt	r3,zero,410424a4 <___vfprintf_internal_r+0x1420>
410423c8:	00ffdfc4 	movi	r3,-129
410423cc:	d8802d15 	stw	r2,180(sp)
410423d0:	90e4703a 	and	r18,r18,r3
410423d4:	0039883a 	mov	fp,zero
410423d8:	983df326 	beq	r19,zero,41041ba8 <__alt_data_end+0xfffc33a8>
410423dc:	00800244 	movi	r2,9
410423e0:	14fc7b36 	bltu	r2,r19,410415d0 <__alt_data_end+0xfffc2dd0>
410423e4:	d8c02817 	ldw	r3,160(sp)
410423e8:	dc001dc4 	addi	r16,sp,119
410423ec:	9cc00c04 	addi	r19,r19,48
410423f0:	1c07c83a 	sub	r3,r3,r16
410423f4:	dcc01dc5 	stb	r19,119(sp)
410423f8:	d8c02e15 	stw	r3,184(sp)
410423fc:	003ce806 	br	410417a0 <__alt_data_end+0xfffc2fa0>
41042400:	d8803317 	ldw	r2,204(sp)
41042404:	143fffc4 	addi	r16,r2,-1
41042408:	043f4d0e 	bge	zero,r16,41042140 <__alt_data_end+0xfffc3940>
4104240c:	07000404 	movi	fp,16
41042410:	e400810e 	bge	fp,r16,41042618 <___vfprintf_internal_r+0x1594>
41042414:	01504174 	movhi	r5,16645
41042418:	297fc484 	addi	r5,r5,-238
4104241c:	d9402b15 	stw	r5,172(sp)
41042420:	01c001c4 	movi	r7,7
41042424:	dcc02c17 	ldw	r19,176(sp)
41042428:	00000306 	br	41042438 <___vfprintf_internal_r+0x13b4>
4104242c:	b5800204 	addi	r22,r22,8
41042430:	843ffc04 	addi	r16,r16,-16
41042434:	e4007b0e 	bge	fp,r16,41042624 <___vfprintf_internal_r+0x15a0>
41042438:	18c00404 	addi	r3,r3,16
4104243c:	8c400044 	addi	r17,r17,1
41042440:	b5000015 	stw	r20,0(r22)
41042444:	b7000115 	stw	fp,4(r22)
41042448:	d8c02015 	stw	r3,128(sp)
4104244c:	dc401f15 	stw	r17,124(sp)
41042450:	3c7ff60e 	bge	r7,r17,4104242c <__alt_data_end+0xfffc3c2c>
41042454:	d9801e04 	addi	r6,sp,120
41042458:	b80b883a 	mov	r5,r23
4104245c:	9809883a 	mov	r4,r19
41042460:	d9c03c15 	stw	r7,240(sp)
41042464:	10486a00 	call	410486a0 <__sprint_r>
41042468:	d9c03c17 	ldw	r7,240(sp)
4104246c:	103c071e 	bne	r2,zero,4104148c <__alt_data_end+0xfffc2c8c>
41042470:	d8c02017 	ldw	r3,128(sp)
41042474:	dc401f17 	ldw	r17,124(sp)
41042478:	dd800404 	addi	r22,sp,16
4104247c:	003fec06 	br	41042430 <__alt_data_end+0xfffc3c30>
41042480:	9080100c 	andi	r2,r18,64
41042484:	d8002785 	stb	zero,158(sp)
41042488:	10010e26 	beq	r2,zero,410428c4 <___vfprintf_internal_r+0x1840>
4104248c:	d9002d17 	ldw	r4,180(sp)
41042490:	d9402917 	ldw	r5,164(sp)
41042494:	002d883a 	mov	r22,zero
41042498:	20800104 	addi	r2,r4,4
4104249c:	24c0000b 	ldhu	r19,0(r4)
410424a0:	283fc90e 	bge	r5,zero,410423c8 <__alt_data_end+0xfffc3bc8>
410424a4:	d8802d15 	stw	r2,180(sp)
410424a8:	0039883a 	mov	fp,zero
410424ac:	9d84b03a 	or	r2,r19,r22
410424b0:	103c461e 	bne	r2,zero,410415cc <__alt_data_end+0xfffc2dcc>
410424b4:	00800044 	movi	r2,1
410424b8:	003e6c06 	br	41041e6c <__alt_data_end+0xfffc366c>
410424bc:	d9002c17 	ldw	r4,176(sp)
410424c0:	d9801e04 	addi	r6,sp,120
410424c4:	b80b883a 	mov	r5,r23
410424c8:	10486a00 	call	410486a0 <__sprint_r>
410424cc:	103bef1e 	bne	r2,zero,4104148c <__alt_data_end+0xfffc2c8c>
410424d0:	d8c02017 	ldw	r3,128(sp)
410424d4:	da000404 	addi	r8,sp,16
410424d8:	d9003217 	ldw	r4,200(sp)
410424dc:	d8802617 	ldw	r2,152(sp)
410424e0:	d9403317 	ldw	r5,204(sp)
410424e4:	8123883a 	add	r17,r16,r4
410424e8:	11400216 	blt	r2,r5,410424f4 <___vfprintf_internal_r+0x1470>
410424ec:	9100004c 	andi	r4,r18,1
410424f0:	20000d26 	beq	r4,zero,41042528 <___vfprintf_internal_r+0x14a4>
410424f4:	d9003717 	ldw	r4,220(sp)
410424f8:	d9403417 	ldw	r5,208(sp)
410424fc:	1907883a 	add	r3,r3,r4
41042500:	d9001f17 	ldw	r4,124(sp)
41042504:	41400015 	stw	r5,0(r8)
41042508:	d9403717 	ldw	r5,220(sp)
4104250c:	21000044 	addi	r4,r4,1
41042510:	d8c02015 	stw	r3,128(sp)
41042514:	41400115 	stw	r5,4(r8)
41042518:	d9001f15 	stw	r4,124(sp)
4104251c:	014001c4 	movi	r5,7
41042520:	2901e816 	blt	r5,r4,41042cc4 <___vfprintf_internal_r+0x1c40>
41042524:	42000204 	addi	r8,r8,8
41042528:	d9003317 	ldw	r4,204(sp)
4104252c:	8121883a 	add	r16,r16,r4
41042530:	2085c83a 	sub	r2,r4,r2
41042534:	8461c83a 	sub	r16,r16,r17
41042538:	1400010e 	bge	r2,r16,41042540 <___vfprintf_internal_r+0x14bc>
4104253c:	1021883a 	mov	r16,r2
41042540:	04000a0e 	bge	zero,r16,4104256c <___vfprintf_internal_r+0x14e8>
41042544:	d9001f17 	ldw	r4,124(sp)
41042548:	1c07883a 	add	r3,r3,r16
4104254c:	44400015 	stw	r17,0(r8)
41042550:	21000044 	addi	r4,r4,1
41042554:	44000115 	stw	r16,4(r8)
41042558:	d8c02015 	stw	r3,128(sp)
4104255c:	d9001f15 	stw	r4,124(sp)
41042560:	014001c4 	movi	r5,7
41042564:	2901fb16 	blt	r5,r4,41042d54 <___vfprintf_internal_r+0x1cd0>
41042568:	42000204 	addi	r8,r8,8
4104256c:	8001f716 	blt	r16,zero,41042d4c <___vfprintf_internal_r+0x1cc8>
41042570:	1421c83a 	sub	r16,r2,r16
41042574:	043d380e 	bge	zero,r16,41041a58 <__alt_data_end+0xfffc3258>
41042578:	04400404 	movi	r17,16
4104257c:	d8801f17 	ldw	r2,124(sp)
41042580:	8c3efb0e 	bge	r17,r16,41042170 <__alt_data_end+0xfffc3970>
41042584:	01504174 	movhi	r5,16645
41042588:	297fc484 	addi	r5,r5,-238
4104258c:	d9402b15 	stw	r5,172(sp)
41042590:	058001c4 	movi	r22,7
41042594:	dcc02c17 	ldw	r19,176(sp)
41042598:	00000306 	br	410425a8 <___vfprintf_internal_r+0x1524>
4104259c:	42000204 	addi	r8,r8,8
410425a0:	843ffc04 	addi	r16,r16,-16
410425a4:	8c3ef50e 	bge	r17,r16,4104217c <__alt_data_end+0xfffc397c>
410425a8:	18c00404 	addi	r3,r3,16
410425ac:	10800044 	addi	r2,r2,1
410425b0:	45000015 	stw	r20,0(r8)
410425b4:	44400115 	stw	r17,4(r8)
410425b8:	d8c02015 	stw	r3,128(sp)
410425bc:	d8801f15 	stw	r2,124(sp)
410425c0:	b0bff60e 	bge	r22,r2,4104259c <__alt_data_end+0xfffc3d9c>
410425c4:	d9801e04 	addi	r6,sp,120
410425c8:	b80b883a 	mov	r5,r23
410425cc:	9809883a 	mov	r4,r19
410425d0:	10486a00 	call	410486a0 <__sprint_r>
410425d4:	103bad1e 	bne	r2,zero,4104148c <__alt_data_end+0xfffc2c8c>
410425d8:	d8c02017 	ldw	r3,128(sp)
410425dc:	d8801f17 	ldw	r2,124(sp)
410425e0:	da000404 	addi	r8,sp,16
410425e4:	003fee06 	br	410425a0 <__alt_data_end+0xfffc3da0>
410425e8:	9088703a 	and	r4,r18,r2
410425ec:	203eab1e 	bne	r4,zero,4104209c <__alt_data_end+0xfffc389c>
410425f0:	dc401f17 	ldw	r17,124(sp)
410425f4:	40800115 	stw	r2,4(r8)
410425f8:	44000015 	stw	r16,0(r8)
410425fc:	8c400044 	addi	r17,r17,1
41042600:	d8c02015 	stw	r3,128(sp)
41042604:	dc401f15 	stw	r17,124(sp)
41042608:	008001c4 	movi	r2,7
4104260c:	14400e16 	blt	r2,r17,41042648 <___vfprintf_internal_r+0x15c4>
41042610:	45800204 	addi	r22,r8,8
41042614:	003eca06 	br	41042140 <__alt_data_end+0xfffc3940>
41042618:	01104174 	movhi	r4,16645
4104261c:	213fc484 	addi	r4,r4,-238
41042620:	d9002b15 	stw	r4,172(sp)
41042624:	d8802b17 	ldw	r2,172(sp)
41042628:	1c07883a 	add	r3,r3,r16
4104262c:	8c400044 	addi	r17,r17,1
41042630:	b0800015 	stw	r2,0(r22)
41042634:	b4000115 	stw	r16,4(r22)
41042638:	d8c02015 	stw	r3,128(sp)
4104263c:	dc401f15 	stw	r17,124(sp)
41042640:	008001c4 	movi	r2,7
41042644:	147ebd0e 	bge	r2,r17,4104213c <__alt_data_end+0xfffc393c>
41042648:	d9002c17 	ldw	r4,176(sp)
4104264c:	d9801e04 	addi	r6,sp,120
41042650:	b80b883a 	mov	r5,r23
41042654:	10486a00 	call	410486a0 <__sprint_r>
41042658:	103b8c1e 	bne	r2,zero,4104148c <__alt_data_end+0xfffc2c8c>
4104265c:	d8c02017 	ldw	r3,128(sp)
41042660:	dc401f17 	ldw	r17,124(sp)
41042664:	dd800404 	addi	r22,sp,16
41042668:	003eb506 	br	41042140 <__alt_data_end+0xfffc3940>
4104266c:	d9002c17 	ldw	r4,176(sp)
41042670:	d9801e04 	addi	r6,sp,120
41042674:	b80b883a 	mov	r5,r23
41042678:	10486a00 	call	410486a0 <__sprint_r>
4104267c:	103b831e 	bne	r2,zero,4104148c <__alt_data_end+0xfffc2c8c>
41042680:	d8c02017 	ldw	r3,128(sp)
41042684:	dc401f17 	ldw	r17,124(sp)
41042688:	da000404 	addi	r8,sp,16
4104268c:	003e8d06 	br	410420c4 <__alt_data_end+0xfffc38c4>
41042690:	d9002c17 	ldw	r4,176(sp)
41042694:	d9801e04 	addi	r6,sp,120
41042698:	b80b883a 	mov	r5,r23
4104269c:	10486a00 	call	410486a0 <__sprint_r>
410426a0:	103b7a1e 	bne	r2,zero,4104148c <__alt_data_end+0xfffc2c8c>
410426a4:	d8c02017 	ldw	r3,128(sp)
410426a8:	dc401f17 	ldw	r17,124(sp)
410426ac:	dd800404 	addi	r22,sp,16
410426b0:	003e8f06 	br	410420f0 <__alt_data_end+0xfffc38f0>
410426b4:	0027883a 	mov	r19,zero
410426b8:	003f4a06 	br	410423e4 <__alt_data_end+0xfffc3be4>
410426bc:	d9002c17 	ldw	r4,176(sp)
410426c0:	d9801e04 	addi	r6,sp,120
410426c4:	b80b883a 	mov	r5,r23
410426c8:	10486a00 	call	410486a0 <__sprint_r>
410426cc:	103b6f1e 	bne	r2,zero,4104148c <__alt_data_end+0xfffc2c8c>
410426d0:	d8c02017 	ldw	r3,128(sp)
410426d4:	da000404 	addi	r8,sp,16
410426d8:	003c9d06 	br	41041950 <__alt_data_end+0xfffc3150>
410426dc:	04e7c83a 	sub	r19,zero,r19
410426e0:	9804c03a 	cmpne	r2,r19,zero
410426e4:	05adc83a 	sub	r22,zero,r22
410426e8:	b0adc83a 	sub	r22,r22,r2
410426ec:	d8802917 	ldw	r2,164(sp)
410426f0:	07000b44 	movi	fp,45
410426f4:	df002785 	stb	fp,158(sp)
410426f8:	10017b16 	blt	r2,zero,41042ce8 <___vfprintf_internal_r+0x1c64>
410426fc:	00bfdfc4 	movi	r2,-129
41042700:	90a4703a 	and	r18,r18,r2
41042704:	003bb106 	br	410415cc <__alt_data_end+0xfffc2dcc>
41042708:	d9003617 	ldw	r4,216(sp)
4104270c:	d9403817 	ldw	r5,224(sp)
41042710:	da003d15 	stw	r8,244(sp)
41042714:	10482c40 	call	410482c4 <__fpclassifyd>
41042718:	da003d17 	ldw	r8,244(sp)
4104271c:	1000f026 	beq	r2,zero,41042ae0 <___vfprintf_internal_r+0x1a5c>
41042720:	d9002917 	ldw	r4,164(sp)
41042724:	05bff7c4 	movi	r22,-33
41042728:	00bfffc4 	movi	r2,-1
4104272c:	8dac703a 	and	r22,r17,r22
41042730:	20820026 	beq	r4,r2,41042f34 <___vfprintf_internal_r+0x1eb0>
41042734:	008011c4 	movi	r2,71
41042738:	b081f726 	beq	r22,r2,41042f18 <___vfprintf_internal_r+0x1e94>
4104273c:	d9003817 	ldw	r4,224(sp)
41042740:	90c04014 	ori	r3,r18,256
41042744:	d8c02b15 	stw	r3,172(sp)
41042748:	20021516 	blt	r4,zero,41042fa0 <___vfprintf_internal_r+0x1f1c>
4104274c:	dcc03817 	ldw	r19,224(sp)
41042750:	d8002a05 	stb	zero,168(sp)
41042754:	00801984 	movi	r2,102
41042758:	8881f926 	beq	r17,r2,41042f40 <___vfprintf_internal_r+0x1ebc>
4104275c:	00801184 	movi	r2,70
41042760:	88821c26 	beq	r17,r2,41042fd4 <___vfprintf_internal_r+0x1f50>
41042764:	00801144 	movi	r2,69
41042768:	b081ef26 	beq	r22,r2,41042f28 <___vfprintf_internal_r+0x1ea4>
4104276c:	d8c02917 	ldw	r3,164(sp)
41042770:	d8802104 	addi	r2,sp,132
41042774:	d8800315 	stw	r2,12(sp)
41042778:	d9403617 	ldw	r5,216(sp)
4104277c:	d8802504 	addi	r2,sp,148
41042780:	d9002c17 	ldw	r4,176(sp)
41042784:	d8800215 	stw	r2,8(sp)
41042788:	d8802604 	addi	r2,sp,152
4104278c:	d8c00015 	stw	r3,0(sp)
41042790:	d8800115 	stw	r2,4(sp)
41042794:	01c00084 	movi	r7,2
41042798:	980d883a 	mov	r6,r19
4104279c:	d8c03c15 	stw	r3,240(sp)
410427a0:	da003d15 	stw	r8,244(sp)
410427a4:	10436a80 	call	410436a8 <_dtoa_r>
410427a8:	1021883a 	mov	r16,r2
410427ac:	008019c4 	movi	r2,103
410427b0:	d8c03c17 	ldw	r3,240(sp)
410427b4:	da003d17 	ldw	r8,244(sp)
410427b8:	88817126 	beq	r17,r2,41042d80 <___vfprintf_internal_r+0x1cfc>
410427bc:	008011c4 	movi	r2,71
410427c0:	88829226 	beq	r17,r2,4104320c <___vfprintf_internal_r+0x2188>
410427c4:	80f9883a 	add	fp,r16,r3
410427c8:	d9003617 	ldw	r4,216(sp)
410427cc:	000d883a 	mov	r6,zero
410427d0:	000f883a 	mov	r7,zero
410427d4:	980b883a 	mov	r5,r19
410427d8:	da003d15 	stw	r8,244(sp)
410427dc:	104c1640 	call	4104c164 <__eqdf2>
410427e0:	da003d17 	ldw	r8,244(sp)
410427e4:	10018d26 	beq	r2,zero,41042e1c <___vfprintf_internal_r+0x1d98>
410427e8:	d8802117 	ldw	r2,132(sp)
410427ec:	1700062e 	bgeu	r2,fp,41042808 <___vfprintf_internal_r+0x1784>
410427f0:	01000c04 	movi	r4,48
410427f4:	10c00044 	addi	r3,r2,1
410427f8:	d8c02115 	stw	r3,132(sp)
410427fc:	11000005 	stb	r4,0(r2)
41042800:	d8802117 	ldw	r2,132(sp)
41042804:	173ffb36 	bltu	r2,fp,410427f4 <__alt_data_end+0xfffc3ff4>
41042808:	1405c83a 	sub	r2,r2,r16
4104280c:	d8803315 	stw	r2,204(sp)
41042810:	008011c4 	movi	r2,71
41042814:	b0817626 	beq	r22,r2,41042df0 <___vfprintf_internal_r+0x1d6c>
41042818:	00801944 	movi	r2,101
4104281c:	1442810e 	bge	r2,r17,41043224 <___vfprintf_internal_r+0x21a0>
41042820:	d8c02617 	ldw	r3,152(sp)
41042824:	00801984 	movi	r2,102
41042828:	d8c03215 	stw	r3,200(sp)
4104282c:	8881fe26 	beq	r17,r2,41043028 <___vfprintf_internal_r+0x1fa4>
41042830:	d8c03217 	ldw	r3,200(sp)
41042834:	d9003317 	ldw	r4,204(sp)
41042838:	1901dd16 	blt	r3,r4,41042fb0 <___vfprintf_internal_r+0x1f2c>
4104283c:	9480004c 	andi	r18,r18,1
41042840:	90022b1e 	bne	r18,zero,410430f0 <___vfprintf_internal_r+0x206c>
41042844:	1805883a 	mov	r2,r3
41042848:	18028016 	blt	r3,zero,4104324c <___vfprintf_internal_r+0x21c8>
4104284c:	d8c03217 	ldw	r3,200(sp)
41042850:	044019c4 	movi	r17,103
41042854:	d8c02e15 	stw	r3,184(sp)
41042858:	df002a07 	ldb	fp,168(sp)
4104285c:	e001531e 	bne	fp,zero,41042dac <___vfprintf_internal_r+0x1d28>
41042860:	df002783 	ldbu	fp,158(sp)
41042864:	d8802a15 	stw	r2,168(sp)
41042868:	dc802b17 	ldw	r18,172(sp)
4104286c:	d8002915 	stw	zero,164(sp)
41042870:	003bd106 	br	410417b8 <__alt_data_end+0xfffc2fb8>
41042874:	d8802d17 	ldw	r2,180(sp)
41042878:	d8c02d17 	ldw	r3,180(sp)
4104287c:	d9002d17 	ldw	r4,180(sp)
41042880:	10800017 	ldw	r2,0(r2)
41042884:	18c00117 	ldw	r3,4(r3)
41042888:	21000204 	addi	r4,r4,8
4104288c:	d8803615 	stw	r2,216(sp)
41042890:	d8c03815 	stw	r3,224(sp)
41042894:	d9002d15 	stw	r4,180(sp)
41042898:	003b7506 	br	41041670 <__alt_data_end+0xfffc2e70>
4104289c:	ac400007 	ldb	r17,0(r21)
410428a0:	003a5906 	br	41041208 <__alt_data_end+0xfffc2a08>
410428a4:	9080100c 	andi	r2,r18,64
410428a8:	1000a826 	beq	r2,zero,41042b4c <___vfprintf_internal_r+0x1ac8>
410428ac:	d9002d17 	ldw	r4,180(sp)
410428b0:	002d883a 	mov	r22,zero
410428b4:	24c0000b 	ldhu	r19,0(r4)
410428b8:	21000104 	addi	r4,r4,4
410428bc:	d9002d15 	stw	r4,180(sp)
410428c0:	003ccb06 	br	41041bf0 <__alt_data_end+0xfffc33f0>
410428c4:	d8c02d17 	ldw	r3,180(sp)
410428c8:	d9002917 	ldw	r4,164(sp)
410428cc:	002d883a 	mov	r22,zero
410428d0:	18800104 	addi	r2,r3,4
410428d4:	1cc00017 	ldw	r19,0(r3)
410428d8:	203ebb0e 	bge	r4,zero,410423c8 <__alt_data_end+0xfffc3bc8>
410428dc:	003ef106 	br	410424a4 <__alt_data_end+0xfffc3ca4>
410428e0:	9080040c 	andi	r2,r18,16
410428e4:	1000921e 	bne	r2,zero,41042b30 <___vfprintf_internal_r+0x1aac>
410428e8:	9480100c 	andi	r18,r18,64
410428ec:	90013926 	beq	r18,zero,41042dd4 <___vfprintf_internal_r+0x1d50>
410428f0:	d9002d17 	ldw	r4,180(sp)
410428f4:	d9402f17 	ldw	r5,188(sp)
410428f8:	20800017 	ldw	r2,0(r4)
410428fc:	21000104 	addi	r4,r4,4
41042900:	d9002d15 	stw	r4,180(sp)
41042904:	1140000d 	sth	r5,0(r2)
41042908:	003a1606 	br	41041164 <__alt_data_end+0xfffc2964>
4104290c:	9080100c 	andi	r2,r18,64
41042910:	10008026 	beq	r2,zero,41042b14 <___vfprintf_internal_r+0x1a90>
41042914:	d8c02d17 	ldw	r3,180(sp)
41042918:	1cc0000f 	ldh	r19,0(r3)
4104291c:	18c00104 	addi	r3,r3,4
41042920:	d8c02d15 	stw	r3,180(sp)
41042924:	982dd7fa 	srai	r22,r19,31
41042928:	b005883a 	mov	r2,r22
4104292c:	003b1f06 	br	410415ac <__alt_data_end+0xfffc2dac>
41042930:	9080100c 	andi	r2,r18,64
41042934:	d8002785 	stb	zero,158(sp)
41042938:	10008a1e 	bne	r2,zero,41042b64 <___vfprintf_internal_r+0x1ae0>
4104293c:	d9402d17 	ldw	r5,180(sp)
41042940:	d8c02917 	ldw	r3,164(sp)
41042944:	002d883a 	mov	r22,zero
41042948:	28800104 	addi	r2,r5,4
4104294c:	2cc00017 	ldw	r19,0(r5)
41042950:	183e4b0e 	bge	r3,zero,41042280 <__alt_data_end+0xfffc3a80>
41042954:	9d86b03a 	or	r3,r19,r22
41042958:	d8802d15 	stw	r2,180(sp)
4104295c:	183e4c1e 	bne	r3,zero,41042290 <__alt_data_end+0xfffc3a90>
41042960:	0039883a 	mov	fp,zero
41042964:	0005883a 	mov	r2,zero
41042968:	003d4006 	br	41041e6c <__alt_data_end+0xfffc366c>
4104296c:	01504174 	movhi	r5,16645
41042970:	297fc484 	addi	r5,r5,-238
41042974:	d9402b15 	stw	r5,172(sp)
41042978:	d9402b17 	ldw	r5,172(sp)
4104297c:	1c47883a 	add	r3,r3,r17
41042980:	10800044 	addi	r2,r2,1
41042984:	41400015 	stw	r5,0(r8)
41042988:	44400115 	stw	r17,4(r8)
4104298c:	d8c02015 	stw	r3,128(sp)
41042990:	d8801f15 	stw	r2,124(sp)
41042994:	010001c4 	movi	r4,7
41042998:	20bec816 	blt	r4,r2,410424bc <__alt_data_end+0xfffc3cbc>
4104299c:	42000204 	addi	r8,r8,8
410429a0:	003ecd06 	br	410424d8 <__alt_data_end+0xfffc3cd8>
410429a4:	d9002917 	ldw	r4,164(sp)
410429a8:	d8002785 	stb	zero,158(sp)
410429ac:	203d2d16 	blt	r4,zero,41041e64 <__alt_data_end+0xfffc3664>
410429b0:	00bfdfc4 	movi	r2,-129
410429b4:	90a4703a 	and	r18,r18,r2
410429b8:	003a9106 	br	41041400 <__alt_data_end+0xfffc2c00>
410429bc:	01104174 	movhi	r4,16645
410429c0:	213fc484 	addi	r4,r4,-238
410429c4:	d9002b15 	stw	r4,172(sp)
410429c8:	003c0c06 	br	410419fc <__alt_data_end+0xfffc31fc>
410429cc:	d9002c17 	ldw	r4,176(sp)
410429d0:	d9801e04 	addi	r6,sp,120
410429d4:	b80b883a 	mov	r5,r23
410429d8:	10486a00 	call	410486a0 <__sprint_r>
410429dc:	103aab1e 	bne	r2,zero,4104148c <__alt_data_end+0xfffc2c8c>
410429e0:	d8c02017 	ldw	r3,128(sp)
410429e4:	da000404 	addi	r8,sp,16
410429e8:	003d4106 	br	41041ef0 <__alt_data_end+0xfffc36f0>
410429ec:	d8801f17 	ldw	r2,124(sp)
410429f0:	01504174 	movhi	r5,16645
410429f4:	01000044 	movi	r4,1
410429f8:	18c00044 	addi	r3,r3,1
410429fc:	10800044 	addi	r2,r2,1
41042a00:	297fc404 	addi	r5,r5,-240
41042a04:	41000115 	stw	r4,4(r8)
41042a08:	41400015 	stw	r5,0(r8)
41042a0c:	d8c02015 	stw	r3,128(sp)
41042a10:	d8801f15 	stw	r2,124(sp)
41042a14:	010001c4 	movi	r4,7
41042a18:	20805c16 	blt	r4,r2,41042b8c <___vfprintf_internal_r+0x1b08>
41042a1c:	42000204 	addi	r8,r8,8
41042a20:	8800041e 	bne	r17,zero,41042a34 <___vfprintf_internal_r+0x19b0>
41042a24:	d8803317 	ldw	r2,204(sp)
41042a28:	1000021e 	bne	r2,zero,41042a34 <___vfprintf_internal_r+0x19b0>
41042a2c:	9080004c 	andi	r2,r18,1
41042a30:	103c0926 	beq	r2,zero,41041a58 <__alt_data_end+0xfffc3258>
41042a34:	d9003717 	ldw	r4,220(sp)
41042a38:	d8801f17 	ldw	r2,124(sp)
41042a3c:	d9403417 	ldw	r5,208(sp)
41042a40:	20c7883a 	add	r3,r4,r3
41042a44:	10800044 	addi	r2,r2,1
41042a48:	41000115 	stw	r4,4(r8)
41042a4c:	41400015 	stw	r5,0(r8)
41042a50:	d8c02015 	stw	r3,128(sp)
41042a54:	d8801f15 	stw	r2,124(sp)
41042a58:	010001c4 	movi	r4,7
41042a5c:	20812116 	blt	r4,r2,41042ee4 <___vfprintf_internal_r+0x1e60>
41042a60:	42000204 	addi	r8,r8,8
41042a64:	0463c83a 	sub	r17,zero,r17
41042a68:	0440730e 	bge	zero,r17,41042c38 <___vfprintf_internal_r+0x1bb4>
41042a6c:	05800404 	movi	r22,16
41042a70:	b440860e 	bge	r22,r17,41042c8c <___vfprintf_internal_r+0x1c08>
41042a74:	01504174 	movhi	r5,16645
41042a78:	297fc484 	addi	r5,r5,-238
41042a7c:	d9402b15 	stw	r5,172(sp)
41042a80:	070001c4 	movi	fp,7
41042a84:	dcc02c17 	ldw	r19,176(sp)
41042a88:	00000306 	br	41042a98 <___vfprintf_internal_r+0x1a14>
41042a8c:	42000204 	addi	r8,r8,8
41042a90:	8c7ffc04 	addi	r17,r17,-16
41042a94:	b440800e 	bge	r22,r17,41042c98 <___vfprintf_internal_r+0x1c14>
41042a98:	18c00404 	addi	r3,r3,16
41042a9c:	10800044 	addi	r2,r2,1
41042aa0:	45000015 	stw	r20,0(r8)
41042aa4:	45800115 	stw	r22,4(r8)
41042aa8:	d8c02015 	stw	r3,128(sp)
41042aac:	d8801f15 	stw	r2,124(sp)
41042ab0:	e0bff60e 	bge	fp,r2,41042a8c <__alt_data_end+0xfffc428c>
41042ab4:	d9801e04 	addi	r6,sp,120
41042ab8:	b80b883a 	mov	r5,r23
41042abc:	9809883a 	mov	r4,r19
41042ac0:	10486a00 	call	410486a0 <__sprint_r>
41042ac4:	103a711e 	bne	r2,zero,4104148c <__alt_data_end+0xfffc2c8c>
41042ac8:	d8c02017 	ldw	r3,128(sp)
41042acc:	d8801f17 	ldw	r2,124(sp)
41042ad0:	da000404 	addi	r8,sp,16
41042ad4:	003fee06 	br	41042a90 <__alt_data_end+0xfffc4290>
41042ad8:	00bfffc4 	movi	r2,-1
41042adc:	003a6f06 	br	4104149c <__alt_data_end+0xfffc2c9c>
41042ae0:	008011c4 	movi	r2,71
41042ae4:	1440b816 	blt	r2,r17,41042dc8 <___vfprintf_internal_r+0x1d44>
41042ae8:	04104174 	movhi	r16,16645
41042aec:	843fb604 	addi	r16,r16,-296
41042af0:	00c000c4 	movi	r3,3
41042af4:	00bfdfc4 	movi	r2,-129
41042af8:	d8c02a15 	stw	r3,168(sp)
41042afc:	90a4703a 	and	r18,r18,r2
41042b00:	df002783 	ldbu	fp,158(sp)
41042b04:	d8c02e15 	stw	r3,184(sp)
41042b08:	d8002915 	stw	zero,164(sp)
41042b0c:	d8003215 	stw	zero,200(sp)
41042b10:	003b2906 	br	410417b8 <__alt_data_end+0xfffc2fb8>
41042b14:	d9002d17 	ldw	r4,180(sp)
41042b18:	24c00017 	ldw	r19,0(r4)
41042b1c:	21000104 	addi	r4,r4,4
41042b20:	d9002d15 	stw	r4,180(sp)
41042b24:	982dd7fa 	srai	r22,r19,31
41042b28:	b005883a 	mov	r2,r22
41042b2c:	003a9f06 	br	410415ac <__alt_data_end+0xfffc2dac>
41042b30:	d9402d17 	ldw	r5,180(sp)
41042b34:	d8c02f17 	ldw	r3,188(sp)
41042b38:	28800017 	ldw	r2,0(r5)
41042b3c:	29400104 	addi	r5,r5,4
41042b40:	d9402d15 	stw	r5,180(sp)
41042b44:	10c00015 	stw	r3,0(r2)
41042b48:	00398606 	br	41041164 <__alt_data_end+0xfffc2964>
41042b4c:	d9402d17 	ldw	r5,180(sp)
41042b50:	002d883a 	mov	r22,zero
41042b54:	2cc00017 	ldw	r19,0(r5)
41042b58:	29400104 	addi	r5,r5,4
41042b5c:	d9402d15 	stw	r5,180(sp)
41042b60:	003c2306 	br	41041bf0 <__alt_data_end+0xfffc33f0>
41042b64:	d8c02d17 	ldw	r3,180(sp)
41042b68:	d9002917 	ldw	r4,164(sp)
41042b6c:	002d883a 	mov	r22,zero
41042b70:	18800104 	addi	r2,r3,4
41042b74:	1cc0000b 	ldhu	r19,0(r3)
41042b78:	203dc10e 	bge	r4,zero,41042280 <__alt_data_end+0xfffc3a80>
41042b7c:	003f7506 	br	41042954 <__alt_data_end+0xfffc4154>
41042b80:	04104174 	movhi	r16,16645
41042b84:	843fb404 	addi	r16,r16,-304
41042b88:	003acc06 	br	410416bc <__alt_data_end+0xfffc2ebc>
41042b8c:	d9002c17 	ldw	r4,176(sp)
41042b90:	d9801e04 	addi	r6,sp,120
41042b94:	b80b883a 	mov	r5,r23
41042b98:	10486a00 	call	410486a0 <__sprint_r>
41042b9c:	103a3b1e 	bne	r2,zero,4104148c <__alt_data_end+0xfffc2c8c>
41042ba0:	dc402617 	ldw	r17,152(sp)
41042ba4:	d8c02017 	ldw	r3,128(sp)
41042ba8:	da000404 	addi	r8,sp,16
41042bac:	003f9c06 	br	41042a20 <__alt_data_end+0xfffc4220>
41042bb0:	ac400043 	ldbu	r17,1(r21)
41042bb4:	94800814 	ori	r18,r18,32
41042bb8:	ad400044 	addi	r21,r21,1
41042bbc:	8c403fcc 	andi	r17,r17,255
41042bc0:	8c40201c 	xori	r17,r17,128
41042bc4:	8c7fe004 	addi	r17,r17,-128
41042bc8:	00398f06 	br	41041208 <__alt_data_end+0xfffc2a08>
41042bcc:	d8c02d15 	stw	r3,180(sp)
41042bd0:	0039883a 	mov	fp,zero
41042bd4:	003e3506 	br	410424ac <__alt_data_end+0xfffc3cac>
41042bd8:	d9002c17 	ldw	r4,176(sp)
41042bdc:	d9801e04 	addi	r6,sp,120
41042be0:	b80b883a 	mov	r5,r23
41042be4:	10486a00 	call	410486a0 <__sprint_r>
41042be8:	103a281e 	bne	r2,zero,4104148c <__alt_data_end+0xfffc2c8c>
41042bec:	d8c02017 	ldw	r3,128(sp)
41042bf0:	da000404 	addi	r8,sp,16
41042bf4:	003cd006 	br	41041f38 <__alt_data_end+0xfffc3738>
41042bf8:	8009883a 	mov	r4,r16
41042bfc:	da003d15 	stw	r8,244(sp)
41042c00:	1040fec0 	call	41040fec <strlen>
41042c04:	d8802e15 	stw	r2,184(sp)
41042c08:	da003d17 	ldw	r8,244(sp)
41042c0c:	103c340e 	bge	r2,zero,41041ce0 <__alt_data_end+0xfffc34e0>
41042c10:	0005883a 	mov	r2,zero
41042c14:	003c3206 	br	41041ce0 <__alt_data_end+0xfffc34e0>
41042c18:	d9002c17 	ldw	r4,176(sp)
41042c1c:	d9801e04 	addi	r6,sp,120
41042c20:	b80b883a 	mov	r5,r23
41042c24:	10486a00 	call	410486a0 <__sprint_r>
41042c28:	103a181e 	bne	r2,zero,4104148c <__alt_data_end+0xfffc2c8c>
41042c2c:	d8c02017 	ldw	r3,128(sp)
41042c30:	d8801f17 	ldw	r2,124(sp)
41042c34:	da000404 	addi	r8,sp,16
41042c38:	d9403317 	ldw	r5,204(sp)
41042c3c:	10800044 	addi	r2,r2,1
41042c40:	44000015 	stw	r16,0(r8)
41042c44:	28c7883a 	add	r3,r5,r3
41042c48:	003b7d06 	br	41041a40 <__alt_data_end+0xfffc3240>
41042c4c:	01104174 	movhi	r4,16645
41042c50:	213fc884 	addi	r4,r4,-222
41042c54:	d9003515 	stw	r4,212(sp)
41042c58:	003b1406 	br	410418ac <__alt_data_end+0xfffc30ac>
41042c5c:	013fffc4 	movi	r4,-1
41042c60:	003a3506 	br	41041538 <__alt_data_end+0xfffc2d38>
41042c64:	0023883a 	mov	r17,zero
41042c68:	003d9d06 	br	410422e0 <__alt_data_end+0xfffc3ae0>
41042c6c:	d9002c17 	ldw	r4,176(sp)
41042c70:	d9801e04 	addi	r6,sp,120
41042c74:	b80b883a 	mov	r5,r23
41042c78:	10486a00 	call	410486a0 <__sprint_r>
41042c7c:	103a031e 	bne	r2,zero,4104148c <__alt_data_end+0xfffc2c8c>
41042c80:	d8c02017 	ldw	r3,128(sp)
41042c84:	da000404 	addi	r8,sp,16
41042c88:	003d9406 	br	410422dc <__alt_data_end+0xfffc3adc>
41042c8c:	01104174 	movhi	r4,16645
41042c90:	213fc484 	addi	r4,r4,-238
41042c94:	d9002b15 	stw	r4,172(sp)
41042c98:	d9002b17 	ldw	r4,172(sp)
41042c9c:	1c47883a 	add	r3,r3,r17
41042ca0:	10800044 	addi	r2,r2,1
41042ca4:	41000015 	stw	r4,0(r8)
41042ca8:	44400115 	stw	r17,4(r8)
41042cac:	d8c02015 	stw	r3,128(sp)
41042cb0:	d8801f15 	stw	r2,124(sp)
41042cb4:	010001c4 	movi	r4,7
41042cb8:	20bfd716 	blt	r4,r2,41042c18 <__alt_data_end+0xfffc4418>
41042cbc:	42000204 	addi	r8,r8,8
41042cc0:	003fdd06 	br	41042c38 <__alt_data_end+0xfffc4438>
41042cc4:	d9002c17 	ldw	r4,176(sp)
41042cc8:	d9801e04 	addi	r6,sp,120
41042ccc:	b80b883a 	mov	r5,r23
41042cd0:	10486a00 	call	410486a0 <__sprint_r>
41042cd4:	1039ed1e 	bne	r2,zero,4104148c <__alt_data_end+0xfffc2c8c>
41042cd8:	d8802617 	ldw	r2,152(sp)
41042cdc:	d8c02017 	ldw	r3,128(sp)
41042ce0:	da000404 	addi	r8,sp,16
41042ce4:	003e1006 	br	41042528 <__alt_data_end+0xfffc3d28>
41042ce8:	00800044 	movi	r2,1
41042cec:	10803fcc 	andi	r2,r2,255
41042cf0:	00c00044 	movi	r3,1
41042cf4:	10fa3526 	beq	r2,r3,410415cc <__alt_data_end+0xfffc2dcc>
41042cf8:	00c00084 	movi	r3,2
41042cfc:	10fbcb26 	beq	r2,r3,41041c2c <__alt_data_end+0xfffc342c>
41042d00:	003a8f06 	br	41041740 <__alt_data_end+0xfffc2f40>
41042d04:	01104174 	movhi	r4,16645
41042d08:	213fc884 	addi	r4,r4,-222
41042d0c:	d9003515 	stw	r4,212(sp)
41042d10:	003b7606 	br	41041aec <__alt_data_end+0xfffc32ec>
41042d14:	d8802917 	ldw	r2,164(sp)
41042d18:	00c00184 	movi	r3,6
41042d1c:	1880012e 	bgeu	r3,r2,41042d24 <___vfprintf_internal_r+0x1ca0>
41042d20:	1805883a 	mov	r2,r3
41042d24:	d8802e15 	stw	r2,184(sp)
41042d28:	1000ef16 	blt	r2,zero,410430e8 <___vfprintf_internal_r+0x2064>
41042d2c:	04104174 	movhi	r16,16645
41042d30:	d8802a15 	stw	r2,168(sp)
41042d34:	dcc02d15 	stw	r19,180(sp)
41042d38:	d8002915 	stw	zero,164(sp)
41042d3c:	d8003215 	stw	zero,200(sp)
41042d40:	843fc204 	addi	r16,r16,-248
41042d44:	0039883a 	mov	fp,zero
41042d48:	003aa206 	br	410417d4 <__alt_data_end+0xfffc2fd4>
41042d4c:	0021883a 	mov	r16,zero
41042d50:	003e0706 	br	41042570 <__alt_data_end+0xfffc3d70>
41042d54:	d9002c17 	ldw	r4,176(sp)
41042d58:	d9801e04 	addi	r6,sp,120
41042d5c:	b80b883a 	mov	r5,r23
41042d60:	10486a00 	call	410486a0 <__sprint_r>
41042d64:	1039c91e 	bne	r2,zero,4104148c <__alt_data_end+0xfffc2c8c>
41042d68:	d8802617 	ldw	r2,152(sp)
41042d6c:	d9403317 	ldw	r5,204(sp)
41042d70:	d8c02017 	ldw	r3,128(sp)
41042d74:	da000404 	addi	r8,sp,16
41042d78:	2885c83a 	sub	r2,r5,r2
41042d7c:	003dfb06 	br	4104256c <__alt_data_end+0xfffc3d6c>
41042d80:	9080004c 	andi	r2,r18,1
41042d84:	103e8f1e 	bne	r2,zero,410427c4 <__alt_data_end+0xfffc3fc4>
41042d88:	d8802117 	ldw	r2,132(sp)
41042d8c:	003e9e06 	br	41042808 <__alt_data_end+0xfffc4008>
41042d90:	1025883a 	mov	r18,r2
41042d94:	0039883a 	mov	fp,zero
41042d98:	00800084 	movi	r2,2
41042d9c:	003fd306 	br	41042cec <__alt_data_end+0xfffc44ec>
41042da0:	07000b44 	movi	fp,45
41042da4:	df002785 	stb	fp,158(sp)
41042da8:	003a4006 	br	410416ac <__alt_data_end+0xfffc2eac>
41042dac:	00c00b44 	movi	r3,45
41042db0:	d8c02785 	stb	r3,158(sp)
41042db4:	d8802a15 	stw	r2,168(sp)
41042db8:	dc802b17 	ldw	r18,172(sp)
41042dbc:	d8002915 	stw	zero,164(sp)
41042dc0:	07000b44 	movi	fp,45
41042dc4:	003a8006 	br	410417c8 <__alt_data_end+0xfffc2fc8>
41042dc8:	04104174 	movhi	r16,16645
41042dcc:	843fb704 	addi	r16,r16,-292
41042dd0:	003f4706 	br	41042af0 <__alt_data_end+0xfffc42f0>
41042dd4:	d8c02d17 	ldw	r3,180(sp)
41042dd8:	d9002f17 	ldw	r4,188(sp)
41042ddc:	18800017 	ldw	r2,0(r3)
41042de0:	18c00104 	addi	r3,r3,4
41042de4:	d8c02d15 	stw	r3,180(sp)
41042de8:	11000015 	stw	r4,0(r2)
41042dec:	0038dd06 	br	41041164 <__alt_data_end+0xfffc2964>
41042df0:	dd802617 	ldw	r22,152(sp)
41042df4:	00bfff44 	movi	r2,-3
41042df8:	b0801c16 	blt	r22,r2,41042e6c <___vfprintf_internal_r+0x1de8>
41042dfc:	d9402917 	ldw	r5,164(sp)
41042e00:	2d801a16 	blt	r5,r22,41042e6c <___vfprintf_internal_r+0x1de8>
41042e04:	dd803215 	stw	r22,200(sp)
41042e08:	003e8906 	br	41042830 <__alt_data_end+0xfffc4030>
41042e0c:	01104174 	movhi	r4,16645
41042e10:	213fc484 	addi	r4,r4,-238
41042e14:	d9002b15 	stw	r4,172(sp)
41042e18:	003c9106 	br	41042060 <__alt_data_end+0xfffc3860>
41042e1c:	e005883a 	mov	r2,fp
41042e20:	003e7906 	br	41042808 <__alt_data_end+0xfffc4008>
41042e24:	d9402917 	ldw	r5,164(sp)
41042e28:	df002783 	ldbu	fp,158(sp)
41042e2c:	dcc02d15 	stw	r19,180(sp)
41042e30:	d9402a15 	stw	r5,168(sp)
41042e34:	d9402e15 	stw	r5,184(sp)
41042e38:	d8002915 	stw	zero,164(sp)
41042e3c:	d8003215 	stw	zero,200(sp)
41042e40:	003a5d06 	br	410417b8 <__alt_data_end+0xfffc2fb8>
41042e44:	9080004c 	andi	r2,r18,1
41042e48:	0039883a 	mov	fp,zero
41042e4c:	10000426 	beq	r2,zero,41042e60 <___vfprintf_internal_r+0x1ddc>
41042e50:	00800c04 	movi	r2,48
41042e54:	dc001dc4 	addi	r16,sp,119
41042e58:	d8801dc5 	stb	r2,119(sp)
41042e5c:	003b8006 	br	41041c60 <__alt_data_end+0xfffc3460>
41042e60:	d8002e15 	stw	zero,184(sp)
41042e64:	dc001e04 	addi	r16,sp,120
41042e68:	003a4d06 	br	410417a0 <__alt_data_end+0xfffc2fa0>
41042e6c:	8c7fff84 	addi	r17,r17,-2
41042e70:	b5bfffc4 	addi	r22,r22,-1
41042e74:	dd802615 	stw	r22,152(sp)
41042e78:	dc4022c5 	stb	r17,139(sp)
41042e7c:	b000bf16 	blt	r22,zero,4104317c <___vfprintf_internal_r+0x20f8>
41042e80:	00800ac4 	movi	r2,43
41042e84:	d8802305 	stb	r2,140(sp)
41042e88:	00800244 	movi	r2,9
41042e8c:	15807016 	blt	r2,r22,41043050 <___vfprintf_internal_r+0x1fcc>
41042e90:	00800c04 	movi	r2,48
41042e94:	b5800c04 	addi	r22,r22,48
41042e98:	d8802345 	stb	r2,141(sp)
41042e9c:	dd802385 	stb	r22,142(sp)
41042ea0:	d88023c4 	addi	r2,sp,143
41042ea4:	df0022c4 	addi	fp,sp,139
41042ea8:	d8c03317 	ldw	r3,204(sp)
41042eac:	1739c83a 	sub	fp,r2,fp
41042eb0:	d9003317 	ldw	r4,204(sp)
41042eb4:	e0c7883a 	add	r3,fp,r3
41042eb8:	df003a15 	stw	fp,232(sp)
41042ebc:	d8c02e15 	stw	r3,184(sp)
41042ec0:	00800044 	movi	r2,1
41042ec4:	1100b30e 	bge	r2,r4,41043194 <___vfprintf_internal_r+0x2110>
41042ec8:	d8c02e17 	ldw	r3,184(sp)
41042ecc:	18c00044 	addi	r3,r3,1
41042ed0:	d8c02e15 	stw	r3,184(sp)
41042ed4:	1805883a 	mov	r2,r3
41042ed8:	1800ac16 	blt	r3,zero,4104318c <___vfprintf_internal_r+0x2108>
41042edc:	d8003215 	stw	zero,200(sp)
41042ee0:	003e5d06 	br	41042858 <__alt_data_end+0xfffc4058>
41042ee4:	d9002c17 	ldw	r4,176(sp)
41042ee8:	d9801e04 	addi	r6,sp,120
41042eec:	b80b883a 	mov	r5,r23
41042ef0:	10486a00 	call	410486a0 <__sprint_r>
41042ef4:	1039651e 	bne	r2,zero,4104148c <__alt_data_end+0xfffc2c8c>
41042ef8:	dc402617 	ldw	r17,152(sp)
41042efc:	d8c02017 	ldw	r3,128(sp)
41042f00:	d8801f17 	ldw	r2,124(sp)
41042f04:	da000404 	addi	r8,sp,16
41042f08:	003ed606 	br	41042a64 <__alt_data_end+0xfffc4264>
41042f0c:	582b883a 	mov	r21,r11
41042f10:	d8002915 	stw	zero,164(sp)
41042f14:	0038bd06 	br	4104120c <__alt_data_end+0xfffc2a0c>
41042f18:	d8802917 	ldw	r2,164(sp)
41042f1c:	103e071e 	bne	r2,zero,4104273c <__alt_data_end+0xfffc3f3c>
41042f20:	dc002915 	stw	r16,164(sp)
41042f24:	003e0506 	br	4104273c <__alt_data_end+0xfffc3f3c>
41042f28:	d9002917 	ldw	r4,164(sp)
41042f2c:	20c00044 	addi	r3,r4,1
41042f30:	003e0f06 	br	41042770 <__alt_data_end+0xfffc3f70>
41042f34:	01400184 	movi	r5,6
41042f38:	d9402915 	stw	r5,164(sp)
41042f3c:	003dff06 	br	4104273c <__alt_data_end+0xfffc3f3c>
41042f40:	d8802104 	addi	r2,sp,132
41042f44:	d8800315 	stw	r2,12(sp)
41042f48:	d8802504 	addi	r2,sp,148
41042f4c:	d8800215 	stw	r2,8(sp)
41042f50:	d8802604 	addi	r2,sp,152
41042f54:	d8800115 	stw	r2,4(sp)
41042f58:	d8802917 	ldw	r2,164(sp)
41042f5c:	d9403617 	ldw	r5,216(sp)
41042f60:	d9002c17 	ldw	r4,176(sp)
41042f64:	d8800015 	stw	r2,0(sp)
41042f68:	01c000c4 	movi	r7,3
41042f6c:	980d883a 	mov	r6,r19
41042f70:	da003d15 	stw	r8,244(sp)
41042f74:	10436a80 	call	410436a8 <_dtoa_r>
41042f78:	d8c02917 	ldw	r3,164(sp)
41042f7c:	da003d17 	ldw	r8,244(sp)
41042f80:	1021883a 	mov	r16,r2
41042f84:	10f9883a 	add	fp,r2,r3
41042f88:	81000007 	ldb	r4,0(r16)
41042f8c:	00800c04 	movi	r2,48
41042f90:	20805e26 	beq	r4,r2,4104310c <___vfprintf_internal_r+0x2088>
41042f94:	d8c02617 	ldw	r3,152(sp)
41042f98:	e0f9883a 	add	fp,fp,r3
41042f9c:	003e0a06 	br	410427c8 <__alt_data_end+0xfffc3fc8>
41042fa0:	00c00b44 	movi	r3,45
41042fa4:	24e0003c 	xorhi	r19,r4,32768
41042fa8:	d8c02a05 	stb	r3,168(sp)
41042fac:	003de906 	br	41042754 <__alt_data_end+0xfffc3f54>
41042fb0:	d8c03217 	ldw	r3,200(sp)
41042fb4:	00c07a0e 	bge	zero,r3,410431a0 <___vfprintf_internal_r+0x211c>
41042fb8:	00800044 	movi	r2,1
41042fbc:	d9003317 	ldw	r4,204(sp)
41042fc0:	1105883a 	add	r2,r2,r4
41042fc4:	d8802e15 	stw	r2,184(sp)
41042fc8:	10004e16 	blt	r2,zero,41043104 <___vfprintf_internal_r+0x2080>
41042fcc:	044019c4 	movi	r17,103
41042fd0:	003e2106 	br	41042858 <__alt_data_end+0xfffc4058>
41042fd4:	d9002917 	ldw	r4,164(sp)
41042fd8:	d8802104 	addi	r2,sp,132
41042fdc:	d8800315 	stw	r2,12(sp)
41042fe0:	d9000015 	stw	r4,0(sp)
41042fe4:	d8802504 	addi	r2,sp,148
41042fe8:	d9403617 	ldw	r5,216(sp)
41042fec:	d9002c17 	ldw	r4,176(sp)
41042ff0:	d8800215 	stw	r2,8(sp)
41042ff4:	d8802604 	addi	r2,sp,152
41042ff8:	d8800115 	stw	r2,4(sp)
41042ffc:	01c000c4 	movi	r7,3
41043000:	980d883a 	mov	r6,r19
41043004:	da003d15 	stw	r8,244(sp)
41043008:	10436a80 	call	410436a8 <_dtoa_r>
4104300c:	d8c02917 	ldw	r3,164(sp)
41043010:	da003d17 	ldw	r8,244(sp)
41043014:	1021883a 	mov	r16,r2
41043018:	00801184 	movi	r2,70
4104301c:	80f9883a 	add	fp,r16,r3
41043020:	88bfd926 	beq	r17,r2,41042f88 <__alt_data_end+0xfffc4788>
41043024:	003de806 	br	410427c8 <__alt_data_end+0xfffc3fc8>
41043028:	d9002917 	ldw	r4,164(sp)
4104302c:	00c04d0e 	bge	zero,r3,41043164 <___vfprintf_internal_r+0x20e0>
41043030:	2000441e 	bne	r4,zero,41043144 <___vfprintf_internal_r+0x20c0>
41043034:	9480004c 	andi	r18,r18,1
41043038:	9000421e 	bne	r18,zero,41043144 <___vfprintf_internal_r+0x20c0>
4104303c:	1805883a 	mov	r2,r3
41043040:	18007016 	blt	r3,zero,41043204 <___vfprintf_internal_r+0x2180>
41043044:	d8c03217 	ldw	r3,200(sp)
41043048:	d8c02e15 	stw	r3,184(sp)
4104304c:	003e0206 	br	41042858 <__alt_data_end+0xfffc4058>
41043050:	df0022c4 	addi	fp,sp,139
41043054:	dc002915 	stw	r16,164(sp)
41043058:	4027883a 	mov	r19,r8
4104305c:	e021883a 	mov	r16,fp
41043060:	b009883a 	mov	r4,r22
41043064:	01400284 	movi	r5,10
41043068:	1040b9c0 	call	41040b9c <__modsi3>
4104306c:	10800c04 	addi	r2,r2,48
41043070:	843fffc4 	addi	r16,r16,-1
41043074:	b009883a 	mov	r4,r22
41043078:	01400284 	movi	r5,10
4104307c:	80800005 	stb	r2,0(r16)
41043080:	1040b180 	call	41040b18 <__divsi3>
41043084:	102d883a 	mov	r22,r2
41043088:	00800244 	movi	r2,9
4104308c:	15bff416 	blt	r2,r22,41043060 <__alt_data_end+0xfffc4860>
41043090:	9811883a 	mov	r8,r19
41043094:	b0800c04 	addi	r2,r22,48
41043098:	8027883a 	mov	r19,r16
4104309c:	997fffc4 	addi	r5,r19,-1
410430a0:	98bfffc5 	stb	r2,-1(r19)
410430a4:	dc002917 	ldw	r16,164(sp)
410430a8:	2f006a2e 	bgeu	r5,fp,41043254 <___vfprintf_internal_r+0x21d0>
410430ac:	d9c02384 	addi	r7,sp,142
410430b0:	3ccfc83a 	sub	r7,r7,r19
410430b4:	d9002344 	addi	r4,sp,141
410430b8:	e1cf883a 	add	r7,fp,r7
410430bc:	00000106 	br	410430c4 <___vfprintf_internal_r+0x2040>
410430c0:	28800003 	ldbu	r2,0(r5)
410430c4:	20800005 	stb	r2,0(r4)
410430c8:	21000044 	addi	r4,r4,1
410430cc:	29400044 	addi	r5,r5,1
410430d0:	393ffb1e 	bne	r7,r4,410430c0 <__alt_data_end+0xfffc48c0>
410430d4:	d8802304 	addi	r2,sp,140
410430d8:	14c5c83a 	sub	r2,r2,r19
410430dc:	d8c02344 	addi	r3,sp,141
410430e0:	1885883a 	add	r2,r3,r2
410430e4:	003f7006 	br	41042ea8 <__alt_data_end+0xfffc46a8>
410430e8:	0005883a 	mov	r2,zero
410430ec:	003f0f06 	br	41042d2c <__alt_data_end+0xfffc452c>
410430f0:	d8c03217 	ldw	r3,200(sp)
410430f4:	18c00044 	addi	r3,r3,1
410430f8:	d8c02e15 	stw	r3,184(sp)
410430fc:	1805883a 	mov	r2,r3
41043100:	183fb20e 	bge	r3,zero,41042fcc <__alt_data_end+0xfffc47cc>
41043104:	0005883a 	mov	r2,zero
41043108:	003fb006 	br	41042fcc <__alt_data_end+0xfffc47cc>
4104310c:	d9003617 	ldw	r4,216(sp)
41043110:	000d883a 	mov	r6,zero
41043114:	000f883a 	mov	r7,zero
41043118:	980b883a 	mov	r5,r19
4104311c:	d8c03c15 	stw	r3,240(sp)
41043120:	da003d15 	stw	r8,244(sp)
41043124:	104c1640 	call	4104c164 <__eqdf2>
41043128:	d8c03c17 	ldw	r3,240(sp)
4104312c:	da003d17 	ldw	r8,244(sp)
41043130:	103f9826 	beq	r2,zero,41042f94 <__alt_data_end+0xfffc4794>
41043134:	00800044 	movi	r2,1
41043138:	10c7c83a 	sub	r3,r2,r3
4104313c:	d8c02615 	stw	r3,152(sp)
41043140:	003f9506 	br	41042f98 <__alt_data_end+0xfffc4798>
41043144:	d9002917 	ldw	r4,164(sp)
41043148:	d8c03217 	ldw	r3,200(sp)
4104314c:	20800044 	addi	r2,r4,1
41043150:	1885883a 	add	r2,r3,r2
41043154:	d8802e15 	stw	r2,184(sp)
41043158:	103dbf0e 	bge	r2,zero,41042858 <__alt_data_end+0xfffc4058>
4104315c:	0005883a 	mov	r2,zero
41043160:	003dbd06 	br	41042858 <__alt_data_end+0xfffc4058>
41043164:	2000211e 	bne	r4,zero,410431ec <___vfprintf_internal_r+0x2168>
41043168:	9480004c 	andi	r18,r18,1
4104316c:	90001f1e 	bne	r18,zero,410431ec <___vfprintf_internal_r+0x2168>
41043170:	00800044 	movi	r2,1
41043174:	d8802e15 	stw	r2,184(sp)
41043178:	003db706 	br	41042858 <__alt_data_end+0xfffc4058>
4104317c:	00800b44 	movi	r2,45
41043180:	05adc83a 	sub	r22,zero,r22
41043184:	d8802305 	stb	r2,140(sp)
41043188:	003f3f06 	br	41042e88 <__alt_data_end+0xfffc4688>
4104318c:	0005883a 	mov	r2,zero
41043190:	003f5206 	br	41042edc <__alt_data_end+0xfffc46dc>
41043194:	90a4703a 	and	r18,r18,r2
41043198:	903f4e26 	beq	r18,zero,41042ed4 <__alt_data_end+0xfffc46d4>
4104319c:	003f4a06 	br	41042ec8 <__alt_data_end+0xfffc46c8>
410431a0:	00800084 	movi	r2,2
410431a4:	10c5c83a 	sub	r2,r2,r3
410431a8:	003f8406 	br	41042fbc <__alt_data_end+0xfffc47bc>
410431ac:	d8802d17 	ldw	r2,180(sp)
410431b0:	d9002d17 	ldw	r4,180(sp)
410431b4:	ac400043 	ldbu	r17,1(r21)
410431b8:	10800017 	ldw	r2,0(r2)
410431bc:	582b883a 	mov	r21,r11
410431c0:	d8802915 	stw	r2,164(sp)
410431c4:	20800104 	addi	r2,r4,4
410431c8:	d9002917 	ldw	r4,164(sp)
410431cc:	d8802d15 	stw	r2,180(sp)
410431d0:	203e7a0e 	bge	r4,zero,41042bbc <__alt_data_end+0xfffc43bc>
410431d4:	8c403fcc 	andi	r17,r17,255
410431d8:	00bfffc4 	movi	r2,-1
410431dc:	8c40201c 	xori	r17,r17,128
410431e0:	d8802915 	stw	r2,164(sp)
410431e4:	8c7fe004 	addi	r17,r17,-128
410431e8:	00380706 	br	41041208 <__alt_data_end+0xfffc2a08>
410431ec:	d8c02917 	ldw	r3,164(sp)
410431f0:	18c00084 	addi	r3,r3,2
410431f4:	d8c02e15 	stw	r3,184(sp)
410431f8:	1805883a 	mov	r2,r3
410431fc:	183d960e 	bge	r3,zero,41042858 <__alt_data_end+0xfffc4058>
41043200:	003fd606 	br	4104315c <__alt_data_end+0xfffc495c>
41043204:	0005883a 	mov	r2,zero
41043208:	003f8e06 	br	41043044 <__alt_data_end+0xfffc4844>
4104320c:	9080004c 	andi	r2,r18,1
41043210:	103f811e 	bne	r2,zero,41043018 <__alt_data_end+0xfffc4818>
41043214:	d8802117 	ldw	r2,132(sp)
41043218:	1405c83a 	sub	r2,r2,r16
4104321c:	d8803315 	stw	r2,204(sp)
41043220:	b47ef326 	beq	r22,r17,41042df0 <__alt_data_end+0xfffc45f0>
41043224:	dd802617 	ldw	r22,152(sp)
41043228:	003f1106 	br	41042e70 <__alt_data_end+0xfffc4670>
4104322c:	d9c02785 	stb	r7,158(sp)
41043230:	00390406 	br	41041644 <__alt_data_end+0xfffc2e44>
41043234:	d9c02785 	stb	r7,158(sp)
41043238:	0038d306 	br	41041588 <__alt_data_end+0xfffc2d88>
4104323c:	d9c02785 	stb	r7,158(sp)
41043240:	003a6106 	br	41041bc8 <__alt_data_end+0xfffc33c8>
41043244:	d9c02785 	stb	r7,158(sp)
41043248:	003af806 	br	41041e2c <__alt_data_end+0xfffc362c>
4104324c:	0005883a 	mov	r2,zero
41043250:	003d7e06 	br	4104284c <__alt_data_end+0xfffc404c>
41043254:	d8802344 	addi	r2,sp,141
41043258:	003f1306 	br	41042ea8 <__alt_data_end+0xfffc46a8>
4104325c:	d9c02785 	stb	r7,158(sp)
41043260:	00392306 	br	410416f0 <__alt_data_end+0xfffc2ef0>
41043264:	d9c02785 	stb	r7,158(sp)
41043268:	003aa906 	br	41041d10 <__alt_data_end+0xfffc3510>
4104326c:	d9c02785 	stb	r7,158(sp)
41043270:	003a3d06 	br	41041b68 <__alt_data_end+0xfffc3368>
41043274:	d9c02785 	stb	r7,158(sp)
41043278:	003aca06 	br	41041da4 <__alt_data_end+0xfffc35a4>

4104327c <__vfprintf_internal>:
4104327c:	00904174 	movhi	r2,16645
41043280:	10871d04 	addi	r2,r2,7284
41043284:	300f883a 	mov	r7,r6
41043288:	280d883a 	mov	r6,r5
4104328c:	200b883a 	mov	r5,r4
41043290:	11000017 	ldw	r4,0(r2)
41043294:	10410841 	jmpi	41041084 <___vfprintf_internal_r>

41043298 <__sbprintf>:
41043298:	2880030b 	ldhu	r2,12(r5)
4104329c:	2ac01917 	ldw	r11,100(r5)
410432a0:	2a80038b 	ldhu	r10,14(r5)
410432a4:	2a400717 	ldw	r9,28(r5)
410432a8:	2a000917 	ldw	r8,36(r5)
410432ac:	defee204 	addi	sp,sp,-1144
410432b0:	00c10004 	movi	r3,1024
410432b4:	dc011a15 	stw	r16,1128(sp)
410432b8:	10bfff4c 	andi	r2,r2,65533
410432bc:	2821883a 	mov	r16,r5
410432c0:	d8cb883a 	add	r5,sp,r3
410432c4:	dc811c15 	stw	r18,1136(sp)
410432c8:	dc411b15 	stw	r17,1132(sp)
410432cc:	dfc11d15 	stw	ra,1140(sp)
410432d0:	2025883a 	mov	r18,r4
410432d4:	d881030d 	sth	r2,1036(sp)
410432d8:	dac11915 	stw	r11,1124(sp)
410432dc:	da81038d 	sth	r10,1038(sp)
410432e0:	da410715 	stw	r9,1052(sp)
410432e4:	da010915 	stw	r8,1060(sp)
410432e8:	dec10015 	stw	sp,1024(sp)
410432ec:	dec10415 	stw	sp,1040(sp)
410432f0:	d8c10215 	stw	r3,1032(sp)
410432f4:	d8c10515 	stw	r3,1044(sp)
410432f8:	d8010615 	stw	zero,1048(sp)
410432fc:	10410840 	call	41041084 <___vfprintf_internal_r>
41043300:	1023883a 	mov	r17,r2
41043304:	10000416 	blt	r2,zero,41043318 <__sbprintf+0x80>
41043308:	d9410004 	addi	r5,sp,1024
4104330c:	9009883a 	mov	r4,r18
41043310:	1044f4c0 	call	41044f4c <_fflush_r>
41043314:	10000d1e 	bne	r2,zero,4104334c <__sbprintf+0xb4>
41043318:	d881030b 	ldhu	r2,1036(sp)
4104331c:	1080100c 	andi	r2,r2,64
41043320:	10000326 	beq	r2,zero,41043330 <__sbprintf+0x98>
41043324:	8080030b 	ldhu	r2,12(r16)
41043328:	10801014 	ori	r2,r2,64
4104332c:	8080030d 	sth	r2,12(r16)
41043330:	8805883a 	mov	r2,r17
41043334:	dfc11d17 	ldw	ra,1140(sp)
41043338:	dc811c17 	ldw	r18,1136(sp)
4104333c:	dc411b17 	ldw	r17,1132(sp)
41043340:	dc011a17 	ldw	r16,1128(sp)
41043344:	dec11e04 	addi	sp,sp,1144
41043348:	f800283a 	ret
4104334c:	047fffc4 	movi	r17,-1
41043350:	003ff106 	br	41043318 <__alt_data_end+0xfffc4b18>

41043354 <__swsetup_r>:
41043354:	00904174 	movhi	r2,16645
41043358:	defffd04 	addi	sp,sp,-12
4104335c:	10871d04 	addi	r2,r2,7284
41043360:	dc400115 	stw	r17,4(sp)
41043364:	2023883a 	mov	r17,r4
41043368:	11000017 	ldw	r4,0(r2)
4104336c:	dc000015 	stw	r16,0(sp)
41043370:	dfc00215 	stw	ra,8(sp)
41043374:	2821883a 	mov	r16,r5
41043378:	20000226 	beq	r4,zero,41043384 <__swsetup_r+0x30>
4104337c:	20800e17 	ldw	r2,56(r4)
41043380:	10003126 	beq	r2,zero,41043448 <__swsetup_r+0xf4>
41043384:	8080030b 	ldhu	r2,12(r16)
41043388:	10c0020c 	andi	r3,r2,8
4104338c:	1009883a 	mov	r4,r2
41043390:	18000f26 	beq	r3,zero,410433d0 <__swsetup_r+0x7c>
41043394:	80c00417 	ldw	r3,16(r16)
41043398:	18001526 	beq	r3,zero,410433f0 <__swsetup_r+0x9c>
4104339c:	1100004c 	andi	r4,r2,1
410433a0:	20001c1e 	bne	r4,zero,41043414 <__swsetup_r+0xc0>
410433a4:	1080008c 	andi	r2,r2,2
410433a8:	1000291e 	bne	r2,zero,41043450 <__swsetup_r+0xfc>
410433ac:	80800517 	ldw	r2,20(r16)
410433b0:	80800215 	stw	r2,8(r16)
410433b4:	18001c26 	beq	r3,zero,41043428 <__swsetup_r+0xd4>
410433b8:	0005883a 	mov	r2,zero
410433bc:	dfc00217 	ldw	ra,8(sp)
410433c0:	dc400117 	ldw	r17,4(sp)
410433c4:	dc000017 	ldw	r16,0(sp)
410433c8:	dec00304 	addi	sp,sp,12
410433cc:	f800283a 	ret
410433d0:	2080040c 	andi	r2,r4,16
410433d4:	10002e26 	beq	r2,zero,41043490 <__swsetup_r+0x13c>
410433d8:	2080010c 	andi	r2,r4,4
410433dc:	10001e1e 	bne	r2,zero,41043458 <__swsetup_r+0x104>
410433e0:	80c00417 	ldw	r3,16(r16)
410433e4:	20800214 	ori	r2,r4,8
410433e8:	8080030d 	sth	r2,12(r16)
410433ec:	183feb1e 	bne	r3,zero,4104339c <__alt_data_end+0xfffc4b9c>
410433f0:	1100a00c 	andi	r4,r2,640
410433f4:	01408004 	movi	r5,512
410433f8:	217fe826 	beq	r4,r5,4104339c <__alt_data_end+0xfffc4b9c>
410433fc:	800b883a 	mov	r5,r16
41043400:	8809883a 	mov	r4,r17
41043404:	1045ecc0 	call	41045ecc <__smakebuf_r>
41043408:	8080030b 	ldhu	r2,12(r16)
4104340c:	80c00417 	ldw	r3,16(r16)
41043410:	003fe206 	br	4104339c <__alt_data_end+0xfffc4b9c>
41043414:	80800517 	ldw	r2,20(r16)
41043418:	80000215 	stw	zero,8(r16)
4104341c:	0085c83a 	sub	r2,zero,r2
41043420:	80800615 	stw	r2,24(r16)
41043424:	183fe41e 	bne	r3,zero,410433b8 <__alt_data_end+0xfffc4bb8>
41043428:	80c0030b 	ldhu	r3,12(r16)
4104342c:	0005883a 	mov	r2,zero
41043430:	1900200c 	andi	r4,r3,128
41043434:	203fe126 	beq	r4,zero,410433bc <__alt_data_end+0xfffc4bbc>
41043438:	18c01014 	ori	r3,r3,64
4104343c:	80c0030d 	sth	r3,12(r16)
41043440:	00bfffc4 	movi	r2,-1
41043444:	003fdd06 	br	410433bc <__alt_data_end+0xfffc4bbc>
41043448:	10453280 	call	41045328 <__sinit>
4104344c:	003fcd06 	br	41043384 <__alt_data_end+0xfffc4b84>
41043450:	0005883a 	mov	r2,zero
41043454:	003fd606 	br	410433b0 <__alt_data_end+0xfffc4bb0>
41043458:	81400c17 	ldw	r5,48(r16)
4104345c:	28000626 	beq	r5,zero,41043478 <__swsetup_r+0x124>
41043460:	80801004 	addi	r2,r16,64
41043464:	28800326 	beq	r5,r2,41043474 <__swsetup_r+0x120>
41043468:	8809883a 	mov	r4,r17
4104346c:	104549c0 	call	4104549c <_free_r>
41043470:	8100030b 	ldhu	r4,12(r16)
41043474:	80000c15 	stw	zero,48(r16)
41043478:	80c00417 	ldw	r3,16(r16)
4104347c:	00bff6c4 	movi	r2,-37
41043480:	1108703a 	and	r4,r2,r4
41043484:	80000115 	stw	zero,4(r16)
41043488:	80c00015 	stw	r3,0(r16)
4104348c:	003fd506 	br	410433e4 <__alt_data_end+0xfffc4be4>
41043490:	00800244 	movi	r2,9
41043494:	88800015 	stw	r2,0(r17)
41043498:	20801014 	ori	r2,r4,64
4104349c:	8080030d 	sth	r2,12(r16)
410434a0:	00bfffc4 	movi	r2,-1
410434a4:	003fc506 	br	410433bc <__alt_data_end+0xfffc4bbc>

410434a8 <quorem>:
410434a8:	defff704 	addi	sp,sp,-36
410434ac:	dc800215 	stw	r18,8(sp)
410434b0:	20800417 	ldw	r2,16(r4)
410434b4:	2c800417 	ldw	r18,16(r5)
410434b8:	dfc00815 	stw	ra,32(sp)
410434bc:	ddc00715 	stw	r23,28(sp)
410434c0:	dd800615 	stw	r22,24(sp)
410434c4:	dd400515 	stw	r21,20(sp)
410434c8:	dd000415 	stw	r20,16(sp)
410434cc:	dcc00315 	stw	r19,12(sp)
410434d0:	dc400115 	stw	r17,4(sp)
410434d4:	dc000015 	stw	r16,0(sp)
410434d8:	14807116 	blt	r2,r18,410436a0 <quorem+0x1f8>
410434dc:	94bfffc4 	addi	r18,r18,-1
410434e0:	94ad883a 	add	r22,r18,r18
410434e4:	b5ad883a 	add	r22,r22,r22
410434e8:	2c400504 	addi	r17,r5,20
410434ec:	8da9883a 	add	r20,r17,r22
410434f0:	25400504 	addi	r21,r4,20
410434f4:	282f883a 	mov	r23,r5
410434f8:	adad883a 	add	r22,r21,r22
410434fc:	a1400017 	ldw	r5,0(r20)
41043500:	2021883a 	mov	r16,r4
41043504:	b1000017 	ldw	r4,0(r22)
41043508:	29400044 	addi	r5,r5,1
4104350c:	1040c100 	call	41040c10 <__udivsi3>
41043510:	1027883a 	mov	r19,r2
41043514:	10002c26 	beq	r2,zero,410435c8 <quorem+0x120>
41043518:	a813883a 	mov	r9,r21
4104351c:	880b883a 	mov	r5,r17
41043520:	0009883a 	mov	r4,zero
41043524:	000d883a 	mov	r6,zero
41043528:	2a000017 	ldw	r8,0(r5)
4104352c:	49c00017 	ldw	r7,0(r9)
41043530:	29400104 	addi	r5,r5,4
41043534:	40bfffcc 	andi	r2,r8,65535
41043538:	14c5383a 	mul	r2,r2,r19
4104353c:	4010d43a 	srli	r8,r8,16
41043540:	38ffffcc 	andi	r3,r7,65535
41043544:	1105883a 	add	r2,r2,r4
41043548:	1008d43a 	srli	r4,r2,16
4104354c:	44d1383a 	mul	r8,r8,r19
41043550:	198d883a 	add	r6,r3,r6
41043554:	10ffffcc 	andi	r3,r2,65535
41043558:	30c7c83a 	sub	r3,r6,r3
4104355c:	380ed43a 	srli	r7,r7,16
41043560:	4105883a 	add	r2,r8,r4
41043564:	180dd43a 	srai	r6,r3,16
41043568:	113fffcc 	andi	r4,r2,65535
4104356c:	390fc83a 	sub	r7,r7,r4
41043570:	398d883a 	add	r6,r7,r6
41043574:	300e943a 	slli	r7,r6,16
41043578:	18ffffcc 	andi	r3,r3,65535
4104357c:	1008d43a 	srli	r4,r2,16
41043580:	38ceb03a 	or	r7,r7,r3
41043584:	49c00015 	stw	r7,0(r9)
41043588:	300dd43a 	srai	r6,r6,16
4104358c:	4a400104 	addi	r9,r9,4
41043590:	a17fe52e 	bgeu	r20,r5,41043528 <__alt_data_end+0xfffc4d28>
41043594:	b0800017 	ldw	r2,0(r22)
41043598:	10000b1e 	bne	r2,zero,410435c8 <quorem+0x120>
4104359c:	b0bfff04 	addi	r2,r22,-4
410435a0:	a880082e 	bgeu	r21,r2,410435c4 <quorem+0x11c>
410435a4:	b0ffff17 	ldw	r3,-4(r22)
410435a8:	18000326 	beq	r3,zero,410435b8 <quorem+0x110>
410435ac:	00000506 	br	410435c4 <quorem+0x11c>
410435b0:	10c00017 	ldw	r3,0(r2)
410435b4:	1800031e 	bne	r3,zero,410435c4 <quorem+0x11c>
410435b8:	10bfff04 	addi	r2,r2,-4
410435bc:	94bfffc4 	addi	r18,r18,-1
410435c0:	a8bffb36 	bltu	r21,r2,410435b0 <__alt_data_end+0xfffc4db0>
410435c4:	84800415 	stw	r18,16(r16)
410435c8:	b80b883a 	mov	r5,r23
410435cc:	8009883a 	mov	r4,r16
410435d0:	10474c40 	call	410474c4 <__mcmp>
410435d4:	10002616 	blt	r2,zero,41043670 <quorem+0x1c8>
410435d8:	9cc00044 	addi	r19,r19,1
410435dc:	a805883a 	mov	r2,r21
410435e0:	000b883a 	mov	r5,zero
410435e4:	11000017 	ldw	r4,0(r2)
410435e8:	89800017 	ldw	r6,0(r17)
410435ec:	10800104 	addi	r2,r2,4
410435f0:	20ffffcc 	andi	r3,r4,65535
410435f4:	194b883a 	add	r5,r3,r5
410435f8:	30ffffcc 	andi	r3,r6,65535
410435fc:	28c7c83a 	sub	r3,r5,r3
41043600:	300cd43a 	srli	r6,r6,16
41043604:	2008d43a 	srli	r4,r4,16
41043608:	180bd43a 	srai	r5,r3,16
4104360c:	18ffffcc 	andi	r3,r3,65535
41043610:	2189c83a 	sub	r4,r4,r6
41043614:	2149883a 	add	r4,r4,r5
41043618:	200c943a 	slli	r6,r4,16
4104361c:	8c400104 	addi	r17,r17,4
41043620:	200bd43a 	srai	r5,r4,16
41043624:	30c6b03a 	or	r3,r6,r3
41043628:	10ffff15 	stw	r3,-4(r2)
4104362c:	a47fed2e 	bgeu	r20,r17,410435e4 <__alt_data_end+0xfffc4de4>
41043630:	9485883a 	add	r2,r18,r18
41043634:	1085883a 	add	r2,r2,r2
41043638:	a887883a 	add	r3,r21,r2
4104363c:	18800017 	ldw	r2,0(r3)
41043640:	10000b1e 	bne	r2,zero,41043670 <quorem+0x1c8>
41043644:	18bfff04 	addi	r2,r3,-4
41043648:	a880082e 	bgeu	r21,r2,4104366c <quorem+0x1c4>
4104364c:	18ffff17 	ldw	r3,-4(r3)
41043650:	18000326 	beq	r3,zero,41043660 <quorem+0x1b8>
41043654:	00000506 	br	4104366c <quorem+0x1c4>
41043658:	10c00017 	ldw	r3,0(r2)
4104365c:	1800031e 	bne	r3,zero,4104366c <quorem+0x1c4>
41043660:	10bfff04 	addi	r2,r2,-4
41043664:	94bfffc4 	addi	r18,r18,-1
41043668:	a8bffb36 	bltu	r21,r2,41043658 <__alt_data_end+0xfffc4e58>
4104366c:	84800415 	stw	r18,16(r16)
41043670:	9805883a 	mov	r2,r19
41043674:	dfc00817 	ldw	ra,32(sp)
41043678:	ddc00717 	ldw	r23,28(sp)
4104367c:	dd800617 	ldw	r22,24(sp)
41043680:	dd400517 	ldw	r21,20(sp)
41043684:	dd000417 	ldw	r20,16(sp)
41043688:	dcc00317 	ldw	r19,12(sp)
4104368c:	dc800217 	ldw	r18,8(sp)
41043690:	dc400117 	ldw	r17,4(sp)
41043694:	dc000017 	ldw	r16,0(sp)
41043698:	dec00904 	addi	sp,sp,36
4104369c:	f800283a 	ret
410436a0:	0005883a 	mov	r2,zero
410436a4:	003ff306 	br	41043674 <__alt_data_end+0xfffc4e74>

410436a8 <_dtoa_r>:
410436a8:	20801017 	ldw	r2,64(r4)
410436ac:	deffde04 	addi	sp,sp,-136
410436b0:	df002015 	stw	fp,128(sp)
410436b4:	dcc01b15 	stw	r19,108(sp)
410436b8:	dc801a15 	stw	r18,104(sp)
410436bc:	dc401915 	stw	r17,100(sp)
410436c0:	dc001815 	stw	r16,96(sp)
410436c4:	dfc02115 	stw	ra,132(sp)
410436c8:	ddc01f15 	stw	r23,124(sp)
410436cc:	dd801e15 	stw	r22,120(sp)
410436d0:	dd401d15 	stw	r21,116(sp)
410436d4:	dd001c15 	stw	r20,112(sp)
410436d8:	d9c00315 	stw	r7,12(sp)
410436dc:	2039883a 	mov	fp,r4
410436e0:	3023883a 	mov	r17,r6
410436e4:	2825883a 	mov	r18,r5
410436e8:	dc002417 	ldw	r16,144(sp)
410436ec:	3027883a 	mov	r19,r6
410436f0:	10000826 	beq	r2,zero,41043714 <_dtoa_r+0x6c>
410436f4:	21801117 	ldw	r6,68(r4)
410436f8:	00c00044 	movi	r3,1
410436fc:	100b883a 	mov	r5,r2
41043700:	1986983a 	sll	r3,r3,r6
41043704:	11800115 	stw	r6,4(r2)
41043708:	10c00215 	stw	r3,8(r2)
4104370c:	1046ca40 	call	41046ca4 <_Bfree>
41043710:	e0001015 	stw	zero,64(fp)
41043714:	88002e16 	blt	r17,zero,410437d0 <_dtoa_r+0x128>
41043718:	80000015 	stw	zero,0(r16)
4104371c:	889ffc2c 	andhi	r2,r17,32752
41043720:	00dffc34 	movhi	r3,32752
41043724:	10c01c26 	beq	r2,r3,41043798 <_dtoa_r+0xf0>
41043728:	000d883a 	mov	r6,zero
4104372c:	000f883a 	mov	r7,zero
41043730:	9009883a 	mov	r4,r18
41043734:	980b883a 	mov	r5,r19
41043738:	104c1640 	call	4104c164 <__eqdf2>
4104373c:	10002b1e 	bne	r2,zero,410437ec <_dtoa_r+0x144>
41043740:	d9c02317 	ldw	r7,140(sp)
41043744:	00800044 	movi	r2,1
41043748:	38800015 	stw	r2,0(r7)
4104374c:	d8802517 	ldw	r2,148(sp)
41043750:	10019e26 	beq	r2,zero,41043dcc <_dtoa_r+0x724>
41043754:	d8c02517 	ldw	r3,148(sp)
41043758:	00904174 	movhi	r2,16645
4104375c:	10bfc444 	addi	r2,r2,-239
41043760:	18800015 	stw	r2,0(r3)
41043764:	10bfffc4 	addi	r2,r2,-1
41043768:	dfc02117 	ldw	ra,132(sp)
4104376c:	df002017 	ldw	fp,128(sp)
41043770:	ddc01f17 	ldw	r23,124(sp)
41043774:	dd801e17 	ldw	r22,120(sp)
41043778:	dd401d17 	ldw	r21,116(sp)
4104377c:	dd001c17 	ldw	r20,112(sp)
41043780:	dcc01b17 	ldw	r19,108(sp)
41043784:	dc801a17 	ldw	r18,104(sp)
41043788:	dc401917 	ldw	r17,100(sp)
4104378c:	dc001817 	ldw	r16,96(sp)
41043790:	dec02204 	addi	sp,sp,136
41043794:	f800283a 	ret
41043798:	d8c02317 	ldw	r3,140(sp)
4104379c:	0089c3c4 	movi	r2,9999
410437a0:	18800015 	stw	r2,0(r3)
410437a4:	90017726 	beq	r18,zero,41043d84 <_dtoa_r+0x6dc>
410437a8:	00904174 	movhi	r2,16645
410437ac:	10bfd004 	addi	r2,r2,-192
410437b0:	d9002517 	ldw	r4,148(sp)
410437b4:	203fec26 	beq	r4,zero,41043768 <__alt_data_end+0xfffc4f68>
410437b8:	10c000c7 	ldb	r3,3(r2)
410437bc:	1801781e 	bne	r3,zero,41043da0 <_dtoa_r+0x6f8>
410437c0:	10c000c4 	addi	r3,r2,3
410437c4:	d9802517 	ldw	r6,148(sp)
410437c8:	30c00015 	stw	r3,0(r6)
410437cc:	003fe606 	br	41043768 <__alt_data_end+0xfffc4f68>
410437d0:	04e00034 	movhi	r19,32768
410437d4:	9cffffc4 	addi	r19,r19,-1
410437d8:	00800044 	movi	r2,1
410437dc:	8ce6703a 	and	r19,r17,r19
410437e0:	80800015 	stw	r2,0(r16)
410437e4:	9823883a 	mov	r17,r19
410437e8:	003fcc06 	br	4104371c <__alt_data_end+0xfffc4f1c>
410437ec:	d8800204 	addi	r2,sp,8
410437f0:	d8800015 	stw	r2,0(sp)
410437f4:	d9c00104 	addi	r7,sp,4
410437f8:	900b883a 	mov	r5,r18
410437fc:	980d883a 	mov	r6,r19
41043800:	e009883a 	mov	r4,fp
41043804:	8820d53a 	srli	r16,r17,20
41043808:	10478900 	call	41047890 <__d2b>
4104380c:	d8800915 	stw	r2,36(sp)
41043810:	8001651e 	bne	r16,zero,41043da8 <_dtoa_r+0x700>
41043814:	dd800217 	ldw	r22,8(sp)
41043818:	dc000117 	ldw	r16,4(sp)
4104381c:	00800804 	movi	r2,32
41043820:	b421883a 	add	r16,r22,r16
41043824:	80c10c84 	addi	r3,r16,1074
41043828:	10c2d10e 	bge	r2,r3,41044370 <_dtoa_r+0xcc8>
4104382c:	00801004 	movi	r2,64
41043830:	81010484 	addi	r4,r16,1042
41043834:	10c7c83a 	sub	r3,r2,r3
41043838:	9108d83a 	srl	r4,r18,r4
4104383c:	88e2983a 	sll	r17,r17,r3
41043840:	2448b03a 	or	r4,r4,r17
41043844:	104d52c0 	call	4104d52c <__floatunsidf>
41043848:	017f8434 	movhi	r5,65040
4104384c:	01800044 	movi	r6,1
41043850:	1009883a 	mov	r4,r2
41043854:	194b883a 	add	r5,r3,r5
41043858:	843fffc4 	addi	r16,r16,-1
4104385c:	d9801115 	stw	r6,68(sp)
41043860:	000d883a 	mov	r6,zero
41043864:	01cffe34 	movhi	r7,16376
41043868:	104cad40 	call	4104cad4 <__subdf3>
4104386c:	0198dbf4 	movhi	r6,25455
41043870:	01cff4f4 	movhi	r7,16339
41043874:	3190d844 	addi	r6,r6,17249
41043878:	39e1e9c4 	addi	r7,r7,-30809
4104387c:	1009883a 	mov	r4,r2
41043880:	180b883a 	mov	r5,r3
41043884:	104c3bc0 	call	4104c3bc <__muldf3>
41043888:	01a2d874 	movhi	r6,35681
4104388c:	01cff1f4 	movhi	r7,16327
41043890:	31b22cc4 	addi	r6,r6,-14157
41043894:	39e28a04 	addi	r7,r7,-30168
41043898:	180b883a 	mov	r5,r3
4104389c:	1009883a 	mov	r4,r2
410438a0:	104afd00 	call	4104afd0 <__adddf3>
410438a4:	8009883a 	mov	r4,r16
410438a8:	1029883a 	mov	r20,r2
410438ac:	1823883a 	mov	r17,r3
410438b0:	104d4500 	call	4104d450 <__floatsidf>
410438b4:	019427f4 	movhi	r6,20639
410438b8:	01cff4f4 	movhi	r7,16339
410438bc:	319e7ec4 	addi	r6,r6,31227
410438c0:	39d104c4 	addi	r7,r7,17427
410438c4:	1009883a 	mov	r4,r2
410438c8:	180b883a 	mov	r5,r3
410438cc:	104c3bc0 	call	4104c3bc <__muldf3>
410438d0:	100d883a 	mov	r6,r2
410438d4:	180f883a 	mov	r7,r3
410438d8:	a009883a 	mov	r4,r20
410438dc:	880b883a 	mov	r5,r17
410438e0:	104afd00 	call	4104afd0 <__adddf3>
410438e4:	1009883a 	mov	r4,r2
410438e8:	180b883a 	mov	r5,r3
410438ec:	1029883a 	mov	r20,r2
410438f0:	1823883a 	mov	r17,r3
410438f4:	104d3d00 	call	4104d3d0 <__fixdfsi>
410438f8:	000d883a 	mov	r6,zero
410438fc:	000f883a 	mov	r7,zero
41043900:	a009883a 	mov	r4,r20
41043904:	880b883a 	mov	r5,r17
41043908:	d8800515 	stw	r2,20(sp)
4104390c:	104c2c80 	call	4104c2c8 <__ledf2>
41043910:	10028716 	blt	r2,zero,41044330 <_dtoa_r+0xc88>
41043914:	d8c00517 	ldw	r3,20(sp)
41043918:	00800584 	movi	r2,22
4104391c:	10c27536 	bltu	r2,r3,410442f4 <_dtoa_r+0xc4c>
41043920:	180490fa 	slli	r2,r3,3
41043924:	00d04174 	movhi	r3,16645
41043928:	18ffec04 	addi	r3,r3,-80
4104392c:	1885883a 	add	r2,r3,r2
41043930:	11000017 	ldw	r4,0(r2)
41043934:	11400117 	ldw	r5,4(r2)
41043938:	900d883a 	mov	r6,r18
4104393c:	980f883a 	mov	r7,r19
41043940:	104c1ec0 	call	4104c1ec <__gedf2>
41043944:	00828d0e 	bge	zero,r2,4104437c <_dtoa_r+0xcd4>
41043948:	d9000517 	ldw	r4,20(sp)
4104394c:	d8000e15 	stw	zero,56(sp)
41043950:	213fffc4 	addi	r4,r4,-1
41043954:	d9000515 	stw	r4,20(sp)
41043958:	b42dc83a 	sub	r22,r22,r16
4104395c:	b5bfffc4 	addi	r22,r22,-1
41043960:	b0026f16 	blt	r22,zero,41044320 <_dtoa_r+0xc78>
41043964:	d8000815 	stw	zero,32(sp)
41043968:	d9c00517 	ldw	r7,20(sp)
4104396c:	38026416 	blt	r7,zero,41044300 <_dtoa_r+0xc58>
41043970:	b1ed883a 	add	r22,r22,r7
41043974:	d9c00d15 	stw	r7,52(sp)
41043978:	d8000a15 	stw	zero,40(sp)
4104397c:	d9800317 	ldw	r6,12(sp)
41043980:	00800244 	movi	r2,9
41043984:	11811436 	bltu	r2,r6,41043dd8 <_dtoa_r+0x730>
41043988:	00800144 	movi	r2,5
4104398c:	1184e10e 	bge	r2,r6,41044d14 <_dtoa_r+0x166c>
41043990:	31bfff04 	addi	r6,r6,-4
41043994:	d9800315 	stw	r6,12(sp)
41043998:	0023883a 	mov	r17,zero
4104399c:	d9800317 	ldw	r6,12(sp)
410439a0:	008000c4 	movi	r2,3
410439a4:	30836726 	beq	r6,r2,41044744 <_dtoa_r+0x109c>
410439a8:	1183410e 	bge	r2,r6,410446b0 <_dtoa_r+0x1008>
410439ac:	d9c00317 	ldw	r7,12(sp)
410439b0:	00800104 	movi	r2,4
410439b4:	38827c26 	beq	r7,r2,410443a8 <_dtoa_r+0xd00>
410439b8:	00800144 	movi	r2,5
410439bc:	3884c41e 	bne	r7,r2,41044cd0 <_dtoa_r+0x1628>
410439c0:	00800044 	movi	r2,1
410439c4:	d8800b15 	stw	r2,44(sp)
410439c8:	d8c00517 	ldw	r3,20(sp)
410439cc:	d9002217 	ldw	r4,136(sp)
410439d0:	1907883a 	add	r3,r3,r4
410439d4:	19800044 	addi	r6,r3,1
410439d8:	d8c00c15 	stw	r3,48(sp)
410439dc:	d9800615 	stw	r6,24(sp)
410439e0:	0183a40e 	bge	zero,r6,41044874 <_dtoa_r+0x11cc>
410439e4:	d9800617 	ldw	r6,24(sp)
410439e8:	3021883a 	mov	r16,r6
410439ec:	e0001115 	stw	zero,68(fp)
410439f0:	008005c4 	movi	r2,23
410439f4:	1184c92e 	bgeu	r2,r6,41044d1c <_dtoa_r+0x1674>
410439f8:	00c00044 	movi	r3,1
410439fc:	00800104 	movi	r2,4
41043a00:	1085883a 	add	r2,r2,r2
41043a04:	11000504 	addi	r4,r2,20
41043a08:	180b883a 	mov	r5,r3
41043a0c:	18c00044 	addi	r3,r3,1
41043a10:	313ffb2e 	bgeu	r6,r4,41043a00 <__alt_data_end+0xfffc5200>
41043a14:	e1401115 	stw	r5,68(fp)
41043a18:	e009883a 	mov	r4,fp
41043a1c:	1046bfc0 	call	41046bfc <_Balloc>
41043a20:	d8800715 	stw	r2,28(sp)
41043a24:	e0801015 	stw	r2,64(fp)
41043a28:	00800384 	movi	r2,14
41043a2c:	1400f736 	bltu	r2,r16,41043e0c <_dtoa_r+0x764>
41043a30:	8800f626 	beq	r17,zero,41043e0c <_dtoa_r+0x764>
41043a34:	d9c00517 	ldw	r7,20(sp)
41043a38:	01c39a0e 	bge	zero,r7,410448a4 <_dtoa_r+0x11fc>
41043a3c:	388003cc 	andi	r2,r7,15
41043a40:	100490fa 	slli	r2,r2,3
41043a44:	382bd13a 	srai	r21,r7,4
41043a48:	00d04174 	movhi	r3,16645
41043a4c:	18ffec04 	addi	r3,r3,-80
41043a50:	1885883a 	add	r2,r3,r2
41043a54:	a8c0040c 	andi	r3,r21,16
41043a58:	12400017 	ldw	r9,0(r2)
41043a5c:	12000117 	ldw	r8,4(r2)
41043a60:	18037926 	beq	r3,zero,41044848 <_dtoa_r+0x11a0>
41043a64:	00904174 	movhi	r2,16645
41043a68:	10bfe204 	addi	r2,r2,-120
41043a6c:	11800817 	ldw	r6,32(r2)
41043a70:	11c00917 	ldw	r7,36(r2)
41043a74:	9009883a 	mov	r4,r18
41043a78:	980b883a 	mov	r5,r19
41043a7c:	da001715 	stw	r8,92(sp)
41043a80:	da401615 	stw	r9,88(sp)
41043a84:	104b87c0 	call	4104b87c <__divdf3>
41043a88:	da001717 	ldw	r8,92(sp)
41043a8c:	da401617 	ldw	r9,88(sp)
41043a90:	ad4003cc 	andi	r21,r21,15
41043a94:	040000c4 	movi	r16,3
41043a98:	1023883a 	mov	r17,r2
41043a9c:	1829883a 	mov	r20,r3
41043aa0:	a8001126 	beq	r21,zero,41043ae8 <_dtoa_r+0x440>
41043aa4:	05d04174 	movhi	r23,16645
41043aa8:	bdffe204 	addi	r23,r23,-120
41043aac:	4805883a 	mov	r2,r9
41043ab0:	4007883a 	mov	r3,r8
41043ab4:	a980004c 	andi	r6,r21,1
41043ab8:	1009883a 	mov	r4,r2
41043abc:	a82bd07a 	srai	r21,r21,1
41043ac0:	180b883a 	mov	r5,r3
41043ac4:	30000426 	beq	r6,zero,41043ad8 <_dtoa_r+0x430>
41043ac8:	b9800017 	ldw	r6,0(r23)
41043acc:	b9c00117 	ldw	r7,4(r23)
41043ad0:	84000044 	addi	r16,r16,1
41043ad4:	104c3bc0 	call	4104c3bc <__muldf3>
41043ad8:	bdc00204 	addi	r23,r23,8
41043adc:	a83ff51e 	bne	r21,zero,41043ab4 <__alt_data_end+0xfffc52b4>
41043ae0:	1013883a 	mov	r9,r2
41043ae4:	1811883a 	mov	r8,r3
41043ae8:	480d883a 	mov	r6,r9
41043aec:	400f883a 	mov	r7,r8
41043af0:	8809883a 	mov	r4,r17
41043af4:	a00b883a 	mov	r5,r20
41043af8:	104b87c0 	call	4104b87c <__divdf3>
41043afc:	d8800f15 	stw	r2,60(sp)
41043b00:	d8c01015 	stw	r3,64(sp)
41043b04:	d8c00e17 	ldw	r3,56(sp)
41043b08:	18000626 	beq	r3,zero,41043b24 <_dtoa_r+0x47c>
41043b0c:	d9000f17 	ldw	r4,60(sp)
41043b10:	d9401017 	ldw	r5,64(sp)
41043b14:	000d883a 	mov	r6,zero
41043b18:	01cffc34 	movhi	r7,16368
41043b1c:	104c2c80 	call	4104c2c8 <__ledf2>
41043b20:	10040b16 	blt	r2,zero,41044b50 <_dtoa_r+0x14a8>
41043b24:	8009883a 	mov	r4,r16
41043b28:	104d4500 	call	4104d450 <__floatsidf>
41043b2c:	d9800f17 	ldw	r6,60(sp)
41043b30:	d9c01017 	ldw	r7,64(sp)
41043b34:	1009883a 	mov	r4,r2
41043b38:	180b883a 	mov	r5,r3
41043b3c:	104c3bc0 	call	4104c3bc <__muldf3>
41043b40:	000d883a 	mov	r6,zero
41043b44:	01d00734 	movhi	r7,16412
41043b48:	1009883a 	mov	r4,r2
41043b4c:	180b883a 	mov	r5,r3
41043b50:	104afd00 	call	4104afd0 <__adddf3>
41043b54:	1021883a 	mov	r16,r2
41043b58:	d8800617 	ldw	r2,24(sp)
41043b5c:	047f3034 	movhi	r17,64704
41043b60:	1c63883a 	add	r17,r3,r17
41043b64:	10031826 	beq	r2,zero,410447c8 <_dtoa_r+0x1120>
41043b68:	d8c00517 	ldw	r3,20(sp)
41043b6c:	db000617 	ldw	r12,24(sp)
41043b70:	d8c01315 	stw	r3,76(sp)
41043b74:	d9000b17 	ldw	r4,44(sp)
41043b78:	20038f26 	beq	r4,zero,410449b8 <_dtoa_r+0x1310>
41043b7c:	60bfffc4 	addi	r2,r12,-1
41043b80:	100490fa 	slli	r2,r2,3
41043b84:	00d04174 	movhi	r3,16645
41043b88:	18ffec04 	addi	r3,r3,-80
41043b8c:	1885883a 	add	r2,r3,r2
41043b90:	11800017 	ldw	r6,0(r2)
41043b94:	11c00117 	ldw	r7,4(r2)
41043b98:	d8800717 	ldw	r2,28(sp)
41043b9c:	0009883a 	mov	r4,zero
41043ba0:	014ff834 	movhi	r5,16352
41043ba4:	db001615 	stw	r12,88(sp)
41043ba8:	15c00044 	addi	r23,r2,1
41043bac:	104b87c0 	call	4104b87c <__divdf3>
41043bb0:	800d883a 	mov	r6,r16
41043bb4:	880f883a 	mov	r7,r17
41043bb8:	1009883a 	mov	r4,r2
41043bbc:	180b883a 	mov	r5,r3
41043bc0:	104cad40 	call	4104cad4 <__subdf3>
41043bc4:	d9401017 	ldw	r5,64(sp)
41043bc8:	d9000f17 	ldw	r4,60(sp)
41043bcc:	102b883a 	mov	r21,r2
41043bd0:	d8c01215 	stw	r3,72(sp)
41043bd4:	104d3d00 	call	4104d3d0 <__fixdfsi>
41043bd8:	1009883a 	mov	r4,r2
41043bdc:	1029883a 	mov	r20,r2
41043be0:	104d4500 	call	4104d450 <__floatsidf>
41043be4:	d9000f17 	ldw	r4,60(sp)
41043be8:	d9401017 	ldw	r5,64(sp)
41043bec:	100d883a 	mov	r6,r2
41043bf0:	180f883a 	mov	r7,r3
41043bf4:	104cad40 	call	4104cad4 <__subdf3>
41043bf8:	1823883a 	mov	r17,r3
41043bfc:	d8c00717 	ldw	r3,28(sp)
41043c00:	d9401217 	ldw	r5,72(sp)
41043c04:	a2000c04 	addi	r8,r20,48
41043c08:	1021883a 	mov	r16,r2
41043c0c:	1a000005 	stb	r8,0(r3)
41043c10:	800d883a 	mov	r6,r16
41043c14:	880f883a 	mov	r7,r17
41043c18:	a809883a 	mov	r4,r21
41043c1c:	4029883a 	mov	r20,r8
41043c20:	104c1ec0 	call	4104c1ec <__gedf2>
41043c24:	00841d16 	blt	zero,r2,41044c9c <_dtoa_r+0x15f4>
41043c28:	800d883a 	mov	r6,r16
41043c2c:	880f883a 	mov	r7,r17
41043c30:	0009883a 	mov	r4,zero
41043c34:	014ffc34 	movhi	r5,16368
41043c38:	104cad40 	call	4104cad4 <__subdf3>
41043c3c:	d9401217 	ldw	r5,72(sp)
41043c40:	100d883a 	mov	r6,r2
41043c44:	180f883a 	mov	r7,r3
41043c48:	a809883a 	mov	r4,r21
41043c4c:	104c1ec0 	call	4104c1ec <__gedf2>
41043c50:	db001617 	ldw	r12,88(sp)
41043c54:	00840e16 	blt	zero,r2,41044c90 <_dtoa_r+0x15e8>
41043c58:	00800044 	movi	r2,1
41043c5c:	13006b0e 	bge	r2,r12,41043e0c <_dtoa_r+0x764>
41043c60:	d9000717 	ldw	r4,28(sp)
41043c64:	dd800f15 	stw	r22,60(sp)
41043c68:	dcc01015 	stw	r19,64(sp)
41043c6c:	2319883a 	add	r12,r4,r12
41043c70:	dcc01217 	ldw	r19,72(sp)
41043c74:	602d883a 	mov	r22,r12
41043c78:	dc801215 	stw	r18,72(sp)
41043c7c:	b825883a 	mov	r18,r23
41043c80:	00000906 	br	41043ca8 <_dtoa_r+0x600>
41043c84:	104cad40 	call	4104cad4 <__subdf3>
41043c88:	a80d883a 	mov	r6,r21
41043c8c:	980f883a 	mov	r7,r19
41043c90:	1009883a 	mov	r4,r2
41043c94:	180b883a 	mov	r5,r3
41043c98:	104c2c80 	call	4104c2c8 <__ledf2>
41043c9c:	1003e816 	blt	r2,zero,41044c40 <_dtoa_r+0x1598>
41043ca0:	b825883a 	mov	r18,r23
41043ca4:	bd83e926 	beq	r23,r22,41044c4c <_dtoa_r+0x15a4>
41043ca8:	a809883a 	mov	r4,r21
41043cac:	980b883a 	mov	r5,r19
41043cb0:	000d883a 	mov	r6,zero
41043cb4:	01d00934 	movhi	r7,16420
41043cb8:	104c3bc0 	call	4104c3bc <__muldf3>
41043cbc:	000d883a 	mov	r6,zero
41043cc0:	01d00934 	movhi	r7,16420
41043cc4:	8009883a 	mov	r4,r16
41043cc8:	880b883a 	mov	r5,r17
41043ccc:	102b883a 	mov	r21,r2
41043cd0:	1827883a 	mov	r19,r3
41043cd4:	104c3bc0 	call	4104c3bc <__muldf3>
41043cd8:	180b883a 	mov	r5,r3
41043cdc:	1009883a 	mov	r4,r2
41043ce0:	1821883a 	mov	r16,r3
41043ce4:	1023883a 	mov	r17,r2
41043ce8:	104d3d00 	call	4104d3d0 <__fixdfsi>
41043cec:	1009883a 	mov	r4,r2
41043cf0:	1029883a 	mov	r20,r2
41043cf4:	104d4500 	call	4104d450 <__floatsidf>
41043cf8:	8809883a 	mov	r4,r17
41043cfc:	800b883a 	mov	r5,r16
41043d00:	100d883a 	mov	r6,r2
41043d04:	180f883a 	mov	r7,r3
41043d08:	104cad40 	call	4104cad4 <__subdf3>
41043d0c:	a5000c04 	addi	r20,r20,48
41043d10:	a80d883a 	mov	r6,r21
41043d14:	980f883a 	mov	r7,r19
41043d18:	1009883a 	mov	r4,r2
41043d1c:	180b883a 	mov	r5,r3
41043d20:	95000005 	stb	r20,0(r18)
41043d24:	1021883a 	mov	r16,r2
41043d28:	1823883a 	mov	r17,r3
41043d2c:	104c2c80 	call	4104c2c8 <__ledf2>
41043d30:	bdc00044 	addi	r23,r23,1
41043d34:	800d883a 	mov	r6,r16
41043d38:	880f883a 	mov	r7,r17
41043d3c:	0009883a 	mov	r4,zero
41043d40:	014ffc34 	movhi	r5,16368
41043d44:	103fcf0e 	bge	r2,zero,41043c84 <__alt_data_end+0xfffc5484>
41043d48:	d8c01317 	ldw	r3,76(sp)
41043d4c:	d8c00515 	stw	r3,20(sp)
41043d50:	d9400917 	ldw	r5,36(sp)
41043d54:	e009883a 	mov	r4,fp
41043d58:	1046ca40 	call	41046ca4 <_Bfree>
41043d5c:	d9000517 	ldw	r4,20(sp)
41043d60:	d9802317 	ldw	r6,140(sp)
41043d64:	d9c02517 	ldw	r7,148(sp)
41043d68:	b8000005 	stb	zero,0(r23)
41043d6c:	20800044 	addi	r2,r4,1
41043d70:	30800015 	stw	r2,0(r6)
41043d74:	3802aa26 	beq	r7,zero,41044820 <_dtoa_r+0x1178>
41043d78:	3dc00015 	stw	r23,0(r7)
41043d7c:	d8800717 	ldw	r2,28(sp)
41043d80:	003e7906 	br	41043768 <__alt_data_end+0xfffc4f68>
41043d84:	00800434 	movhi	r2,16
41043d88:	10bfffc4 	addi	r2,r2,-1
41043d8c:	88a2703a 	and	r17,r17,r2
41043d90:	883e851e 	bne	r17,zero,410437a8 <__alt_data_end+0xfffc4fa8>
41043d94:	00904174 	movhi	r2,16645
41043d98:	10bfcd04 	addi	r2,r2,-204
41043d9c:	003e8406 	br	410437b0 <__alt_data_end+0xfffc4fb0>
41043da0:	10c00204 	addi	r3,r2,8
41043da4:	003e8706 	br	410437c4 <__alt_data_end+0xfffc4fc4>
41043da8:	01400434 	movhi	r5,16
41043dac:	297fffc4 	addi	r5,r5,-1
41043db0:	994a703a 	and	r5,r19,r5
41043db4:	9009883a 	mov	r4,r18
41043db8:	843f0044 	addi	r16,r16,-1023
41043dbc:	294ffc34 	orhi	r5,r5,16368
41043dc0:	dd800217 	ldw	r22,8(sp)
41043dc4:	d8001115 	stw	zero,68(sp)
41043dc8:	003ea506 	br	41043860 <__alt_data_end+0xfffc5060>
41043dcc:	00904174 	movhi	r2,16645
41043dd0:	10bfc404 	addi	r2,r2,-240
41043dd4:	003e6406 	br	41043768 <__alt_data_end+0xfffc4f68>
41043dd8:	e0001115 	stw	zero,68(fp)
41043ddc:	000b883a 	mov	r5,zero
41043de0:	e009883a 	mov	r4,fp
41043de4:	1046bfc0 	call	41046bfc <_Balloc>
41043de8:	01bfffc4 	movi	r6,-1
41043dec:	01c00044 	movi	r7,1
41043df0:	d8800715 	stw	r2,28(sp)
41043df4:	d9800c15 	stw	r6,48(sp)
41043df8:	e0801015 	stw	r2,64(fp)
41043dfc:	d8000315 	stw	zero,12(sp)
41043e00:	d9c00b15 	stw	r7,44(sp)
41043e04:	d9800615 	stw	r6,24(sp)
41043e08:	d8002215 	stw	zero,136(sp)
41043e0c:	d8800117 	ldw	r2,4(sp)
41043e10:	10008916 	blt	r2,zero,41044038 <_dtoa_r+0x990>
41043e14:	d9000517 	ldw	r4,20(sp)
41043e18:	00c00384 	movi	r3,14
41043e1c:	19008616 	blt	r3,r4,41044038 <_dtoa_r+0x990>
41043e20:	200490fa 	slli	r2,r4,3
41043e24:	00d04174 	movhi	r3,16645
41043e28:	d9802217 	ldw	r6,136(sp)
41043e2c:	18ffec04 	addi	r3,r3,-80
41043e30:	1885883a 	add	r2,r3,r2
41043e34:	14000017 	ldw	r16,0(r2)
41043e38:	14400117 	ldw	r17,4(r2)
41043e3c:	30016316 	blt	r6,zero,410443cc <_dtoa_r+0xd24>
41043e40:	800d883a 	mov	r6,r16
41043e44:	880f883a 	mov	r7,r17
41043e48:	9009883a 	mov	r4,r18
41043e4c:	980b883a 	mov	r5,r19
41043e50:	104b87c0 	call	4104b87c <__divdf3>
41043e54:	180b883a 	mov	r5,r3
41043e58:	1009883a 	mov	r4,r2
41043e5c:	104d3d00 	call	4104d3d0 <__fixdfsi>
41043e60:	1009883a 	mov	r4,r2
41043e64:	102b883a 	mov	r21,r2
41043e68:	104d4500 	call	4104d450 <__floatsidf>
41043e6c:	800d883a 	mov	r6,r16
41043e70:	880f883a 	mov	r7,r17
41043e74:	1009883a 	mov	r4,r2
41043e78:	180b883a 	mov	r5,r3
41043e7c:	104c3bc0 	call	4104c3bc <__muldf3>
41043e80:	100d883a 	mov	r6,r2
41043e84:	180f883a 	mov	r7,r3
41043e88:	9009883a 	mov	r4,r18
41043e8c:	980b883a 	mov	r5,r19
41043e90:	104cad40 	call	4104cad4 <__subdf3>
41043e94:	d9c00717 	ldw	r7,28(sp)
41043e98:	1009883a 	mov	r4,r2
41043e9c:	a8800c04 	addi	r2,r21,48
41043ea0:	38800005 	stb	r2,0(r7)
41043ea4:	3dc00044 	addi	r23,r7,1
41043ea8:	d9c00617 	ldw	r7,24(sp)
41043eac:	01800044 	movi	r6,1
41043eb0:	180b883a 	mov	r5,r3
41043eb4:	2005883a 	mov	r2,r4
41043eb8:	39803826 	beq	r7,r6,41043f9c <_dtoa_r+0x8f4>
41043ebc:	000d883a 	mov	r6,zero
41043ec0:	01d00934 	movhi	r7,16420
41043ec4:	104c3bc0 	call	4104c3bc <__muldf3>
41043ec8:	000d883a 	mov	r6,zero
41043ecc:	000f883a 	mov	r7,zero
41043ed0:	1009883a 	mov	r4,r2
41043ed4:	180b883a 	mov	r5,r3
41043ed8:	1025883a 	mov	r18,r2
41043edc:	1827883a 	mov	r19,r3
41043ee0:	104c1640 	call	4104c164 <__eqdf2>
41043ee4:	103f9a26 	beq	r2,zero,41043d50 <__alt_data_end+0xfffc5550>
41043ee8:	d9c00617 	ldw	r7,24(sp)
41043eec:	d8c00717 	ldw	r3,28(sp)
41043ef0:	b829883a 	mov	r20,r23
41043ef4:	38bfffc4 	addi	r2,r7,-1
41043ef8:	18ad883a 	add	r22,r3,r2
41043efc:	00000a06 	br	41043f28 <_dtoa_r+0x880>
41043f00:	104c3bc0 	call	4104c3bc <__muldf3>
41043f04:	000d883a 	mov	r6,zero
41043f08:	000f883a 	mov	r7,zero
41043f0c:	1009883a 	mov	r4,r2
41043f10:	180b883a 	mov	r5,r3
41043f14:	1025883a 	mov	r18,r2
41043f18:	1827883a 	mov	r19,r3
41043f1c:	b829883a 	mov	r20,r23
41043f20:	104c1640 	call	4104c164 <__eqdf2>
41043f24:	103f8a26 	beq	r2,zero,41043d50 <__alt_data_end+0xfffc5550>
41043f28:	800d883a 	mov	r6,r16
41043f2c:	880f883a 	mov	r7,r17
41043f30:	9009883a 	mov	r4,r18
41043f34:	980b883a 	mov	r5,r19
41043f38:	104b87c0 	call	4104b87c <__divdf3>
41043f3c:	180b883a 	mov	r5,r3
41043f40:	1009883a 	mov	r4,r2
41043f44:	104d3d00 	call	4104d3d0 <__fixdfsi>
41043f48:	1009883a 	mov	r4,r2
41043f4c:	102b883a 	mov	r21,r2
41043f50:	104d4500 	call	4104d450 <__floatsidf>
41043f54:	800d883a 	mov	r6,r16
41043f58:	880f883a 	mov	r7,r17
41043f5c:	1009883a 	mov	r4,r2
41043f60:	180b883a 	mov	r5,r3
41043f64:	104c3bc0 	call	4104c3bc <__muldf3>
41043f68:	100d883a 	mov	r6,r2
41043f6c:	180f883a 	mov	r7,r3
41043f70:	9009883a 	mov	r4,r18
41043f74:	980b883a 	mov	r5,r19
41043f78:	104cad40 	call	4104cad4 <__subdf3>
41043f7c:	aa000c04 	addi	r8,r21,48
41043f80:	a2000005 	stb	r8,0(r20)
41043f84:	000d883a 	mov	r6,zero
41043f88:	01d00934 	movhi	r7,16420
41043f8c:	1009883a 	mov	r4,r2
41043f90:	180b883a 	mov	r5,r3
41043f94:	a5c00044 	addi	r23,r20,1
41043f98:	b53fd91e 	bne	r22,r20,41043f00 <__alt_data_end+0xfffc5700>
41043f9c:	100d883a 	mov	r6,r2
41043fa0:	180f883a 	mov	r7,r3
41043fa4:	1009883a 	mov	r4,r2
41043fa8:	180b883a 	mov	r5,r3
41043fac:	104afd00 	call	4104afd0 <__adddf3>
41043fb0:	100d883a 	mov	r6,r2
41043fb4:	180f883a 	mov	r7,r3
41043fb8:	8009883a 	mov	r4,r16
41043fbc:	880b883a 	mov	r5,r17
41043fc0:	1027883a 	mov	r19,r2
41043fc4:	1825883a 	mov	r18,r3
41043fc8:	104c2c80 	call	4104c2c8 <__ledf2>
41043fcc:	10000816 	blt	r2,zero,41043ff0 <_dtoa_r+0x948>
41043fd0:	980d883a 	mov	r6,r19
41043fd4:	900f883a 	mov	r7,r18
41043fd8:	8009883a 	mov	r4,r16
41043fdc:	880b883a 	mov	r5,r17
41043fe0:	104c1640 	call	4104c164 <__eqdf2>
41043fe4:	103f5a1e 	bne	r2,zero,41043d50 <__alt_data_end+0xfffc5550>
41043fe8:	ad40004c 	andi	r21,r21,1
41043fec:	a83f5826 	beq	r21,zero,41043d50 <__alt_data_end+0xfffc5550>
41043ff0:	bd3fffc3 	ldbu	r20,-1(r23)
41043ff4:	b8bfffc4 	addi	r2,r23,-1
41043ff8:	1007883a 	mov	r3,r2
41043ffc:	01400e44 	movi	r5,57
41044000:	d9800717 	ldw	r6,28(sp)
41044004:	00000506 	br	4104401c <_dtoa_r+0x974>
41044008:	18ffffc4 	addi	r3,r3,-1
4104400c:	11824726 	beq	r2,r6,4104492c <_dtoa_r+0x1284>
41044010:	1d000003 	ldbu	r20,0(r3)
41044014:	102f883a 	mov	r23,r2
41044018:	10bfffc4 	addi	r2,r2,-1
4104401c:	a1003fcc 	andi	r4,r20,255
41044020:	2100201c 	xori	r4,r4,128
41044024:	213fe004 	addi	r4,r4,-128
41044028:	217ff726 	beq	r4,r5,41044008 <__alt_data_end+0xfffc5808>
4104402c:	a2000044 	addi	r8,r20,1
41044030:	12000005 	stb	r8,0(r2)
41044034:	003f4606 	br	41043d50 <__alt_data_end+0xfffc5550>
41044038:	d9000b17 	ldw	r4,44(sp)
4104403c:	2000c826 	beq	r4,zero,41044360 <_dtoa_r+0xcb8>
41044040:	d9800317 	ldw	r6,12(sp)
41044044:	00c00044 	movi	r3,1
41044048:	1980f90e 	bge	r3,r6,41044430 <_dtoa_r+0xd88>
4104404c:	d8800617 	ldw	r2,24(sp)
41044050:	d8c00a17 	ldw	r3,40(sp)
41044054:	157fffc4 	addi	r21,r2,-1
41044058:	1d41f316 	blt	r3,r21,41044828 <_dtoa_r+0x1180>
4104405c:	1d6bc83a 	sub	r21,r3,r21
41044060:	d9c00617 	ldw	r7,24(sp)
41044064:	3802aa16 	blt	r7,zero,41044b10 <_dtoa_r+0x1468>
41044068:	dd000817 	ldw	r20,32(sp)
4104406c:	d8800617 	ldw	r2,24(sp)
41044070:	d8c00817 	ldw	r3,32(sp)
41044074:	01400044 	movi	r5,1
41044078:	e009883a 	mov	r4,fp
4104407c:	1887883a 	add	r3,r3,r2
41044080:	d8c00815 	stw	r3,32(sp)
41044084:	b0ad883a 	add	r22,r22,r2
41044088:	10470080 	call	41047008 <__i2b>
4104408c:	1023883a 	mov	r17,r2
41044090:	a0000826 	beq	r20,zero,410440b4 <_dtoa_r+0xa0c>
41044094:	0580070e 	bge	zero,r22,410440b4 <_dtoa_r+0xa0c>
41044098:	a005883a 	mov	r2,r20
4104409c:	b500b916 	blt	r22,r20,41044384 <_dtoa_r+0xcdc>
410440a0:	d9000817 	ldw	r4,32(sp)
410440a4:	a0a9c83a 	sub	r20,r20,r2
410440a8:	b0adc83a 	sub	r22,r22,r2
410440ac:	2089c83a 	sub	r4,r4,r2
410440b0:	d9000815 	stw	r4,32(sp)
410440b4:	d9800a17 	ldw	r6,40(sp)
410440b8:	0181810e 	bge	zero,r6,410446c0 <_dtoa_r+0x1018>
410440bc:	d9c00b17 	ldw	r7,44(sp)
410440c0:	3800b326 	beq	r7,zero,41044390 <_dtoa_r+0xce8>
410440c4:	a800b226 	beq	r21,zero,41044390 <_dtoa_r+0xce8>
410440c8:	880b883a 	mov	r5,r17
410440cc:	a80d883a 	mov	r6,r21
410440d0:	e009883a 	mov	r4,fp
410440d4:	104723c0 	call	4104723c <__pow5mult>
410440d8:	d9800917 	ldw	r6,36(sp)
410440dc:	100b883a 	mov	r5,r2
410440e0:	e009883a 	mov	r4,fp
410440e4:	1023883a 	mov	r17,r2
410440e8:	10470440 	call	41047044 <__multiply>
410440ec:	1021883a 	mov	r16,r2
410440f0:	d8800a17 	ldw	r2,40(sp)
410440f4:	d9400917 	ldw	r5,36(sp)
410440f8:	e009883a 	mov	r4,fp
410440fc:	1545c83a 	sub	r2,r2,r21
41044100:	d8800a15 	stw	r2,40(sp)
41044104:	1046ca40 	call	41046ca4 <_Bfree>
41044108:	d8c00a17 	ldw	r3,40(sp)
4104410c:	18009f1e 	bne	r3,zero,4104438c <_dtoa_r+0xce4>
41044110:	05c00044 	movi	r23,1
41044114:	e009883a 	mov	r4,fp
41044118:	b80b883a 	mov	r5,r23
4104411c:	10470080 	call	41047008 <__i2b>
41044120:	d9000d17 	ldw	r4,52(sp)
41044124:	102b883a 	mov	r21,r2
41044128:	2000ce26 	beq	r4,zero,41044464 <_dtoa_r+0xdbc>
4104412c:	200d883a 	mov	r6,r4
41044130:	100b883a 	mov	r5,r2
41044134:	e009883a 	mov	r4,fp
41044138:	104723c0 	call	4104723c <__pow5mult>
4104413c:	d9800317 	ldw	r6,12(sp)
41044140:	102b883a 	mov	r21,r2
41044144:	b981810e 	bge	r23,r6,4104474c <_dtoa_r+0x10a4>
41044148:	0027883a 	mov	r19,zero
4104414c:	a8800417 	ldw	r2,16(r21)
41044150:	05c00804 	movi	r23,32
41044154:	10800104 	addi	r2,r2,4
41044158:	1085883a 	add	r2,r2,r2
4104415c:	1085883a 	add	r2,r2,r2
41044160:	a885883a 	add	r2,r21,r2
41044164:	11000017 	ldw	r4,0(r2)
41044168:	1046ef00 	call	41046ef0 <__hi0bits>
4104416c:	b885c83a 	sub	r2,r23,r2
41044170:	1585883a 	add	r2,r2,r22
41044174:	108007cc 	andi	r2,r2,31
41044178:	1000b326 	beq	r2,zero,41044448 <_dtoa_r+0xda0>
4104417c:	00c00804 	movi	r3,32
41044180:	1887c83a 	sub	r3,r3,r2
41044184:	01000104 	movi	r4,4
41044188:	20c2cd0e 	bge	r4,r3,41044cc0 <_dtoa_r+0x1618>
4104418c:	00c00704 	movi	r3,28
41044190:	1885c83a 	sub	r2,r3,r2
41044194:	d8c00817 	ldw	r3,32(sp)
41044198:	a0a9883a 	add	r20,r20,r2
4104419c:	b0ad883a 	add	r22,r22,r2
410441a0:	1887883a 	add	r3,r3,r2
410441a4:	d8c00815 	stw	r3,32(sp)
410441a8:	d9800817 	ldw	r6,32(sp)
410441ac:	0180040e 	bge	zero,r6,410441c0 <_dtoa_r+0xb18>
410441b0:	800b883a 	mov	r5,r16
410441b4:	e009883a 	mov	r4,fp
410441b8:	104737c0 	call	4104737c <__lshift>
410441bc:	1021883a 	mov	r16,r2
410441c0:	0580050e 	bge	zero,r22,410441d8 <_dtoa_r+0xb30>
410441c4:	a80b883a 	mov	r5,r21
410441c8:	b00d883a 	mov	r6,r22
410441cc:	e009883a 	mov	r4,fp
410441d0:	104737c0 	call	4104737c <__lshift>
410441d4:	102b883a 	mov	r21,r2
410441d8:	d9c00e17 	ldw	r7,56(sp)
410441dc:	3801211e 	bne	r7,zero,41044664 <_dtoa_r+0xfbc>
410441e0:	d9800617 	ldw	r6,24(sp)
410441e4:	0181380e 	bge	zero,r6,410446c8 <_dtoa_r+0x1020>
410441e8:	d8c00b17 	ldw	r3,44(sp)
410441ec:	1800ab1e 	bne	r3,zero,4104449c <_dtoa_r+0xdf4>
410441f0:	dc800717 	ldw	r18,28(sp)
410441f4:	dcc00617 	ldw	r19,24(sp)
410441f8:	9029883a 	mov	r20,r18
410441fc:	00000206 	br	41044208 <_dtoa_r+0xb60>
41044200:	1046ccc0 	call	41046ccc <__multadd>
41044204:	1021883a 	mov	r16,r2
41044208:	a80b883a 	mov	r5,r21
4104420c:	8009883a 	mov	r4,r16
41044210:	10434a80 	call	410434a8 <quorem>
41044214:	10800c04 	addi	r2,r2,48
41044218:	90800005 	stb	r2,0(r18)
4104421c:	94800044 	addi	r18,r18,1
41044220:	9507c83a 	sub	r3,r18,r20
41044224:	000f883a 	mov	r7,zero
41044228:	01800284 	movi	r6,10
4104422c:	800b883a 	mov	r5,r16
41044230:	e009883a 	mov	r4,fp
41044234:	1cfff216 	blt	r3,r19,41044200 <__alt_data_end+0xfffc5a00>
41044238:	1011883a 	mov	r8,r2
4104423c:	d8800617 	ldw	r2,24(sp)
41044240:	0082370e 	bge	zero,r2,41044b20 <_dtoa_r+0x1478>
41044244:	d9000717 	ldw	r4,28(sp)
41044248:	0025883a 	mov	r18,zero
4104424c:	20af883a 	add	r23,r4,r2
41044250:	01800044 	movi	r6,1
41044254:	800b883a 	mov	r5,r16
41044258:	e009883a 	mov	r4,fp
4104425c:	da001715 	stw	r8,92(sp)
41044260:	104737c0 	call	4104737c <__lshift>
41044264:	a80b883a 	mov	r5,r21
41044268:	1009883a 	mov	r4,r2
4104426c:	d8800915 	stw	r2,36(sp)
41044270:	10474c40 	call	410474c4 <__mcmp>
41044274:	da001717 	ldw	r8,92(sp)
41044278:	0081800e 	bge	zero,r2,4104487c <_dtoa_r+0x11d4>
4104427c:	b93fffc3 	ldbu	r4,-1(r23)
41044280:	b8bfffc4 	addi	r2,r23,-1
41044284:	1007883a 	mov	r3,r2
41044288:	01800e44 	movi	r6,57
4104428c:	d9c00717 	ldw	r7,28(sp)
41044290:	00000506 	br	410442a8 <_dtoa_r+0xc00>
41044294:	18ffffc4 	addi	r3,r3,-1
41044298:	11c12326 	beq	r2,r7,41044728 <_dtoa_r+0x1080>
4104429c:	19000003 	ldbu	r4,0(r3)
410442a0:	102f883a 	mov	r23,r2
410442a4:	10bfffc4 	addi	r2,r2,-1
410442a8:	21403fcc 	andi	r5,r4,255
410442ac:	2940201c 	xori	r5,r5,128
410442b0:	297fe004 	addi	r5,r5,-128
410442b4:	29bff726 	beq	r5,r6,41044294 <__alt_data_end+0xfffc5a94>
410442b8:	21000044 	addi	r4,r4,1
410442bc:	11000005 	stb	r4,0(r2)
410442c0:	a80b883a 	mov	r5,r21
410442c4:	e009883a 	mov	r4,fp
410442c8:	1046ca40 	call	41046ca4 <_Bfree>
410442cc:	883ea026 	beq	r17,zero,41043d50 <__alt_data_end+0xfffc5550>
410442d0:	90000426 	beq	r18,zero,410442e4 <_dtoa_r+0xc3c>
410442d4:	94400326 	beq	r18,r17,410442e4 <_dtoa_r+0xc3c>
410442d8:	900b883a 	mov	r5,r18
410442dc:	e009883a 	mov	r4,fp
410442e0:	1046ca40 	call	41046ca4 <_Bfree>
410442e4:	880b883a 	mov	r5,r17
410442e8:	e009883a 	mov	r4,fp
410442ec:	1046ca40 	call	41046ca4 <_Bfree>
410442f0:	003e9706 	br	41043d50 <__alt_data_end+0xfffc5550>
410442f4:	01800044 	movi	r6,1
410442f8:	d9800e15 	stw	r6,56(sp)
410442fc:	003d9606 	br	41043958 <__alt_data_end+0xfffc5158>
41044300:	d8800817 	ldw	r2,32(sp)
41044304:	d8c00517 	ldw	r3,20(sp)
41044308:	d8000d15 	stw	zero,52(sp)
4104430c:	10c5c83a 	sub	r2,r2,r3
41044310:	00c9c83a 	sub	r4,zero,r3
41044314:	d8800815 	stw	r2,32(sp)
41044318:	d9000a15 	stw	r4,40(sp)
4104431c:	003d9706 	br	4104397c <__alt_data_end+0xfffc517c>
41044320:	05adc83a 	sub	r22,zero,r22
41044324:	dd800815 	stw	r22,32(sp)
41044328:	002d883a 	mov	r22,zero
4104432c:	003d8e06 	br	41043968 <__alt_data_end+0xfffc5168>
41044330:	d9000517 	ldw	r4,20(sp)
41044334:	104d4500 	call	4104d450 <__floatsidf>
41044338:	100d883a 	mov	r6,r2
4104433c:	180f883a 	mov	r7,r3
41044340:	a009883a 	mov	r4,r20
41044344:	880b883a 	mov	r5,r17
41044348:	104c1640 	call	4104c164 <__eqdf2>
4104434c:	103d7126 	beq	r2,zero,41043914 <__alt_data_end+0xfffc5114>
41044350:	d9c00517 	ldw	r7,20(sp)
41044354:	39ffffc4 	addi	r7,r7,-1
41044358:	d9c00515 	stw	r7,20(sp)
4104435c:	003d6d06 	br	41043914 <__alt_data_end+0xfffc5114>
41044360:	dd400a17 	ldw	r21,40(sp)
41044364:	dd000817 	ldw	r20,32(sp)
41044368:	0023883a 	mov	r17,zero
4104436c:	003f4806 	br	41044090 <__alt_data_end+0xfffc5890>
41044370:	10e3c83a 	sub	r17,r2,r3
41044374:	9448983a 	sll	r4,r18,r17
41044378:	003d3206 	br	41043844 <__alt_data_end+0xfffc5044>
4104437c:	d8000e15 	stw	zero,56(sp)
41044380:	003d7506 	br	41043958 <__alt_data_end+0xfffc5158>
41044384:	b005883a 	mov	r2,r22
41044388:	003f4506 	br	410440a0 <__alt_data_end+0xfffc58a0>
4104438c:	dc000915 	stw	r16,36(sp)
41044390:	d9800a17 	ldw	r6,40(sp)
41044394:	d9400917 	ldw	r5,36(sp)
41044398:	e009883a 	mov	r4,fp
4104439c:	104723c0 	call	4104723c <__pow5mult>
410443a0:	1021883a 	mov	r16,r2
410443a4:	003f5a06 	br	41044110 <__alt_data_end+0xfffc5910>
410443a8:	01c00044 	movi	r7,1
410443ac:	d9c00b15 	stw	r7,44(sp)
410443b0:	d8802217 	ldw	r2,136(sp)
410443b4:	0081280e 	bge	zero,r2,41044858 <_dtoa_r+0x11b0>
410443b8:	100d883a 	mov	r6,r2
410443bc:	1021883a 	mov	r16,r2
410443c0:	d8800c15 	stw	r2,48(sp)
410443c4:	d8800615 	stw	r2,24(sp)
410443c8:	003d8806 	br	410439ec <__alt_data_end+0xfffc51ec>
410443cc:	d8800617 	ldw	r2,24(sp)
410443d0:	00be9b16 	blt	zero,r2,41043e40 <__alt_data_end+0xfffc5640>
410443d4:	10010f1e 	bne	r2,zero,41044814 <_dtoa_r+0x116c>
410443d8:	880b883a 	mov	r5,r17
410443dc:	000d883a 	mov	r6,zero
410443e0:	01d00534 	movhi	r7,16404
410443e4:	8009883a 	mov	r4,r16
410443e8:	104c3bc0 	call	4104c3bc <__muldf3>
410443ec:	900d883a 	mov	r6,r18
410443f0:	980f883a 	mov	r7,r19
410443f4:	1009883a 	mov	r4,r2
410443f8:	180b883a 	mov	r5,r3
410443fc:	104c1ec0 	call	4104c1ec <__gedf2>
41044400:	002b883a 	mov	r21,zero
41044404:	0023883a 	mov	r17,zero
41044408:	1000bf16 	blt	r2,zero,41044708 <_dtoa_r+0x1060>
4104440c:	d9802217 	ldw	r6,136(sp)
41044410:	ddc00717 	ldw	r23,28(sp)
41044414:	018c303a 	nor	r6,zero,r6
41044418:	d9800515 	stw	r6,20(sp)
4104441c:	a80b883a 	mov	r5,r21
41044420:	e009883a 	mov	r4,fp
41044424:	1046ca40 	call	41046ca4 <_Bfree>
41044428:	883e4926 	beq	r17,zero,41043d50 <__alt_data_end+0xfffc5550>
4104442c:	003fad06 	br	410442e4 <__alt_data_end+0xfffc5ae4>
41044430:	d9c01117 	ldw	r7,68(sp)
41044434:	3801bc26 	beq	r7,zero,41044b28 <_dtoa_r+0x1480>
41044438:	10810cc4 	addi	r2,r2,1075
4104443c:	dd400a17 	ldw	r21,40(sp)
41044440:	dd000817 	ldw	r20,32(sp)
41044444:	003f0a06 	br	41044070 <__alt_data_end+0xfffc5870>
41044448:	00800704 	movi	r2,28
4104444c:	d9000817 	ldw	r4,32(sp)
41044450:	a0a9883a 	add	r20,r20,r2
41044454:	b0ad883a 	add	r22,r22,r2
41044458:	2089883a 	add	r4,r4,r2
4104445c:	d9000815 	stw	r4,32(sp)
41044460:	003f5106 	br	410441a8 <__alt_data_end+0xfffc59a8>
41044464:	d8c00317 	ldw	r3,12(sp)
41044468:	b8c1fc0e 	bge	r23,r3,41044c5c <_dtoa_r+0x15b4>
4104446c:	0027883a 	mov	r19,zero
41044470:	b805883a 	mov	r2,r23
41044474:	003f3e06 	br	41044170 <__alt_data_end+0xfffc5970>
41044478:	880b883a 	mov	r5,r17
4104447c:	e009883a 	mov	r4,fp
41044480:	000f883a 	mov	r7,zero
41044484:	01800284 	movi	r6,10
41044488:	1046ccc0 	call	41046ccc <__multadd>
4104448c:	d9000c17 	ldw	r4,48(sp)
41044490:	1023883a 	mov	r17,r2
41044494:	0102040e 	bge	zero,r4,41044ca8 <_dtoa_r+0x1600>
41044498:	d9000615 	stw	r4,24(sp)
4104449c:	0500050e 	bge	zero,r20,410444b4 <_dtoa_r+0xe0c>
410444a0:	880b883a 	mov	r5,r17
410444a4:	a00d883a 	mov	r6,r20
410444a8:	e009883a 	mov	r4,fp
410444ac:	104737c0 	call	4104737c <__lshift>
410444b0:	1023883a 	mov	r17,r2
410444b4:	9801241e 	bne	r19,zero,41044948 <_dtoa_r+0x12a0>
410444b8:	8829883a 	mov	r20,r17
410444bc:	d9000617 	ldw	r4,24(sp)
410444c0:	dcc00717 	ldw	r19,28(sp)
410444c4:	9480004c 	andi	r18,r18,1
410444c8:	20bfffc4 	addi	r2,r4,-1
410444cc:	9885883a 	add	r2,r19,r2
410444d0:	d8800415 	stw	r2,16(sp)
410444d4:	dc800615 	stw	r18,24(sp)
410444d8:	a80b883a 	mov	r5,r21
410444dc:	8009883a 	mov	r4,r16
410444e0:	10434a80 	call	410434a8 <quorem>
410444e4:	880b883a 	mov	r5,r17
410444e8:	8009883a 	mov	r4,r16
410444ec:	102f883a 	mov	r23,r2
410444f0:	10474c40 	call	410474c4 <__mcmp>
410444f4:	a80b883a 	mov	r5,r21
410444f8:	a00d883a 	mov	r6,r20
410444fc:	e009883a 	mov	r4,fp
41044500:	102d883a 	mov	r22,r2
41044504:	10475240 	call	41047524 <__mdiff>
41044508:	1007883a 	mov	r3,r2
4104450c:	10800317 	ldw	r2,12(r2)
41044510:	bc800c04 	addi	r18,r23,48
41044514:	180b883a 	mov	r5,r3
41044518:	10004e1e 	bne	r2,zero,41044654 <_dtoa_r+0xfac>
4104451c:	8009883a 	mov	r4,r16
41044520:	d8c01615 	stw	r3,88(sp)
41044524:	10474c40 	call	410474c4 <__mcmp>
41044528:	d8c01617 	ldw	r3,88(sp)
4104452c:	e009883a 	mov	r4,fp
41044530:	d8801615 	stw	r2,88(sp)
41044534:	180b883a 	mov	r5,r3
41044538:	1046ca40 	call	41046ca4 <_Bfree>
4104453c:	d8801617 	ldw	r2,88(sp)
41044540:	1000041e 	bne	r2,zero,41044554 <_dtoa_r+0xeac>
41044544:	d9800317 	ldw	r6,12(sp)
41044548:	3000021e 	bne	r6,zero,41044554 <_dtoa_r+0xeac>
4104454c:	d8c00617 	ldw	r3,24(sp)
41044550:	18003726 	beq	r3,zero,41044630 <_dtoa_r+0xf88>
41044554:	b0002016 	blt	r22,zero,410445d8 <_dtoa_r+0xf30>
41044558:	b000041e 	bne	r22,zero,4104456c <_dtoa_r+0xec4>
4104455c:	d9000317 	ldw	r4,12(sp)
41044560:	2000021e 	bne	r4,zero,4104456c <_dtoa_r+0xec4>
41044564:	d8c00617 	ldw	r3,24(sp)
41044568:	18001b26 	beq	r3,zero,410445d8 <_dtoa_r+0xf30>
4104456c:	00810716 	blt	zero,r2,4104498c <_dtoa_r+0x12e4>
41044570:	d8c00417 	ldw	r3,16(sp)
41044574:	9d800044 	addi	r22,r19,1
41044578:	9c800005 	stb	r18,0(r19)
4104457c:	b02f883a 	mov	r23,r22
41044580:	98c10626 	beq	r19,r3,4104499c <_dtoa_r+0x12f4>
41044584:	800b883a 	mov	r5,r16
41044588:	000f883a 	mov	r7,zero
4104458c:	01800284 	movi	r6,10
41044590:	e009883a 	mov	r4,fp
41044594:	1046ccc0 	call	41046ccc <__multadd>
41044598:	1021883a 	mov	r16,r2
4104459c:	000f883a 	mov	r7,zero
410445a0:	01800284 	movi	r6,10
410445a4:	880b883a 	mov	r5,r17
410445a8:	e009883a 	mov	r4,fp
410445ac:	8d002526 	beq	r17,r20,41044644 <_dtoa_r+0xf9c>
410445b0:	1046ccc0 	call	41046ccc <__multadd>
410445b4:	a00b883a 	mov	r5,r20
410445b8:	000f883a 	mov	r7,zero
410445bc:	01800284 	movi	r6,10
410445c0:	e009883a 	mov	r4,fp
410445c4:	1023883a 	mov	r17,r2
410445c8:	1046ccc0 	call	41046ccc <__multadd>
410445cc:	1029883a 	mov	r20,r2
410445d0:	b027883a 	mov	r19,r22
410445d4:	003fc006 	br	410444d8 <__alt_data_end+0xfffc5cd8>
410445d8:	9011883a 	mov	r8,r18
410445dc:	00800e0e 	bge	zero,r2,41044618 <_dtoa_r+0xf70>
410445e0:	800b883a 	mov	r5,r16
410445e4:	01800044 	movi	r6,1
410445e8:	e009883a 	mov	r4,fp
410445ec:	da001715 	stw	r8,92(sp)
410445f0:	104737c0 	call	4104737c <__lshift>
410445f4:	a80b883a 	mov	r5,r21
410445f8:	1009883a 	mov	r4,r2
410445fc:	1021883a 	mov	r16,r2
41044600:	10474c40 	call	410474c4 <__mcmp>
41044604:	da001717 	ldw	r8,92(sp)
41044608:	0081960e 	bge	zero,r2,41044c64 <_dtoa_r+0x15bc>
4104460c:	00800e44 	movi	r2,57
41044610:	40817026 	beq	r8,r2,41044bd4 <_dtoa_r+0x152c>
41044614:	ba000c44 	addi	r8,r23,49
41044618:	8825883a 	mov	r18,r17
4104461c:	9dc00044 	addi	r23,r19,1
41044620:	9a000005 	stb	r8,0(r19)
41044624:	a023883a 	mov	r17,r20
41044628:	dc000915 	stw	r16,36(sp)
4104462c:	003f2406 	br	410442c0 <__alt_data_end+0xfffc5ac0>
41044630:	00800e44 	movi	r2,57
41044634:	9011883a 	mov	r8,r18
41044638:	90816626 	beq	r18,r2,41044bd4 <_dtoa_r+0x152c>
4104463c:	05bff516 	blt	zero,r22,41044614 <__alt_data_end+0xfffc5e14>
41044640:	003ff506 	br	41044618 <__alt_data_end+0xfffc5e18>
41044644:	1046ccc0 	call	41046ccc <__multadd>
41044648:	1023883a 	mov	r17,r2
4104464c:	1029883a 	mov	r20,r2
41044650:	003fdf06 	br	410445d0 <__alt_data_end+0xfffc5dd0>
41044654:	e009883a 	mov	r4,fp
41044658:	1046ca40 	call	41046ca4 <_Bfree>
4104465c:	00800044 	movi	r2,1
41044660:	003fbc06 	br	41044554 <__alt_data_end+0xfffc5d54>
41044664:	a80b883a 	mov	r5,r21
41044668:	8009883a 	mov	r4,r16
4104466c:	10474c40 	call	410474c4 <__mcmp>
41044670:	103edb0e 	bge	r2,zero,410441e0 <__alt_data_end+0xfffc59e0>
41044674:	800b883a 	mov	r5,r16
41044678:	000f883a 	mov	r7,zero
4104467c:	01800284 	movi	r6,10
41044680:	e009883a 	mov	r4,fp
41044684:	1046ccc0 	call	41046ccc <__multadd>
41044688:	1021883a 	mov	r16,r2
4104468c:	d8800517 	ldw	r2,20(sp)
41044690:	d8c00b17 	ldw	r3,44(sp)
41044694:	10bfffc4 	addi	r2,r2,-1
41044698:	d8800515 	stw	r2,20(sp)
4104469c:	183f761e 	bne	r3,zero,41044478 <__alt_data_end+0xfffc5c78>
410446a0:	d9000c17 	ldw	r4,48(sp)
410446a4:	0101730e 	bge	zero,r4,41044c74 <_dtoa_r+0x15cc>
410446a8:	d9000615 	stw	r4,24(sp)
410446ac:	003ed006 	br	410441f0 <__alt_data_end+0xfffc59f0>
410446b0:	00800084 	movi	r2,2
410446b4:	3081861e 	bne	r6,r2,41044cd0 <_dtoa_r+0x1628>
410446b8:	d8000b15 	stw	zero,44(sp)
410446bc:	003f3c06 	br	410443b0 <__alt_data_end+0xfffc5bb0>
410446c0:	dc000917 	ldw	r16,36(sp)
410446c4:	003e9206 	br	41044110 <__alt_data_end+0xfffc5910>
410446c8:	d9c00317 	ldw	r7,12(sp)
410446cc:	00800084 	movi	r2,2
410446d0:	11fec50e 	bge	r2,r7,410441e8 <__alt_data_end+0xfffc59e8>
410446d4:	d9000617 	ldw	r4,24(sp)
410446d8:	20013c1e 	bne	r4,zero,41044bcc <_dtoa_r+0x1524>
410446dc:	a80b883a 	mov	r5,r21
410446e0:	000f883a 	mov	r7,zero
410446e4:	01800144 	movi	r6,5
410446e8:	e009883a 	mov	r4,fp
410446ec:	1046ccc0 	call	41046ccc <__multadd>
410446f0:	100b883a 	mov	r5,r2
410446f4:	8009883a 	mov	r4,r16
410446f8:	102b883a 	mov	r21,r2
410446fc:	10474c40 	call	410474c4 <__mcmp>
41044700:	dc000915 	stw	r16,36(sp)
41044704:	00bf410e 	bge	zero,r2,4104440c <__alt_data_end+0xfffc5c0c>
41044708:	d9c00717 	ldw	r7,28(sp)
4104470c:	00800c44 	movi	r2,49
41044710:	38800005 	stb	r2,0(r7)
41044714:	d8800517 	ldw	r2,20(sp)
41044718:	3dc00044 	addi	r23,r7,1
4104471c:	10800044 	addi	r2,r2,1
41044720:	d8800515 	stw	r2,20(sp)
41044724:	003f3d06 	br	4104441c <__alt_data_end+0xfffc5c1c>
41044728:	d9800517 	ldw	r6,20(sp)
4104472c:	d9c00717 	ldw	r7,28(sp)
41044730:	00800c44 	movi	r2,49
41044734:	31800044 	addi	r6,r6,1
41044738:	d9800515 	stw	r6,20(sp)
4104473c:	38800005 	stb	r2,0(r7)
41044740:	003edf06 	br	410442c0 <__alt_data_end+0xfffc5ac0>
41044744:	d8000b15 	stw	zero,44(sp)
41044748:	003c9f06 	br	410439c8 <__alt_data_end+0xfffc51c8>
4104474c:	903e7e1e 	bne	r18,zero,41044148 <__alt_data_end+0xfffc5948>
41044750:	00800434 	movhi	r2,16
41044754:	10bfffc4 	addi	r2,r2,-1
41044758:	9884703a 	and	r2,r19,r2
4104475c:	1000ea1e 	bne	r2,zero,41044b08 <_dtoa_r+0x1460>
41044760:	9cdffc2c 	andhi	r19,r19,32752
41044764:	9800e826 	beq	r19,zero,41044b08 <_dtoa_r+0x1460>
41044768:	d9c00817 	ldw	r7,32(sp)
4104476c:	b5800044 	addi	r22,r22,1
41044770:	04c00044 	movi	r19,1
41044774:	39c00044 	addi	r7,r7,1
41044778:	d9c00815 	stw	r7,32(sp)
4104477c:	d8800d17 	ldw	r2,52(sp)
41044780:	103e721e 	bne	r2,zero,4104414c <__alt_data_end+0xfffc594c>
41044784:	00800044 	movi	r2,1
41044788:	003e7906 	br	41044170 <__alt_data_end+0xfffc5970>
4104478c:	8009883a 	mov	r4,r16
41044790:	104d4500 	call	4104d450 <__floatsidf>
41044794:	d9800f17 	ldw	r6,60(sp)
41044798:	d9c01017 	ldw	r7,64(sp)
4104479c:	1009883a 	mov	r4,r2
410447a0:	180b883a 	mov	r5,r3
410447a4:	104c3bc0 	call	4104c3bc <__muldf3>
410447a8:	000d883a 	mov	r6,zero
410447ac:	01d00734 	movhi	r7,16412
410447b0:	1009883a 	mov	r4,r2
410447b4:	180b883a 	mov	r5,r3
410447b8:	104afd00 	call	4104afd0 <__adddf3>
410447bc:	047f3034 	movhi	r17,64704
410447c0:	1021883a 	mov	r16,r2
410447c4:	1c63883a 	add	r17,r3,r17
410447c8:	d9000f17 	ldw	r4,60(sp)
410447cc:	d9401017 	ldw	r5,64(sp)
410447d0:	000d883a 	mov	r6,zero
410447d4:	01d00534 	movhi	r7,16404
410447d8:	104cad40 	call	4104cad4 <__subdf3>
410447dc:	800d883a 	mov	r6,r16
410447e0:	880f883a 	mov	r7,r17
410447e4:	1009883a 	mov	r4,r2
410447e8:	180b883a 	mov	r5,r3
410447ec:	102b883a 	mov	r21,r2
410447f0:	1829883a 	mov	r20,r3
410447f4:	104c1ec0 	call	4104c1ec <__gedf2>
410447f8:	00806c16 	blt	zero,r2,410449ac <_dtoa_r+0x1304>
410447fc:	89e0003c 	xorhi	r7,r17,32768
41044800:	800d883a 	mov	r6,r16
41044804:	a809883a 	mov	r4,r21
41044808:	a00b883a 	mov	r5,r20
4104480c:	104c2c80 	call	4104c2c8 <__ledf2>
41044810:	103d7e0e 	bge	r2,zero,41043e0c <__alt_data_end+0xfffc560c>
41044814:	002b883a 	mov	r21,zero
41044818:	0023883a 	mov	r17,zero
4104481c:	003efb06 	br	4104440c <__alt_data_end+0xfffc5c0c>
41044820:	d8800717 	ldw	r2,28(sp)
41044824:	003bd006 	br	41043768 <__alt_data_end+0xfffc4f68>
41044828:	d9000a17 	ldw	r4,40(sp)
4104482c:	d9800d17 	ldw	r6,52(sp)
41044830:	dd400a15 	stw	r21,40(sp)
41044834:	a905c83a 	sub	r2,r21,r4
41044838:	308d883a 	add	r6,r6,r2
4104483c:	d9800d15 	stw	r6,52(sp)
41044840:	002b883a 	mov	r21,zero
41044844:	003e0606 	br	41044060 <__alt_data_end+0xfffc5860>
41044848:	9023883a 	mov	r17,r18
4104484c:	9829883a 	mov	r20,r19
41044850:	04000084 	movi	r16,2
41044854:	003c9206 	br	41043aa0 <__alt_data_end+0xfffc52a0>
41044858:	04000044 	movi	r16,1
4104485c:	dc000c15 	stw	r16,48(sp)
41044860:	dc000615 	stw	r16,24(sp)
41044864:	dc002215 	stw	r16,136(sp)
41044868:	e0001115 	stw	zero,68(fp)
4104486c:	000b883a 	mov	r5,zero
41044870:	003c6906 	br	41043a18 <__alt_data_end+0xfffc5218>
41044874:	3021883a 	mov	r16,r6
41044878:	003ffb06 	br	41044868 <__alt_data_end+0xfffc6068>
4104487c:	1000021e 	bne	r2,zero,41044888 <_dtoa_r+0x11e0>
41044880:	4200004c 	andi	r8,r8,1
41044884:	403e7d1e 	bne	r8,zero,4104427c <__alt_data_end+0xfffc5a7c>
41044888:	01000c04 	movi	r4,48
4104488c:	00000106 	br	41044894 <_dtoa_r+0x11ec>
41044890:	102f883a 	mov	r23,r2
41044894:	b8bfffc4 	addi	r2,r23,-1
41044898:	10c00007 	ldb	r3,0(r2)
4104489c:	193ffc26 	beq	r3,r4,41044890 <__alt_data_end+0xfffc6090>
410448a0:	003e8706 	br	410442c0 <__alt_data_end+0xfffc5ac0>
410448a4:	d8800517 	ldw	r2,20(sp)
410448a8:	00a3c83a 	sub	r17,zero,r2
410448ac:	8800a426 	beq	r17,zero,41044b40 <_dtoa_r+0x1498>
410448b0:	888003cc 	andi	r2,r17,15
410448b4:	100490fa 	slli	r2,r2,3
410448b8:	00d04174 	movhi	r3,16645
410448bc:	18ffec04 	addi	r3,r3,-80
410448c0:	1885883a 	add	r2,r3,r2
410448c4:	11800017 	ldw	r6,0(r2)
410448c8:	11c00117 	ldw	r7,4(r2)
410448cc:	9009883a 	mov	r4,r18
410448d0:	980b883a 	mov	r5,r19
410448d4:	8823d13a 	srai	r17,r17,4
410448d8:	104c3bc0 	call	4104c3bc <__muldf3>
410448dc:	d8800f15 	stw	r2,60(sp)
410448e0:	d8c01015 	stw	r3,64(sp)
410448e4:	8800e826 	beq	r17,zero,41044c88 <_dtoa_r+0x15e0>
410448e8:	05104174 	movhi	r20,16645
410448ec:	a53fe204 	addi	r20,r20,-120
410448f0:	04000084 	movi	r16,2
410448f4:	8980004c 	andi	r6,r17,1
410448f8:	1009883a 	mov	r4,r2
410448fc:	8823d07a 	srai	r17,r17,1
41044900:	180b883a 	mov	r5,r3
41044904:	30000426 	beq	r6,zero,41044918 <_dtoa_r+0x1270>
41044908:	a1800017 	ldw	r6,0(r20)
4104490c:	a1c00117 	ldw	r7,4(r20)
41044910:	84000044 	addi	r16,r16,1
41044914:	104c3bc0 	call	4104c3bc <__muldf3>
41044918:	a5000204 	addi	r20,r20,8
4104491c:	883ff51e 	bne	r17,zero,410448f4 <__alt_data_end+0xfffc60f4>
41044920:	d8800f15 	stw	r2,60(sp)
41044924:	d8c01015 	stw	r3,64(sp)
41044928:	003c7606 	br	41043b04 <__alt_data_end+0xfffc5304>
4104492c:	00c00c04 	movi	r3,48
41044930:	10c00005 	stb	r3,0(r2)
41044934:	d8c00517 	ldw	r3,20(sp)
41044938:	bd3fffc3 	ldbu	r20,-1(r23)
4104493c:	18c00044 	addi	r3,r3,1
41044940:	d8c00515 	stw	r3,20(sp)
41044944:	003db906 	br	4104402c <__alt_data_end+0xfffc582c>
41044948:	89400117 	ldw	r5,4(r17)
4104494c:	e009883a 	mov	r4,fp
41044950:	1046bfc0 	call	41046bfc <_Balloc>
41044954:	89800417 	ldw	r6,16(r17)
41044958:	89400304 	addi	r5,r17,12
4104495c:	11000304 	addi	r4,r2,12
41044960:	31800084 	addi	r6,r6,2
41044964:	318d883a 	add	r6,r6,r6
41044968:	318d883a 	add	r6,r6,r6
4104496c:	1027883a 	mov	r19,r2
41044970:	1040ccc0 	call	41040ccc <memcpy>
41044974:	01800044 	movi	r6,1
41044978:	980b883a 	mov	r5,r19
4104497c:	e009883a 	mov	r4,fp
41044980:	104737c0 	call	4104737c <__lshift>
41044984:	1029883a 	mov	r20,r2
41044988:	003ecc06 	br	410444bc <__alt_data_end+0xfffc5cbc>
4104498c:	00800e44 	movi	r2,57
41044990:	90809026 	beq	r18,r2,41044bd4 <_dtoa_r+0x152c>
41044994:	92000044 	addi	r8,r18,1
41044998:	003f1f06 	br	41044618 <__alt_data_end+0xfffc5e18>
4104499c:	9011883a 	mov	r8,r18
410449a0:	8825883a 	mov	r18,r17
410449a4:	a023883a 	mov	r17,r20
410449a8:	003e2906 	br	41044250 <__alt_data_end+0xfffc5a50>
410449ac:	002b883a 	mov	r21,zero
410449b0:	0023883a 	mov	r17,zero
410449b4:	003f5406 	br	41044708 <__alt_data_end+0xfffc5f08>
410449b8:	61bfffc4 	addi	r6,r12,-1
410449bc:	300490fa 	slli	r2,r6,3
410449c0:	00d04174 	movhi	r3,16645
410449c4:	18ffec04 	addi	r3,r3,-80
410449c8:	1885883a 	add	r2,r3,r2
410449cc:	11000017 	ldw	r4,0(r2)
410449d0:	11400117 	ldw	r5,4(r2)
410449d4:	d8800717 	ldw	r2,28(sp)
410449d8:	880f883a 	mov	r7,r17
410449dc:	d9801215 	stw	r6,72(sp)
410449e0:	800d883a 	mov	r6,r16
410449e4:	db001615 	stw	r12,88(sp)
410449e8:	15c00044 	addi	r23,r2,1
410449ec:	104c3bc0 	call	4104c3bc <__muldf3>
410449f0:	d9401017 	ldw	r5,64(sp)
410449f4:	d9000f17 	ldw	r4,60(sp)
410449f8:	d8c01515 	stw	r3,84(sp)
410449fc:	d8801415 	stw	r2,80(sp)
41044a00:	104d3d00 	call	4104d3d0 <__fixdfsi>
41044a04:	1009883a 	mov	r4,r2
41044a08:	1021883a 	mov	r16,r2
41044a0c:	104d4500 	call	4104d450 <__floatsidf>
41044a10:	d9000f17 	ldw	r4,60(sp)
41044a14:	d9401017 	ldw	r5,64(sp)
41044a18:	100d883a 	mov	r6,r2
41044a1c:	180f883a 	mov	r7,r3
41044a20:	104cad40 	call	4104cad4 <__subdf3>
41044a24:	1829883a 	mov	r20,r3
41044a28:	d8c00717 	ldw	r3,28(sp)
41044a2c:	84000c04 	addi	r16,r16,48
41044a30:	1023883a 	mov	r17,r2
41044a34:	1c000005 	stb	r16,0(r3)
41044a38:	db001617 	ldw	r12,88(sp)
41044a3c:	00800044 	movi	r2,1
41044a40:	60802226 	beq	r12,r2,41044acc <_dtoa_r+0x1424>
41044a44:	d9c00717 	ldw	r7,28(sp)
41044a48:	8805883a 	mov	r2,r17
41044a4c:	b82b883a 	mov	r21,r23
41044a50:	3b19883a 	add	r12,r7,r12
41044a54:	6023883a 	mov	r17,r12
41044a58:	a007883a 	mov	r3,r20
41044a5c:	dc800f15 	stw	r18,60(sp)
41044a60:	000d883a 	mov	r6,zero
41044a64:	01d00934 	movhi	r7,16420
41044a68:	1009883a 	mov	r4,r2
41044a6c:	180b883a 	mov	r5,r3
41044a70:	104c3bc0 	call	4104c3bc <__muldf3>
41044a74:	180b883a 	mov	r5,r3
41044a78:	1009883a 	mov	r4,r2
41044a7c:	1829883a 	mov	r20,r3
41044a80:	1025883a 	mov	r18,r2
41044a84:	104d3d00 	call	4104d3d0 <__fixdfsi>
41044a88:	1009883a 	mov	r4,r2
41044a8c:	1021883a 	mov	r16,r2
41044a90:	104d4500 	call	4104d450 <__floatsidf>
41044a94:	100d883a 	mov	r6,r2
41044a98:	180f883a 	mov	r7,r3
41044a9c:	9009883a 	mov	r4,r18
41044aa0:	a00b883a 	mov	r5,r20
41044aa4:	84000c04 	addi	r16,r16,48
41044aa8:	104cad40 	call	4104cad4 <__subdf3>
41044aac:	ad400044 	addi	r21,r21,1
41044ab0:	ac3fffc5 	stb	r16,-1(r21)
41044ab4:	ac7fea1e 	bne	r21,r17,41044a60 <__alt_data_end+0xfffc6260>
41044ab8:	1023883a 	mov	r17,r2
41044abc:	d8801217 	ldw	r2,72(sp)
41044ac0:	dc800f17 	ldw	r18,60(sp)
41044ac4:	1829883a 	mov	r20,r3
41044ac8:	b8af883a 	add	r23,r23,r2
41044acc:	d9001417 	ldw	r4,80(sp)
41044ad0:	d9401517 	ldw	r5,84(sp)
41044ad4:	000d883a 	mov	r6,zero
41044ad8:	01cff834 	movhi	r7,16352
41044adc:	104afd00 	call	4104afd0 <__adddf3>
41044ae0:	880d883a 	mov	r6,r17
41044ae4:	a00f883a 	mov	r7,r20
41044ae8:	1009883a 	mov	r4,r2
41044aec:	180b883a 	mov	r5,r3
41044af0:	104c2c80 	call	4104c2c8 <__ledf2>
41044af4:	10003e0e 	bge	r2,zero,41044bf0 <_dtoa_r+0x1548>
41044af8:	d9001317 	ldw	r4,76(sp)
41044afc:	bd3fffc3 	ldbu	r20,-1(r23)
41044b00:	d9000515 	stw	r4,20(sp)
41044b04:	003d3b06 	br	41043ff4 <__alt_data_end+0xfffc57f4>
41044b08:	0027883a 	mov	r19,zero
41044b0c:	003f1b06 	br	4104477c <__alt_data_end+0xfffc5f7c>
41044b10:	d8800817 	ldw	r2,32(sp)
41044b14:	11e9c83a 	sub	r20,r2,r7
41044b18:	0005883a 	mov	r2,zero
41044b1c:	003d5406 	br	41044070 <__alt_data_end+0xfffc5870>
41044b20:	00800044 	movi	r2,1
41044b24:	003dc706 	br	41044244 <__alt_data_end+0xfffc5a44>
41044b28:	d8c00217 	ldw	r3,8(sp)
41044b2c:	00800d84 	movi	r2,54
41044b30:	dd400a17 	ldw	r21,40(sp)
41044b34:	10c5c83a 	sub	r2,r2,r3
41044b38:	dd000817 	ldw	r20,32(sp)
41044b3c:	003d4c06 	br	41044070 <__alt_data_end+0xfffc5870>
41044b40:	dc800f15 	stw	r18,60(sp)
41044b44:	dcc01015 	stw	r19,64(sp)
41044b48:	04000084 	movi	r16,2
41044b4c:	003bed06 	br	41043b04 <__alt_data_end+0xfffc5304>
41044b50:	d9000617 	ldw	r4,24(sp)
41044b54:	203f0d26 	beq	r4,zero,4104478c <__alt_data_end+0xfffc5f8c>
41044b58:	d9800c17 	ldw	r6,48(sp)
41044b5c:	01bcab0e 	bge	zero,r6,41043e0c <__alt_data_end+0xfffc560c>
41044b60:	d9401017 	ldw	r5,64(sp)
41044b64:	d9000f17 	ldw	r4,60(sp)
41044b68:	000d883a 	mov	r6,zero
41044b6c:	01d00934 	movhi	r7,16420
41044b70:	104c3bc0 	call	4104c3bc <__muldf3>
41044b74:	81000044 	addi	r4,r16,1
41044b78:	d8800f15 	stw	r2,60(sp)
41044b7c:	d8c01015 	stw	r3,64(sp)
41044b80:	104d4500 	call	4104d450 <__floatsidf>
41044b84:	d9800f17 	ldw	r6,60(sp)
41044b88:	d9c01017 	ldw	r7,64(sp)
41044b8c:	1009883a 	mov	r4,r2
41044b90:	180b883a 	mov	r5,r3
41044b94:	104c3bc0 	call	4104c3bc <__muldf3>
41044b98:	01d00734 	movhi	r7,16412
41044b9c:	000d883a 	mov	r6,zero
41044ba0:	1009883a 	mov	r4,r2
41044ba4:	180b883a 	mov	r5,r3
41044ba8:	104afd00 	call	4104afd0 <__adddf3>
41044bac:	d9c00517 	ldw	r7,20(sp)
41044bb0:	047f3034 	movhi	r17,64704
41044bb4:	1021883a 	mov	r16,r2
41044bb8:	39ffffc4 	addi	r7,r7,-1
41044bbc:	d9c01315 	stw	r7,76(sp)
41044bc0:	1c63883a 	add	r17,r3,r17
41044bc4:	db000c17 	ldw	r12,48(sp)
41044bc8:	003bea06 	br	41043b74 <__alt_data_end+0xfffc5374>
41044bcc:	dc000915 	stw	r16,36(sp)
41044bd0:	003e0e06 	br	4104440c <__alt_data_end+0xfffc5c0c>
41044bd4:	01000e44 	movi	r4,57
41044bd8:	8825883a 	mov	r18,r17
41044bdc:	9dc00044 	addi	r23,r19,1
41044be0:	99000005 	stb	r4,0(r19)
41044be4:	a023883a 	mov	r17,r20
41044be8:	dc000915 	stw	r16,36(sp)
41044bec:	003da406 	br	41044280 <__alt_data_end+0xfffc5a80>
41044bf0:	d9801417 	ldw	r6,80(sp)
41044bf4:	d9c01517 	ldw	r7,84(sp)
41044bf8:	0009883a 	mov	r4,zero
41044bfc:	014ff834 	movhi	r5,16352
41044c00:	104cad40 	call	4104cad4 <__subdf3>
41044c04:	880d883a 	mov	r6,r17
41044c08:	a00f883a 	mov	r7,r20
41044c0c:	1009883a 	mov	r4,r2
41044c10:	180b883a 	mov	r5,r3
41044c14:	104c1ec0 	call	4104c1ec <__gedf2>
41044c18:	00bc7c0e 	bge	zero,r2,41043e0c <__alt_data_end+0xfffc560c>
41044c1c:	01000c04 	movi	r4,48
41044c20:	00000106 	br	41044c28 <_dtoa_r+0x1580>
41044c24:	102f883a 	mov	r23,r2
41044c28:	b8bfffc4 	addi	r2,r23,-1
41044c2c:	10c00007 	ldb	r3,0(r2)
41044c30:	193ffc26 	beq	r3,r4,41044c24 <__alt_data_end+0xfffc6424>
41044c34:	d9801317 	ldw	r6,76(sp)
41044c38:	d9800515 	stw	r6,20(sp)
41044c3c:	003c4406 	br	41043d50 <__alt_data_end+0xfffc5550>
41044c40:	d9801317 	ldw	r6,76(sp)
41044c44:	d9800515 	stw	r6,20(sp)
41044c48:	003cea06 	br	41043ff4 <__alt_data_end+0xfffc57f4>
41044c4c:	dd800f17 	ldw	r22,60(sp)
41044c50:	dcc01017 	ldw	r19,64(sp)
41044c54:	dc801217 	ldw	r18,72(sp)
41044c58:	003c6c06 	br	41043e0c <__alt_data_end+0xfffc560c>
41044c5c:	903e031e 	bne	r18,zero,4104446c <__alt_data_end+0xfffc5c6c>
41044c60:	003ebb06 	br	41044750 <__alt_data_end+0xfffc5f50>
41044c64:	103e6c1e 	bne	r2,zero,41044618 <__alt_data_end+0xfffc5e18>
41044c68:	4080004c 	andi	r2,r8,1
41044c6c:	103e6a26 	beq	r2,zero,41044618 <__alt_data_end+0xfffc5e18>
41044c70:	003e6606 	br	4104460c <__alt_data_end+0xfffc5e0c>
41044c74:	d8c00317 	ldw	r3,12(sp)
41044c78:	00800084 	movi	r2,2
41044c7c:	10c02916 	blt	r2,r3,41044d24 <_dtoa_r+0x167c>
41044c80:	d9000c17 	ldw	r4,48(sp)
41044c84:	003e8806 	br	410446a8 <__alt_data_end+0xfffc5ea8>
41044c88:	04000084 	movi	r16,2
41044c8c:	003b9d06 	br	41043b04 <__alt_data_end+0xfffc5304>
41044c90:	d9001317 	ldw	r4,76(sp)
41044c94:	d9000515 	stw	r4,20(sp)
41044c98:	003cd606 	br	41043ff4 <__alt_data_end+0xfffc57f4>
41044c9c:	d8801317 	ldw	r2,76(sp)
41044ca0:	d8800515 	stw	r2,20(sp)
41044ca4:	003c2a06 	br	41043d50 <__alt_data_end+0xfffc5550>
41044ca8:	d9800317 	ldw	r6,12(sp)
41044cac:	00800084 	movi	r2,2
41044cb0:	11801516 	blt	r2,r6,41044d08 <_dtoa_r+0x1660>
41044cb4:	d9c00c17 	ldw	r7,48(sp)
41044cb8:	d9c00615 	stw	r7,24(sp)
41044cbc:	003df706 	br	4104449c <__alt_data_end+0xfffc5c9c>
41044cc0:	193d3926 	beq	r3,r4,410441a8 <__alt_data_end+0xfffc59a8>
41044cc4:	00c00f04 	movi	r3,60
41044cc8:	1885c83a 	sub	r2,r3,r2
41044ccc:	003ddf06 	br	4104444c <__alt_data_end+0xfffc5c4c>
41044cd0:	e009883a 	mov	r4,fp
41044cd4:	e0001115 	stw	zero,68(fp)
41044cd8:	000b883a 	mov	r5,zero
41044cdc:	1046bfc0 	call	41046bfc <_Balloc>
41044ce0:	d8800715 	stw	r2,28(sp)
41044ce4:	d8c00717 	ldw	r3,28(sp)
41044ce8:	00bfffc4 	movi	r2,-1
41044cec:	01000044 	movi	r4,1
41044cf0:	d8800c15 	stw	r2,48(sp)
41044cf4:	e0c01015 	stw	r3,64(fp)
41044cf8:	d9000b15 	stw	r4,44(sp)
41044cfc:	d8800615 	stw	r2,24(sp)
41044d00:	d8002215 	stw	zero,136(sp)
41044d04:	003c4106 	br	41043e0c <__alt_data_end+0xfffc560c>
41044d08:	d8c00c17 	ldw	r3,48(sp)
41044d0c:	d8c00615 	stw	r3,24(sp)
41044d10:	003e7006 	br	410446d4 <__alt_data_end+0xfffc5ed4>
41044d14:	04400044 	movi	r17,1
41044d18:	003b2006 	br	4104399c <__alt_data_end+0xfffc519c>
41044d1c:	000b883a 	mov	r5,zero
41044d20:	003b3d06 	br	41043a18 <__alt_data_end+0xfffc5218>
41044d24:	d8800c17 	ldw	r2,48(sp)
41044d28:	d8800615 	stw	r2,24(sp)
41044d2c:	003e6906 	br	410446d4 <__alt_data_end+0xfffc5ed4>

41044d30 <__sflush_r>:
41044d30:	2880030b 	ldhu	r2,12(r5)
41044d34:	defffb04 	addi	sp,sp,-20
41044d38:	dcc00315 	stw	r19,12(sp)
41044d3c:	dc400115 	stw	r17,4(sp)
41044d40:	dfc00415 	stw	ra,16(sp)
41044d44:	dc800215 	stw	r18,8(sp)
41044d48:	dc000015 	stw	r16,0(sp)
41044d4c:	10c0020c 	andi	r3,r2,8
41044d50:	2823883a 	mov	r17,r5
41044d54:	2027883a 	mov	r19,r4
41044d58:	1800311e 	bne	r3,zero,41044e20 <__sflush_r+0xf0>
41044d5c:	28c00117 	ldw	r3,4(r5)
41044d60:	10820014 	ori	r2,r2,2048
41044d64:	2880030d 	sth	r2,12(r5)
41044d68:	00c04b0e 	bge	zero,r3,41044e98 <__sflush_r+0x168>
41044d6c:	8a000a17 	ldw	r8,40(r17)
41044d70:	40002326 	beq	r8,zero,41044e00 <__sflush_r+0xd0>
41044d74:	9c000017 	ldw	r16,0(r19)
41044d78:	10c4000c 	andi	r3,r2,4096
41044d7c:	98000015 	stw	zero,0(r19)
41044d80:	18004826 	beq	r3,zero,41044ea4 <__sflush_r+0x174>
41044d84:	89801417 	ldw	r6,80(r17)
41044d88:	10c0010c 	andi	r3,r2,4
41044d8c:	18000626 	beq	r3,zero,41044da8 <__sflush_r+0x78>
41044d90:	88c00117 	ldw	r3,4(r17)
41044d94:	88800c17 	ldw	r2,48(r17)
41044d98:	30cdc83a 	sub	r6,r6,r3
41044d9c:	10000226 	beq	r2,zero,41044da8 <__sflush_r+0x78>
41044da0:	88800f17 	ldw	r2,60(r17)
41044da4:	308dc83a 	sub	r6,r6,r2
41044da8:	89400717 	ldw	r5,28(r17)
41044dac:	000f883a 	mov	r7,zero
41044db0:	9809883a 	mov	r4,r19
41044db4:	403ee83a 	callr	r8
41044db8:	00ffffc4 	movi	r3,-1
41044dbc:	10c04426 	beq	r2,r3,41044ed0 <__sflush_r+0x1a0>
41044dc0:	88c0030b 	ldhu	r3,12(r17)
41044dc4:	89000417 	ldw	r4,16(r17)
41044dc8:	88000115 	stw	zero,4(r17)
41044dcc:	197dffcc 	andi	r5,r3,63487
41044dd0:	8940030d 	sth	r5,12(r17)
41044dd4:	89000015 	stw	r4,0(r17)
41044dd8:	18c4000c 	andi	r3,r3,4096
41044ddc:	18002c1e 	bne	r3,zero,41044e90 <__sflush_r+0x160>
41044de0:	89400c17 	ldw	r5,48(r17)
41044de4:	9c000015 	stw	r16,0(r19)
41044de8:	28000526 	beq	r5,zero,41044e00 <__sflush_r+0xd0>
41044dec:	88801004 	addi	r2,r17,64
41044df0:	28800226 	beq	r5,r2,41044dfc <__sflush_r+0xcc>
41044df4:	9809883a 	mov	r4,r19
41044df8:	104549c0 	call	4104549c <_free_r>
41044dfc:	88000c15 	stw	zero,48(r17)
41044e00:	0005883a 	mov	r2,zero
41044e04:	dfc00417 	ldw	ra,16(sp)
41044e08:	dcc00317 	ldw	r19,12(sp)
41044e0c:	dc800217 	ldw	r18,8(sp)
41044e10:	dc400117 	ldw	r17,4(sp)
41044e14:	dc000017 	ldw	r16,0(sp)
41044e18:	dec00504 	addi	sp,sp,20
41044e1c:	f800283a 	ret
41044e20:	2c800417 	ldw	r18,16(r5)
41044e24:	903ff626 	beq	r18,zero,41044e00 <__alt_data_end+0xfffc6600>
41044e28:	2c000017 	ldw	r16,0(r5)
41044e2c:	108000cc 	andi	r2,r2,3
41044e30:	2c800015 	stw	r18,0(r5)
41044e34:	84a1c83a 	sub	r16,r16,r18
41044e38:	1000131e 	bne	r2,zero,41044e88 <__sflush_r+0x158>
41044e3c:	28800517 	ldw	r2,20(r5)
41044e40:	88800215 	stw	r2,8(r17)
41044e44:	04000316 	blt	zero,r16,41044e54 <__sflush_r+0x124>
41044e48:	003fed06 	br	41044e00 <__alt_data_end+0xfffc6600>
41044e4c:	90a5883a 	add	r18,r18,r2
41044e50:	043feb0e 	bge	zero,r16,41044e00 <__alt_data_end+0xfffc6600>
41044e54:	88800917 	ldw	r2,36(r17)
41044e58:	89400717 	ldw	r5,28(r17)
41044e5c:	800f883a 	mov	r7,r16
41044e60:	900d883a 	mov	r6,r18
41044e64:	9809883a 	mov	r4,r19
41044e68:	103ee83a 	callr	r2
41044e6c:	80a1c83a 	sub	r16,r16,r2
41044e70:	00bff616 	blt	zero,r2,41044e4c <__alt_data_end+0xfffc664c>
41044e74:	88c0030b 	ldhu	r3,12(r17)
41044e78:	00bfffc4 	movi	r2,-1
41044e7c:	18c01014 	ori	r3,r3,64
41044e80:	88c0030d 	sth	r3,12(r17)
41044e84:	003fdf06 	br	41044e04 <__alt_data_end+0xfffc6604>
41044e88:	0005883a 	mov	r2,zero
41044e8c:	003fec06 	br	41044e40 <__alt_data_end+0xfffc6640>
41044e90:	88801415 	stw	r2,80(r17)
41044e94:	003fd206 	br	41044de0 <__alt_data_end+0xfffc65e0>
41044e98:	28c00f17 	ldw	r3,60(r5)
41044e9c:	00ffb316 	blt	zero,r3,41044d6c <__alt_data_end+0xfffc656c>
41044ea0:	003fd706 	br	41044e00 <__alt_data_end+0xfffc6600>
41044ea4:	89400717 	ldw	r5,28(r17)
41044ea8:	000d883a 	mov	r6,zero
41044eac:	01c00044 	movi	r7,1
41044eb0:	9809883a 	mov	r4,r19
41044eb4:	403ee83a 	callr	r8
41044eb8:	100d883a 	mov	r6,r2
41044ebc:	00bfffc4 	movi	r2,-1
41044ec0:	30801426 	beq	r6,r2,41044f14 <__sflush_r+0x1e4>
41044ec4:	8880030b 	ldhu	r2,12(r17)
41044ec8:	8a000a17 	ldw	r8,40(r17)
41044ecc:	003fae06 	br	41044d88 <__alt_data_end+0xfffc6588>
41044ed0:	98c00017 	ldw	r3,0(r19)
41044ed4:	183fba26 	beq	r3,zero,41044dc0 <__alt_data_end+0xfffc65c0>
41044ed8:	01000744 	movi	r4,29
41044edc:	19000626 	beq	r3,r4,41044ef8 <__sflush_r+0x1c8>
41044ee0:	01000584 	movi	r4,22
41044ee4:	19000426 	beq	r3,r4,41044ef8 <__sflush_r+0x1c8>
41044ee8:	88c0030b 	ldhu	r3,12(r17)
41044eec:	18c01014 	ori	r3,r3,64
41044ef0:	88c0030d 	sth	r3,12(r17)
41044ef4:	003fc306 	br	41044e04 <__alt_data_end+0xfffc6604>
41044ef8:	8880030b 	ldhu	r2,12(r17)
41044efc:	88c00417 	ldw	r3,16(r17)
41044f00:	88000115 	stw	zero,4(r17)
41044f04:	10bdffcc 	andi	r2,r2,63487
41044f08:	8880030d 	sth	r2,12(r17)
41044f0c:	88c00015 	stw	r3,0(r17)
41044f10:	003fb306 	br	41044de0 <__alt_data_end+0xfffc65e0>
41044f14:	98800017 	ldw	r2,0(r19)
41044f18:	103fea26 	beq	r2,zero,41044ec4 <__alt_data_end+0xfffc66c4>
41044f1c:	00c00744 	movi	r3,29
41044f20:	10c00226 	beq	r2,r3,41044f2c <__sflush_r+0x1fc>
41044f24:	00c00584 	movi	r3,22
41044f28:	10c0031e 	bne	r2,r3,41044f38 <__sflush_r+0x208>
41044f2c:	9c000015 	stw	r16,0(r19)
41044f30:	0005883a 	mov	r2,zero
41044f34:	003fb306 	br	41044e04 <__alt_data_end+0xfffc6604>
41044f38:	88c0030b 	ldhu	r3,12(r17)
41044f3c:	3005883a 	mov	r2,r6
41044f40:	18c01014 	ori	r3,r3,64
41044f44:	88c0030d 	sth	r3,12(r17)
41044f48:	003fae06 	br	41044e04 <__alt_data_end+0xfffc6604>

41044f4c <_fflush_r>:
41044f4c:	defffd04 	addi	sp,sp,-12
41044f50:	dc000115 	stw	r16,4(sp)
41044f54:	dfc00215 	stw	ra,8(sp)
41044f58:	2021883a 	mov	r16,r4
41044f5c:	20000226 	beq	r4,zero,41044f68 <_fflush_r+0x1c>
41044f60:	20800e17 	ldw	r2,56(r4)
41044f64:	10000c26 	beq	r2,zero,41044f98 <_fflush_r+0x4c>
41044f68:	2880030f 	ldh	r2,12(r5)
41044f6c:	1000051e 	bne	r2,zero,41044f84 <_fflush_r+0x38>
41044f70:	0005883a 	mov	r2,zero
41044f74:	dfc00217 	ldw	ra,8(sp)
41044f78:	dc000117 	ldw	r16,4(sp)
41044f7c:	dec00304 	addi	sp,sp,12
41044f80:	f800283a 	ret
41044f84:	8009883a 	mov	r4,r16
41044f88:	dfc00217 	ldw	ra,8(sp)
41044f8c:	dc000117 	ldw	r16,4(sp)
41044f90:	dec00304 	addi	sp,sp,12
41044f94:	1044d301 	jmpi	41044d30 <__sflush_r>
41044f98:	d9400015 	stw	r5,0(sp)
41044f9c:	10453280 	call	41045328 <__sinit>
41044fa0:	d9400017 	ldw	r5,0(sp)
41044fa4:	003ff006 	br	41044f68 <__alt_data_end+0xfffc6768>

41044fa8 <fflush>:
41044fa8:	20000526 	beq	r4,zero,41044fc0 <fflush+0x18>
41044fac:	00904174 	movhi	r2,16645
41044fb0:	10871d04 	addi	r2,r2,7284
41044fb4:	200b883a 	mov	r5,r4
41044fb8:	11000017 	ldw	r4,0(r2)
41044fbc:	1044f4c1 	jmpi	41044f4c <_fflush_r>
41044fc0:	00904174 	movhi	r2,16645
41044fc4:	10871c04 	addi	r2,r2,7280
41044fc8:	11000017 	ldw	r4,0(r2)
41044fcc:	01504134 	movhi	r5,16644
41044fd0:	2953d304 	addi	r5,r5,20300
41044fd4:	1045d2c1 	jmpi	41045d2c <_fwalk_reent>

41044fd8 <__fp_unlock>:
41044fd8:	0005883a 	mov	r2,zero
41044fdc:	f800283a 	ret

41044fe0 <_cleanup_r>:
41044fe0:	01504174 	movhi	r5,16645
41044fe4:	2967af04 	addi	r5,r5,-24900
41044fe8:	1045d2c1 	jmpi	41045d2c <_fwalk_reent>

41044fec <__sinit.part.1>:
41044fec:	defff704 	addi	sp,sp,-36
41044ff0:	00d04134 	movhi	r3,16644
41044ff4:	dfc00815 	stw	ra,32(sp)
41044ff8:	ddc00715 	stw	r23,28(sp)
41044ffc:	dd800615 	stw	r22,24(sp)
41045000:	dd400515 	stw	r21,20(sp)
41045004:	dd000415 	stw	r20,16(sp)
41045008:	dcc00315 	stw	r19,12(sp)
4104500c:	dc800215 	stw	r18,8(sp)
41045010:	dc400115 	stw	r17,4(sp)
41045014:	dc000015 	stw	r16,0(sp)
41045018:	18d3f804 	addi	r3,r3,20448
4104501c:	24000117 	ldw	r16,4(r4)
41045020:	20c00f15 	stw	r3,60(r4)
41045024:	2080bb04 	addi	r2,r4,748
41045028:	00c000c4 	movi	r3,3
4104502c:	20c0b915 	stw	r3,740(r4)
41045030:	2080ba15 	stw	r2,744(r4)
41045034:	2000b815 	stw	zero,736(r4)
41045038:	05c00204 	movi	r23,8
4104503c:	00800104 	movi	r2,4
41045040:	2025883a 	mov	r18,r4
41045044:	b80d883a 	mov	r6,r23
41045048:	81001704 	addi	r4,r16,92
4104504c:	000b883a 	mov	r5,zero
41045050:	80000015 	stw	zero,0(r16)
41045054:	80000115 	stw	zero,4(r16)
41045058:	80000215 	stw	zero,8(r16)
4104505c:	8080030d 	sth	r2,12(r16)
41045060:	80001915 	stw	zero,100(r16)
41045064:	8000038d 	sth	zero,14(r16)
41045068:	80000415 	stw	zero,16(r16)
4104506c:	80000515 	stw	zero,20(r16)
41045070:	80000615 	stw	zero,24(r16)
41045074:	1046ad40 	call	41046ad4 <memset>
41045078:	05904174 	movhi	r22,16645
4104507c:	94400217 	ldw	r17,8(r18)
41045080:	05504174 	movhi	r21,16645
41045084:	05104174 	movhi	r20,16645
41045088:	04d04174 	movhi	r19,16645
4104508c:	b5a0e304 	addi	r22,r22,-31860
41045090:	ad60fa04 	addi	r21,r21,-31768
41045094:	a5211904 	addi	r20,r20,-31644
41045098:	9ce13004 	addi	r19,r19,-31552
4104509c:	85800815 	stw	r22,32(r16)
410450a0:	85400915 	stw	r21,36(r16)
410450a4:	85000a15 	stw	r20,40(r16)
410450a8:	84c00b15 	stw	r19,44(r16)
410450ac:	84000715 	stw	r16,28(r16)
410450b0:	00800284 	movi	r2,10
410450b4:	8880030d 	sth	r2,12(r17)
410450b8:	00800044 	movi	r2,1
410450bc:	b80d883a 	mov	r6,r23
410450c0:	89001704 	addi	r4,r17,92
410450c4:	000b883a 	mov	r5,zero
410450c8:	88000015 	stw	zero,0(r17)
410450cc:	88000115 	stw	zero,4(r17)
410450d0:	88000215 	stw	zero,8(r17)
410450d4:	88001915 	stw	zero,100(r17)
410450d8:	8880038d 	sth	r2,14(r17)
410450dc:	88000415 	stw	zero,16(r17)
410450e0:	88000515 	stw	zero,20(r17)
410450e4:	88000615 	stw	zero,24(r17)
410450e8:	1046ad40 	call	41046ad4 <memset>
410450ec:	94000317 	ldw	r16,12(r18)
410450f0:	00800484 	movi	r2,18
410450f4:	8c400715 	stw	r17,28(r17)
410450f8:	8d800815 	stw	r22,32(r17)
410450fc:	8d400915 	stw	r21,36(r17)
41045100:	8d000a15 	stw	r20,40(r17)
41045104:	8cc00b15 	stw	r19,44(r17)
41045108:	8080030d 	sth	r2,12(r16)
4104510c:	00800084 	movi	r2,2
41045110:	80000015 	stw	zero,0(r16)
41045114:	80000115 	stw	zero,4(r16)
41045118:	80000215 	stw	zero,8(r16)
4104511c:	80001915 	stw	zero,100(r16)
41045120:	8080038d 	sth	r2,14(r16)
41045124:	80000415 	stw	zero,16(r16)
41045128:	80000515 	stw	zero,20(r16)
4104512c:	80000615 	stw	zero,24(r16)
41045130:	b80d883a 	mov	r6,r23
41045134:	000b883a 	mov	r5,zero
41045138:	81001704 	addi	r4,r16,92
4104513c:	1046ad40 	call	41046ad4 <memset>
41045140:	00800044 	movi	r2,1
41045144:	84000715 	stw	r16,28(r16)
41045148:	85800815 	stw	r22,32(r16)
4104514c:	85400915 	stw	r21,36(r16)
41045150:	85000a15 	stw	r20,40(r16)
41045154:	84c00b15 	stw	r19,44(r16)
41045158:	90800e15 	stw	r2,56(r18)
4104515c:	dfc00817 	ldw	ra,32(sp)
41045160:	ddc00717 	ldw	r23,28(sp)
41045164:	dd800617 	ldw	r22,24(sp)
41045168:	dd400517 	ldw	r21,20(sp)
4104516c:	dd000417 	ldw	r20,16(sp)
41045170:	dcc00317 	ldw	r19,12(sp)
41045174:	dc800217 	ldw	r18,8(sp)
41045178:	dc400117 	ldw	r17,4(sp)
4104517c:	dc000017 	ldw	r16,0(sp)
41045180:	dec00904 	addi	sp,sp,36
41045184:	f800283a 	ret

41045188 <__fp_lock>:
41045188:	0005883a 	mov	r2,zero
4104518c:	f800283a 	ret

41045190 <__sfmoreglue>:
41045190:	defffc04 	addi	sp,sp,-16
41045194:	dc400115 	stw	r17,4(sp)
41045198:	2c7fffc4 	addi	r17,r5,-1
4104519c:	8c401a24 	muli	r17,r17,104
410451a0:	dc800215 	stw	r18,8(sp)
410451a4:	2825883a 	mov	r18,r5
410451a8:	89401d04 	addi	r5,r17,116
410451ac:	dc000015 	stw	r16,0(sp)
410451b0:	dfc00315 	stw	ra,12(sp)
410451b4:	10460880 	call	41046088 <_malloc_r>
410451b8:	1021883a 	mov	r16,r2
410451bc:	10000726 	beq	r2,zero,410451dc <__sfmoreglue+0x4c>
410451c0:	11000304 	addi	r4,r2,12
410451c4:	10000015 	stw	zero,0(r2)
410451c8:	14800115 	stw	r18,4(r2)
410451cc:	11000215 	stw	r4,8(r2)
410451d0:	89801a04 	addi	r6,r17,104
410451d4:	000b883a 	mov	r5,zero
410451d8:	1046ad40 	call	41046ad4 <memset>
410451dc:	8005883a 	mov	r2,r16
410451e0:	dfc00317 	ldw	ra,12(sp)
410451e4:	dc800217 	ldw	r18,8(sp)
410451e8:	dc400117 	ldw	r17,4(sp)
410451ec:	dc000017 	ldw	r16,0(sp)
410451f0:	dec00404 	addi	sp,sp,16
410451f4:	f800283a 	ret

410451f8 <__sfp>:
410451f8:	defffb04 	addi	sp,sp,-20
410451fc:	dc000015 	stw	r16,0(sp)
41045200:	04104174 	movhi	r16,16645
41045204:	84071c04 	addi	r16,r16,7280
41045208:	dcc00315 	stw	r19,12(sp)
4104520c:	2027883a 	mov	r19,r4
41045210:	81000017 	ldw	r4,0(r16)
41045214:	dfc00415 	stw	ra,16(sp)
41045218:	dc800215 	stw	r18,8(sp)
4104521c:	20800e17 	ldw	r2,56(r4)
41045220:	dc400115 	stw	r17,4(sp)
41045224:	1000021e 	bne	r2,zero,41045230 <__sfp+0x38>
41045228:	1044fec0 	call	41044fec <__sinit.part.1>
4104522c:	81000017 	ldw	r4,0(r16)
41045230:	2480b804 	addi	r18,r4,736
41045234:	047fffc4 	movi	r17,-1
41045238:	91000117 	ldw	r4,4(r18)
4104523c:	94000217 	ldw	r16,8(r18)
41045240:	213fffc4 	addi	r4,r4,-1
41045244:	20000a16 	blt	r4,zero,41045270 <__sfp+0x78>
41045248:	8080030f 	ldh	r2,12(r16)
4104524c:	10000c26 	beq	r2,zero,41045280 <__sfp+0x88>
41045250:	80c01d04 	addi	r3,r16,116
41045254:	00000206 	br	41045260 <__sfp+0x68>
41045258:	18bfe60f 	ldh	r2,-104(r3)
4104525c:	10000826 	beq	r2,zero,41045280 <__sfp+0x88>
41045260:	213fffc4 	addi	r4,r4,-1
41045264:	1c3ffd04 	addi	r16,r3,-12
41045268:	18c01a04 	addi	r3,r3,104
4104526c:	247ffa1e 	bne	r4,r17,41045258 <__alt_data_end+0xfffc6a58>
41045270:	90800017 	ldw	r2,0(r18)
41045274:	10001d26 	beq	r2,zero,410452ec <__sfp+0xf4>
41045278:	1025883a 	mov	r18,r2
4104527c:	003fee06 	br	41045238 <__alt_data_end+0xfffc6a38>
41045280:	00bfffc4 	movi	r2,-1
41045284:	8080038d 	sth	r2,14(r16)
41045288:	00800044 	movi	r2,1
4104528c:	8080030d 	sth	r2,12(r16)
41045290:	80001915 	stw	zero,100(r16)
41045294:	80000015 	stw	zero,0(r16)
41045298:	80000215 	stw	zero,8(r16)
4104529c:	80000115 	stw	zero,4(r16)
410452a0:	80000415 	stw	zero,16(r16)
410452a4:	80000515 	stw	zero,20(r16)
410452a8:	80000615 	stw	zero,24(r16)
410452ac:	01800204 	movi	r6,8
410452b0:	000b883a 	mov	r5,zero
410452b4:	81001704 	addi	r4,r16,92
410452b8:	1046ad40 	call	41046ad4 <memset>
410452bc:	8005883a 	mov	r2,r16
410452c0:	80000c15 	stw	zero,48(r16)
410452c4:	80000d15 	stw	zero,52(r16)
410452c8:	80001115 	stw	zero,68(r16)
410452cc:	80001215 	stw	zero,72(r16)
410452d0:	dfc00417 	ldw	ra,16(sp)
410452d4:	dcc00317 	ldw	r19,12(sp)
410452d8:	dc800217 	ldw	r18,8(sp)
410452dc:	dc400117 	ldw	r17,4(sp)
410452e0:	dc000017 	ldw	r16,0(sp)
410452e4:	dec00504 	addi	sp,sp,20
410452e8:	f800283a 	ret
410452ec:	01400104 	movi	r5,4
410452f0:	9809883a 	mov	r4,r19
410452f4:	10451900 	call	41045190 <__sfmoreglue>
410452f8:	90800015 	stw	r2,0(r18)
410452fc:	103fde1e 	bne	r2,zero,41045278 <__alt_data_end+0xfffc6a78>
41045300:	00800304 	movi	r2,12
41045304:	98800015 	stw	r2,0(r19)
41045308:	0005883a 	mov	r2,zero
4104530c:	003ff006 	br	410452d0 <__alt_data_end+0xfffc6ad0>

41045310 <_cleanup>:
41045310:	00904174 	movhi	r2,16645
41045314:	10871c04 	addi	r2,r2,7280
41045318:	11000017 	ldw	r4,0(r2)
4104531c:	01504174 	movhi	r5,16645
41045320:	2967af04 	addi	r5,r5,-24900
41045324:	1045d2c1 	jmpi	41045d2c <_fwalk_reent>

41045328 <__sinit>:
41045328:	20800e17 	ldw	r2,56(r4)
4104532c:	10000126 	beq	r2,zero,41045334 <__sinit+0xc>
41045330:	f800283a 	ret
41045334:	1044fec1 	jmpi	41044fec <__sinit.part.1>

41045338 <__sfp_lock_acquire>:
41045338:	f800283a 	ret

4104533c <__sfp_lock_release>:
4104533c:	f800283a 	ret

41045340 <__sinit_lock_acquire>:
41045340:	f800283a 	ret

41045344 <__sinit_lock_release>:
41045344:	f800283a 	ret

41045348 <__fp_lock_all>:
41045348:	00904174 	movhi	r2,16645
4104534c:	10871d04 	addi	r2,r2,7284
41045350:	11000017 	ldw	r4,0(r2)
41045354:	01504134 	movhi	r5,16644
41045358:	29546204 	addi	r5,r5,20872
4104535c:	1045c681 	jmpi	41045c68 <_fwalk>

41045360 <__fp_unlock_all>:
41045360:	00904174 	movhi	r2,16645
41045364:	10871d04 	addi	r2,r2,7284
41045368:	11000017 	ldw	r4,0(r2)
4104536c:	01504134 	movhi	r5,16644
41045370:	2953f604 	addi	r5,r5,20440
41045374:	1045c681 	jmpi	41045c68 <_fwalk>

41045378 <_malloc_trim_r>:
41045378:	defffb04 	addi	sp,sp,-20
4104537c:	dcc00315 	stw	r19,12(sp)
41045380:	04d04174 	movhi	r19,16645
41045384:	dc800215 	stw	r18,8(sp)
41045388:	dc400115 	stw	r17,4(sp)
4104538c:	dc000015 	stw	r16,0(sp)
41045390:	dfc00415 	stw	ra,16(sp)
41045394:	2821883a 	mov	r16,r5
41045398:	9cc19804 	addi	r19,r19,1632
4104539c:	2025883a 	mov	r18,r4
410453a0:	104dbfc0 	call	4104dbfc <__malloc_lock>
410453a4:	98800217 	ldw	r2,8(r19)
410453a8:	14400117 	ldw	r17,4(r2)
410453ac:	00bfff04 	movi	r2,-4
410453b0:	88a2703a 	and	r17,r17,r2
410453b4:	8c21c83a 	sub	r16,r17,r16
410453b8:	8403fbc4 	addi	r16,r16,4079
410453bc:	8020d33a 	srli	r16,r16,12
410453c0:	0083ffc4 	movi	r2,4095
410453c4:	843fffc4 	addi	r16,r16,-1
410453c8:	8020933a 	slli	r16,r16,12
410453cc:	1400060e 	bge	r2,r16,410453e8 <_malloc_trim_r+0x70>
410453d0:	000b883a 	mov	r5,zero
410453d4:	9009883a 	mov	r4,r18
410453d8:	10483380 	call	41048338 <_sbrk_r>
410453dc:	98c00217 	ldw	r3,8(r19)
410453e0:	1c47883a 	add	r3,r3,r17
410453e4:	10c00a26 	beq	r2,r3,41045410 <_malloc_trim_r+0x98>
410453e8:	9009883a 	mov	r4,r18
410453ec:	104dc200 	call	4104dc20 <__malloc_unlock>
410453f0:	0005883a 	mov	r2,zero
410453f4:	dfc00417 	ldw	ra,16(sp)
410453f8:	dcc00317 	ldw	r19,12(sp)
410453fc:	dc800217 	ldw	r18,8(sp)
41045400:	dc400117 	ldw	r17,4(sp)
41045404:	dc000017 	ldw	r16,0(sp)
41045408:	dec00504 	addi	sp,sp,20
4104540c:	f800283a 	ret
41045410:	040bc83a 	sub	r5,zero,r16
41045414:	9009883a 	mov	r4,r18
41045418:	10483380 	call	41048338 <_sbrk_r>
4104541c:	00ffffc4 	movi	r3,-1
41045420:	10c00d26 	beq	r2,r3,41045458 <_malloc_trim_r+0xe0>
41045424:	00d04174 	movhi	r3,16645
41045428:	18cdf404 	addi	r3,r3,14288
4104542c:	18800017 	ldw	r2,0(r3)
41045430:	99000217 	ldw	r4,8(r19)
41045434:	8c23c83a 	sub	r17,r17,r16
41045438:	8c400054 	ori	r17,r17,1
4104543c:	1421c83a 	sub	r16,r2,r16
41045440:	24400115 	stw	r17,4(r4)
41045444:	9009883a 	mov	r4,r18
41045448:	1c000015 	stw	r16,0(r3)
4104544c:	104dc200 	call	4104dc20 <__malloc_unlock>
41045450:	00800044 	movi	r2,1
41045454:	003fe706 	br	410453f4 <__alt_data_end+0xfffc6bf4>
41045458:	000b883a 	mov	r5,zero
4104545c:	9009883a 	mov	r4,r18
41045460:	10483380 	call	41048338 <_sbrk_r>
41045464:	99000217 	ldw	r4,8(r19)
41045468:	014003c4 	movi	r5,15
4104546c:	1107c83a 	sub	r3,r2,r4
41045470:	28ffdd0e 	bge	r5,r3,410453e8 <__alt_data_end+0xfffc6be8>
41045474:	01504174 	movhi	r5,16645
41045478:	29471f04 	addi	r5,r5,7292
4104547c:	29400017 	ldw	r5,0(r5)
41045480:	18c00054 	ori	r3,r3,1
41045484:	20c00115 	stw	r3,4(r4)
41045488:	00d04174 	movhi	r3,16645
4104548c:	1145c83a 	sub	r2,r2,r5
41045490:	18cdf404 	addi	r3,r3,14288
41045494:	18800015 	stw	r2,0(r3)
41045498:	003fd306 	br	410453e8 <__alt_data_end+0xfffc6be8>

4104549c <_free_r>:
4104549c:	28004126 	beq	r5,zero,410455a4 <_free_r+0x108>
410454a0:	defffd04 	addi	sp,sp,-12
410454a4:	dc400115 	stw	r17,4(sp)
410454a8:	dc000015 	stw	r16,0(sp)
410454ac:	2023883a 	mov	r17,r4
410454b0:	2821883a 	mov	r16,r5
410454b4:	dfc00215 	stw	ra,8(sp)
410454b8:	104dbfc0 	call	4104dbfc <__malloc_lock>
410454bc:	81ffff17 	ldw	r7,-4(r16)
410454c0:	00bfff84 	movi	r2,-2
410454c4:	01104174 	movhi	r4,16645
410454c8:	81bffe04 	addi	r6,r16,-8
410454cc:	3884703a 	and	r2,r7,r2
410454d0:	21019804 	addi	r4,r4,1632
410454d4:	308b883a 	add	r5,r6,r2
410454d8:	2a400117 	ldw	r9,4(r5)
410454dc:	22000217 	ldw	r8,8(r4)
410454e0:	00ffff04 	movi	r3,-4
410454e4:	48c6703a 	and	r3,r9,r3
410454e8:	2a005726 	beq	r5,r8,41045648 <_free_r+0x1ac>
410454ec:	28c00115 	stw	r3,4(r5)
410454f0:	39c0004c 	andi	r7,r7,1
410454f4:	3800091e 	bne	r7,zero,4104551c <_free_r+0x80>
410454f8:	823ffe17 	ldw	r8,-8(r16)
410454fc:	22400204 	addi	r9,r4,8
41045500:	320dc83a 	sub	r6,r6,r8
41045504:	31c00217 	ldw	r7,8(r6)
41045508:	1205883a 	add	r2,r2,r8
4104550c:	3a406526 	beq	r7,r9,410456a4 <_free_r+0x208>
41045510:	32000317 	ldw	r8,12(r6)
41045514:	3a000315 	stw	r8,12(r7)
41045518:	41c00215 	stw	r7,8(r8)
4104551c:	28cf883a 	add	r7,r5,r3
41045520:	39c00117 	ldw	r7,4(r7)
41045524:	39c0004c 	andi	r7,r7,1
41045528:	38003a26 	beq	r7,zero,41045614 <_free_r+0x178>
4104552c:	10c00054 	ori	r3,r2,1
41045530:	30c00115 	stw	r3,4(r6)
41045534:	3087883a 	add	r3,r6,r2
41045538:	18800015 	stw	r2,0(r3)
4104553c:	00c07fc4 	movi	r3,511
41045540:	18801936 	bltu	r3,r2,410455a8 <_free_r+0x10c>
41045544:	1004d0fa 	srli	r2,r2,3
41045548:	01c00044 	movi	r7,1
4104554c:	21400117 	ldw	r5,4(r4)
41045550:	10c00044 	addi	r3,r2,1
41045554:	18c7883a 	add	r3,r3,r3
41045558:	1005d0ba 	srai	r2,r2,2
4104555c:	18c7883a 	add	r3,r3,r3
41045560:	18c7883a 	add	r3,r3,r3
41045564:	1907883a 	add	r3,r3,r4
41045568:	3884983a 	sll	r2,r7,r2
4104556c:	19c00017 	ldw	r7,0(r3)
41045570:	1a3ffe04 	addi	r8,r3,-8
41045574:	1144b03a 	or	r2,r2,r5
41045578:	32000315 	stw	r8,12(r6)
4104557c:	31c00215 	stw	r7,8(r6)
41045580:	20800115 	stw	r2,4(r4)
41045584:	19800015 	stw	r6,0(r3)
41045588:	39800315 	stw	r6,12(r7)
4104558c:	8809883a 	mov	r4,r17
41045590:	dfc00217 	ldw	ra,8(sp)
41045594:	dc400117 	ldw	r17,4(sp)
41045598:	dc000017 	ldw	r16,0(sp)
4104559c:	dec00304 	addi	sp,sp,12
410455a0:	104dc201 	jmpi	4104dc20 <__malloc_unlock>
410455a4:	f800283a 	ret
410455a8:	100ad27a 	srli	r5,r2,9
410455ac:	00c00104 	movi	r3,4
410455b0:	19404a36 	bltu	r3,r5,410456dc <_free_r+0x240>
410455b4:	100ad1ba 	srli	r5,r2,6
410455b8:	28c00e44 	addi	r3,r5,57
410455bc:	18c7883a 	add	r3,r3,r3
410455c0:	29400e04 	addi	r5,r5,56
410455c4:	18c7883a 	add	r3,r3,r3
410455c8:	18c7883a 	add	r3,r3,r3
410455cc:	1909883a 	add	r4,r3,r4
410455d0:	20c00017 	ldw	r3,0(r4)
410455d4:	01d04174 	movhi	r7,16645
410455d8:	213ffe04 	addi	r4,r4,-8
410455dc:	39c19804 	addi	r7,r7,1632
410455e0:	20c04426 	beq	r4,r3,410456f4 <_free_r+0x258>
410455e4:	01ffff04 	movi	r7,-4
410455e8:	19400117 	ldw	r5,4(r3)
410455ec:	29ca703a 	and	r5,r5,r7
410455f0:	1140022e 	bgeu	r2,r5,410455fc <_free_r+0x160>
410455f4:	18c00217 	ldw	r3,8(r3)
410455f8:	20fffb1e 	bne	r4,r3,410455e8 <__alt_data_end+0xfffc6de8>
410455fc:	19000317 	ldw	r4,12(r3)
41045600:	31000315 	stw	r4,12(r6)
41045604:	30c00215 	stw	r3,8(r6)
41045608:	21800215 	stw	r6,8(r4)
4104560c:	19800315 	stw	r6,12(r3)
41045610:	003fde06 	br	4104558c <__alt_data_end+0xfffc6d8c>
41045614:	29c00217 	ldw	r7,8(r5)
41045618:	10c5883a 	add	r2,r2,r3
4104561c:	00d04174 	movhi	r3,16645
41045620:	18c19a04 	addi	r3,r3,1640
41045624:	38c03b26 	beq	r7,r3,41045714 <_free_r+0x278>
41045628:	2a000317 	ldw	r8,12(r5)
4104562c:	11400054 	ori	r5,r2,1
41045630:	3087883a 	add	r3,r6,r2
41045634:	3a000315 	stw	r8,12(r7)
41045638:	41c00215 	stw	r7,8(r8)
4104563c:	31400115 	stw	r5,4(r6)
41045640:	18800015 	stw	r2,0(r3)
41045644:	003fbd06 	br	4104553c <__alt_data_end+0xfffc6d3c>
41045648:	39c0004c 	andi	r7,r7,1
4104564c:	10c5883a 	add	r2,r2,r3
41045650:	3800071e 	bne	r7,zero,41045670 <_free_r+0x1d4>
41045654:	81fffe17 	ldw	r7,-8(r16)
41045658:	31cdc83a 	sub	r6,r6,r7
4104565c:	30c00317 	ldw	r3,12(r6)
41045660:	31400217 	ldw	r5,8(r6)
41045664:	11c5883a 	add	r2,r2,r7
41045668:	28c00315 	stw	r3,12(r5)
4104566c:	19400215 	stw	r5,8(r3)
41045670:	10c00054 	ori	r3,r2,1
41045674:	30c00115 	stw	r3,4(r6)
41045678:	00d04174 	movhi	r3,16645
4104567c:	18c72004 	addi	r3,r3,7296
41045680:	18c00017 	ldw	r3,0(r3)
41045684:	21800215 	stw	r6,8(r4)
41045688:	10ffc036 	bltu	r2,r3,4104558c <__alt_data_end+0xfffc6d8c>
4104568c:	00904174 	movhi	r2,16645
41045690:	108dec04 	addi	r2,r2,14256
41045694:	11400017 	ldw	r5,0(r2)
41045698:	8809883a 	mov	r4,r17
4104569c:	10453780 	call	41045378 <_malloc_trim_r>
410456a0:	003fba06 	br	4104558c <__alt_data_end+0xfffc6d8c>
410456a4:	28c9883a 	add	r4,r5,r3
410456a8:	21000117 	ldw	r4,4(r4)
410456ac:	2100004c 	andi	r4,r4,1
410456b0:	2000391e 	bne	r4,zero,41045798 <_free_r+0x2fc>
410456b4:	29c00217 	ldw	r7,8(r5)
410456b8:	29000317 	ldw	r4,12(r5)
410456bc:	1885883a 	add	r2,r3,r2
410456c0:	10c00054 	ori	r3,r2,1
410456c4:	39000315 	stw	r4,12(r7)
410456c8:	21c00215 	stw	r7,8(r4)
410456cc:	30c00115 	stw	r3,4(r6)
410456d0:	308d883a 	add	r6,r6,r2
410456d4:	30800015 	stw	r2,0(r6)
410456d8:	003fac06 	br	4104558c <__alt_data_end+0xfffc6d8c>
410456dc:	00c00504 	movi	r3,20
410456e0:	19401536 	bltu	r3,r5,41045738 <_free_r+0x29c>
410456e4:	28c01704 	addi	r3,r5,92
410456e8:	18c7883a 	add	r3,r3,r3
410456ec:	294016c4 	addi	r5,r5,91
410456f0:	003fb406 	br	410455c4 <__alt_data_end+0xfffc6dc4>
410456f4:	280bd0ba 	srai	r5,r5,2
410456f8:	00c00044 	movi	r3,1
410456fc:	38800117 	ldw	r2,4(r7)
41045700:	194a983a 	sll	r5,r3,r5
41045704:	2007883a 	mov	r3,r4
41045708:	2884b03a 	or	r2,r5,r2
4104570c:	38800115 	stw	r2,4(r7)
41045710:	003fbb06 	br	41045600 <__alt_data_end+0xfffc6e00>
41045714:	21800515 	stw	r6,20(r4)
41045718:	21800415 	stw	r6,16(r4)
4104571c:	10c00054 	ori	r3,r2,1
41045720:	31c00315 	stw	r7,12(r6)
41045724:	31c00215 	stw	r7,8(r6)
41045728:	30c00115 	stw	r3,4(r6)
4104572c:	308d883a 	add	r6,r6,r2
41045730:	30800015 	stw	r2,0(r6)
41045734:	003f9506 	br	4104558c <__alt_data_end+0xfffc6d8c>
41045738:	00c01504 	movi	r3,84
4104573c:	19400536 	bltu	r3,r5,41045754 <_free_r+0x2b8>
41045740:	100ad33a 	srli	r5,r2,12
41045744:	28c01bc4 	addi	r3,r5,111
41045748:	18c7883a 	add	r3,r3,r3
4104574c:	29401b84 	addi	r5,r5,110
41045750:	003f9c06 	br	410455c4 <__alt_data_end+0xfffc6dc4>
41045754:	00c05504 	movi	r3,340
41045758:	19400536 	bltu	r3,r5,41045770 <_free_r+0x2d4>
4104575c:	100ad3fa 	srli	r5,r2,15
41045760:	28c01e04 	addi	r3,r5,120
41045764:	18c7883a 	add	r3,r3,r3
41045768:	29401dc4 	addi	r5,r5,119
4104576c:	003f9506 	br	410455c4 <__alt_data_end+0xfffc6dc4>
41045770:	00c15504 	movi	r3,1364
41045774:	19400536 	bltu	r3,r5,4104578c <_free_r+0x2f0>
41045778:	100ad4ba 	srli	r5,r2,18
4104577c:	28c01f44 	addi	r3,r5,125
41045780:	18c7883a 	add	r3,r3,r3
41045784:	29401f04 	addi	r5,r5,124
41045788:	003f8e06 	br	410455c4 <__alt_data_end+0xfffc6dc4>
4104578c:	00c03f84 	movi	r3,254
41045790:	01401f84 	movi	r5,126
41045794:	003f8b06 	br	410455c4 <__alt_data_end+0xfffc6dc4>
41045798:	10c00054 	ori	r3,r2,1
4104579c:	30c00115 	stw	r3,4(r6)
410457a0:	308d883a 	add	r6,r6,r2
410457a4:	30800015 	stw	r2,0(r6)
410457a8:	003f7806 	br	4104558c <__alt_data_end+0xfffc6d8c>

410457ac <__sfvwrite_r>:
410457ac:	30800217 	ldw	r2,8(r6)
410457b0:	10006726 	beq	r2,zero,41045950 <__sfvwrite_r+0x1a4>
410457b4:	28c0030b 	ldhu	r3,12(r5)
410457b8:	defff404 	addi	sp,sp,-48
410457bc:	dd400715 	stw	r21,28(sp)
410457c0:	dd000615 	stw	r20,24(sp)
410457c4:	dc000215 	stw	r16,8(sp)
410457c8:	dfc00b15 	stw	ra,44(sp)
410457cc:	df000a15 	stw	fp,40(sp)
410457d0:	ddc00915 	stw	r23,36(sp)
410457d4:	dd800815 	stw	r22,32(sp)
410457d8:	dcc00515 	stw	r19,20(sp)
410457dc:	dc800415 	stw	r18,16(sp)
410457e0:	dc400315 	stw	r17,12(sp)
410457e4:	1880020c 	andi	r2,r3,8
410457e8:	2821883a 	mov	r16,r5
410457ec:	202b883a 	mov	r21,r4
410457f0:	3029883a 	mov	r20,r6
410457f4:	10002726 	beq	r2,zero,41045894 <__sfvwrite_r+0xe8>
410457f8:	28800417 	ldw	r2,16(r5)
410457fc:	10002526 	beq	r2,zero,41045894 <__sfvwrite_r+0xe8>
41045800:	1880008c 	andi	r2,r3,2
41045804:	a4400017 	ldw	r17,0(r20)
41045808:	10002a26 	beq	r2,zero,410458b4 <__sfvwrite_r+0x108>
4104580c:	05a00034 	movhi	r22,32768
41045810:	0027883a 	mov	r19,zero
41045814:	0025883a 	mov	r18,zero
41045818:	b5bf0004 	addi	r22,r22,-1024
4104581c:	980d883a 	mov	r6,r19
41045820:	a809883a 	mov	r4,r21
41045824:	90004626 	beq	r18,zero,41045940 <__sfvwrite_r+0x194>
41045828:	900f883a 	mov	r7,r18
4104582c:	b480022e 	bgeu	r22,r18,41045838 <__sfvwrite_r+0x8c>
41045830:	01e00034 	movhi	r7,32768
41045834:	39ff0004 	addi	r7,r7,-1024
41045838:	80800917 	ldw	r2,36(r16)
4104583c:	81400717 	ldw	r5,28(r16)
41045840:	103ee83a 	callr	r2
41045844:	0080570e 	bge	zero,r2,410459a4 <__sfvwrite_r+0x1f8>
41045848:	a0c00217 	ldw	r3,8(r20)
4104584c:	98a7883a 	add	r19,r19,r2
41045850:	90a5c83a 	sub	r18,r18,r2
41045854:	1885c83a 	sub	r2,r3,r2
41045858:	a0800215 	stw	r2,8(r20)
4104585c:	103fef1e 	bne	r2,zero,4104581c <__alt_data_end+0xfffc701c>
41045860:	0005883a 	mov	r2,zero
41045864:	dfc00b17 	ldw	ra,44(sp)
41045868:	df000a17 	ldw	fp,40(sp)
4104586c:	ddc00917 	ldw	r23,36(sp)
41045870:	dd800817 	ldw	r22,32(sp)
41045874:	dd400717 	ldw	r21,28(sp)
41045878:	dd000617 	ldw	r20,24(sp)
4104587c:	dcc00517 	ldw	r19,20(sp)
41045880:	dc800417 	ldw	r18,16(sp)
41045884:	dc400317 	ldw	r17,12(sp)
41045888:	dc000217 	ldw	r16,8(sp)
4104588c:	dec00c04 	addi	sp,sp,48
41045890:	f800283a 	ret
41045894:	800b883a 	mov	r5,r16
41045898:	a809883a 	mov	r4,r21
4104589c:	10433540 	call	41043354 <__swsetup_r>
410458a0:	1000eb1e 	bne	r2,zero,41045c50 <__sfvwrite_r+0x4a4>
410458a4:	80c0030b 	ldhu	r3,12(r16)
410458a8:	a4400017 	ldw	r17,0(r20)
410458ac:	1880008c 	andi	r2,r3,2
410458b0:	103fd61e 	bne	r2,zero,4104580c <__alt_data_end+0xfffc700c>
410458b4:	1880004c 	andi	r2,r3,1
410458b8:	10003f1e 	bne	r2,zero,410459b8 <__sfvwrite_r+0x20c>
410458bc:	0039883a 	mov	fp,zero
410458c0:	0025883a 	mov	r18,zero
410458c4:	90001a26 	beq	r18,zero,41045930 <__sfvwrite_r+0x184>
410458c8:	1880800c 	andi	r2,r3,512
410458cc:	84c00217 	ldw	r19,8(r16)
410458d0:	10002126 	beq	r2,zero,41045958 <__sfvwrite_r+0x1ac>
410458d4:	982f883a 	mov	r23,r19
410458d8:	94c09336 	bltu	r18,r19,41045b28 <__sfvwrite_r+0x37c>
410458dc:	1881200c 	andi	r2,r3,1152
410458e0:	10009e1e 	bne	r2,zero,41045b5c <__sfvwrite_r+0x3b0>
410458e4:	81000017 	ldw	r4,0(r16)
410458e8:	b80d883a 	mov	r6,r23
410458ec:	e00b883a 	mov	r5,fp
410458f0:	10469780 	call	41046978 <memmove>
410458f4:	80c00217 	ldw	r3,8(r16)
410458f8:	81000017 	ldw	r4,0(r16)
410458fc:	9005883a 	mov	r2,r18
41045900:	1ce7c83a 	sub	r19,r3,r19
41045904:	25cf883a 	add	r7,r4,r23
41045908:	84c00215 	stw	r19,8(r16)
4104590c:	81c00015 	stw	r7,0(r16)
41045910:	a0c00217 	ldw	r3,8(r20)
41045914:	e0b9883a 	add	fp,fp,r2
41045918:	90a5c83a 	sub	r18,r18,r2
4104591c:	18a7c83a 	sub	r19,r3,r2
41045920:	a4c00215 	stw	r19,8(r20)
41045924:	983fce26 	beq	r19,zero,41045860 <__alt_data_end+0xfffc7060>
41045928:	80c0030b 	ldhu	r3,12(r16)
4104592c:	903fe61e 	bne	r18,zero,410458c8 <__alt_data_end+0xfffc70c8>
41045930:	8f000017 	ldw	fp,0(r17)
41045934:	8c800117 	ldw	r18,4(r17)
41045938:	8c400204 	addi	r17,r17,8
4104593c:	003fe106 	br	410458c4 <__alt_data_end+0xfffc70c4>
41045940:	8cc00017 	ldw	r19,0(r17)
41045944:	8c800117 	ldw	r18,4(r17)
41045948:	8c400204 	addi	r17,r17,8
4104594c:	003fb306 	br	4104581c <__alt_data_end+0xfffc701c>
41045950:	0005883a 	mov	r2,zero
41045954:	f800283a 	ret
41045958:	81000017 	ldw	r4,0(r16)
4104595c:	80800417 	ldw	r2,16(r16)
41045960:	11005736 	bltu	r2,r4,41045ac0 <__sfvwrite_r+0x314>
41045964:	85c00517 	ldw	r23,20(r16)
41045968:	95c05536 	bltu	r18,r23,41045ac0 <__sfvwrite_r+0x314>
4104596c:	00a00034 	movhi	r2,32768
41045970:	10bfffc4 	addi	r2,r2,-1
41045974:	9009883a 	mov	r4,r18
41045978:	1480012e 	bgeu	r2,r18,41045980 <__sfvwrite_r+0x1d4>
4104597c:	1009883a 	mov	r4,r2
41045980:	b80b883a 	mov	r5,r23
41045984:	1040b180 	call	41040b18 <__divsi3>
41045988:	15cf383a 	mul	r7,r2,r23
4104598c:	81400717 	ldw	r5,28(r16)
41045990:	80800917 	ldw	r2,36(r16)
41045994:	e00d883a 	mov	r6,fp
41045998:	a809883a 	mov	r4,r21
4104599c:	103ee83a 	callr	r2
410459a0:	00bfdb16 	blt	zero,r2,41045910 <__alt_data_end+0xfffc7110>
410459a4:	8080030b 	ldhu	r2,12(r16)
410459a8:	10801014 	ori	r2,r2,64
410459ac:	8080030d 	sth	r2,12(r16)
410459b0:	00bfffc4 	movi	r2,-1
410459b4:	003fab06 	br	41045864 <__alt_data_end+0xfffc7064>
410459b8:	0027883a 	mov	r19,zero
410459bc:	0011883a 	mov	r8,zero
410459c0:	0039883a 	mov	fp,zero
410459c4:	0025883a 	mov	r18,zero
410459c8:	90001f26 	beq	r18,zero,41045a48 <__sfvwrite_r+0x29c>
410459cc:	40005a26 	beq	r8,zero,41045b38 <__sfvwrite_r+0x38c>
410459d0:	982d883a 	mov	r22,r19
410459d4:	94c0012e 	bgeu	r18,r19,410459dc <__sfvwrite_r+0x230>
410459d8:	902d883a 	mov	r22,r18
410459dc:	81000017 	ldw	r4,0(r16)
410459e0:	80800417 	ldw	r2,16(r16)
410459e4:	b02f883a 	mov	r23,r22
410459e8:	81c00517 	ldw	r7,20(r16)
410459ec:	1100032e 	bgeu	r2,r4,410459fc <__sfvwrite_r+0x250>
410459f0:	80c00217 	ldw	r3,8(r16)
410459f4:	38c7883a 	add	r3,r7,r3
410459f8:	1d801816 	blt	r3,r22,41045a5c <__sfvwrite_r+0x2b0>
410459fc:	b1c03e16 	blt	r22,r7,41045af8 <__sfvwrite_r+0x34c>
41045a00:	80800917 	ldw	r2,36(r16)
41045a04:	81400717 	ldw	r5,28(r16)
41045a08:	e00d883a 	mov	r6,fp
41045a0c:	da000115 	stw	r8,4(sp)
41045a10:	a809883a 	mov	r4,r21
41045a14:	103ee83a 	callr	r2
41045a18:	102f883a 	mov	r23,r2
41045a1c:	da000117 	ldw	r8,4(sp)
41045a20:	00bfe00e 	bge	zero,r2,410459a4 <__alt_data_end+0xfffc71a4>
41045a24:	9de7c83a 	sub	r19,r19,r23
41045a28:	98001f26 	beq	r19,zero,41045aa8 <__sfvwrite_r+0x2fc>
41045a2c:	a0800217 	ldw	r2,8(r20)
41045a30:	e5f9883a 	add	fp,fp,r23
41045a34:	95e5c83a 	sub	r18,r18,r23
41045a38:	15efc83a 	sub	r23,r2,r23
41045a3c:	a5c00215 	stw	r23,8(r20)
41045a40:	b83f8726 	beq	r23,zero,41045860 <__alt_data_end+0xfffc7060>
41045a44:	903fe11e 	bne	r18,zero,410459cc <__alt_data_end+0xfffc71cc>
41045a48:	8f000017 	ldw	fp,0(r17)
41045a4c:	8c800117 	ldw	r18,4(r17)
41045a50:	0011883a 	mov	r8,zero
41045a54:	8c400204 	addi	r17,r17,8
41045a58:	003fdb06 	br	410459c8 <__alt_data_end+0xfffc71c8>
41045a5c:	180d883a 	mov	r6,r3
41045a60:	e00b883a 	mov	r5,fp
41045a64:	da000115 	stw	r8,4(sp)
41045a68:	d8c00015 	stw	r3,0(sp)
41045a6c:	10469780 	call	41046978 <memmove>
41045a70:	d8c00017 	ldw	r3,0(sp)
41045a74:	80800017 	ldw	r2,0(r16)
41045a78:	800b883a 	mov	r5,r16
41045a7c:	a809883a 	mov	r4,r21
41045a80:	10c5883a 	add	r2,r2,r3
41045a84:	80800015 	stw	r2,0(r16)
41045a88:	d8c00015 	stw	r3,0(sp)
41045a8c:	1044f4c0 	call	41044f4c <_fflush_r>
41045a90:	d8c00017 	ldw	r3,0(sp)
41045a94:	da000117 	ldw	r8,4(sp)
41045a98:	103fc21e 	bne	r2,zero,410459a4 <__alt_data_end+0xfffc71a4>
41045a9c:	182f883a 	mov	r23,r3
41045aa0:	9de7c83a 	sub	r19,r19,r23
41045aa4:	983fe11e 	bne	r19,zero,41045a2c <__alt_data_end+0xfffc722c>
41045aa8:	800b883a 	mov	r5,r16
41045aac:	a809883a 	mov	r4,r21
41045ab0:	1044f4c0 	call	41044f4c <_fflush_r>
41045ab4:	103fbb1e 	bne	r2,zero,410459a4 <__alt_data_end+0xfffc71a4>
41045ab8:	0011883a 	mov	r8,zero
41045abc:	003fdb06 	br	41045a2c <__alt_data_end+0xfffc722c>
41045ac0:	94c0012e 	bgeu	r18,r19,41045ac8 <__sfvwrite_r+0x31c>
41045ac4:	9027883a 	mov	r19,r18
41045ac8:	980d883a 	mov	r6,r19
41045acc:	e00b883a 	mov	r5,fp
41045ad0:	10469780 	call	41046978 <memmove>
41045ad4:	80800217 	ldw	r2,8(r16)
41045ad8:	80c00017 	ldw	r3,0(r16)
41045adc:	14c5c83a 	sub	r2,r2,r19
41045ae0:	1cc7883a 	add	r3,r3,r19
41045ae4:	80800215 	stw	r2,8(r16)
41045ae8:	80c00015 	stw	r3,0(r16)
41045aec:	10004326 	beq	r2,zero,41045bfc <__sfvwrite_r+0x450>
41045af0:	9805883a 	mov	r2,r19
41045af4:	003f8606 	br	41045910 <__alt_data_end+0xfffc7110>
41045af8:	b00d883a 	mov	r6,r22
41045afc:	e00b883a 	mov	r5,fp
41045b00:	da000115 	stw	r8,4(sp)
41045b04:	10469780 	call	41046978 <memmove>
41045b08:	80800217 	ldw	r2,8(r16)
41045b0c:	80c00017 	ldw	r3,0(r16)
41045b10:	da000117 	ldw	r8,4(sp)
41045b14:	1585c83a 	sub	r2,r2,r22
41045b18:	1dad883a 	add	r22,r3,r22
41045b1c:	80800215 	stw	r2,8(r16)
41045b20:	85800015 	stw	r22,0(r16)
41045b24:	003fbf06 	br	41045a24 <__alt_data_end+0xfffc7224>
41045b28:	81000017 	ldw	r4,0(r16)
41045b2c:	9027883a 	mov	r19,r18
41045b30:	902f883a 	mov	r23,r18
41045b34:	003f6c06 	br	410458e8 <__alt_data_end+0xfffc70e8>
41045b38:	900d883a 	mov	r6,r18
41045b3c:	01400284 	movi	r5,10
41045b40:	e009883a 	mov	r4,fp
41045b44:	10468940 	call	41046894 <memchr>
41045b48:	10003e26 	beq	r2,zero,41045c44 <__sfvwrite_r+0x498>
41045b4c:	10800044 	addi	r2,r2,1
41045b50:	1727c83a 	sub	r19,r2,fp
41045b54:	02000044 	movi	r8,1
41045b58:	003f9d06 	br	410459d0 <__alt_data_end+0xfffc71d0>
41045b5c:	80800517 	ldw	r2,20(r16)
41045b60:	81400417 	ldw	r5,16(r16)
41045b64:	81c00017 	ldw	r7,0(r16)
41045b68:	10a7883a 	add	r19,r2,r2
41045b6c:	9885883a 	add	r2,r19,r2
41045b70:	1026d7fa 	srli	r19,r2,31
41045b74:	396dc83a 	sub	r22,r7,r5
41045b78:	b1000044 	addi	r4,r22,1
41045b7c:	9885883a 	add	r2,r19,r2
41045b80:	1027d07a 	srai	r19,r2,1
41045b84:	2485883a 	add	r2,r4,r18
41045b88:	980d883a 	mov	r6,r19
41045b8c:	9880022e 	bgeu	r19,r2,41045b98 <__sfvwrite_r+0x3ec>
41045b90:	1027883a 	mov	r19,r2
41045b94:	100d883a 	mov	r6,r2
41045b98:	18c1000c 	andi	r3,r3,1024
41045b9c:	18001c26 	beq	r3,zero,41045c10 <__sfvwrite_r+0x464>
41045ba0:	300b883a 	mov	r5,r6
41045ba4:	a809883a 	mov	r4,r21
41045ba8:	10460880 	call	41046088 <_malloc_r>
41045bac:	102f883a 	mov	r23,r2
41045bb0:	10002926 	beq	r2,zero,41045c58 <__sfvwrite_r+0x4ac>
41045bb4:	81400417 	ldw	r5,16(r16)
41045bb8:	b00d883a 	mov	r6,r22
41045bbc:	1009883a 	mov	r4,r2
41045bc0:	1040ccc0 	call	41040ccc <memcpy>
41045bc4:	8080030b 	ldhu	r2,12(r16)
41045bc8:	00fedfc4 	movi	r3,-1153
41045bcc:	10c4703a 	and	r2,r2,r3
41045bd0:	10802014 	ori	r2,r2,128
41045bd4:	8080030d 	sth	r2,12(r16)
41045bd8:	bd89883a 	add	r4,r23,r22
41045bdc:	9d8fc83a 	sub	r7,r19,r22
41045be0:	85c00415 	stw	r23,16(r16)
41045be4:	84c00515 	stw	r19,20(r16)
41045be8:	81000015 	stw	r4,0(r16)
41045bec:	9027883a 	mov	r19,r18
41045bf0:	81c00215 	stw	r7,8(r16)
41045bf4:	902f883a 	mov	r23,r18
41045bf8:	003f3b06 	br	410458e8 <__alt_data_end+0xfffc70e8>
41045bfc:	800b883a 	mov	r5,r16
41045c00:	a809883a 	mov	r4,r21
41045c04:	1044f4c0 	call	41044f4c <_fflush_r>
41045c08:	103fb926 	beq	r2,zero,41045af0 <__alt_data_end+0xfffc72f0>
41045c0c:	003f6506 	br	410459a4 <__alt_data_end+0xfffc71a4>
41045c10:	a809883a 	mov	r4,r21
41045c14:	1047d600 	call	41047d60 <_realloc_r>
41045c18:	102f883a 	mov	r23,r2
41045c1c:	103fee1e 	bne	r2,zero,41045bd8 <__alt_data_end+0xfffc73d8>
41045c20:	81400417 	ldw	r5,16(r16)
41045c24:	a809883a 	mov	r4,r21
41045c28:	104549c0 	call	4104549c <_free_r>
41045c2c:	8080030b 	ldhu	r2,12(r16)
41045c30:	00ffdfc4 	movi	r3,-129
41045c34:	1884703a 	and	r2,r3,r2
41045c38:	00c00304 	movi	r3,12
41045c3c:	a8c00015 	stw	r3,0(r21)
41045c40:	003f5906 	br	410459a8 <__alt_data_end+0xfffc71a8>
41045c44:	94c00044 	addi	r19,r18,1
41045c48:	02000044 	movi	r8,1
41045c4c:	003f6006 	br	410459d0 <__alt_data_end+0xfffc71d0>
41045c50:	00bfffc4 	movi	r2,-1
41045c54:	003f0306 	br	41045864 <__alt_data_end+0xfffc7064>
41045c58:	00800304 	movi	r2,12
41045c5c:	a8800015 	stw	r2,0(r21)
41045c60:	8080030b 	ldhu	r2,12(r16)
41045c64:	003f5006 	br	410459a8 <__alt_data_end+0xfffc71a8>

41045c68 <_fwalk>:
41045c68:	defff704 	addi	sp,sp,-36
41045c6c:	dd000415 	stw	r20,16(sp)
41045c70:	dfc00815 	stw	ra,32(sp)
41045c74:	ddc00715 	stw	r23,28(sp)
41045c78:	dd800615 	stw	r22,24(sp)
41045c7c:	dd400515 	stw	r21,20(sp)
41045c80:	dcc00315 	stw	r19,12(sp)
41045c84:	dc800215 	stw	r18,8(sp)
41045c88:	dc400115 	stw	r17,4(sp)
41045c8c:	dc000015 	stw	r16,0(sp)
41045c90:	2500b804 	addi	r20,r4,736
41045c94:	a0002326 	beq	r20,zero,41045d24 <_fwalk+0xbc>
41045c98:	282b883a 	mov	r21,r5
41045c9c:	002f883a 	mov	r23,zero
41045ca0:	05800044 	movi	r22,1
41045ca4:	04ffffc4 	movi	r19,-1
41045ca8:	a4400117 	ldw	r17,4(r20)
41045cac:	a4800217 	ldw	r18,8(r20)
41045cb0:	8c7fffc4 	addi	r17,r17,-1
41045cb4:	88000d16 	blt	r17,zero,41045cec <_fwalk+0x84>
41045cb8:	94000304 	addi	r16,r18,12
41045cbc:	94800384 	addi	r18,r18,14
41045cc0:	8080000b 	ldhu	r2,0(r16)
41045cc4:	8c7fffc4 	addi	r17,r17,-1
41045cc8:	813ffd04 	addi	r4,r16,-12
41045ccc:	b080042e 	bgeu	r22,r2,41045ce0 <_fwalk+0x78>
41045cd0:	9080000f 	ldh	r2,0(r18)
41045cd4:	14c00226 	beq	r2,r19,41045ce0 <_fwalk+0x78>
41045cd8:	a83ee83a 	callr	r21
41045cdc:	b8aeb03a 	or	r23,r23,r2
41045ce0:	84001a04 	addi	r16,r16,104
41045ce4:	94801a04 	addi	r18,r18,104
41045ce8:	8cfff51e 	bne	r17,r19,41045cc0 <__alt_data_end+0xfffc74c0>
41045cec:	a5000017 	ldw	r20,0(r20)
41045cf0:	a03fed1e 	bne	r20,zero,41045ca8 <__alt_data_end+0xfffc74a8>
41045cf4:	b805883a 	mov	r2,r23
41045cf8:	dfc00817 	ldw	ra,32(sp)
41045cfc:	ddc00717 	ldw	r23,28(sp)
41045d00:	dd800617 	ldw	r22,24(sp)
41045d04:	dd400517 	ldw	r21,20(sp)
41045d08:	dd000417 	ldw	r20,16(sp)
41045d0c:	dcc00317 	ldw	r19,12(sp)
41045d10:	dc800217 	ldw	r18,8(sp)
41045d14:	dc400117 	ldw	r17,4(sp)
41045d18:	dc000017 	ldw	r16,0(sp)
41045d1c:	dec00904 	addi	sp,sp,36
41045d20:	f800283a 	ret
41045d24:	002f883a 	mov	r23,zero
41045d28:	003ff206 	br	41045cf4 <__alt_data_end+0xfffc74f4>

41045d2c <_fwalk_reent>:
41045d2c:	defff704 	addi	sp,sp,-36
41045d30:	dd000415 	stw	r20,16(sp)
41045d34:	dfc00815 	stw	ra,32(sp)
41045d38:	ddc00715 	stw	r23,28(sp)
41045d3c:	dd800615 	stw	r22,24(sp)
41045d40:	dd400515 	stw	r21,20(sp)
41045d44:	dcc00315 	stw	r19,12(sp)
41045d48:	dc800215 	stw	r18,8(sp)
41045d4c:	dc400115 	stw	r17,4(sp)
41045d50:	dc000015 	stw	r16,0(sp)
41045d54:	2500b804 	addi	r20,r4,736
41045d58:	a0002326 	beq	r20,zero,41045de8 <_fwalk_reent+0xbc>
41045d5c:	282b883a 	mov	r21,r5
41045d60:	2027883a 	mov	r19,r4
41045d64:	002f883a 	mov	r23,zero
41045d68:	05800044 	movi	r22,1
41045d6c:	04bfffc4 	movi	r18,-1
41045d70:	a4400117 	ldw	r17,4(r20)
41045d74:	a4000217 	ldw	r16,8(r20)
41045d78:	8c7fffc4 	addi	r17,r17,-1
41045d7c:	88000c16 	blt	r17,zero,41045db0 <_fwalk_reent+0x84>
41045d80:	84000304 	addi	r16,r16,12
41045d84:	8080000b 	ldhu	r2,0(r16)
41045d88:	8c7fffc4 	addi	r17,r17,-1
41045d8c:	817ffd04 	addi	r5,r16,-12
41045d90:	b080052e 	bgeu	r22,r2,41045da8 <_fwalk_reent+0x7c>
41045d94:	8080008f 	ldh	r2,2(r16)
41045d98:	9809883a 	mov	r4,r19
41045d9c:	14800226 	beq	r2,r18,41045da8 <_fwalk_reent+0x7c>
41045da0:	a83ee83a 	callr	r21
41045da4:	b8aeb03a 	or	r23,r23,r2
41045da8:	84001a04 	addi	r16,r16,104
41045dac:	8cbff51e 	bne	r17,r18,41045d84 <__alt_data_end+0xfffc7584>
41045db0:	a5000017 	ldw	r20,0(r20)
41045db4:	a03fee1e 	bne	r20,zero,41045d70 <__alt_data_end+0xfffc7570>
41045db8:	b805883a 	mov	r2,r23
41045dbc:	dfc00817 	ldw	ra,32(sp)
41045dc0:	ddc00717 	ldw	r23,28(sp)
41045dc4:	dd800617 	ldw	r22,24(sp)
41045dc8:	dd400517 	ldw	r21,20(sp)
41045dcc:	dd000417 	ldw	r20,16(sp)
41045dd0:	dcc00317 	ldw	r19,12(sp)
41045dd4:	dc800217 	ldw	r18,8(sp)
41045dd8:	dc400117 	ldw	r17,4(sp)
41045ddc:	dc000017 	ldw	r16,0(sp)
41045de0:	dec00904 	addi	sp,sp,36
41045de4:	f800283a 	ret
41045de8:	002f883a 	mov	r23,zero
41045dec:	003ff206 	br	41045db8 <__alt_data_end+0xfffc75b8>

41045df0 <_setlocale_r>:
41045df0:	30001b26 	beq	r6,zero,41045e60 <_setlocale_r+0x70>
41045df4:	01504174 	movhi	r5,16645
41045df8:	defffe04 	addi	sp,sp,-8
41045dfc:	297fd204 	addi	r5,r5,-184
41045e00:	3009883a 	mov	r4,r6
41045e04:	dc000015 	stw	r16,0(sp)
41045e08:	dfc00115 	stw	ra,4(sp)
41045e0c:	3021883a 	mov	r16,r6
41045e10:	10484c80 	call	410484c8 <strcmp>
41045e14:	1000061e 	bne	r2,zero,41045e30 <_setlocale_r+0x40>
41045e18:	00904174 	movhi	r2,16645
41045e1c:	10bfd104 	addi	r2,r2,-188
41045e20:	dfc00117 	ldw	ra,4(sp)
41045e24:	dc000017 	ldw	r16,0(sp)
41045e28:	dec00204 	addi	sp,sp,8
41045e2c:	f800283a 	ret
41045e30:	01504174 	movhi	r5,16645
41045e34:	297fd104 	addi	r5,r5,-188
41045e38:	8009883a 	mov	r4,r16
41045e3c:	10484c80 	call	410484c8 <strcmp>
41045e40:	103ff526 	beq	r2,zero,41045e18 <__alt_data_end+0xfffc7618>
41045e44:	01504174 	movhi	r5,16645
41045e48:	297fbc04 	addi	r5,r5,-272
41045e4c:	8009883a 	mov	r4,r16
41045e50:	10484c80 	call	410484c8 <strcmp>
41045e54:	103ff026 	beq	r2,zero,41045e18 <__alt_data_end+0xfffc7618>
41045e58:	0005883a 	mov	r2,zero
41045e5c:	003ff006 	br	41045e20 <__alt_data_end+0xfffc7620>
41045e60:	00904174 	movhi	r2,16645
41045e64:	10bfd104 	addi	r2,r2,-188
41045e68:	f800283a 	ret

41045e6c <__locale_charset>:
41045e6c:	00904174 	movhi	r2,16645
41045e70:	10818204 	addi	r2,r2,1544
41045e74:	f800283a 	ret

41045e78 <__locale_mb_cur_max>:
41045e78:	00904174 	movhi	r2,16645
41045e7c:	10871e04 	addi	r2,r2,7288
41045e80:	10800017 	ldw	r2,0(r2)
41045e84:	f800283a 	ret

41045e88 <__locale_msgcharset>:
41045e88:	00904174 	movhi	r2,16645
41045e8c:	10817a04 	addi	r2,r2,1512
41045e90:	f800283a 	ret

41045e94 <__locale_cjk_lang>:
41045e94:	0005883a 	mov	r2,zero
41045e98:	f800283a 	ret

41045e9c <_localeconv_r>:
41045e9c:	00904174 	movhi	r2,16645
41045ea0:	10818a04 	addi	r2,r2,1576
41045ea4:	f800283a 	ret

41045ea8 <setlocale>:
41045ea8:	00904174 	movhi	r2,16645
41045eac:	10871d04 	addi	r2,r2,7284
41045eb0:	280d883a 	mov	r6,r5
41045eb4:	200b883a 	mov	r5,r4
41045eb8:	11000017 	ldw	r4,0(r2)
41045ebc:	1045df01 	jmpi	41045df0 <_setlocale_r>

41045ec0 <localeconv>:
41045ec0:	00904174 	movhi	r2,16645
41045ec4:	10818a04 	addi	r2,r2,1576
41045ec8:	f800283a 	ret

41045ecc <__smakebuf_r>:
41045ecc:	2880030b 	ldhu	r2,12(r5)
41045ed0:	10c0008c 	andi	r3,r2,2
41045ed4:	1800411e 	bne	r3,zero,41045fdc <__smakebuf_r+0x110>
41045ed8:	deffec04 	addi	sp,sp,-80
41045edc:	dc000f15 	stw	r16,60(sp)
41045ee0:	2821883a 	mov	r16,r5
41045ee4:	2940038f 	ldh	r5,14(r5)
41045ee8:	dc401015 	stw	r17,64(sp)
41045eec:	dfc01315 	stw	ra,76(sp)
41045ef0:	dcc01215 	stw	r19,72(sp)
41045ef4:	dc801115 	stw	r18,68(sp)
41045ef8:	2023883a 	mov	r17,r4
41045efc:	28001c16 	blt	r5,zero,41045f70 <__smakebuf_r+0xa4>
41045f00:	d80d883a 	mov	r6,sp
41045f04:	104a1c80 	call	4104a1c8 <_fstat_r>
41045f08:	10001816 	blt	r2,zero,41045f6c <__smakebuf_r+0xa0>
41045f0c:	d8800117 	ldw	r2,4(sp)
41045f10:	00e00014 	movui	r3,32768
41045f14:	10bc000c 	andi	r2,r2,61440
41045f18:	14c80020 	cmpeqi	r19,r2,8192
41045f1c:	10c03726 	beq	r2,r3,41045ffc <__smakebuf_r+0x130>
41045f20:	80c0030b 	ldhu	r3,12(r16)
41045f24:	18c20014 	ori	r3,r3,2048
41045f28:	80c0030d 	sth	r3,12(r16)
41045f2c:	00c80004 	movi	r3,8192
41045f30:	10c0521e 	bne	r2,r3,4104607c <__smakebuf_r+0x1b0>
41045f34:	8140038f 	ldh	r5,14(r16)
41045f38:	8809883a 	mov	r4,r17
41045f3c:	104a2240 	call	4104a224 <_isatty_r>
41045f40:	10004c26 	beq	r2,zero,41046074 <__smakebuf_r+0x1a8>
41045f44:	8080030b 	ldhu	r2,12(r16)
41045f48:	80c010c4 	addi	r3,r16,67
41045f4c:	80c00015 	stw	r3,0(r16)
41045f50:	10800054 	ori	r2,r2,1
41045f54:	8080030d 	sth	r2,12(r16)
41045f58:	00800044 	movi	r2,1
41045f5c:	80c00415 	stw	r3,16(r16)
41045f60:	80800515 	stw	r2,20(r16)
41045f64:	04810004 	movi	r18,1024
41045f68:	00000706 	br	41045f88 <__smakebuf_r+0xbc>
41045f6c:	8080030b 	ldhu	r2,12(r16)
41045f70:	10c0200c 	andi	r3,r2,128
41045f74:	18001f1e 	bne	r3,zero,41045ff4 <__smakebuf_r+0x128>
41045f78:	04810004 	movi	r18,1024
41045f7c:	10820014 	ori	r2,r2,2048
41045f80:	8080030d 	sth	r2,12(r16)
41045f84:	0027883a 	mov	r19,zero
41045f88:	900b883a 	mov	r5,r18
41045f8c:	8809883a 	mov	r4,r17
41045f90:	10460880 	call	41046088 <_malloc_r>
41045f94:	10002c26 	beq	r2,zero,41046048 <__smakebuf_r+0x17c>
41045f98:	80c0030b 	ldhu	r3,12(r16)
41045f9c:	01104134 	movhi	r4,16644
41045fa0:	2113f804 	addi	r4,r4,20448
41045fa4:	89000f15 	stw	r4,60(r17)
41045fa8:	18c02014 	ori	r3,r3,128
41045fac:	80c0030d 	sth	r3,12(r16)
41045fb0:	80800015 	stw	r2,0(r16)
41045fb4:	80800415 	stw	r2,16(r16)
41045fb8:	84800515 	stw	r18,20(r16)
41045fbc:	98001a1e 	bne	r19,zero,41046028 <__smakebuf_r+0x15c>
41045fc0:	dfc01317 	ldw	ra,76(sp)
41045fc4:	dcc01217 	ldw	r19,72(sp)
41045fc8:	dc801117 	ldw	r18,68(sp)
41045fcc:	dc401017 	ldw	r17,64(sp)
41045fd0:	dc000f17 	ldw	r16,60(sp)
41045fd4:	dec01404 	addi	sp,sp,80
41045fd8:	f800283a 	ret
41045fdc:	288010c4 	addi	r2,r5,67
41045fe0:	28800015 	stw	r2,0(r5)
41045fe4:	28800415 	stw	r2,16(r5)
41045fe8:	00800044 	movi	r2,1
41045fec:	28800515 	stw	r2,20(r5)
41045ff0:	f800283a 	ret
41045ff4:	04801004 	movi	r18,64
41045ff8:	003fe006 	br	41045f7c <__alt_data_end+0xfffc777c>
41045ffc:	81000a17 	ldw	r4,40(r16)
41046000:	00d04174 	movhi	r3,16645
41046004:	18e11904 	addi	r3,r3,-31644
41046008:	20ffc51e 	bne	r4,r3,41045f20 <__alt_data_end+0xfffc7720>
4104600c:	8080030b 	ldhu	r2,12(r16)
41046010:	04810004 	movi	r18,1024
41046014:	84801315 	stw	r18,76(r16)
41046018:	1484b03a 	or	r2,r2,r18
4104601c:	8080030d 	sth	r2,12(r16)
41046020:	0027883a 	mov	r19,zero
41046024:	003fd806 	br	41045f88 <__alt_data_end+0xfffc7788>
41046028:	8140038f 	ldh	r5,14(r16)
4104602c:	8809883a 	mov	r4,r17
41046030:	104a2240 	call	4104a224 <_isatty_r>
41046034:	103fe226 	beq	r2,zero,41045fc0 <__alt_data_end+0xfffc77c0>
41046038:	8080030b 	ldhu	r2,12(r16)
4104603c:	10800054 	ori	r2,r2,1
41046040:	8080030d 	sth	r2,12(r16)
41046044:	003fde06 	br	41045fc0 <__alt_data_end+0xfffc77c0>
41046048:	8080030b 	ldhu	r2,12(r16)
4104604c:	10c0800c 	andi	r3,r2,512
41046050:	183fdb1e 	bne	r3,zero,41045fc0 <__alt_data_end+0xfffc77c0>
41046054:	10800094 	ori	r2,r2,2
41046058:	80c010c4 	addi	r3,r16,67
4104605c:	8080030d 	sth	r2,12(r16)
41046060:	00800044 	movi	r2,1
41046064:	80c00015 	stw	r3,0(r16)
41046068:	80c00415 	stw	r3,16(r16)
4104606c:	80800515 	stw	r2,20(r16)
41046070:	003fd306 	br	41045fc0 <__alt_data_end+0xfffc77c0>
41046074:	04810004 	movi	r18,1024
41046078:	003fc306 	br	41045f88 <__alt_data_end+0xfffc7788>
4104607c:	0027883a 	mov	r19,zero
41046080:	04810004 	movi	r18,1024
41046084:	003fc006 	br	41045f88 <__alt_data_end+0xfffc7788>

41046088 <_malloc_r>:
41046088:	defff504 	addi	sp,sp,-44
4104608c:	dc800315 	stw	r18,12(sp)
41046090:	dfc00a15 	stw	ra,40(sp)
41046094:	df000915 	stw	fp,36(sp)
41046098:	ddc00815 	stw	r23,32(sp)
4104609c:	dd800715 	stw	r22,28(sp)
410460a0:	dd400615 	stw	r21,24(sp)
410460a4:	dd000515 	stw	r20,20(sp)
410460a8:	dcc00415 	stw	r19,16(sp)
410460ac:	dc400215 	stw	r17,8(sp)
410460b0:	dc000115 	stw	r16,4(sp)
410460b4:	288002c4 	addi	r2,r5,11
410460b8:	00c00584 	movi	r3,22
410460bc:	2025883a 	mov	r18,r4
410460c0:	18807f2e 	bgeu	r3,r2,410462c0 <_malloc_r+0x238>
410460c4:	047ffe04 	movi	r17,-8
410460c8:	1462703a 	and	r17,r2,r17
410460cc:	8800a316 	blt	r17,zero,4104635c <_malloc_r+0x2d4>
410460d0:	8940a236 	bltu	r17,r5,4104635c <_malloc_r+0x2d4>
410460d4:	104dbfc0 	call	4104dbfc <__malloc_lock>
410460d8:	00807dc4 	movi	r2,503
410460dc:	1441e92e 	bgeu	r2,r17,41046884 <_malloc_r+0x7fc>
410460e0:	8804d27a 	srli	r2,r17,9
410460e4:	1000a126 	beq	r2,zero,4104636c <_malloc_r+0x2e4>
410460e8:	00c00104 	movi	r3,4
410460ec:	18811e36 	bltu	r3,r2,41046568 <_malloc_r+0x4e0>
410460f0:	8804d1ba 	srli	r2,r17,6
410460f4:	12000e44 	addi	r8,r2,57
410460f8:	11c00e04 	addi	r7,r2,56
410460fc:	4209883a 	add	r4,r8,r8
41046100:	04d04174 	movhi	r19,16645
41046104:	2109883a 	add	r4,r4,r4
41046108:	9cc19804 	addi	r19,r19,1632
4104610c:	2109883a 	add	r4,r4,r4
41046110:	9909883a 	add	r4,r19,r4
41046114:	24000117 	ldw	r16,4(r4)
41046118:	213ffe04 	addi	r4,r4,-8
4104611c:	24009726 	beq	r4,r16,4104637c <_malloc_r+0x2f4>
41046120:	80800117 	ldw	r2,4(r16)
41046124:	01bfff04 	movi	r6,-4
41046128:	014003c4 	movi	r5,15
4104612c:	1184703a 	and	r2,r2,r6
41046130:	1447c83a 	sub	r3,r2,r17
41046134:	28c00716 	blt	r5,r3,41046154 <_malloc_r+0xcc>
41046138:	1800920e 	bge	r3,zero,41046384 <_malloc_r+0x2fc>
4104613c:	84000317 	ldw	r16,12(r16)
41046140:	24008e26 	beq	r4,r16,4104637c <_malloc_r+0x2f4>
41046144:	80800117 	ldw	r2,4(r16)
41046148:	1184703a 	and	r2,r2,r6
4104614c:	1447c83a 	sub	r3,r2,r17
41046150:	28fff90e 	bge	r5,r3,41046138 <__alt_data_end+0xfffc7938>
41046154:	3809883a 	mov	r4,r7
41046158:	01904174 	movhi	r6,16645
4104615c:	9c000417 	ldw	r16,16(r19)
41046160:	31819804 	addi	r6,r6,1632
41046164:	32000204 	addi	r8,r6,8
41046168:	82013426 	beq	r16,r8,4104663c <_malloc_r+0x5b4>
4104616c:	80c00117 	ldw	r3,4(r16)
41046170:	00bfff04 	movi	r2,-4
41046174:	188e703a 	and	r7,r3,r2
41046178:	3c45c83a 	sub	r2,r7,r17
4104617c:	00c003c4 	movi	r3,15
41046180:	18811f16 	blt	r3,r2,41046600 <_malloc_r+0x578>
41046184:	32000515 	stw	r8,20(r6)
41046188:	32000415 	stw	r8,16(r6)
4104618c:	10007f0e 	bge	r2,zero,4104638c <_malloc_r+0x304>
41046190:	00807fc4 	movi	r2,511
41046194:	11c0fd36 	bltu	r2,r7,4104658c <_malloc_r+0x504>
41046198:	3806d0fa 	srli	r3,r7,3
4104619c:	01c00044 	movi	r7,1
410461a0:	30800117 	ldw	r2,4(r6)
410461a4:	19400044 	addi	r5,r3,1
410461a8:	294b883a 	add	r5,r5,r5
410461ac:	1807d0ba 	srai	r3,r3,2
410461b0:	294b883a 	add	r5,r5,r5
410461b4:	294b883a 	add	r5,r5,r5
410461b8:	298b883a 	add	r5,r5,r6
410461bc:	38c6983a 	sll	r3,r7,r3
410461c0:	29c00017 	ldw	r7,0(r5)
410461c4:	2a7ffe04 	addi	r9,r5,-8
410461c8:	1886b03a 	or	r3,r3,r2
410461cc:	82400315 	stw	r9,12(r16)
410461d0:	81c00215 	stw	r7,8(r16)
410461d4:	30c00115 	stw	r3,4(r6)
410461d8:	2c000015 	stw	r16,0(r5)
410461dc:	3c000315 	stw	r16,12(r7)
410461e0:	2005d0ba 	srai	r2,r4,2
410461e4:	01400044 	movi	r5,1
410461e8:	288a983a 	sll	r5,r5,r2
410461ec:	19406f36 	bltu	r3,r5,410463ac <_malloc_r+0x324>
410461f0:	28c4703a 	and	r2,r5,r3
410461f4:	10000a1e 	bne	r2,zero,41046220 <_malloc_r+0x198>
410461f8:	00bfff04 	movi	r2,-4
410461fc:	294b883a 	add	r5,r5,r5
41046200:	2088703a 	and	r4,r4,r2
41046204:	28c4703a 	and	r2,r5,r3
41046208:	21000104 	addi	r4,r4,4
4104620c:	1000041e 	bne	r2,zero,41046220 <_malloc_r+0x198>
41046210:	294b883a 	add	r5,r5,r5
41046214:	28c4703a 	and	r2,r5,r3
41046218:	21000104 	addi	r4,r4,4
4104621c:	103ffc26 	beq	r2,zero,41046210 <__alt_data_end+0xfffc7a10>
41046220:	02bfff04 	movi	r10,-4
41046224:	024003c4 	movi	r9,15
41046228:	21800044 	addi	r6,r4,1
4104622c:	318d883a 	add	r6,r6,r6
41046230:	318d883a 	add	r6,r6,r6
41046234:	318d883a 	add	r6,r6,r6
41046238:	998d883a 	add	r6,r19,r6
4104623c:	333ffe04 	addi	r12,r6,-8
41046240:	2017883a 	mov	r11,r4
41046244:	31800104 	addi	r6,r6,4
41046248:	34000017 	ldw	r16,0(r6)
4104624c:	31fffd04 	addi	r7,r6,-12
41046250:	81c0041e 	bne	r16,r7,41046264 <_malloc_r+0x1dc>
41046254:	0000fb06 	br	41046644 <_malloc_r+0x5bc>
41046258:	1801030e 	bge	r3,zero,41046668 <_malloc_r+0x5e0>
4104625c:	84000317 	ldw	r16,12(r16)
41046260:	81c0f826 	beq	r16,r7,41046644 <_malloc_r+0x5bc>
41046264:	80800117 	ldw	r2,4(r16)
41046268:	1284703a 	and	r2,r2,r10
4104626c:	1447c83a 	sub	r3,r2,r17
41046270:	48fff90e 	bge	r9,r3,41046258 <__alt_data_end+0xfffc7a58>
41046274:	80800317 	ldw	r2,12(r16)
41046278:	81000217 	ldw	r4,8(r16)
4104627c:	89400054 	ori	r5,r17,1
41046280:	81400115 	stw	r5,4(r16)
41046284:	20800315 	stw	r2,12(r4)
41046288:	11000215 	stw	r4,8(r2)
4104628c:	8463883a 	add	r17,r16,r17
41046290:	9c400515 	stw	r17,20(r19)
41046294:	9c400415 	stw	r17,16(r19)
41046298:	18800054 	ori	r2,r3,1
4104629c:	88800115 	stw	r2,4(r17)
410462a0:	8a000315 	stw	r8,12(r17)
410462a4:	8a000215 	stw	r8,8(r17)
410462a8:	88e3883a 	add	r17,r17,r3
410462ac:	88c00015 	stw	r3,0(r17)
410462b0:	9009883a 	mov	r4,r18
410462b4:	104dc200 	call	4104dc20 <__malloc_unlock>
410462b8:	80800204 	addi	r2,r16,8
410462bc:	00001b06 	br	4104632c <_malloc_r+0x2a4>
410462c0:	04400404 	movi	r17,16
410462c4:	89402536 	bltu	r17,r5,4104635c <_malloc_r+0x2d4>
410462c8:	104dbfc0 	call	4104dbfc <__malloc_lock>
410462cc:	00800184 	movi	r2,6
410462d0:	01000084 	movi	r4,2
410462d4:	04d04174 	movhi	r19,16645
410462d8:	1085883a 	add	r2,r2,r2
410462dc:	9cc19804 	addi	r19,r19,1632
410462e0:	1085883a 	add	r2,r2,r2
410462e4:	9885883a 	add	r2,r19,r2
410462e8:	14000117 	ldw	r16,4(r2)
410462ec:	10fffe04 	addi	r3,r2,-8
410462f0:	80c0d926 	beq	r16,r3,41046658 <_malloc_r+0x5d0>
410462f4:	80c00117 	ldw	r3,4(r16)
410462f8:	81000317 	ldw	r4,12(r16)
410462fc:	00bfff04 	movi	r2,-4
41046300:	1884703a 	and	r2,r3,r2
41046304:	81400217 	ldw	r5,8(r16)
41046308:	8085883a 	add	r2,r16,r2
4104630c:	10c00117 	ldw	r3,4(r2)
41046310:	29000315 	stw	r4,12(r5)
41046314:	21400215 	stw	r5,8(r4)
41046318:	18c00054 	ori	r3,r3,1
4104631c:	10c00115 	stw	r3,4(r2)
41046320:	9009883a 	mov	r4,r18
41046324:	104dc200 	call	4104dc20 <__malloc_unlock>
41046328:	80800204 	addi	r2,r16,8
4104632c:	dfc00a17 	ldw	ra,40(sp)
41046330:	df000917 	ldw	fp,36(sp)
41046334:	ddc00817 	ldw	r23,32(sp)
41046338:	dd800717 	ldw	r22,28(sp)
4104633c:	dd400617 	ldw	r21,24(sp)
41046340:	dd000517 	ldw	r20,20(sp)
41046344:	dcc00417 	ldw	r19,16(sp)
41046348:	dc800317 	ldw	r18,12(sp)
4104634c:	dc400217 	ldw	r17,8(sp)
41046350:	dc000117 	ldw	r16,4(sp)
41046354:	dec00b04 	addi	sp,sp,44
41046358:	f800283a 	ret
4104635c:	00800304 	movi	r2,12
41046360:	90800015 	stw	r2,0(r18)
41046364:	0005883a 	mov	r2,zero
41046368:	003ff006 	br	4104632c <__alt_data_end+0xfffc7b2c>
4104636c:	01002004 	movi	r4,128
41046370:	02001004 	movi	r8,64
41046374:	01c00fc4 	movi	r7,63
41046378:	003f6106 	br	41046100 <__alt_data_end+0xfffc7900>
4104637c:	4009883a 	mov	r4,r8
41046380:	003f7506 	br	41046158 <__alt_data_end+0xfffc7958>
41046384:	81000317 	ldw	r4,12(r16)
41046388:	003fde06 	br	41046304 <__alt_data_end+0xfffc7b04>
4104638c:	81c5883a 	add	r2,r16,r7
41046390:	11400117 	ldw	r5,4(r2)
41046394:	9009883a 	mov	r4,r18
41046398:	29400054 	ori	r5,r5,1
4104639c:	11400115 	stw	r5,4(r2)
410463a0:	104dc200 	call	4104dc20 <__malloc_unlock>
410463a4:	80800204 	addi	r2,r16,8
410463a8:	003fe006 	br	4104632c <__alt_data_end+0xfffc7b2c>
410463ac:	9c000217 	ldw	r16,8(r19)
410463b0:	00bfff04 	movi	r2,-4
410463b4:	85800117 	ldw	r22,4(r16)
410463b8:	b0ac703a 	and	r22,r22,r2
410463bc:	b4400336 	bltu	r22,r17,410463cc <_malloc_r+0x344>
410463c0:	b445c83a 	sub	r2,r22,r17
410463c4:	00c003c4 	movi	r3,15
410463c8:	18805d16 	blt	r3,r2,41046540 <_malloc_r+0x4b8>
410463cc:	05d04174 	movhi	r23,16645
410463d0:	00904174 	movhi	r2,16645
410463d4:	108dec04 	addi	r2,r2,14256
410463d8:	bdc71f04 	addi	r23,r23,7292
410463dc:	15400017 	ldw	r21,0(r2)
410463e0:	b8c00017 	ldw	r3,0(r23)
410463e4:	00bfffc4 	movi	r2,-1
410463e8:	858d883a 	add	r6,r16,r22
410463ec:	8d6b883a 	add	r21,r17,r21
410463f0:	1880ea26 	beq	r3,r2,4104679c <_malloc_r+0x714>
410463f4:	ad4403c4 	addi	r21,r21,4111
410463f8:	00bc0004 	movi	r2,-4096
410463fc:	a8aa703a 	and	r21,r21,r2
41046400:	a80b883a 	mov	r5,r21
41046404:	9009883a 	mov	r4,r18
41046408:	d9800015 	stw	r6,0(sp)
4104640c:	10483380 	call	41048338 <_sbrk_r>
41046410:	1029883a 	mov	r20,r2
41046414:	00bfffc4 	movi	r2,-1
41046418:	d9800017 	ldw	r6,0(sp)
4104641c:	a080e826 	beq	r20,r2,410467c0 <_malloc_r+0x738>
41046420:	a180a636 	bltu	r20,r6,410466bc <_malloc_r+0x634>
41046424:	07104174 	movhi	fp,16645
41046428:	e70df404 	addi	fp,fp,14288
4104642c:	e0800017 	ldw	r2,0(fp)
41046430:	a887883a 	add	r3,r21,r2
41046434:	e0c00015 	stw	r3,0(fp)
41046438:	3500e626 	beq	r6,r20,410467d4 <_malloc_r+0x74c>
4104643c:	b9000017 	ldw	r4,0(r23)
41046440:	00bfffc4 	movi	r2,-1
41046444:	2080ee26 	beq	r4,r2,41046800 <_malloc_r+0x778>
41046448:	a185c83a 	sub	r2,r20,r6
4104644c:	10c5883a 	add	r2,r2,r3
41046450:	e0800015 	stw	r2,0(fp)
41046454:	a0c001cc 	andi	r3,r20,7
41046458:	1800bc26 	beq	r3,zero,4104674c <_malloc_r+0x6c4>
4104645c:	a0e9c83a 	sub	r20,r20,r3
41046460:	00840204 	movi	r2,4104
41046464:	a5000204 	addi	r20,r20,8
41046468:	10c7c83a 	sub	r3,r2,r3
4104646c:	a545883a 	add	r2,r20,r21
41046470:	1083ffcc 	andi	r2,r2,4095
41046474:	18abc83a 	sub	r21,r3,r2
41046478:	a80b883a 	mov	r5,r21
4104647c:	9009883a 	mov	r4,r18
41046480:	10483380 	call	41048338 <_sbrk_r>
41046484:	00ffffc4 	movi	r3,-1
41046488:	10c0e126 	beq	r2,r3,41046810 <_malloc_r+0x788>
4104648c:	1505c83a 	sub	r2,r2,r20
41046490:	1545883a 	add	r2,r2,r21
41046494:	10800054 	ori	r2,r2,1
41046498:	e0c00017 	ldw	r3,0(fp)
4104649c:	9d000215 	stw	r20,8(r19)
410464a0:	a0800115 	stw	r2,4(r20)
410464a4:	a8c7883a 	add	r3,r21,r3
410464a8:	e0c00015 	stw	r3,0(fp)
410464ac:	84c00e26 	beq	r16,r19,410464e8 <_malloc_r+0x460>
410464b0:	018003c4 	movi	r6,15
410464b4:	3580a72e 	bgeu	r6,r22,41046754 <_malloc_r+0x6cc>
410464b8:	81400117 	ldw	r5,4(r16)
410464bc:	013ffe04 	movi	r4,-8
410464c0:	b0bffd04 	addi	r2,r22,-12
410464c4:	1104703a 	and	r2,r2,r4
410464c8:	2900004c 	andi	r4,r5,1
410464cc:	2088b03a 	or	r4,r4,r2
410464d0:	81000115 	stw	r4,4(r16)
410464d4:	01400144 	movi	r5,5
410464d8:	8089883a 	add	r4,r16,r2
410464dc:	21400115 	stw	r5,4(r4)
410464e0:	21400215 	stw	r5,8(r4)
410464e4:	3080cd36 	bltu	r6,r2,4104681c <_malloc_r+0x794>
410464e8:	00904174 	movhi	r2,16645
410464ec:	108deb04 	addi	r2,r2,14252
410464f0:	11000017 	ldw	r4,0(r2)
410464f4:	20c0012e 	bgeu	r4,r3,410464fc <_malloc_r+0x474>
410464f8:	10c00015 	stw	r3,0(r2)
410464fc:	00904174 	movhi	r2,16645
41046500:	108dea04 	addi	r2,r2,14248
41046504:	11000017 	ldw	r4,0(r2)
41046508:	9c000217 	ldw	r16,8(r19)
4104650c:	20c0012e 	bgeu	r4,r3,41046514 <_malloc_r+0x48c>
41046510:	10c00015 	stw	r3,0(r2)
41046514:	80c00117 	ldw	r3,4(r16)
41046518:	00bfff04 	movi	r2,-4
4104651c:	1886703a 	and	r3,r3,r2
41046520:	1c45c83a 	sub	r2,r3,r17
41046524:	1c400236 	bltu	r3,r17,41046530 <_malloc_r+0x4a8>
41046528:	00c003c4 	movi	r3,15
4104652c:	18800416 	blt	r3,r2,41046540 <_malloc_r+0x4b8>
41046530:	9009883a 	mov	r4,r18
41046534:	104dc200 	call	4104dc20 <__malloc_unlock>
41046538:	0005883a 	mov	r2,zero
4104653c:	003f7b06 	br	4104632c <__alt_data_end+0xfffc7b2c>
41046540:	88c00054 	ori	r3,r17,1
41046544:	80c00115 	stw	r3,4(r16)
41046548:	8463883a 	add	r17,r16,r17
4104654c:	10800054 	ori	r2,r2,1
41046550:	9c400215 	stw	r17,8(r19)
41046554:	88800115 	stw	r2,4(r17)
41046558:	9009883a 	mov	r4,r18
4104655c:	104dc200 	call	4104dc20 <__malloc_unlock>
41046560:	80800204 	addi	r2,r16,8
41046564:	003f7106 	br	4104632c <__alt_data_end+0xfffc7b2c>
41046568:	00c00504 	movi	r3,20
4104656c:	18804a2e 	bgeu	r3,r2,41046698 <_malloc_r+0x610>
41046570:	00c01504 	movi	r3,84
41046574:	18806e36 	bltu	r3,r2,41046730 <_malloc_r+0x6a8>
41046578:	8804d33a 	srli	r2,r17,12
4104657c:	12001bc4 	addi	r8,r2,111
41046580:	11c01b84 	addi	r7,r2,110
41046584:	4209883a 	add	r4,r8,r8
41046588:	003edd06 	br	41046100 <__alt_data_end+0xfffc7900>
4104658c:	3804d27a 	srli	r2,r7,9
41046590:	00c00104 	movi	r3,4
41046594:	1880442e 	bgeu	r3,r2,410466a8 <_malloc_r+0x620>
41046598:	00c00504 	movi	r3,20
4104659c:	18808136 	bltu	r3,r2,410467a4 <_malloc_r+0x71c>
410465a0:	11401704 	addi	r5,r2,92
410465a4:	10c016c4 	addi	r3,r2,91
410465a8:	294b883a 	add	r5,r5,r5
410465ac:	294b883a 	add	r5,r5,r5
410465b0:	294b883a 	add	r5,r5,r5
410465b4:	994b883a 	add	r5,r19,r5
410465b8:	28800017 	ldw	r2,0(r5)
410465bc:	01904174 	movhi	r6,16645
410465c0:	297ffe04 	addi	r5,r5,-8
410465c4:	31819804 	addi	r6,r6,1632
410465c8:	28806526 	beq	r5,r2,41046760 <_malloc_r+0x6d8>
410465cc:	01bfff04 	movi	r6,-4
410465d0:	10c00117 	ldw	r3,4(r2)
410465d4:	1986703a 	and	r3,r3,r6
410465d8:	38c0022e 	bgeu	r7,r3,410465e4 <_malloc_r+0x55c>
410465dc:	10800217 	ldw	r2,8(r2)
410465e0:	28bffb1e 	bne	r5,r2,410465d0 <__alt_data_end+0xfffc7dd0>
410465e4:	11400317 	ldw	r5,12(r2)
410465e8:	98c00117 	ldw	r3,4(r19)
410465ec:	81400315 	stw	r5,12(r16)
410465f0:	80800215 	stw	r2,8(r16)
410465f4:	2c000215 	stw	r16,8(r5)
410465f8:	14000315 	stw	r16,12(r2)
410465fc:	003ef806 	br	410461e0 <__alt_data_end+0xfffc79e0>
41046600:	88c00054 	ori	r3,r17,1
41046604:	80c00115 	stw	r3,4(r16)
41046608:	8463883a 	add	r17,r16,r17
4104660c:	34400515 	stw	r17,20(r6)
41046610:	34400415 	stw	r17,16(r6)
41046614:	10c00054 	ori	r3,r2,1
41046618:	8a000315 	stw	r8,12(r17)
4104661c:	8a000215 	stw	r8,8(r17)
41046620:	88c00115 	stw	r3,4(r17)
41046624:	88a3883a 	add	r17,r17,r2
41046628:	88800015 	stw	r2,0(r17)
4104662c:	9009883a 	mov	r4,r18
41046630:	104dc200 	call	4104dc20 <__malloc_unlock>
41046634:	80800204 	addi	r2,r16,8
41046638:	003f3c06 	br	4104632c <__alt_data_end+0xfffc7b2c>
4104663c:	30c00117 	ldw	r3,4(r6)
41046640:	003ee706 	br	410461e0 <__alt_data_end+0xfffc79e0>
41046644:	5ac00044 	addi	r11,r11,1
41046648:	588000cc 	andi	r2,r11,3
4104664c:	31800204 	addi	r6,r6,8
41046650:	103efd1e 	bne	r2,zero,41046248 <__alt_data_end+0xfffc7a48>
41046654:	00002406 	br	410466e8 <_malloc_r+0x660>
41046658:	14000317 	ldw	r16,12(r2)
4104665c:	143f251e 	bne	r2,r16,410462f4 <__alt_data_end+0xfffc7af4>
41046660:	21000084 	addi	r4,r4,2
41046664:	003ebc06 	br	41046158 <__alt_data_end+0xfffc7958>
41046668:	8085883a 	add	r2,r16,r2
4104666c:	10c00117 	ldw	r3,4(r2)
41046670:	81000317 	ldw	r4,12(r16)
41046674:	81400217 	ldw	r5,8(r16)
41046678:	18c00054 	ori	r3,r3,1
4104667c:	10c00115 	stw	r3,4(r2)
41046680:	29000315 	stw	r4,12(r5)
41046684:	21400215 	stw	r5,8(r4)
41046688:	9009883a 	mov	r4,r18
4104668c:	104dc200 	call	4104dc20 <__malloc_unlock>
41046690:	80800204 	addi	r2,r16,8
41046694:	003f2506 	br	4104632c <__alt_data_end+0xfffc7b2c>
41046698:	12001704 	addi	r8,r2,92
4104669c:	11c016c4 	addi	r7,r2,91
410466a0:	4209883a 	add	r4,r8,r8
410466a4:	003e9606 	br	41046100 <__alt_data_end+0xfffc7900>
410466a8:	3804d1ba 	srli	r2,r7,6
410466ac:	11400e44 	addi	r5,r2,57
410466b0:	10c00e04 	addi	r3,r2,56
410466b4:	294b883a 	add	r5,r5,r5
410466b8:	003fbc06 	br	410465ac <__alt_data_end+0xfffc7dac>
410466bc:	84ff5926 	beq	r16,r19,41046424 <__alt_data_end+0xfffc7c24>
410466c0:	00904174 	movhi	r2,16645
410466c4:	10819804 	addi	r2,r2,1632
410466c8:	14000217 	ldw	r16,8(r2)
410466cc:	00bfff04 	movi	r2,-4
410466d0:	80c00117 	ldw	r3,4(r16)
410466d4:	1886703a 	and	r3,r3,r2
410466d8:	003f9106 	br	41046520 <__alt_data_end+0xfffc7d20>
410466dc:	60800217 	ldw	r2,8(r12)
410466e0:	213fffc4 	addi	r4,r4,-1
410466e4:	1300651e 	bne	r2,r12,4104687c <_malloc_r+0x7f4>
410466e8:	208000cc 	andi	r2,r4,3
410466ec:	633ffe04 	addi	r12,r12,-8
410466f0:	103ffa1e 	bne	r2,zero,410466dc <__alt_data_end+0xfffc7edc>
410466f4:	98800117 	ldw	r2,4(r19)
410466f8:	0146303a 	nor	r3,zero,r5
410466fc:	1884703a 	and	r2,r3,r2
41046700:	98800115 	stw	r2,4(r19)
41046704:	294b883a 	add	r5,r5,r5
41046708:	117f2836 	bltu	r2,r5,410463ac <__alt_data_end+0xfffc7bac>
4104670c:	283f2726 	beq	r5,zero,410463ac <__alt_data_end+0xfffc7bac>
41046710:	2886703a 	and	r3,r5,r2
41046714:	5809883a 	mov	r4,r11
41046718:	183ec31e 	bne	r3,zero,41046228 <__alt_data_end+0xfffc7a28>
4104671c:	294b883a 	add	r5,r5,r5
41046720:	2886703a 	and	r3,r5,r2
41046724:	21000104 	addi	r4,r4,4
41046728:	183ffc26 	beq	r3,zero,4104671c <__alt_data_end+0xfffc7f1c>
4104672c:	003ebe06 	br	41046228 <__alt_data_end+0xfffc7a28>
41046730:	00c05504 	movi	r3,340
41046734:	18801236 	bltu	r3,r2,41046780 <_malloc_r+0x6f8>
41046738:	8804d3fa 	srli	r2,r17,15
4104673c:	12001e04 	addi	r8,r2,120
41046740:	11c01dc4 	addi	r7,r2,119
41046744:	4209883a 	add	r4,r8,r8
41046748:	003e6d06 	br	41046100 <__alt_data_end+0xfffc7900>
4104674c:	00c40004 	movi	r3,4096
41046750:	003f4606 	br	4104646c <__alt_data_end+0xfffc7c6c>
41046754:	00800044 	movi	r2,1
41046758:	a0800115 	stw	r2,4(r20)
4104675c:	003f7406 	br	41046530 <__alt_data_end+0xfffc7d30>
41046760:	1805d0ba 	srai	r2,r3,2
41046764:	01c00044 	movi	r7,1
41046768:	30c00117 	ldw	r3,4(r6)
4104676c:	388e983a 	sll	r7,r7,r2
41046770:	2805883a 	mov	r2,r5
41046774:	38c6b03a 	or	r3,r7,r3
41046778:	30c00115 	stw	r3,4(r6)
4104677c:	003f9b06 	br	410465ec <__alt_data_end+0xfffc7dec>
41046780:	00c15504 	movi	r3,1364
41046784:	18801a36 	bltu	r3,r2,410467f0 <_malloc_r+0x768>
41046788:	8804d4ba 	srli	r2,r17,18
4104678c:	12001f44 	addi	r8,r2,125
41046790:	11c01f04 	addi	r7,r2,124
41046794:	4209883a 	add	r4,r8,r8
41046798:	003e5906 	br	41046100 <__alt_data_end+0xfffc7900>
4104679c:	ad400404 	addi	r21,r21,16
410467a0:	003f1706 	br	41046400 <__alt_data_end+0xfffc7c00>
410467a4:	00c01504 	movi	r3,84
410467a8:	18802336 	bltu	r3,r2,41046838 <_malloc_r+0x7b0>
410467ac:	3804d33a 	srli	r2,r7,12
410467b0:	11401bc4 	addi	r5,r2,111
410467b4:	10c01b84 	addi	r3,r2,110
410467b8:	294b883a 	add	r5,r5,r5
410467bc:	003f7b06 	br	410465ac <__alt_data_end+0xfffc7dac>
410467c0:	9c000217 	ldw	r16,8(r19)
410467c4:	00bfff04 	movi	r2,-4
410467c8:	80c00117 	ldw	r3,4(r16)
410467cc:	1886703a 	and	r3,r3,r2
410467d0:	003f5306 	br	41046520 <__alt_data_end+0xfffc7d20>
410467d4:	3083ffcc 	andi	r2,r6,4095
410467d8:	103f181e 	bne	r2,zero,4104643c <__alt_data_end+0xfffc7c3c>
410467dc:	99000217 	ldw	r4,8(r19)
410467e0:	b545883a 	add	r2,r22,r21
410467e4:	10800054 	ori	r2,r2,1
410467e8:	20800115 	stw	r2,4(r4)
410467ec:	003f3e06 	br	410464e8 <__alt_data_end+0xfffc7ce8>
410467f0:	01003f84 	movi	r4,254
410467f4:	02001fc4 	movi	r8,127
410467f8:	01c01f84 	movi	r7,126
410467fc:	003e4006 	br	41046100 <__alt_data_end+0xfffc7900>
41046800:	00904174 	movhi	r2,16645
41046804:	10871f04 	addi	r2,r2,7292
41046808:	15000015 	stw	r20,0(r2)
4104680c:	003f1106 	br	41046454 <__alt_data_end+0xfffc7c54>
41046810:	00800044 	movi	r2,1
41046814:	002b883a 	mov	r21,zero
41046818:	003f1f06 	br	41046498 <__alt_data_end+0xfffc7c98>
4104681c:	81400204 	addi	r5,r16,8
41046820:	9009883a 	mov	r4,r18
41046824:	104549c0 	call	4104549c <_free_r>
41046828:	00904174 	movhi	r2,16645
4104682c:	108df404 	addi	r2,r2,14288
41046830:	10c00017 	ldw	r3,0(r2)
41046834:	003f2c06 	br	410464e8 <__alt_data_end+0xfffc7ce8>
41046838:	00c05504 	movi	r3,340
4104683c:	18800536 	bltu	r3,r2,41046854 <_malloc_r+0x7cc>
41046840:	3804d3fa 	srli	r2,r7,15
41046844:	11401e04 	addi	r5,r2,120
41046848:	10c01dc4 	addi	r3,r2,119
4104684c:	294b883a 	add	r5,r5,r5
41046850:	003f5606 	br	410465ac <__alt_data_end+0xfffc7dac>
41046854:	00c15504 	movi	r3,1364
41046858:	18800536 	bltu	r3,r2,41046870 <_malloc_r+0x7e8>
4104685c:	3804d4ba 	srli	r2,r7,18
41046860:	11401f44 	addi	r5,r2,125
41046864:	10c01f04 	addi	r3,r2,124
41046868:	294b883a 	add	r5,r5,r5
4104686c:	003f4f06 	br	410465ac <__alt_data_end+0xfffc7dac>
41046870:	01403f84 	movi	r5,254
41046874:	00c01f84 	movi	r3,126
41046878:	003f4c06 	br	410465ac <__alt_data_end+0xfffc7dac>
4104687c:	98800117 	ldw	r2,4(r19)
41046880:	003fa006 	br	41046704 <__alt_data_end+0xfffc7f04>
41046884:	8808d0fa 	srli	r4,r17,3
41046888:	20800044 	addi	r2,r4,1
4104688c:	1085883a 	add	r2,r2,r2
41046890:	003e9006 	br	410462d4 <__alt_data_end+0xfffc7ad4>

41046894 <memchr>:
41046894:	208000cc 	andi	r2,r4,3
41046898:	280f883a 	mov	r7,r5
4104689c:	10003426 	beq	r2,zero,41046970 <memchr+0xdc>
410468a0:	30bfffc4 	addi	r2,r6,-1
410468a4:	30001a26 	beq	r6,zero,41046910 <memchr+0x7c>
410468a8:	20c00003 	ldbu	r3,0(r4)
410468ac:	29803fcc 	andi	r6,r5,255
410468b0:	30c0051e 	bne	r6,r3,410468c8 <memchr+0x34>
410468b4:	00001806 	br	41046918 <memchr+0x84>
410468b8:	10001526 	beq	r2,zero,41046910 <memchr+0x7c>
410468bc:	20c00003 	ldbu	r3,0(r4)
410468c0:	10bfffc4 	addi	r2,r2,-1
410468c4:	30c01426 	beq	r6,r3,41046918 <memchr+0x84>
410468c8:	21000044 	addi	r4,r4,1
410468cc:	20c000cc 	andi	r3,r4,3
410468d0:	183ff91e 	bne	r3,zero,410468b8 <__alt_data_end+0xfffc80b8>
410468d4:	020000c4 	movi	r8,3
410468d8:	40801136 	bltu	r8,r2,41046920 <memchr+0x8c>
410468dc:	10000c26 	beq	r2,zero,41046910 <memchr+0x7c>
410468e0:	20c00003 	ldbu	r3,0(r4)
410468e4:	29403fcc 	andi	r5,r5,255
410468e8:	28c00b26 	beq	r5,r3,41046918 <memchr+0x84>
410468ec:	20c00044 	addi	r3,r4,1
410468f0:	39803fcc 	andi	r6,r7,255
410468f4:	2089883a 	add	r4,r4,r2
410468f8:	00000306 	br	41046908 <memchr+0x74>
410468fc:	18c00044 	addi	r3,r3,1
41046900:	197fffc3 	ldbu	r5,-1(r3)
41046904:	31400526 	beq	r6,r5,4104691c <memchr+0x88>
41046908:	1805883a 	mov	r2,r3
4104690c:	20fffb1e 	bne	r4,r3,410468fc <__alt_data_end+0xfffc80fc>
41046910:	0005883a 	mov	r2,zero
41046914:	f800283a 	ret
41046918:	2005883a 	mov	r2,r4
4104691c:	f800283a 	ret
41046920:	28c03fcc 	andi	r3,r5,255
41046924:	1812923a 	slli	r9,r3,8
41046928:	02ffbff4 	movhi	r11,65279
4104692c:	02a02074 	movhi	r10,32897
41046930:	48d2b03a 	or	r9,r9,r3
41046934:	4806943a 	slli	r3,r9,16
41046938:	5affbfc4 	addi	r11,r11,-257
4104693c:	52a02004 	addi	r10,r10,-32640
41046940:	48d2b03a 	or	r9,r9,r3
41046944:	20c00017 	ldw	r3,0(r4)
41046948:	48c6f03a 	xor	r3,r9,r3
4104694c:	1acd883a 	add	r6,r3,r11
41046950:	00c6303a 	nor	r3,zero,r3
41046954:	30c6703a 	and	r3,r6,r3
41046958:	1a86703a 	and	r3,r3,r10
4104695c:	183fe01e 	bne	r3,zero,410468e0 <__alt_data_end+0xfffc80e0>
41046960:	10bfff04 	addi	r2,r2,-4
41046964:	21000104 	addi	r4,r4,4
41046968:	40bff636 	bltu	r8,r2,41046944 <__alt_data_end+0xfffc8144>
4104696c:	003fdb06 	br	410468dc <__alt_data_end+0xfffc80dc>
41046970:	3005883a 	mov	r2,r6
41046974:	003fd706 	br	410468d4 <__alt_data_end+0xfffc80d4>

41046978 <memmove>:
41046978:	2005883a 	mov	r2,r4
4104697c:	29000b2e 	bgeu	r5,r4,410469ac <memmove+0x34>
41046980:	298f883a 	add	r7,r5,r6
41046984:	21c0092e 	bgeu	r4,r7,410469ac <memmove+0x34>
41046988:	2187883a 	add	r3,r4,r6
4104698c:	198bc83a 	sub	r5,r3,r6
41046990:	30004826 	beq	r6,zero,41046ab4 <memmove+0x13c>
41046994:	39ffffc4 	addi	r7,r7,-1
41046998:	39000003 	ldbu	r4,0(r7)
4104699c:	18ffffc4 	addi	r3,r3,-1
410469a0:	19000005 	stb	r4,0(r3)
410469a4:	28fffb1e 	bne	r5,r3,41046994 <__alt_data_end+0xfffc8194>
410469a8:	f800283a 	ret
410469ac:	00c003c4 	movi	r3,15
410469b0:	1980412e 	bgeu	r3,r6,41046ab8 <memmove+0x140>
410469b4:	2886b03a 	or	r3,r5,r2
410469b8:	18c000cc 	andi	r3,r3,3
410469bc:	1800401e 	bne	r3,zero,41046ac0 <memmove+0x148>
410469c0:	33fffc04 	addi	r15,r6,-16
410469c4:	781ed13a 	srli	r15,r15,4
410469c8:	28c00104 	addi	r3,r5,4
410469cc:	13400104 	addi	r13,r2,4
410469d0:	781c913a 	slli	r14,r15,4
410469d4:	2b000204 	addi	r12,r5,8
410469d8:	12c00204 	addi	r11,r2,8
410469dc:	73800504 	addi	r14,r14,20
410469e0:	2a800304 	addi	r10,r5,12
410469e4:	12400304 	addi	r9,r2,12
410469e8:	2b9d883a 	add	r14,r5,r14
410469ec:	2811883a 	mov	r8,r5
410469f0:	100f883a 	mov	r7,r2
410469f4:	41000017 	ldw	r4,0(r8)
410469f8:	39c00404 	addi	r7,r7,16
410469fc:	18c00404 	addi	r3,r3,16
41046a00:	393ffc15 	stw	r4,-16(r7)
41046a04:	193ffc17 	ldw	r4,-16(r3)
41046a08:	6b400404 	addi	r13,r13,16
41046a0c:	5ac00404 	addi	r11,r11,16
41046a10:	693ffc15 	stw	r4,-16(r13)
41046a14:	61000017 	ldw	r4,0(r12)
41046a18:	4a400404 	addi	r9,r9,16
41046a1c:	42000404 	addi	r8,r8,16
41046a20:	593ffc15 	stw	r4,-16(r11)
41046a24:	51000017 	ldw	r4,0(r10)
41046a28:	63000404 	addi	r12,r12,16
41046a2c:	52800404 	addi	r10,r10,16
41046a30:	493ffc15 	stw	r4,-16(r9)
41046a34:	1bbfef1e 	bne	r3,r14,410469f4 <__alt_data_end+0xfffc81f4>
41046a38:	79000044 	addi	r4,r15,1
41046a3c:	2008913a 	slli	r4,r4,4
41046a40:	328003cc 	andi	r10,r6,15
41046a44:	02c000c4 	movi	r11,3
41046a48:	1107883a 	add	r3,r2,r4
41046a4c:	290b883a 	add	r5,r5,r4
41046a50:	5a801e2e 	bgeu	r11,r10,41046acc <memmove+0x154>
41046a54:	1813883a 	mov	r9,r3
41046a58:	2811883a 	mov	r8,r5
41046a5c:	500f883a 	mov	r7,r10
41046a60:	41000017 	ldw	r4,0(r8)
41046a64:	4a400104 	addi	r9,r9,4
41046a68:	39ffff04 	addi	r7,r7,-4
41046a6c:	493fff15 	stw	r4,-4(r9)
41046a70:	42000104 	addi	r8,r8,4
41046a74:	59fffa36 	bltu	r11,r7,41046a60 <__alt_data_end+0xfffc8260>
41046a78:	513fff04 	addi	r4,r10,-4
41046a7c:	2008d0ba 	srli	r4,r4,2
41046a80:	318000cc 	andi	r6,r6,3
41046a84:	21000044 	addi	r4,r4,1
41046a88:	2109883a 	add	r4,r4,r4
41046a8c:	2109883a 	add	r4,r4,r4
41046a90:	1907883a 	add	r3,r3,r4
41046a94:	290b883a 	add	r5,r5,r4
41046a98:	30000b26 	beq	r6,zero,41046ac8 <memmove+0x150>
41046a9c:	198d883a 	add	r6,r3,r6
41046aa0:	29c00003 	ldbu	r7,0(r5)
41046aa4:	18c00044 	addi	r3,r3,1
41046aa8:	29400044 	addi	r5,r5,1
41046aac:	19ffffc5 	stb	r7,-1(r3)
41046ab0:	19bffb1e 	bne	r3,r6,41046aa0 <__alt_data_end+0xfffc82a0>
41046ab4:	f800283a 	ret
41046ab8:	1007883a 	mov	r3,r2
41046abc:	003ff606 	br	41046a98 <__alt_data_end+0xfffc8298>
41046ac0:	1007883a 	mov	r3,r2
41046ac4:	003ff506 	br	41046a9c <__alt_data_end+0xfffc829c>
41046ac8:	f800283a 	ret
41046acc:	500d883a 	mov	r6,r10
41046ad0:	003ff106 	br	41046a98 <__alt_data_end+0xfffc8298>

41046ad4 <memset>:
41046ad4:	20c000cc 	andi	r3,r4,3
41046ad8:	2005883a 	mov	r2,r4
41046adc:	18004426 	beq	r3,zero,41046bf0 <memset+0x11c>
41046ae0:	31ffffc4 	addi	r7,r6,-1
41046ae4:	30004026 	beq	r6,zero,41046be8 <memset+0x114>
41046ae8:	2813883a 	mov	r9,r5
41046aec:	200d883a 	mov	r6,r4
41046af0:	2007883a 	mov	r3,r4
41046af4:	00000406 	br	41046b08 <memset+0x34>
41046af8:	3a3fffc4 	addi	r8,r7,-1
41046afc:	31800044 	addi	r6,r6,1
41046b00:	38003926 	beq	r7,zero,41046be8 <memset+0x114>
41046b04:	400f883a 	mov	r7,r8
41046b08:	18c00044 	addi	r3,r3,1
41046b0c:	32400005 	stb	r9,0(r6)
41046b10:	1a0000cc 	andi	r8,r3,3
41046b14:	403ff81e 	bne	r8,zero,41046af8 <__alt_data_end+0xfffc82f8>
41046b18:	010000c4 	movi	r4,3
41046b1c:	21c02d2e 	bgeu	r4,r7,41046bd4 <memset+0x100>
41046b20:	29003fcc 	andi	r4,r5,255
41046b24:	200c923a 	slli	r6,r4,8
41046b28:	3108b03a 	or	r4,r6,r4
41046b2c:	200c943a 	slli	r6,r4,16
41046b30:	218cb03a 	or	r6,r4,r6
41046b34:	010003c4 	movi	r4,15
41046b38:	21c0182e 	bgeu	r4,r7,41046b9c <memset+0xc8>
41046b3c:	3b3ffc04 	addi	r12,r7,-16
41046b40:	6018d13a 	srli	r12,r12,4
41046b44:	1a000104 	addi	r8,r3,4
41046b48:	1ac00204 	addi	r11,r3,8
41046b4c:	6008913a 	slli	r4,r12,4
41046b50:	1a800304 	addi	r10,r3,12
41046b54:	1813883a 	mov	r9,r3
41046b58:	21000504 	addi	r4,r4,20
41046b5c:	1909883a 	add	r4,r3,r4
41046b60:	49800015 	stw	r6,0(r9)
41046b64:	41800015 	stw	r6,0(r8)
41046b68:	59800015 	stw	r6,0(r11)
41046b6c:	51800015 	stw	r6,0(r10)
41046b70:	42000404 	addi	r8,r8,16
41046b74:	4a400404 	addi	r9,r9,16
41046b78:	5ac00404 	addi	r11,r11,16
41046b7c:	52800404 	addi	r10,r10,16
41046b80:	413ff71e 	bne	r8,r4,41046b60 <__alt_data_end+0xfffc8360>
41046b84:	63000044 	addi	r12,r12,1
41046b88:	6018913a 	slli	r12,r12,4
41046b8c:	39c003cc 	andi	r7,r7,15
41046b90:	010000c4 	movi	r4,3
41046b94:	1b07883a 	add	r3,r3,r12
41046b98:	21c00e2e 	bgeu	r4,r7,41046bd4 <memset+0x100>
41046b9c:	1813883a 	mov	r9,r3
41046ba0:	3811883a 	mov	r8,r7
41046ba4:	010000c4 	movi	r4,3
41046ba8:	49800015 	stw	r6,0(r9)
41046bac:	423fff04 	addi	r8,r8,-4
41046bb0:	4a400104 	addi	r9,r9,4
41046bb4:	223ffc36 	bltu	r4,r8,41046ba8 <__alt_data_end+0xfffc83a8>
41046bb8:	393fff04 	addi	r4,r7,-4
41046bbc:	2008d0ba 	srli	r4,r4,2
41046bc0:	39c000cc 	andi	r7,r7,3
41046bc4:	21000044 	addi	r4,r4,1
41046bc8:	2109883a 	add	r4,r4,r4
41046bcc:	2109883a 	add	r4,r4,r4
41046bd0:	1907883a 	add	r3,r3,r4
41046bd4:	38000526 	beq	r7,zero,41046bec <memset+0x118>
41046bd8:	19cf883a 	add	r7,r3,r7
41046bdc:	19400005 	stb	r5,0(r3)
41046be0:	18c00044 	addi	r3,r3,1
41046be4:	38fffd1e 	bne	r7,r3,41046bdc <__alt_data_end+0xfffc83dc>
41046be8:	f800283a 	ret
41046bec:	f800283a 	ret
41046bf0:	2007883a 	mov	r3,r4
41046bf4:	300f883a 	mov	r7,r6
41046bf8:	003fc706 	br	41046b18 <__alt_data_end+0xfffc8318>

41046bfc <_Balloc>:
41046bfc:	20801317 	ldw	r2,76(r4)
41046c00:	defffc04 	addi	sp,sp,-16
41046c04:	dc400115 	stw	r17,4(sp)
41046c08:	dc000015 	stw	r16,0(sp)
41046c0c:	dfc00315 	stw	ra,12(sp)
41046c10:	dc800215 	stw	r18,8(sp)
41046c14:	2023883a 	mov	r17,r4
41046c18:	2821883a 	mov	r16,r5
41046c1c:	10000f26 	beq	r2,zero,41046c5c <_Balloc+0x60>
41046c20:	8407883a 	add	r3,r16,r16
41046c24:	18c7883a 	add	r3,r3,r3
41046c28:	10c7883a 	add	r3,r2,r3
41046c2c:	18800017 	ldw	r2,0(r3)
41046c30:	10001126 	beq	r2,zero,41046c78 <_Balloc+0x7c>
41046c34:	11000017 	ldw	r4,0(r2)
41046c38:	19000015 	stw	r4,0(r3)
41046c3c:	10000415 	stw	zero,16(r2)
41046c40:	10000315 	stw	zero,12(r2)
41046c44:	dfc00317 	ldw	ra,12(sp)
41046c48:	dc800217 	ldw	r18,8(sp)
41046c4c:	dc400117 	ldw	r17,4(sp)
41046c50:	dc000017 	ldw	r16,0(sp)
41046c54:	dec00404 	addi	sp,sp,16
41046c58:	f800283a 	ret
41046c5c:	01800844 	movi	r6,33
41046c60:	01400104 	movi	r5,4
41046c64:	1049df80 	call	41049df8 <_calloc_r>
41046c68:	88801315 	stw	r2,76(r17)
41046c6c:	103fec1e 	bne	r2,zero,41046c20 <__alt_data_end+0xfffc8420>
41046c70:	0005883a 	mov	r2,zero
41046c74:	003ff306 	br	41046c44 <__alt_data_end+0xfffc8444>
41046c78:	01400044 	movi	r5,1
41046c7c:	2c24983a 	sll	r18,r5,r16
41046c80:	8809883a 	mov	r4,r17
41046c84:	91800144 	addi	r6,r18,5
41046c88:	318d883a 	add	r6,r6,r6
41046c8c:	318d883a 	add	r6,r6,r6
41046c90:	1049df80 	call	41049df8 <_calloc_r>
41046c94:	103ff626 	beq	r2,zero,41046c70 <__alt_data_end+0xfffc8470>
41046c98:	14000115 	stw	r16,4(r2)
41046c9c:	14800215 	stw	r18,8(r2)
41046ca0:	003fe606 	br	41046c3c <__alt_data_end+0xfffc843c>

41046ca4 <_Bfree>:
41046ca4:	28000826 	beq	r5,zero,41046cc8 <_Bfree+0x24>
41046ca8:	28c00117 	ldw	r3,4(r5)
41046cac:	20801317 	ldw	r2,76(r4)
41046cb0:	18c7883a 	add	r3,r3,r3
41046cb4:	18c7883a 	add	r3,r3,r3
41046cb8:	10c5883a 	add	r2,r2,r3
41046cbc:	10c00017 	ldw	r3,0(r2)
41046cc0:	28c00015 	stw	r3,0(r5)
41046cc4:	11400015 	stw	r5,0(r2)
41046cc8:	f800283a 	ret

41046ccc <__multadd>:
41046ccc:	defffa04 	addi	sp,sp,-24
41046cd0:	dc800315 	stw	r18,12(sp)
41046cd4:	dc400215 	stw	r17,8(sp)
41046cd8:	dc000115 	stw	r16,4(sp)
41046cdc:	2823883a 	mov	r17,r5
41046ce0:	2c000417 	ldw	r16,16(r5)
41046ce4:	dfc00515 	stw	ra,20(sp)
41046ce8:	dcc00415 	stw	r19,16(sp)
41046cec:	2025883a 	mov	r18,r4
41046cf0:	29400504 	addi	r5,r5,20
41046cf4:	0011883a 	mov	r8,zero
41046cf8:	28c00017 	ldw	r3,0(r5)
41046cfc:	29400104 	addi	r5,r5,4
41046d00:	42000044 	addi	r8,r8,1
41046d04:	18bfffcc 	andi	r2,r3,65535
41046d08:	1185383a 	mul	r2,r2,r6
41046d0c:	1806d43a 	srli	r3,r3,16
41046d10:	11cf883a 	add	r7,r2,r7
41046d14:	3808d43a 	srli	r4,r7,16
41046d18:	1987383a 	mul	r3,r3,r6
41046d1c:	38bfffcc 	andi	r2,r7,65535
41046d20:	1907883a 	add	r3,r3,r4
41046d24:	1808943a 	slli	r4,r3,16
41046d28:	180ed43a 	srli	r7,r3,16
41046d2c:	2085883a 	add	r2,r4,r2
41046d30:	28bfff15 	stw	r2,-4(r5)
41046d34:	443ff016 	blt	r8,r16,41046cf8 <__alt_data_end+0xfffc84f8>
41046d38:	38000926 	beq	r7,zero,41046d60 <__multadd+0x94>
41046d3c:	88800217 	ldw	r2,8(r17)
41046d40:	80800f0e 	bge	r16,r2,41046d80 <__multadd+0xb4>
41046d44:	80800144 	addi	r2,r16,5
41046d48:	1085883a 	add	r2,r2,r2
41046d4c:	1085883a 	add	r2,r2,r2
41046d50:	8885883a 	add	r2,r17,r2
41046d54:	11c00015 	stw	r7,0(r2)
41046d58:	84000044 	addi	r16,r16,1
41046d5c:	8c000415 	stw	r16,16(r17)
41046d60:	8805883a 	mov	r2,r17
41046d64:	dfc00517 	ldw	ra,20(sp)
41046d68:	dcc00417 	ldw	r19,16(sp)
41046d6c:	dc800317 	ldw	r18,12(sp)
41046d70:	dc400217 	ldw	r17,8(sp)
41046d74:	dc000117 	ldw	r16,4(sp)
41046d78:	dec00604 	addi	sp,sp,24
41046d7c:	f800283a 	ret
41046d80:	89400117 	ldw	r5,4(r17)
41046d84:	9009883a 	mov	r4,r18
41046d88:	d9c00015 	stw	r7,0(sp)
41046d8c:	29400044 	addi	r5,r5,1
41046d90:	1046bfc0 	call	41046bfc <_Balloc>
41046d94:	89800417 	ldw	r6,16(r17)
41046d98:	89400304 	addi	r5,r17,12
41046d9c:	11000304 	addi	r4,r2,12
41046da0:	31800084 	addi	r6,r6,2
41046da4:	318d883a 	add	r6,r6,r6
41046da8:	318d883a 	add	r6,r6,r6
41046dac:	1027883a 	mov	r19,r2
41046db0:	1040ccc0 	call	41040ccc <memcpy>
41046db4:	d9c00017 	ldw	r7,0(sp)
41046db8:	88000a26 	beq	r17,zero,41046de4 <__multadd+0x118>
41046dbc:	88c00117 	ldw	r3,4(r17)
41046dc0:	90801317 	ldw	r2,76(r18)
41046dc4:	18c7883a 	add	r3,r3,r3
41046dc8:	18c7883a 	add	r3,r3,r3
41046dcc:	10c5883a 	add	r2,r2,r3
41046dd0:	10c00017 	ldw	r3,0(r2)
41046dd4:	88c00015 	stw	r3,0(r17)
41046dd8:	14400015 	stw	r17,0(r2)
41046ddc:	9823883a 	mov	r17,r19
41046de0:	003fd806 	br	41046d44 <__alt_data_end+0xfffc8544>
41046de4:	9823883a 	mov	r17,r19
41046de8:	003fd606 	br	41046d44 <__alt_data_end+0xfffc8544>

41046dec <__s2b>:
41046dec:	defff904 	addi	sp,sp,-28
41046df0:	dc400115 	stw	r17,4(sp)
41046df4:	dc000015 	stw	r16,0(sp)
41046df8:	2023883a 	mov	r17,r4
41046dfc:	2821883a 	mov	r16,r5
41046e00:	39000204 	addi	r4,r7,8
41046e04:	01400244 	movi	r5,9
41046e08:	dcc00315 	stw	r19,12(sp)
41046e0c:	dc800215 	stw	r18,8(sp)
41046e10:	dfc00615 	stw	ra,24(sp)
41046e14:	dd400515 	stw	r21,20(sp)
41046e18:	dd000415 	stw	r20,16(sp)
41046e1c:	3825883a 	mov	r18,r7
41046e20:	3027883a 	mov	r19,r6
41046e24:	1040b180 	call	41040b18 <__divsi3>
41046e28:	00c00044 	movi	r3,1
41046e2c:	000b883a 	mov	r5,zero
41046e30:	1880030e 	bge	r3,r2,41046e40 <__s2b+0x54>
41046e34:	18c7883a 	add	r3,r3,r3
41046e38:	29400044 	addi	r5,r5,1
41046e3c:	18bffd16 	blt	r3,r2,41046e34 <__alt_data_end+0xfffc8634>
41046e40:	8809883a 	mov	r4,r17
41046e44:	1046bfc0 	call	41046bfc <_Balloc>
41046e48:	d8c00717 	ldw	r3,28(sp)
41046e4c:	10c00515 	stw	r3,20(r2)
41046e50:	00c00044 	movi	r3,1
41046e54:	10c00415 	stw	r3,16(r2)
41046e58:	00c00244 	movi	r3,9
41046e5c:	1cc0210e 	bge	r3,r19,41046ee4 <__s2b+0xf8>
41046e60:	80eb883a 	add	r21,r16,r3
41046e64:	a829883a 	mov	r20,r21
41046e68:	84e1883a 	add	r16,r16,r19
41046e6c:	a1c00007 	ldb	r7,0(r20)
41046e70:	01800284 	movi	r6,10
41046e74:	a5000044 	addi	r20,r20,1
41046e78:	100b883a 	mov	r5,r2
41046e7c:	39fff404 	addi	r7,r7,-48
41046e80:	8809883a 	mov	r4,r17
41046e84:	1046ccc0 	call	41046ccc <__multadd>
41046e88:	a43ff81e 	bne	r20,r16,41046e6c <__alt_data_end+0xfffc866c>
41046e8c:	ace1883a 	add	r16,r21,r19
41046e90:	843ffe04 	addi	r16,r16,-8
41046e94:	9c800a0e 	bge	r19,r18,41046ec0 <__s2b+0xd4>
41046e98:	94e5c83a 	sub	r18,r18,r19
41046e9c:	84a5883a 	add	r18,r16,r18
41046ea0:	81c00007 	ldb	r7,0(r16)
41046ea4:	01800284 	movi	r6,10
41046ea8:	84000044 	addi	r16,r16,1
41046eac:	100b883a 	mov	r5,r2
41046eb0:	39fff404 	addi	r7,r7,-48
41046eb4:	8809883a 	mov	r4,r17
41046eb8:	1046ccc0 	call	41046ccc <__multadd>
41046ebc:	84bff81e 	bne	r16,r18,41046ea0 <__alt_data_end+0xfffc86a0>
41046ec0:	dfc00617 	ldw	ra,24(sp)
41046ec4:	dd400517 	ldw	r21,20(sp)
41046ec8:	dd000417 	ldw	r20,16(sp)
41046ecc:	dcc00317 	ldw	r19,12(sp)
41046ed0:	dc800217 	ldw	r18,8(sp)
41046ed4:	dc400117 	ldw	r17,4(sp)
41046ed8:	dc000017 	ldw	r16,0(sp)
41046edc:	dec00704 	addi	sp,sp,28
41046ee0:	f800283a 	ret
41046ee4:	84000284 	addi	r16,r16,10
41046ee8:	1827883a 	mov	r19,r3
41046eec:	003fe906 	br	41046e94 <__alt_data_end+0xfffc8694>

41046ef0 <__hi0bits>:
41046ef0:	20bfffec 	andhi	r2,r4,65535
41046ef4:	1000141e 	bne	r2,zero,41046f48 <__hi0bits+0x58>
41046ef8:	2008943a 	slli	r4,r4,16
41046efc:	00800404 	movi	r2,16
41046f00:	20ffc02c 	andhi	r3,r4,65280
41046f04:	1800021e 	bne	r3,zero,41046f10 <__hi0bits+0x20>
41046f08:	2008923a 	slli	r4,r4,8
41046f0c:	10800204 	addi	r2,r2,8
41046f10:	20fc002c 	andhi	r3,r4,61440
41046f14:	1800021e 	bne	r3,zero,41046f20 <__hi0bits+0x30>
41046f18:	2008913a 	slli	r4,r4,4
41046f1c:	10800104 	addi	r2,r2,4
41046f20:	20f0002c 	andhi	r3,r4,49152
41046f24:	1800031e 	bne	r3,zero,41046f34 <__hi0bits+0x44>
41046f28:	2109883a 	add	r4,r4,r4
41046f2c:	10800084 	addi	r2,r2,2
41046f30:	2109883a 	add	r4,r4,r4
41046f34:	20000316 	blt	r4,zero,41046f44 <__hi0bits+0x54>
41046f38:	2110002c 	andhi	r4,r4,16384
41046f3c:	2000041e 	bne	r4,zero,41046f50 <__hi0bits+0x60>
41046f40:	00800804 	movi	r2,32
41046f44:	f800283a 	ret
41046f48:	0005883a 	mov	r2,zero
41046f4c:	003fec06 	br	41046f00 <__alt_data_end+0xfffc8700>
41046f50:	10800044 	addi	r2,r2,1
41046f54:	f800283a 	ret

41046f58 <__lo0bits>:
41046f58:	20c00017 	ldw	r3,0(r4)
41046f5c:	188001cc 	andi	r2,r3,7
41046f60:	10000826 	beq	r2,zero,41046f84 <__lo0bits+0x2c>
41046f64:	1880004c 	andi	r2,r3,1
41046f68:	1000211e 	bne	r2,zero,41046ff0 <__lo0bits+0x98>
41046f6c:	1880008c 	andi	r2,r3,2
41046f70:	1000211e 	bne	r2,zero,41046ff8 <__lo0bits+0xa0>
41046f74:	1806d0ba 	srli	r3,r3,2
41046f78:	00800084 	movi	r2,2
41046f7c:	20c00015 	stw	r3,0(r4)
41046f80:	f800283a 	ret
41046f84:	18bfffcc 	andi	r2,r3,65535
41046f88:	10001326 	beq	r2,zero,41046fd8 <__lo0bits+0x80>
41046f8c:	0005883a 	mov	r2,zero
41046f90:	19403fcc 	andi	r5,r3,255
41046f94:	2800021e 	bne	r5,zero,41046fa0 <__lo0bits+0x48>
41046f98:	1806d23a 	srli	r3,r3,8
41046f9c:	10800204 	addi	r2,r2,8
41046fa0:	194003cc 	andi	r5,r3,15
41046fa4:	2800021e 	bne	r5,zero,41046fb0 <__lo0bits+0x58>
41046fa8:	1806d13a 	srli	r3,r3,4
41046fac:	10800104 	addi	r2,r2,4
41046fb0:	194000cc 	andi	r5,r3,3
41046fb4:	2800021e 	bne	r5,zero,41046fc0 <__lo0bits+0x68>
41046fb8:	1806d0ba 	srli	r3,r3,2
41046fbc:	10800084 	addi	r2,r2,2
41046fc0:	1940004c 	andi	r5,r3,1
41046fc4:	2800081e 	bne	r5,zero,41046fe8 <__lo0bits+0x90>
41046fc8:	1806d07a 	srli	r3,r3,1
41046fcc:	1800051e 	bne	r3,zero,41046fe4 <__lo0bits+0x8c>
41046fd0:	00800804 	movi	r2,32
41046fd4:	f800283a 	ret
41046fd8:	1806d43a 	srli	r3,r3,16
41046fdc:	00800404 	movi	r2,16
41046fe0:	003feb06 	br	41046f90 <__alt_data_end+0xfffc8790>
41046fe4:	10800044 	addi	r2,r2,1
41046fe8:	20c00015 	stw	r3,0(r4)
41046fec:	f800283a 	ret
41046ff0:	0005883a 	mov	r2,zero
41046ff4:	f800283a 	ret
41046ff8:	1806d07a 	srli	r3,r3,1
41046ffc:	00800044 	movi	r2,1
41047000:	20c00015 	stw	r3,0(r4)
41047004:	f800283a 	ret

41047008 <__i2b>:
41047008:	defffd04 	addi	sp,sp,-12
4104700c:	dc000015 	stw	r16,0(sp)
41047010:	04000044 	movi	r16,1
41047014:	dc400115 	stw	r17,4(sp)
41047018:	2823883a 	mov	r17,r5
4104701c:	800b883a 	mov	r5,r16
41047020:	dfc00215 	stw	ra,8(sp)
41047024:	1046bfc0 	call	41046bfc <_Balloc>
41047028:	14400515 	stw	r17,20(r2)
4104702c:	14000415 	stw	r16,16(r2)
41047030:	dfc00217 	ldw	ra,8(sp)
41047034:	dc400117 	ldw	r17,4(sp)
41047038:	dc000017 	ldw	r16,0(sp)
4104703c:	dec00304 	addi	sp,sp,12
41047040:	f800283a 	ret

41047044 <__multiply>:
41047044:	defffa04 	addi	sp,sp,-24
41047048:	dcc00315 	stw	r19,12(sp)
4104704c:	dc800215 	stw	r18,8(sp)
41047050:	34c00417 	ldw	r19,16(r6)
41047054:	2c800417 	ldw	r18,16(r5)
41047058:	dd000415 	stw	r20,16(sp)
4104705c:	dc400115 	stw	r17,4(sp)
41047060:	dfc00515 	stw	ra,20(sp)
41047064:	dc000015 	stw	r16,0(sp)
41047068:	2829883a 	mov	r20,r5
4104706c:	3023883a 	mov	r17,r6
41047070:	94c0050e 	bge	r18,r19,41047088 <__multiply+0x44>
41047074:	9007883a 	mov	r3,r18
41047078:	3029883a 	mov	r20,r6
4104707c:	9825883a 	mov	r18,r19
41047080:	2823883a 	mov	r17,r5
41047084:	1827883a 	mov	r19,r3
41047088:	a0800217 	ldw	r2,8(r20)
4104708c:	94e1883a 	add	r16,r18,r19
41047090:	a1400117 	ldw	r5,4(r20)
41047094:	1400010e 	bge	r2,r16,4104709c <__multiply+0x58>
41047098:	29400044 	addi	r5,r5,1
4104709c:	1046bfc0 	call	41046bfc <_Balloc>
410470a0:	8415883a 	add	r10,r16,r16
410470a4:	12c00504 	addi	r11,r2,20
410470a8:	5295883a 	add	r10,r10,r10
410470ac:	5a95883a 	add	r10,r11,r10
410470b0:	5807883a 	mov	r3,r11
410470b4:	5a80032e 	bgeu	r11,r10,410470c4 <__multiply+0x80>
410470b8:	18000015 	stw	zero,0(r3)
410470bc:	18c00104 	addi	r3,r3,4
410470c0:	1abffd36 	bltu	r3,r10,410470b8 <__alt_data_end+0xfffc88b8>
410470c4:	9ce7883a 	add	r19,r19,r19
410470c8:	94a5883a 	add	r18,r18,r18
410470cc:	89800504 	addi	r6,r17,20
410470d0:	9ce7883a 	add	r19,r19,r19
410470d4:	a3400504 	addi	r13,r20,20
410470d8:	94a5883a 	add	r18,r18,r18
410470dc:	34d9883a 	add	r12,r6,r19
410470e0:	6c93883a 	add	r9,r13,r18
410470e4:	3300422e 	bgeu	r6,r12,410471f0 <__multiply+0x1ac>
410470e8:	37c00017 	ldw	ra,0(r6)
410470ec:	fbffffcc 	andi	r15,ra,65535
410470f0:	78001b26 	beq	r15,zero,41047160 <__multiply+0x11c>
410470f4:	5811883a 	mov	r8,r11
410470f8:	681d883a 	mov	r14,r13
410470fc:	000f883a 	mov	r7,zero
41047100:	71000017 	ldw	r4,0(r14)
41047104:	40c00017 	ldw	r3,0(r8)
41047108:	73800104 	addi	r14,r14,4
4104710c:	217fffcc 	andi	r5,r4,65535
41047110:	2bcb383a 	mul	r5,r5,r15
41047114:	2008d43a 	srli	r4,r4,16
41047118:	1c7fffcc 	andi	r17,r3,65535
4104711c:	2c4b883a 	add	r5,r5,r17
41047120:	29cb883a 	add	r5,r5,r7
41047124:	23c9383a 	mul	r4,r4,r15
41047128:	1806d43a 	srli	r3,r3,16
4104712c:	280ed43a 	srli	r7,r5,16
41047130:	297fffcc 	andi	r5,r5,65535
41047134:	20c7883a 	add	r3,r4,r3
41047138:	19c7883a 	add	r3,r3,r7
4104713c:	1808943a 	slli	r4,r3,16
41047140:	4023883a 	mov	r17,r8
41047144:	180ed43a 	srli	r7,r3,16
41047148:	214ab03a 	or	r5,r4,r5
4104714c:	41400015 	stw	r5,0(r8)
41047150:	42000104 	addi	r8,r8,4
41047154:	727fea36 	bltu	r14,r9,41047100 <__alt_data_end+0xfffc8900>
41047158:	89c00115 	stw	r7,4(r17)
4104715c:	37c00017 	ldw	ra,0(r6)
41047160:	f83ed43a 	srli	ra,ra,16
41047164:	f8001f26 	beq	ra,zero,410471e4 <__multiply+0x1a0>
41047168:	58c00017 	ldw	r3,0(r11)
4104716c:	681d883a 	mov	r14,r13
41047170:	581f883a 	mov	r15,r11
41047174:	1811883a 	mov	r8,r3
41047178:	5825883a 	mov	r18,r11
4104717c:	000f883a 	mov	r7,zero
41047180:	00000106 	br	41047188 <__multiply+0x144>
41047184:	8825883a 	mov	r18,r17
41047188:	7140000b 	ldhu	r5,0(r14)
4104718c:	4010d43a 	srli	r8,r8,16
41047190:	193fffcc 	andi	r4,r3,65535
41047194:	2fcb383a 	mul	r5,r5,ra
41047198:	7bc00104 	addi	r15,r15,4
4104719c:	73800104 	addi	r14,r14,4
410471a0:	2a0b883a 	add	r5,r5,r8
410471a4:	29cb883a 	add	r5,r5,r7
410471a8:	2806943a 	slli	r3,r5,16
410471ac:	94400104 	addi	r17,r18,4
410471b0:	280ad43a 	srli	r5,r5,16
410471b4:	1908b03a 	or	r4,r3,r4
410471b8:	793fff15 	stw	r4,-4(r15)
410471bc:	70ffff17 	ldw	r3,-4(r14)
410471c0:	8a000017 	ldw	r8,0(r17)
410471c4:	1806d43a 	srli	r3,r3,16
410471c8:	413fffcc 	andi	r4,r8,65535
410471cc:	1fc7383a 	mul	r3,r3,ra
410471d0:	1907883a 	add	r3,r3,r4
410471d4:	1947883a 	add	r3,r3,r5
410471d8:	180ed43a 	srli	r7,r3,16
410471dc:	727fe936 	bltu	r14,r9,41047184 <__alt_data_end+0xfffc8984>
410471e0:	90c00115 	stw	r3,4(r18)
410471e4:	31800104 	addi	r6,r6,4
410471e8:	5ac00104 	addi	r11,r11,4
410471ec:	333fbe36 	bltu	r6,r12,410470e8 <__alt_data_end+0xfffc88e8>
410471f0:	0400090e 	bge	zero,r16,41047218 <__multiply+0x1d4>
410471f4:	50ffff17 	ldw	r3,-4(r10)
410471f8:	52bfff04 	addi	r10,r10,-4
410471fc:	18000326 	beq	r3,zero,4104720c <__multiply+0x1c8>
41047200:	00000506 	br	41047218 <__multiply+0x1d4>
41047204:	50c00017 	ldw	r3,0(r10)
41047208:	1800031e 	bne	r3,zero,41047218 <__multiply+0x1d4>
4104720c:	843fffc4 	addi	r16,r16,-1
41047210:	52bfff04 	addi	r10,r10,-4
41047214:	803ffb1e 	bne	r16,zero,41047204 <__alt_data_end+0xfffc8a04>
41047218:	14000415 	stw	r16,16(r2)
4104721c:	dfc00517 	ldw	ra,20(sp)
41047220:	dd000417 	ldw	r20,16(sp)
41047224:	dcc00317 	ldw	r19,12(sp)
41047228:	dc800217 	ldw	r18,8(sp)
4104722c:	dc400117 	ldw	r17,4(sp)
41047230:	dc000017 	ldw	r16,0(sp)
41047234:	dec00604 	addi	sp,sp,24
41047238:	f800283a 	ret

4104723c <__pow5mult>:
4104723c:	defffa04 	addi	sp,sp,-24
41047240:	dcc00315 	stw	r19,12(sp)
41047244:	dc000015 	stw	r16,0(sp)
41047248:	dfc00515 	stw	ra,20(sp)
4104724c:	dd000415 	stw	r20,16(sp)
41047250:	dc800215 	stw	r18,8(sp)
41047254:	dc400115 	stw	r17,4(sp)
41047258:	308000cc 	andi	r2,r6,3
4104725c:	3021883a 	mov	r16,r6
41047260:	2027883a 	mov	r19,r4
41047264:	10002f1e 	bne	r2,zero,41047324 <__pow5mult+0xe8>
41047268:	2825883a 	mov	r18,r5
4104726c:	8021d0ba 	srai	r16,r16,2
41047270:	80001a26 	beq	r16,zero,410472dc <__pow5mult+0xa0>
41047274:	9c401217 	ldw	r17,72(r19)
41047278:	8800061e 	bne	r17,zero,41047294 <__pow5mult+0x58>
4104727c:	00003406 	br	41047350 <__pow5mult+0x114>
41047280:	8021d07a 	srai	r16,r16,1
41047284:	80001526 	beq	r16,zero,410472dc <__pow5mult+0xa0>
41047288:	88800017 	ldw	r2,0(r17)
4104728c:	10001c26 	beq	r2,zero,41047300 <__pow5mult+0xc4>
41047290:	1023883a 	mov	r17,r2
41047294:	8080004c 	andi	r2,r16,1
41047298:	103ff926 	beq	r2,zero,41047280 <__alt_data_end+0xfffc8a80>
4104729c:	880d883a 	mov	r6,r17
410472a0:	900b883a 	mov	r5,r18
410472a4:	9809883a 	mov	r4,r19
410472a8:	10470440 	call	41047044 <__multiply>
410472ac:	90001b26 	beq	r18,zero,4104731c <__pow5mult+0xe0>
410472b0:	91000117 	ldw	r4,4(r18)
410472b4:	98c01317 	ldw	r3,76(r19)
410472b8:	8021d07a 	srai	r16,r16,1
410472bc:	2109883a 	add	r4,r4,r4
410472c0:	2109883a 	add	r4,r4,r4
410472c4:	1907883a 	add	r3,r3,r4
410472c8:	19000017 	ldw	r4,0(r3)
410472cc:	91000015 	stw	r4,0(r18)
410472d0:	1c800015 	stw	r18,0(r3)
410472d4:	1025883a 	mov	r18,r2
410472d8:	803feb1e 	bne	r16,zero,41047288 <__alt_data_end+0xfffc8a88>
410472dc:	9005883a 	mov	r2,r18
410472e0:	dfc00517 	ldw	ra,20(sp)
410472e4:	dd000417 	ldw	r20,16(sp)
410472e8:	dcc00317 	ldw	r19,12(sp)
410472ec:	dc800217 	ldw	r18,8(sp)
410472f0:	dc400117 	ldw	r17,4(sp)
410472f4:	dc000017 	ldw	r16,0(sp)
410472f8:	dec00604 	addi	sp,sp,24
410472fc:	f800283a 	ret
41047300:	880d883a 	mov	r6,r17
41047304:	880b883a 	mov	r5,r17
41047308:	9809883a 	mov	r4,r19
4104730c:	10470440 	call	41047044 <__multiply>
41047310:	88800015 	stw	r2,0(r17)
41047314:	10000015 	stw	zero,0(r2)
41047318:	003fdd06 	br	41047290 <__alt_data_end+0xfffc8a90>
4104731c:	1025883a 	mov	r18,r2
41047320:	003fd706 	br	41047280 <__alt_data_end+0xfffc8a80>
41047324:	10bfffc4 	addi	r2,r2,-1
41047328:	1085883a 	add	r2,r2,r2
4104732c:	00d04174 	movhi	r3,16645
41047330:	18ffd504 	addi	r3,r3,-172
41047334:	1085883a 	add	r2,r2,r2
41047338:	1885883a 	add	r2,r3,r2
4104733c:	11800017 	ldw	r6,0(r2)
41047340:	000f883a 	mov	r7,zero
41047344:	1046ccc0 	call	41046ccc <__multadd>
41047348:	1025883a 	mov	r18,r2
4104734c:	003fc706 	br	4104726c <__alt_data_end+0xfffc8a6c>
41047350:	05000044 	movi	r20,1
41047354:	a00b883a 	mov	r5,r20
41047358:	9809883a 	mov	r4,r19
4104735c:	1046bfc0 	call	41046bfc <_Balloc>
41047360:	1023883a 	mov	r17,r2
41047364:	00809c44 	movi	r2,625
41047368:	88800515 	stw	r2,20(r17)
4104736c:	8d000415 	stw	r20,16(r17)
41047370:	9c401215 	stw	r17,72(r19)
41047374:	88000015 	stw	zero,0(r17)
41047378:	003fc606 	br	41047294 <__alt_data_end+0xfffc8a94>

4104737c <__lshift>:
4104737c:	defff904 	addi	sp,sp,-28
41047380:	dd400515 	stw	r21,20(sp)
41047384:	dcc00315 	stw	r19,12(sp)
41047388:	302bd17a 	srai	r21,r6,5
4104738c:	2cc00417 	ldw	r19,16(r5)
41047390:	28800217 	ldw	r2,8(r5)
41047394:	dd000415 	stw	r20,16(sp)
41047398:	ace7883a 	add	r19,r21,r19
4104739c:	dc800215 	stw	r18,8(sp)
410473a0:	dc400115 	stw	r17,4(sp)
410473a4:	dc000015 	stw	r16,0(sp)
410473a8:	dfc00615 	stw	ra,24(sp)
410473ac:	9c000044 	addi	r16,r19,1
410473b0:	2823883a 	mov	r17,r5
410473b4:	3029883a 	mov	r20,r6
410473b8:	2025883a 	mov	r18,r4
410473bc:	29400117 	ldw	r5,4(r5)
410473c0:	1400030e 	bge	r2,r16,410473d0 <__lshift+0x54>
410473c4:	1085883a 	add	r2,r2,r2
410473c8:	29400044 	addi	r5,r5,1
410473cc:	143ffd16 	blt	r2,r16,410473c4 <__alt_data_end+0xfffc8bc4>
410473d0:	9009883a 	mov	r4,r18
410473d4:	1046bfc0 	call	41046bfc <_Balloc>
410473d8:	10c00504 	addi	r3,r2,20
410473dc:	0540070e 	bge	zero,r21,410473fc <__lshift+0x80>
410473e0:	ad6b883a 	add	r21,r21,r21
410473e4:	ad6b883a 	add	r21,r21,r21
410473e8:	1809883a 	mov	r4,r3
410473ec:	1d47883a 	add	r3,r3,r21
410473f0:	20000015 	stw	zero,0(r4)
410473f4:	21000104 	addi	r4,r4,4
410473f8:	193ffd1e 	bne	r3,r4,410473f0 <__alt_data_end+0xfffc8bf0>
410473fc:	8a000417 	ldw	r8,16(r17)
41047400:	89000504 	addi	r4,r17,20
41047404:	a18007cc 	andi	r6,r20,31
41047408:	4211883a 	add	r8,r8,r8
4104740c:	4211883a 	add	r8,r8,r8
41047410:	2211883a 	add	r8,r4,r8
41047414:	30002326 	beq	r6,zero,410474a4 <__lshift+0x128>
41047418:	02400804 	movi	r9,32
4104741c:	4993c83a 	sub	r9,r9,r6
41047420:	000b883a 	mov	r5,zero
41047424:	21c00017 	ldw	r7,0(r4)
41047428:	1815883a 	mov	r10,r3
4104742c:	18c00104 	addi	r3,r3,4
41047430:	398e983a 	sll	r7,r7,r6
41047434:	21000104 	addi	r4,r4,4
41047438:	394ab03a 	or	r5,r7,r5
4104743c:	197fff15 	stw	r5,-4(r3)
41047440:	217fff17 	ldw	r5,-4(r4)
41047444:	2a4ad83a 	srl	r5,r5,r9
41047448:	223ff636 	bltu	r4,r8,41047424 <__alt_data_end+0xfffc8c24>
4104744c:	51400115 	stw	r5,4(r10)
41047450:	28001a1e 	bne	r5,zero,410474bc <__lshift+0x140>
41047454:	843fffc4 	addi	r16,r16,-1
41047458:	14000415 	stw	r16,16(r2)
4104745c:	88000826 	beq	r17,zero,41047480 <__lshift+0x104>
41047460:	89000117 	ldw	r4,4(r17)
41047464:	90c01317 	ldw	r3,76(r18)
41047468:	2109883a 	add	r4,r4,r4
4104746c:	2109883a 	add	r4,r4,r4
41047470:	1907883a 	add	r3,r3,r4
41047474:	19000017 	ldw	r4,0(r3)
41047478:	89000015 	stw	r4,0(r17)
4104747c:	1c400015 	stw	r17,0(r3)
41047480:	dfc00617 	ldw	ra,24(sp)
41047484:	dd400517 	ldw	r21,20(sp)
41047488:	dd000417 	ldw	r20,16(sp)
4104748c:	dcc00317 	ldw	r19,12(sp)
41047490:	dc800217 	ldw	r18,8(sp)
41047494:	dc400117 	ldw	r17,4(sp)
41047498:	dc000017 	ldw	r16,0(sp)
4104749c:	dec00704 	addi	sp,sp,28
410474a0:	f800283a 	ret
410474a4:	21400017 	ldw	r5,0(r4)
410474a8:	18c00104 	addi	r3,r3,4
410474ac:	21000104 	addi	r4,r4,4
410474b0:	197fff15 	stw	r5,-4(r3)
410474b4:	223ffb36 	bltu	r4,r8,410474a4 <__alt_data_end+0xfffc8ca4>
410474b8:	003fe606 	br	41047454 <__alt_data_end+0xfffc8c54>
410474bc:	9c000084 	addi	r16,r19,2
410474c0:	003fe406 	br	41047454 <__alt_data_end+0xfffc8c54>

410474c4 <__mcmp>:
410474c4:	20800417 	ldw	r2,16(r4)
410474c8:	28c00417 	ldw	r3,16(r5)
410474cc:	10c5c83a 	sub	r2,r2,r3
410474d0:	1000111e 	bne	r2,zero,41047518 <__mcmp+0x54>
410474d4:	18c7883a 	add	r3,r3,r3
410474d8:	18c7883a 	add	r3,r3,r3
410474dc:	21000504 	addi	r4,r4,20
410474e0:	29400504 	addi	r5,r5,20
410474e4:	20c5883a 	add	r2,r4,r3
410474e8:	28cb883a 	add	r5,r5,r3
410474ec:	00000106 	br	410474f4 <__mcmp+0x30>
410474f0:	20800a2e 	bgeu	r4,r2,4104751c <__mcmp+0x58>
410474f4:	10bfff04 	addi	r2,r2,-4
410474f8:	297fff04 	addi	r5,r5,-4
410474fc:	11800017 	ldw	r6,0(r2)
41047500:	28c00017 	ldw	r3,0(r5)
41047504:	30fffa26 	beq	r6,r3,410474f0 <__alt_data_end+0xfffc8cf0>
41047508:	30c00236 	bltu	r6,r3,41047514 <__mcmp+0x50>
4104750c:	00800044 	movi	r2,1
41047510:	f800283a 	ret
41047514:	00bfffc4 	movi	r2,-1
41047518:	f800283a 	ret
4104751c:	0005883a 	mov	r2,zero
41047520:	f800283a 	ret

41047524 <__mdiff>:
41047524:	28c00417 	ldw	r3,16(r5)
41047528:	30800417 	ldw	r2,16(r6)
4104752c:	defffa04 	addi	sp,sp,-24
41047530:	dcc00315 	stw	r19,12(sp)
41047534:	dc800215 	stw	r18,8(sp)
41047538:	dfc00515 	stw	ra,20(sp)
4104753c:	dd000415 	stw	r20,16(sp)
41047540:	dc400115 	stw	r17,4(sp)
41047544:	dc000015 	stw	r16,0(sp)
41047548:	1887c83a 	sub	r3,r3,r2
4104754c:	2825883a 	mov	r18,r5
41047550:	3027883a 	mov	r19,r6
41047554:	1800141e 	bne	r3,zero,410475a8 <__mdiff+0x84>
41047558:	1085883a 	add	r2,r2,r2
4104755c:	1085883a 	add	r2,r2,r2
41047560:	2a000504 	addi	r8,r5,20
41047564:	34000504 	addi	r16,r6,20
41047568:	4087883a 	add	r3,r8,r2
4104756c:	8085883a 	add	r2,r16,r2
41047570:	00000106 	br	41047578 <__mdiff+0x54>
41047574:	40c0592e 	bgeu	r8,r3,410476dc <__mdiff+0x1b8>
41047578:	18ffff04 	addi	r3,r3,-4
4104757c:	10bfff04 	addi	r2,r2,-4
41047580:	19c00017 	ldw	r7,0(r3)
41047584:	11400017 	ldw	r5,0(r2)
41047588:	397ffa26 	beq	r7,r5,41047574 <__alt_data_end+0xfffc8d74>
4104758c:	3940592e 	bgeu	r7,r5,410476f4 <__mdiff+0x1d0>
41047590:	9005883a 	mov	r2,r18
41047594:	4023883a 	mov	r17,r8
41047598:	9825883a 	mov	r18,r19
4104759c:	05000044 	movi	r20,1
410475a0:	1027883a 	mov	r19,r2
410475a4:	00000406 	br	410475b8 <__mdiff+0x94>
410475a8:	18005616 	blt	r3,zero,41047704 <__mdiff+0x1e0>
410475ac:	34400504 	addi	r17,r6,20
410475b0:	2c000504 	addi	r16,r5,20
410475b4:	0029883a 	mov	r20,zero
410475b8:	91400117 	ldw	r5,4(r18)
410475bc:	1046bfc0 	call	41046bfc <_Balloc>
410475c0:	92400417 	ldw	r9,16(r18)
410475c4:	9b000417 	ldw	r12,16(r19)
410475c8:	12c00504 	addi	r11,r2,20
410475cc:	4a51883a 	add	r8,r9,r9
410475d0:	6319883a 	add	r12,r12,r12
410475d4:	4211883a 	add	r8,r8,r8
410475d8:	6319883a 	add	r12,r12,r12
410475dc:	15000315 	stw	r20,12(r2)
410475e0:	8211883a 	add	r8,r16,r8
410475e4:	8b19883a 	add	r12,r17,r12
410475e8:	0007883a 	mov	r3,zero
410475ec:	81400017 	ldw	r5,0(r16)
410475f0:	89c00017 	ldw	r7,0(r17)
410475f4:	59800104 	addi	r6,r11,4
410475f8:	293fffcc 	andi	r4,r5,65535
410475fc:	20c7883a 	add	r3,r4,r3
41047600:	393fffcc 	andi	r4,r7,65535
41047604:	1909c83a 	sub	r4,r3,r4
41047608:	280ad43a 	srli	r5,r5,16
4104760c:	380ed43a 	srli	r7,r7,16
41047610:	2007d43a 	srai	r3,r4,16
41047614:	213fffcc 	andi	r4,r4,65535
41047618:	29cbc83a 	sub	r5,r5,r7
4104761c:	28c7883a 	add	r3,r5,r3
41047620:	180a943a 	slli	r5,r3,16
41047624:	8c400104 	addi	r17,r17,4
41047628:	84000104 	addi	r16,r16,4
4104762c:	2908b03a 	or	r4,r5,r4
41047630:	59000015 	stw	r4,0(r11)
41047634:	1807d43a 	srai	r3,r3,16
41047638:	3015883a 	mov	r10,r6
4104763c:	3017883a 	mov	r11,r6
41047640:	8b3fea36 	bltu	r17,r12,410475ec <__alt_data_end+0xfffc8dec>
41047644:	8200162e 	bgeu	r16,r8,410476a0 <__mdiff+0x17c>
41047648:	8017883a 	mov	r11,r16
4104764c:	59400017 	ldw	r5,0(r11)
41047650:	31800104 	addi	r6,r6,4
41047654:	5ac00104 	addi	r11,r11,4
41047658:	293fffcc 	andi	r4,r5,65535
4104765c:	20c7883a 	add	r3,r4,r3
41047660:	280ed43a 	srli	r7,r5,16
41047664:	180bd43a 	srai	r5,r3,16
41047668:	193fffcc 	andi	r4,r3,65535
4104766c:	3947883a 	add	r3,r7,r5
41047670:	180a943a 	slli	r5,r3,16
41047674:	1807d43a 	srai	r3,r3,16
41047678:	2908b03a 	or	r4,r5,r4
4104767c:	313fff15 	stw	r4,-4(r6)
41047680:	5a3ff236 	bltu	r11,r8,4104764c <__alt_data_end+0xfffc8e4c>
41047684:	0406303a 	nor	r3,zero,r16
41047688:	1a07883a 	add	r3,r3,r8
4104768c:	1806d0ba 	srli	r3,r3,2
41047690:	18c00044 	addi	r3,r3,1
41047694:	18c7883a 	add	r3,r3,r3
41047698:	18c7883a 	add	r3,r3,r3
4104769c:	50d5883a 	add	r10,r10,r3
410476a0:	50ffff04 	addi	r3,r10,-4
410476a4:	2000041e 	bne	r4,zero,410476b8 <__mdiff+0x194>
410476a8:	18ffff04 	addi	r3,r3,-4
410476ac:	19000017 	ldw	r4,0(r3)
410476b0:	4a7fffc4 	addi	r9,r9,-1
410476b4:	203ffc26 	beq	r4,zero,410476a8 <__alt_data_end+0xfffc8ea8>
410476b8:	12400415 	stw	r9,16(r2)
410476bc:	dfc00517 	ldw	ra,20(sp)
410476c0:	dd000417 	ldw	r20,16(sp)
410476c4:	dcc00317 	ldw	r19,12(sp)
410476c8:	dc800217 	ldw	r18,8(sp)
410476cc:	dc400117 	ldw	r17,4(sp)
410476d0:	dc000017 	ldw	r16,0(sp)
410476d4:	dec00604 	addi	sp,sp,24
410476d8:	f800283a 	ret
410476dc:	000b883a 	mov	r5,zero
410476e0:	1046bfc0 	call	41046bfc <_Balloc>
410476e4:	00c00044 	movi	r3,1
410476e8:	10c00415 	stw	r3,16(r2)
410476ec:	10000515 	stw	zero,20(r2)
410476f0:	003ff206 	br	410476bc <__alt_data_end+0xfffc8ebc>
410476f4:	8023883a 	mov	r17,r16
410476f8:	0029883a 	mov	r20,zero
410476fc:	4021883a 	mov	r16,r8
41047700:	003fad06 	br	410475b8 <__alt_data_end+0xfffc8db8>
41047704:	9005883a 	mov	r2,r18
41047708:	94400504 	addi	r17,r18,20
4104770c:	9c000504 	addi	r16,r19,20
41047710:	9825883a 	mov	r18,r19
41047714:	05000044 	movi	r20,1
41047718:	1027883a 	mov	r19,r2
4104771c:	003fa606 	br	410475b8 <__alt_data_end+0xfffc8db8>

41047720 <__ulp>:
41047720:	295ffc2c 	andhi	r5,r5,32752
41047724:	00bf3034 	movhi	r2,64704
41047728:	2887883a 	add	r3,r5,r2
4104772c:	00c0020e 	bge	zero,r3,41047738 <__ulp+0x18>
41047730:	0005883a 	mov	r2,zero
41047734:	f800283a 	ret
41047738:	00c7c83a 	sub	r3,zero,r3
4104773c:	1807d53a 	srai	r3,r3,20
41047740:	008004c4 	movi	r2,19
41047744:	10c00b0e 	bge	r2,r3,41047774 <__ulp+0x54>
41047748:	18bffb04 	addi	r2,r3,-20
4104774c:	01000784 	movi	r4,30
41047750:	0007883a 	mov	r3,zero
41047754:	20800516 	blt	r4,r2,4104776c <__ulp+0x4c>
41047758:	010007c4 	movi	r4,31
4104775c:	2089c83a 	sub	r4,r4,r2
41047760:	00800044 	movi	r2,1
41047764:	1104983a 	sll	r2,r2,r4
41047768:	f800283a 	ret
4104776c:	00800044 	movi	r2,1
41047770:	f800283a 	ret
41047774:	01400234 	movhi	r5,8
41047778:	28c7d83a 	sra	r3,r5,r3
4104777c:	0005883a 	mov	r2,zero
41047780:	f800283a 	ret

41047784 <__b2d>:
41047784:	defffa04 	addi	sp,sp,-24
41047788:	dc000015 	stw	r16,0(sp)
4104778c:	24000417 	ldw	r16,16(r4)
41047790:	dc400115 	stw	r17,4(sp)
41047794:	24400504 	addi	r17,r4,20
41047798:	8421883a 	add	r16,r16,r16
4104779c:	8421883a 	add	r16,r16,r16
410477a0:	8c21883a 	add	r16,r17,r16
410477a4:	dc800215 	stw	r18,8(sp)
410477a8:	84bfff17 	ldw	r18,-4(r16)
410477ac:	dd000415 	stw	r20,16(sp)
410477b0:	dcc00315 	stw	r19,12(sp)
410477b4:	9009883a 	mov	r4,r18
410477b8:	2829883a 	mov	r20,r5
410477bc:	dfc00515 	stw	ra,20(sp)
410477c0:	1046ef00 	call	41046ef0 <__hi0bits>
410477c4:	00c00804 	movi	r3,32
410477c8:	1889c83a 	sub	r4,r3,r2
410477cc:	a1000015 	stw	r4,0(r20)
410477d0:	01000284 	movi	r4,10
410477d4:	84ffff04 	addi	r19,r16,-4
410477d8:	20801216 	blt	r4,r2,41047824 <__b2d+0xa0>
410477dc:	018002c4 	movi	r6,11
410477e0:	308dc83a 	sub	r6,r6,r2
410477e4:	9186d83a 	srl	r3,r18,r6
410477e8:	18cffc34 	orhi	r3,r3,16368
410477ec:	8cc0212e 	bgeu	r17,r19,41047874 <__b2d+0xf0>
410477f0:	813ffe17 	ldw	r4,-8(r16)
410477f4:	218cd83a 	srl	r6,r4,r6
410477f8:	10800544 	addi	r2,r2,21
410477fc:	9084983a 	sll	r2,r18,r2
41047800:	1184b03a 	or	r2,r2,r6
41047804:	dfc00517 	ldw	ra,20(sp)
41047808:	dd000417 	ldw	r20,16(sp)
4104780c:	dcc00317 	ldw	r19,12(sp)
41047810:	dc800217 	ldw	r18,8(sp)
41047814:	dc400117 	ldw	r17,4(sp)
41047818:	dc000017 	ldw	r16,0(sp)
4104781c:	dec00604 	addi	sp,sp,24
41047820:	f800283a 	ret
41047824:	8cc00f2e 	bgeu	r17,r19,41047864 <__b2d+0xe0>
41047828:	117ffd44 	addi	r5,r2,-11
4104782c:	80bffe17 	ldw	r2,-8(r16)
41047830:	28000e26 	beq	r5,zero,4104786c <__b2d+0xe8>
41047834:	1949c83a 	sub	r4,r3,r5
41047838:	9164983a 	sll	r18,r18,r5
4104783c:	1106d83a 	srl	r3,r2,r4
41047840:	81bffe04 	addi	r6,r16,-8
41047844:	948ffc34 	orhi	r18,r18,16368
41047848:	90c6b03a 	or	r3,r18,r3
4104784c:	89800e2e 	bgeu	r17,r6,41047888 <__b2d+0x104>
41047850:	81bffd17 	ldw	r6,-12(r16)
41047854:	1144983a 	sll	r2,r2,r5
41047858:	310ad83a 	srl	r5,r6,r4
4104785c:	2884b03a 	or	r2,r5,r2
41047860:	003fe806 	br	41047804 <__alt_data_end+0xfffc9004>
41047864:	10bffd44 	addi	r2,r2,-11
41047868:	1000041e 	bne	r2,zero,4104787c <__b2d+0xf8>
4104786c:	90cffc34 	orhi	r3,r18,16368
41047870:	003fe406 	br	41047804 <__alt_data_end+0xfffc9004>
41047874:	000d883a 	mov	r6,zero
41047878:	003fdf06 	br	410477f8 <__alt_data_end+0xfffc8ff8>
4104787c:	90a4983a 	sll	r18,r18,r2
41047880:	0005883a 	mov	r2,zero
41047884:	003ff906 	br	4104786c <__alt_data_end+0xfffc906c>
41047888:	1144983a 	sll	r2,r2,r5
4104788c:	003fdd06 	br	41047804 <__alt_data_end+0xfffc9004>

41047890 <__d2b>:
41047890:	defff804 	addi	sp,sp,-32
41047894:	dc000215 	stw	r16,8(sp)
41047898:	3021883a 	mov	r16,r6
4104789c:	dc400315 	stw	r17,12(sp)
410478a0:	8022907a 	slli	r17,r16,1
410478a4:	dd000615 	stw	r20,24(sp)
410478a8:	2829883a 	mov	r20,r5
410478ac:	01400044 	movi	r5,1
410478b0:	dcc00515 	stw	r19,20(sp)
410478b4:	dc800415 	stw	r18,16(sp)
410478b8:	dfc00715 	stw	ra,28(sp)
410478bc:	3825883a 	mov	r18,r7
410478c0:	8822d57a 	srli	r17,r17,21
410478c4:	1046bfc0 	call	41046bfc <_Balloc>
410478c8:	1027883a 	mov	r19,r2
410478cc:	00800434 	movhi	r2,16
410478d0:	10bfffc4 	addi	r2,r2,-1
410478d4:	808c703a 	and	r6,r16,r2
410478d8:	88000126 	beq	r17,zero,410478e0 <__d2b+0x50>
410478dc:	31800434 	orhi	r6,r6,16
410478e0:	d9800015 	stw	r6,0(sp)
410478e4:	a0002426 	beq	r20,zero,41047978 <__d2b+0xe8>
410478e8:	d9000104 	addi	r4,sp,4
410478ec:	dd000115 	stw	r20,4(sp)
410478f0:	1046f580 	call	41046f58 <__lo0bits>
410478f4:	d8c00017 	ldw	r3,0(sp)
410478f8:	10002f1e 	bne	r2,zero,410479b8 <__d2b+0x128>
410478fc:	d9000117 	ldw	r4,4(sp)
41047900:	99000515 	stw	r4,20(r19)
41047904:	1821003a 	cmpeq	r16,r3,zero
41047908:	01000084 	movi	r4,2
4104790c:	2421c83a 	sub	r16,r4,r16
41047910:	98c00615 	stw	r3,24(r19)
41047914:	9c000415 	stw	r16,16(r19)
41047918:	88001f1e 	bne	r17,zero,41047998 <__d2b+0x108>
4104791c:	10bef384 	addi	r2,r2,-1074
41047920:	90800015 	stw	r2,0(r18)
41047924:	00900034 	movhi	r2,16384
41047928:	10bfffc4 	addi	r2,r2,-1
4104792c:	8085883a 	add	r2,r16,r2
41047930:	1085883a 	add	r2,r2,r2
41047934:	1085883a 	add	r2,r2,r2
41047938:	9885883a 	add	r2,r19,r2
4104793c:	11000517 	ldw	r4,20(r2)
41047940:	8020917a 	slli	r16,r16,5
41047944:	1046ef00 	call	41046ef0 <__hi0bits>
41047948:	d8c00817 	ldw	r3,32(sp)
4104794c:	8085c83a 	sub	r2,r16,r2
41047950:	18800015 	stw	r2,0(r3)
41047954:	9805883a 	mov	r2,r19
41047958:	dfc00717 	ldw	ra,28(sp)
4104795c:	dd000617 	ldw	r20,24(sp)
41047960:	dcc00517 	ldw	r19,20(sp)
41047964:	dc800417 	ldw	r18,16(sp)
41047968:	dc400317 	ldw	r17,12(sp)
4104796c:	dc000217 	ldw	r16,8(sp)
41047970:	dec00804 	addi	sp,sp,32
41047974:	f800283a 	ret
41047978:	d809883a 	mov	r4,sp
4104797c:	1046f580 	call	41046f58 <__lo0bits>
41047980:	d8c00017 	ldw	r3,0(sp)
41047984:	04000044 	movi	r16,1
41047988:	9c000415 	stw	r16,16(r19)
4104798c:	98c00515 	stw	r3,20(r19)
41047990:	10800804 	addi	r2,r2,32
41047994:	883fe126 	beq	r17,zero,4104791c <__alt_data_end+0xfffc911c>
41047998:	00c00d44 	movi	r3,53
4104799c:	8c7ef344 	addi	r17,r17,-1075
410479a0:	88a3883a 	add	r17,r17,r2
410479a4:	1885c83a 	sub	r2,r3,r2
410479a8:	d8c00817 	ldw	r3,32(sp)
410479ac:	94400015 	stw	r17,0(r18)
410479b0:	18800015 	stw	r2,0(r3)
410479b4:	003fe706 	br	41047954 <__alt_data_end+0xfffc9154>
410479b8:	01000804 	movi	r4,32
410479bc:	2089c83a 	sub	r4,r4,r2
410479c0:	1908983a 	sll	r4,r3,r4
410479c4:	d9400117 	ldw	r5,4(sp)
410479c8:	1886d83a 	srl	r3,r3,r2
410479cc:	2148b03a 	or	r4,r4,r5
410479d0:	99000515 	stw	r4,20(r19)
410479d4:	d8c00015 	stw	r3,0(sp)
410479d8:	003fca06 	br	41047904 <__alt_data_end+0xfffc9104>

410479dc <__ratio>:
410479dc:	defff904 	addi	sp,sp,-28
410479e0:	dc400315 	stw	r17,12(sp)
410479e4:	2823883a 	mov	r17,r5
410479e8:	d9400104 	addi	r5,sp,4
410479ec:	dfc00615 	stw	ra,24(sp)
410479f0:	dcc00515 	stw	r19,20(sp)
410479f4:	dc800415 	stw	r18,16(sp)
410479f8:	2027883a 	mov	r19,r4
410479fc:	dc000215 	stw	r16,8(sp)
41047a00:	10477840 	call	41047784 <__b2d>
41047a04:	d80b883a 	mov	r5,sp
41047a08:	8809883a 	mov	r4,r17
41047a0c:	1025883a 	mov	r18,r2
41047a10:	1821883a 	mov	r16,r3
41047a14:	10477840 	call	41047784 <__b2d>
41047a18:	8a000417 	ldw	r8,16(r17)
41047a1c:	99000417 	ldw	r4,16(r19)
41047a20:	d9400117 	ldw	r5,4(sp)
41047a24:	2209c83a 	sub	r4,r4,r8
41047a28:	2010917a 	slli	r8,r4,5
41047a2c:	d9000017 	ldw	r4,0(sp)
41047a30:	2909c83a 	sub	r4,r5,r4
41047a34:	4109883a 	add	r4,r8,r4
41047a38:	01000e0e 	bge	zero,r4,41047a74 <__ratio+0x98>
41047a3c:	2008953a 	slli	r4,r4,20
41047a40:	2421883a 	add	r16,r4,r16
41047a44:	100d883a 	mov	r6,r2
41047a48:	180f883a 	mov	r7,r3
41047a4c:	9009883a 	mov	r4,r18
41047a50:	800b883a 	mov	r5,r16
41047a54:	104b87c0 	call	4104b87c <__divdf3>
41047a58:	dfc00617 	ldw	ra,24(sp)
41047a5c:	dcc00517 	ldw	r19,20(sp)
41047a60:	dc800417 	ldw	r18,16(sp)
41047a64:	dc400317 	ldw	r17,12(sp)
41047a68:	dc000217 	ldw	r16,8(sp)
41047a6c:	dec00704 	addi	sp,sp,28
41047a70:	f800283a 	ret
41047a74:	2008953a 	slli	r4,r4,20
41047a78:	1907c83a 	sub	r3,r3,r4
41047a7c:	003ff106 	br	41047a44 <__alt_data_end+0xfffc9244>

41047a80 <_mprec_log10>:
41047a80:	defffe04 	addi	sp,sp,-8
41047a84:	dc000015 	stw	r16,0(sp)
41047a88:	dfc00115 	stw	ra,4(sp)
41047a8c:	008005c4 	movi	r2,23
41047a90:	2021883a 	mov	r16,r4
41047a94:	11000d0e 	bge	r2,r4,41047acc <_mprec_log10+0x4c>
41047a98:	0005883a 	mov	r2,zero
41047a9c:	00cffc34 	movhi	r3,16368
41047aa0:	843fffc4 	addi	r16,r16,-1
41047aa4:	000d883a 	mov	r6,zero
41047aa8:	01d00934 	movhi	r7,16420
41047aac:	1009883a 	mov	r4,r2
41047ab0:	180b883a 	mov	r5,r3
41047ab4:	104c3bc0 	call	4104c3bc <__muldf3>
41047ab8:	803ff91e 	bne	r16,zero,41047aa0 <__alt_data_end+0xfffc92a0>
41047abc:	dfc00117 	ldw	ra,4(sp)
41047ac0:	dc000017 	ldw	r16,0(sp)
41047ac4:	dec00204 	addi	sp,sp,8
41047ac8:	f800283a 	ret
41047acc:	202090fa 	slli	r16,r4,3
41047ad0:	00904174 	movhi	r2,16645
41047ad4:	10bfec04 	addi	r2,r2,-80
41047ad8:	1421883a 	add	r16,r2,r16
41047adc:	80800017 	ldw	r2,0(r16)
41047ae0:	80c00117 	ldw	r3,4(r16)
41047ae4:	dfc00117 	ldw	ra,4(sp)
41047ae8:	dc000017 	ldw	r16,0(sp)
41047aec:	dec00204 	addi	sp,sp,8
41047af0:	f800283a 	ret

41047af4 <__copybits>:
41047af4:	297fffc4 	addi	r5,r5,-1
41047af8:	280fd17a 	srai	r7,r5,5
41047afc:	30c00417 	ldw	r3,16(r6)
41047b00:	30800504 	addi	r2,r6,20
41047b04:	39c00044 	addi	r7,r7,1
41047b08:	18c7883a 	add	r3,r3,r3
41047b0c:	39cf883a 	add	r7,r7,r7
41047b10:	18c7883a 	add	r3,r3,r3
41047b14:	39cf883a 	add	r7,r7,r7
41047b18:	10c7883a 	add	r3,r2,r3
41047b1c:	21cf883a 	add	r7,r4,r7
41047b20:	10c00d2e 	bgeu	r2,r3,41047b58 <__copybits+0x64>
41047b24:	200b883a 	mov	r5,r4
41047b28:	12000017 	ldw	r8,0(r2)
41047b2c:	29400104 	addi	r5,r5,4
41047b30:	10800104 	addi	r2,r2,4
41047b34:	2a3fff15 	stw	r8,-4(r5)
41047b38:	10fffb36 	bltu	r2,r3,41047b28 <__alt_data_end+0xfffc9328>
41047b3c:	1985c83a 	sub	r2,r3,r6
41047b40:	10bffac4 	addi	r2,r2,-21
41047b44:	1004d0ba 	srli	r2,r2,2
41047b48:	10800044 	addi	r2,r2,1
41047b4c:	1085883a 	add	r2,r2,r2
41047b50:	1085883a 	add	r2,r2,r2
41047b54:	2089883a 	add	r4,r4,r2
41047b58:	21c0032e 	bgeu	r4,r7,41047b68 <__copybits+0x74>
41047b5c:	20000015 	stw	zero,0(r4)
41047b60:	21000104 	addi	r4,r4,4
41047b64:	21fffd36 	bltu	r4,r7,41047b5c <__alt_data_end+0xfffc935c>
41047b68:	f800283a 	ret

41047b6c <__any_on>:
41047b6c:	20c00417 	ldw	r3,16(r4)
41047b70:	2805d17a 	srai	r2,r5,5
41047b74:	21000504 	addi	r4,r4,20
41047b78:	18800d0e 	bge	r3,r2,41047bb0 <__any_on+0x44>
41047b7c:	18c7883a 	add	r3,r3,r3
41047b80:	18c7883a 	add	r3,r3,r3
41047b84:	20c7883a 	add	r3,r4,r3
41047b88:	20c0192e 	bgeu	r4,r3,41047bf0 <__any_on+0x84>
41047b8c:	18bfff17 	ldw	r2,-4(r3)
41047b90:	18ffff04 	addi	r3,r3,-4
41047b94:	1000041e 	bne	r2,zero,41047ba8 <__any_on+0x3c>
41047b98:	20c0142e 	bgeu	r4,r3,41047bec <__any_on+0x80>
41047b9c:	18ffff04 	addi	r3,r3,-4
41047ba0:	19400017 	ldw	r5,0(r3)
41047ba4:	283ffc26 	beq	r5,zero,41047b98 <__alt_data_end+0xfffc9398>
41047ba8:	00800044 	movi	r2,1
41047bac:	f800283a 	ret
41047bb0:	10c00a0e 	bge	r2,r3,41047bdc <__any_on+0x70>
41047bb4:	1085883a 	add	r2,r2,r2
41047bb8:	1085883a 	add	r2,r2,r2
41047bbc:	294007cc 	andi	r5,r5,31
41047bc0:	2087883a 	add	r3,r4,r2
41047bc4:	283ff026 	beq	r5,zero,41047b88 <__alt_data_end+0xfffc9388>
41047bc8:	19800017 	ldw	r6,0(r3)
41047bcc:	3144d83a 	srl	r2,r6,r5
41047bd0:	114a983a 	sll	r5,r2,r5
41047bd4:	317ff41e 	bne	r6,r5,41047ba8 <__alt_data_end+0xfffc93a8>
41047bd8:	003feb06 	br	41047b88 <__alt_data_end+0xfffc9388>
41047bdc:	1085883a 	add	r2,r2,r2
41047be0:	1085883a 	add	r2,r2,r2
41047be4:	2087883a 	add	r3,r4,r2
41047be8:	003fe706 	br	41047b88 <__alt_data_end+0xfffc9388>
41047bec:	f800283a 	ret
41047bf0:	0005883a 	mov	r2,zero
41047bf4:	f800283a 	ret

41047bf8 <_putc_r>:
41047bf8:	defffc04 	addi	sp,sp,-16
41047bfc:	dc000215 	stw	r16,8(sp)
41047c00:	dfc00315 	stw	ra,12(sp)
41047c04:	2021883a 	mov	r16,r4
41047c08:	20000226 	beq	r4,zero,41047c14 <_putc_r+0x1c>
41047c0c:	20800e17 	ldw	r2,56(r4)
41047c10:	10001b26 	beq	r2,zero,41047c80 <_putc_r+0x88>
41047c14:	30800217 	ldw	r2,8(r6)
41047c18:	10bfffc4 	addi	r2,r2,-1
41047c1c:	30800215 	stw	r2,8(r6)
41047c20:	10000a16 	blt	r2,zero,41047c4c <_putc_r+0x54>
41047c24:	30800017 	ldw	r2,0(r6)
41047c28:	11400005 	stb	r5,0(r2)
41047c2c:	30800017 	ldw	r2,0(r6)
41047c30:	10c00044 	addi	r3,r2,1
41047c34:	30c00015 	stw	r3,0(r6)
41047c38:	10800003 	ldbu	r2,0(r2)
41047c3c:	dfc00317 	ldw	ra,12(sp)
41047c40:	dc000217 	ldw	r16,8(sp)
41047c44:	dec00404 	addi	sp,sp,16
41047c48:	f800283a 	ret
41047c4c:	30c00617 	ldw	r3,24(r6)
41047c50:	10c00616 	blt	r2,r3,41047c6c <_putc_r+0x74>
41047c54:	30800017 	ldw	r2,0(r6)
41047c58:	00c00284 	movi	r3,10
41047c5c:	11400005 	stb	r5,0(r2)
41047c60:	30800017 	ldw	r2,0(r6)
41047c64:	11400003 	ldbu	r5,0(r2)
41047c68:	28fff11e 	bne	r5,r3,41047c30 <__alt_data_end+0xfffc9430>
41047c6c:	8009883a 	mov	r4,r16
41047c70:	dfc00317 	ldw	ra,12(sp)
41047c74:	dc000217 	ldw	r16,8(sp)
41047c78:	dec00404 	addi	sp,sp,16
41047c7c:	1049bec1 	jmpi	41049bec <__swbuf_r>
41047c80:	d9400015 	stw	r5,0(sp)
41047c84:	d9800115 	stw	r6,4(sp)
41047c88:	10453280 	call	41045328 <__sinit>
41047c8c:	d9800117 	ldw	r6,4(sp)
41047c90:	d9400017 	ldw	r5,0(sp)
41047c94:	003fdf06 	br	41047c14 <__alt_data_end+0xfffc9414>

41047c98 <putc>:
41047c98:	00904174 	movhi	r2,16645
41047c9c:	defffc04 	addi	sp,sp,-16
41047ca0:	10871d04 	addi	r2,r2,7284
41047ca4:	dc000115 	stw	r16,4(sp)
41047ca8:	14000017 	ldw	r16,0(r2)
41047cac:	dc400215 	stw	r17,8(sp)
41047cb0:	dfc00315 	stw	ra,12(sp)
41047cb4:	2023883a 	mov	r17,r4
41047cb8:	80000226 	beq	r16,zero,41047cc4 <putc+0x2c>
41047cbc:	80800e17 	ldw	r2,56(r16)
41047cc0:	10001a26 	beq	r2,zero,41047d2c <putc+0x94>
41047cc4:	28800217 	ldw	r2,8(r5)
41047cc8:	10bfffc4 	addi	r2,r2,-1
41047ccc:	28800215 	stw	r2,8(r5)
41047cd0:	10000b16 	blt	r2,zero,41047d00 <putc+0x68>
41047cd4:	28800017 	ldw	r2,0(r5)
41047cd8:	14400005 	stb	r17,0(r2)
41047cdc:	28800017 	ldw	r2,0(r5)
41047ce0:	10c00044 	addi	r3,r2,1
41047ce4:	28c00015 	stw	r3,0(r5)
41047ce8:	10800003 	ldbu	r2,0(r2)
41047cec:	dfc00317 	ldw	ra,12(sp)
41047cf0:	dc400217 	ldw	r17,8(sp)
41047cf4:	dc000117 	ldw	r16,4(sp)
41047cf8:	dec00404 	addi	sp,sp,16
41047cfc:	f800283a 	ret
41047d00:	28c00617 	ldw	r3,24(r5)
41047d04:	10c00e16 	blt	r2,r3,41047d40 <putc+0xa8>
41047d08:	28800017 	ldw	r2,0(r5)
41047d0c:	01000284 	movi	r4,10
41047d10:	14400005 	stb	r17,0(r2)
41047d14:	28800017 	ldw	r2,0(r5)
41047d18:	10c00003 	ldbu	r3,0(r2)
41047d1c:	193ff01e 	bne	r3,r4,41047ce0 <__alt_data_end+0xfffc94e0>
41047d20:	280d883a 	mov	r6,r5
41047d24:	180b883a 	mov	r5,r3
41047d28:	00000706 	br	41047d48 <putc+0xb0>
41047d2c:	8009883a 	mov	r4,r16
41047d30:	d9400015 	stw	r5,0(sp)
41047d34:	10453280 	call	41045328 <__sinit>
41047d38:	d9400017 	ldw	r5,0(sp)
41047d3c:	003fe106 	br	41047cc4 <__alt_data_end+0xfffc94c4>
41047d40:	280d883a 	mov	r6,r5
41047d44:	880b883a 	mov	r5,r17
41047d48:	8009883a 	mov	r4,r16
41047d4c:	dfc00317 	ldw	ra,12(sp)
41047d50:	dc400217 	ldw	r17,8(sp)
41047d54:	dc000117 	ldw	r16,4(sp)
41047d58:	dec00404 	addi	sp,sp,16
41047d5c:	1049bec1 	jmpi	41049bec <__swbuf_r>

41047d60 <_realloc_r>:
41047d60:	defff604 	addi	sp,sp,-40
41047d64:	dc800215 	stw	r18,8(sp)
41047d68:	dfc00915 	stw	ra,36(sp)
41047d6c:	df000815 	stw	fp,32(sp)
41047d70:	ddc00715 	stw	r23,28(sp)
41047d74:	dd800615 	stw	r22,24(sp)
41047d78:	dd400515 	stw	r21,20(sp)
41047d7c:	dd000415 	stw	r20,16(sp)
41047d80:	dcc00315 	stw	r19,12(sp)
41047d84:	dc400115 	stw	r17,4(sp)
41047d88:	dc000015 	stw	r16,0(sp)
41047d8c:	3025883a 	mov	r18,r6
41047d90:	2800b726 	beq	r5,zero,41048070 <_realloc_r+0x310>
41047d94:	282b883a 	mov	r21,r5
41047d98:	2029883a 	mov	r20,r4
41047d9c:	104dbfc0 	call	4104dbfc <__malloc_lock>
41047da0:	a8bfff17 	ldw	r2,-4(r21)
41047da4:	043fff04 	movi	r16,-4
41047da8:	90c002c4 	addi	r3,r18,11
41047dac:	01000584 	movi	r4,22
41047db0:	acfffe04 	addi	r19,r21,-8
41047db4:	1420703a 	and	r16,r2,r16
41047db8:	20c0332e 	bgeu	r4,r3,41047e88 <_realloc_r+0x128>
41047dbc:	047ffe04 	movi	r17,-8
41047dc0:	1c62703a 	and	r17,r3,r17
41047dc4:	8807883a 	mov	r3,r17
41047dc8:	88005816 	blt	r17,zero,41047f2c <_realloc_r+0x1cc>
41047dcc:	8c805736 	bltu	r17,r18,41047f2c <_realloc_r+0x1cc>
41047dd0:	80c0300e 	bge	r16,r3,41047e94 <_realloc_r+0x134>
41047dd4:	07104174 	movhi	fp,16645
41047dd8:	e7019804 	addi	fp,fp,1632
41047ddc:	e1c00217 	ldw	r7,8(fp)
41047de0:	9c09883a 	add	r4,r19,r16
41047de4:	22000117 	ldw	r8,4(r4)
41047de8:	21c06326 	beq	r4,r7,41047f78 <_realloc_r+0x218>
41047dec:	017fff84 	movi	r5,-2
41047df0:	414a703a 	and	r5,r8,r5
41047df4:	214b883a 	add	r5,r4,r5
41047df8:	29800117 	ldw	r6,4(r5)
41047dfc:	3180004c 	andi	r6,r6,1
41047e00:	30003f26 	beq	r6,zero,41047f00 <_realloc_r+0x1a0>
41047e04:	1080004c 	andi	r2,r2,1
41047e08:	10008326 	beq	r2,zero,41048018 <_realloc_r+0x2b8>
41047e0c:	900b883a 	mov	r5,r18
41047e10:	a009883a 	mov	r4,r20
41047e14:	10460880 	call	41046088 <_malloc_r>
41047e18:	1025883a 	mov	r18,r2
41047e1c:	10011e26 	beq	r2,zero,41048298 <_realloc_r+0x538>
41047e20:	a93fff17 	ldw	r4,-4(r21)
41047e24:	10fffe04 	addi	r3,r2,-8
41047e28:	00bfff84 	movi	r2,-2
41047e2c:	2084703a 	and	r2,r4,r2
41047e30:	9885883a 	add	r2,r19,r2
41047e34:	1880ee26 	beq	r3,r2,410481f0 <_realloc_r+0x490>
41047e38:	81bfff04 	addi	r6,r16,-4
41047e3c:	00800904 	movi	r2,36
41047e40:	1180b836 	bltu	r2,r6,41048124 <_realloc_r+0x3c4>
41047e44:	00c004c4 	movi	r3,19
41047e48:	19809636 	bltu	r3,r6,410480a4 <_realloc_r+0x344>
41047e4c:	9005883a 	mov	r2,r18
41047e50:	a807883a 	mov	r3,r21
41047e54:	19000017 	ldw	r4,0(r3)
41047e58:	11000015 	stw	r4,0(r2)
41047e5c:	19000117 	ldw	r4,4(r3)
41047e60:	11000115 	stw	r4,4(r2)
41047e64:	18c00217 	ldw	r3,8(r3)
41047e68:	10c00215 	stw	r3,8(r2)
41047e6c:	a80b883a 	mov	r5,r21
41047e70:	a009883a 	mov	r4,r20
41047e74:	104549c0 	call	4104549c <_free_r>
41047e78:	a009883a 	mov	r4,r20
41047e7c:	104dc200 	call	4104dc20 <__malloc_unlock>
41047e80:	9005883a 	mov	r2,r18
41047e84:	00001206 	br	41047ed0 <_realloc_r+0x170>
41047e88:	00c00404 	movi	r3,16
41047e8c:	1823883a 	mov	r17,r3
41047e90:	003fce06 	br	41047dcc <__alt_data_end+0xfffc95cc>
41047e94:	a825883a 	mov	r18,r21
41047e98:	8445c83a 	sub	r2,r16,r17
41047e9c:	00c003c4 	movi	r3,15
41047ea0:	18802636 	bltu	r3,r2,41047f3c <_realloc_r+0x1dc>
41047ea4:	99800117 	ldw	r6,4(r19)
41047ea8:	9c07883a 	add	r3,r19,r16
41047eac:	3180004c 	andi	r6,r6,1
41047eb0:	3420b03a 	or	r16,r6,r16
41047eb4:	9c000115 	stw	r16,4(r19)
41047eb8:	18800117 	ldw	r2,4(r3)
41047ebc:	10800054 	ori	r2,r2,1
41047ec0:	18800115 	stw	r2,4(r3)
41047ec4:	a009883a 	mov	r4,r20
41047ec8:	104dc200 	call	4104dc20 <__malloc_unlock>
41047ecc:	9005883a 	mov	r2,r18
41047ed0:	dfc00917 	ldw	ra,36(sp)
41047ed4:	df000817 	ldw	fp,32(sp)
41047ed8:	ddc00717 	ldw	r23,28(sp)
41047edc:	dd800617 	ldw	r22,24(sp)
41047ee0:	dd400517 	ldw	r21,20(sp)
41047ee4:	dd000417 	ldw	r20,16(sp)
41047ee8:	dcc00317 	ldw	r19,12(sp)
41047eec:	dc800217 	ldw	r18,8(sp)
41047ef0:	dc400117 	ldw	r17,4(sp)
41047ef4:	dc000017 	ldw	r16,0(sp)
41047ef8:	dec00a04 	addi	sp,sp,40
41047efc:	f800283a 	ret
41047f00:	017fff04 	movi	r5,-4
41047f04:	414a703a 	and	r5,r8,r5
41047f08:	814d883a 	add	r6,r16,r5
41047f0c:	30c01f16 	blt	r6,r3,41047f8c <_realloc_r+0x22c>
41047f10:	20800317 	ldw	r2,12(r4)
41047f14:	20c00217 	ldw	r3,8(r4)
41047f18:	a825883a 	mov	r18,r21
41047f1c:	3021883a 	mov	r16,r6
41047f20:	18800315 	stw	r2,12(r3)
41047f24:	10c00215 	stw	r3,8(r2)
41047f28:	003fdb06 	br	41047e98 <__alt_data_end+0xfffc9698>
41047f2c:	00800304 	movi	r2,12
41047f30:	a0800015 	stw	r2,0(r20)
41047f34:	0005883a 	mov	r2,zero
41047f38:	003fe506 	br	41047ed0 <__alt_data_end+0xfffc96d0>
41047f3c:	98c00117 	ldw	r3,4(r19)
41047f40:	9c4b883a 	add	r5,r19,r17
41047f44:	11000054 	ori	r4,r2,1
41047f48:	18c0004c 	andi	r3,r3,1
41047f4c:	1c62b03a 	or	r17,r3,r17
41047f50:	9c400115 	stw	r17,4(r19)
41047f54:	29000115 	stw	r4,4(r5)
41047f58:	2885883a 	add	r2,r5,r2
41047f5c:	10c00117 	ldw	r3,4(r2)
41047f60:	29400204 	addi	r5,r5,8
41047f64:	a009883a 	mov	r4,r20
41047f68:	18c00054 	ori	r3,r3,1
41047f6c:	10c00115 	stw	r3,4(r2)
41047f70:	104549c0 	call	4104549c <_free_r>
41047f74:	003fd306 	br	41047ec4 <__alt_data_end+0xfffc96c4>
41047f78:	017fff04 	movi	r5,-4
41047f7c:	414a703a 	and	r5,r8,r5
41047f80:	89800404 	addi	r6,r17,16
41047f84:	8151883a 	add	r8,r16,r5
41047f88:	4180590e 	bge	r8,r6,410480f0 <_realloc_r+0x390>
41047f8c:	1080004c 	andi	r2,r2,1
41047f90:	103f9e1e 	bne	r2,zero,41047e0c <__alt_data_end+0xfffc960c>
41047f94:	adbffe17 	ldw	r22,-8(r21)
41047f98:	00bfff04 	movi	r2,-4
41047f9c:	9dadc83a 	sub	r22,r19,r22
41047fa0:	b1800117 	ldw	r6,4(r22)
41047fa4:	3084703a 	and	r2,r6,r2
41047fa8:	20002026 	beq	r4,zero,4104802c <_realloc_r+0x2cc>
41047fac:	80af883a 	add	r23,r16,r2
41047fb0:	b96f883a 	add	r23,r23,r5
41047fb4:	21c05f26 	beq	r4,r7,41048134 <_realloc_r+0x3d4>
41047fb8:	b8c01c16 	blt	r23,r3,4104802c <_realloc_r+0x2cc>
41047fbc:	20800317 	ldw	r2,12(r4)
41047fc0:	20c00217 	ldw	r3,8(r4)
41047fc4:	81bfff04 	addi	r6,r16,-4
41047fc8:	01000904 	movi	r4,36
41047fcc:	18800315 	stw	r2,12(r3)
41047fd0:	10c00215 	stw	r3,8(r2)
41047fd4:	b0c00217 	ldw	r3,8(r22)
41047fd8:	b0800317 	ldw	r2,12(r22)
41047fdc:	b4800204 	addi	r18,r22,8
41047fe0:	18800315 	stw	r2,12(r3)
41047fe4:	10c00215 	stw	r3,8(r2)
41047fe8:	21801b36 	bltu	r4,r6,41048058 <_realloc_r+0x2f8>
41047fec:	008004c4 	movi	r2,19
41047ff0:	1180352e 	bgeu	r2,r6,410480c8 <_realloc_r+0x368>
41047ff4:	a8800017 	ldw	r2,0(r21)
41047ff8:	b0800215 	stw	r2,8(r22)
41047ffc:	a8800117 	ldw	r2,4(r21)
41048000:	b0800315 	stw	r2,12(r22)
41048004:	008006c4 	movi	r2,27
41048008:	11807f36 	bltu	r2,r6,41048208 <_realloc_r+0x4a8>
4104800c:	b0800404 	addi	r2,r22,16
41048010:	ad400204 	addi	r21,r21,8
41048014:	00002d06 	br	410480cc <_realloc_r+0x36c>
41048018:	adbffe17 	ldw	r22,-8(r21)
4104801c:	00bfff04 	movi	r2,-4
41048020:	9dadc83a 	sub	r22,r19,r22
41048024:	b1000117 	ldw	r4,4(r22)
41048028:	2084703a 	and	r2,r4,r2
4104802c:	b03f7726 	beq	r22,zero,41047e0c <__alt_data_end+0xfffc960c>
41048030:	80af883a 	add	r23,r16,r2
41048034:	b8ff7516 	blt	r23,r3,41047e0c <__alt_data_end+0xfffc960c>
41048038:	b0800317 	ldw	r2,12(r22)
4104803c:	b0c00217 	ldw	r3,8(r22)
41048040:	81bfff04 	addi	r6,r16,-4
41048044:	01000904 	movi	r4,36
41048048:	18800315 	stw	r2,12(r3)
4104804c:	10c00215 	stw	r3,8(r2)
41048050:	b4800204 	addi	r18,r22,8
41048054:	21bfe52e 	bgeu	r4,r6,41047fec <__alt_data_end+0xfffc97ec>
41048058:	a80b883a 	mov	r5,r21
4104805c:	9009883a 	mov	r4,r18
41048060:	10469780 	call	41046978 <memmove>
41048064:	b821883a 	mov	r16,r23
41048068:	b027883a 	mov	r19,r22
4104806c:	003f8a06 	br	41047e98 <__alt_data_end+0xfffc9698>
41048070:	300b883a 	mov	r5,r6
41048074:	dfc00917 	ldw	ra,36(sp)
41048078:	df000817 	ldw	fp,32(sp)
4104807c:	ddc00717 	ldw	r23,28(sp)
41048080:	dd800617 	ldw	r22,24(sp)
41048084:	dd400517 	ldw	r21,20(sp)
41048088:	dd000417 	ldw	r20,16(sp)
4104808c:	dcc00317 	ldw	r19,12(sp)
41048090:	dc800217 	ldw	r18,8(sp)
41048094:	dc400117 	ldw	r17,4(sp)
41048098:	dc000017 	ldw	r16,0(sp)
4104809c:	dec00a04 	addi	sp,sp,40
410480a0:	10460881 	jmpi	41046088 <_malloc_r>
410480a4:	a8c00017 	ldw	r3,0(r21)
410480a8:	90c00015 	stw	r3,0(r18)
410480ac:	a8c00117 	ldw	r3,4(r21)
410480b0:	90c00115 	stw	r3,4(r18)
410480b4:	00c006c4 	movi	r3,27
410480b8:	19804536 	bltu	r3,r6,410481d0 <_realloc_r+0x470>
410480bc:	90800204 	addi	r2,r18,8
410480c0:	a8c00204 	addi	r3,r21,8
410480c4:	003f6306 	br	41047e54 <__alt_data_end+0xfffc9654>
410480c8:	9005883a 	mov	r2,r18
410480cc:	a8c00017 	ldw	r3,0(r21)
410480d0:	b821883a 	mov	r16,r23
410480d4:	b027883a 	mov	r19,r22
410480d8:	10c00015 	stw	r3,0(r2)
410480dc:	a8c00117 	ldw	r3,4(r21)
410480e0:	10c00115 	stw	r3,4(r2)
410480e4:	a8c00217 	ldw	r3,8(r21)
410480e8:	10c00215 	stw	r3,8(r2)
410480ec:	003f6a06 	br	41047e98 <__alt_data_end+0xfffc9698>
410480f0:	9c67883a 	add	r19,r19,r17
410480f4:	4445c83a 	sub	r2,r8,r17
410480f8:	e4c00215 	stw	r19,8(fp)
410480fc:	10800054 	ori	r2,r2,1
41048100:	98800115 	stw	r2,4(r19)
41048104:	a8bfff17 	ldw	r2,-4(r21)
41048108:	a009883a 	mov	r4,r20
4104810c:	1080004c 	andi	r2,r2,1
41048110:	1462b03a 	or	r17,r2,r17
41048114:	ac7fff15 	stw	r17,-4(r21)
41048118:	104dc200 	call	4104dc20 <__malloc_unlock>
4104811c:	a805883a 	mov	r2,r21
41048120:	003f6b06 	br	41047ed0 <__alt_data_end+0xfffc96d0>
41048124:	a80b883a 	mov	r5,r21
41048128:	9009883a 	mov	r4,r18
4104812c:	10469780 	call	41046978 <memmove>
41048130:	003f4e06 	br	41047e6c <__alt_data_end+0xfffc966c>
41048134:	89000404 	addi	r4,r17,16
41048138:	b93fbc16 	blt	r23,r4,4104802c <__alt_data_end+0xfffc982c>
4104813c:	b0800317 	ldw	r2,12(r22)
41048140:	b0c00217 	ldw	r3,8(r22)
41048144:	81bfff04 	addi	r6,r16,-4
41048148:	01000904 	movi	r4,36
4104814c:	18800315 	stw	r2,12(r3)
41048150:	10c00215 	stw	r3,8(r2)
41048154:	b4800204 	addi	r18,r22,8
41048158:	21804336 	bltu	r4,r6,41048268 <_realloc_r+0x508>
4104815c:	008004c4 	movi	r2,19
41048160:	11803f2e 	bgeu	r2,r6,41048260 <_realloc_r+0x500>
41048164:	a8800017 	ldw	r2,0(r21)
41048168:	b0800215 	stw	r2,8(r22)
4104816c:	a8800117 	ldw	r2,4(r21)
41048170:	b0800315 	stw	r2,12(r22)
41048174:	008006c4 	movi	r2,27
41048178:	11803f36 	bltu	r2,r6,41048278 <_realloc_r+0x518>
4104817c:	b0800404 	addi	r2,r22,16
41048180:	ad400204 	addi	r21,r21,8
41048184:	a8c00017 	ldw	r3,0(r21)
41048188:	10c00015 	stw	r3,0(r2)
4104818c:	a8c00117 	ldw	r3,4(r21)
41048190:	10c00115 	stw	r3,4(r2)
41048194:	a8c00217 	ldw	r3,8(r21)
41048198:	10c00215 	stw	r3,8(r2)
4104819c:	b447883a 	add	r3,r22,r17
410481a0:	bc45c83a 	sub	r2,r23,r17
410481a4:	e0c00215 	stw	r3,8(fp)
410481a8:	10800054 	ori	r2,r2,1
410481ac:	18800115 	stw	r2,4(r3)
410481b0:	b0800117 	ldw	r2,4(r22)
410481b4:	a009883a 	mov	r4,r20
410481b8:	1080004c 	andi	r2,r2,1
410481bc:	1462b03a 	or	r17,r2,r17
410481c0:	b4400115 	stw	r17,4(r22)
410481c4:	104dc200 	call	4104dc20 <__malloc_unlock>
410481c8:	9005883a 	mov	r2,r18
410481cc:	003f4006 	br	41047ed0 <__alt_data_end+0xfffc96d0>
410481d0:	a8c00217 	ldw	r3,8(r21)
410481d4:	90c00215 	stw	r3,8(r18)
410481d8:	a8c00317 	ldw	r3,12(r21)
410481dc:	90c00315 	stw	r3,12(r18)
410481e0:	30801126 	beq	r6,r2,41048228 <_realloc_r+0x4c8>
410481e4:	90800404 	addi	r2,r18,16
410481e8:	a8c00404 	addi	r3,r21,16
410481ec:	003f1906 	br	41047e54 <__alt_data_end+0xfffc9654>
410481f0:	90ffff17 	ldw	r3,-4(r18)
410481f4:	00bfff04 	movi	r2,-4
410481f8:	a825883a 	mov	r18,r21
410481fc:	1884703a 	and	r2,r3,r2
41048200:	80a1883a 	add	r16,r16,r2
41048204:	003f2406 	br	41047e98 <__alt_data_end+0xfffc9698>
41048208:	a8800217 	ldw	r2,8(r21)
4104820c:	b0800415 	stw	r2,16(r22)
41048210:	a8800317 	ldw	r2,12(r21)
41048214:	b0800515 	stw	r2,20(r22)
41048218:	31000a26 	beq	r6,r4,41048244 <_realloc_r+0x4e4>
4104821c:	b0800604 	addi	r2,r22,24
41048220:	ad400404 	addi	r21,r21,16
41048224:	003fa906 	br	410480cc <__alt_data_end+0xfffc98cc>
41048228:	a9000417 	ldw	r4,16(r21)
4104822c:	90800604 	addi	r2,r18,24
41048230:	a8c00604 	addi	r3,r21,24
41048234:	91000415 	stw	r4,16(r18)
41048238:	a9000517 	ldw	r4,20(r21)
4104823c:	91000515 	stw	r4,20(r18)
41048240:	003f0406 	br	41047e54 <__alt_data_end+0xfffc9654>
41048244:	a8c00417 	ldw	r3,16(r21)
41048248:	ad400604 	addi	r21,r21,24
4104824c:	b0800804 	addi	r2,r22,32
41048250:	b0c00615 	stw	r3,24(r22)
41048254:	a8ffff17 	ldw	r3,-4(r21)
41048258:	b0c00715 	stw	r3,28(r22)
4104825c:	003f9b06 	br	410480cc <__alt_data_end+0xfffc98cc>
41048260:	9005883a 	mov	r2,r18
41048264:	003fc706 	br	41048184 <__alt_data_end+0xfffc9984>
41048268:	a80b883a 	mov	r5,r21
4104826c:	9009883a 	mov	r4,r18
41048270:	10469780 	call	41046978 <memmove>
41048274:	003fc906 	br	4104819c <__alt_data_end+0xfffc999c>
41048278:	a8800217 	ldw	r2,8(r21)
4104827c:	b0800415 	stw	r2,16(r22)
41048280:	a8800317 	ldw	r2,12(r21)
41048284:	b0800515 	stw	r2,20(r22)
41048288:	31000726 	beq	r6,r4,410482a8 <_realloc_r+0x548>
4104828c:	b0800604 	addi	r2,r22,24
41048290:	ad400404 	addi	r21,r21,16
41048294:	003fbb06 	br	41048184 <__alt_data_end+0xfffc9984>
41048298:	a009883a 	mov	r4,r20
4104829c:	104dc200 	call	4104dc20 <__malloc_unlock>
410482a0:	0005883a 	mov	r2,zero
410482a4:	003f0a06 	br	41047ed0 <__alt_data_end+0xfffc96d0>
410482a8:	a8c00417 	ldw	r3,16(r21)
410482ac:	ad400604 	addi	r21,r21,24
410482b0:	b0800804 	addi	r2,r22,32
410482b4:	b0c00615 	stw	r3,24(r22)
410482b8:	a8ffff17 	ldw	r3,-4(r21)
410482bc:	b0c00715 	stw	r3,28(r22)
410482c0:	003fb006 	br	41048184 <__alt_data_end+0xfffc9984>

410482c4 <__fpclassifyd>:
410482c4:	00a00034 	movhi	r2,32768
410482c8:	10bfffc4 	addi	r2,r2,-1
410482cc:	2884703a 	and	r2,r5,r2
410482d0:	10000726 	beq	r2,zero,410482f0 <__fpclassifyd+0x2c>
410482d4:	00fffc34 	movhi	r3,65520
410482d8:	019ff834 	movhi	r6,32736
410482dc:	28c7883a 	add	r3,r5,r3
410482e0:	31bfffc4 	addi	r6,r6,-1
410482e4:	30c00536 	bltu	r6,r3,410482fc <__fpclassifyd+0x38>
410482e8:	00800104 	movi	r2,4
410482ec:	f800283a 	ret
410482f0:	2000021e 	bne	r4,zero,410482fc <__fpclassifyd+0x38>
410482f4:	00800084 	movi	r2,2
410482f8:	f800283a 	ret
410482fc:	00dffc34 	movhi	r3,32752
41048300:	019ff834 	movhi	r6,32736
41048304:	28cb883a 	add	r5,r5,r3
41048308:	31bfffc4 	addi	r6,r6,-1
4104830c:	317ff62e 	bgeu	r6,r5,410482e8 <__alt_data_end+0xfffc9ae8>
41048310:	01400434 	movhi	r5,16
41048314:	297fffc4 	addi	r5,r5,-1
41048318:	28800236 	bltu	r5,r2,41048324 <__fpclassifyd+0x60>
4104831c:	008000c4 	movi	r2,3
41048320:	f800283a 	ret
41048324:	10c00226 	beq	r2,r3,41048330 <__fpclassifyd+0x6c>
41048328:	0005883a 	mov	r2,zero
4104832c:	f800283a 	ret
41048330:	2005003a 	cmpeq	r2,r4,zero
41048334:	f800283a 	ret

41048338 <_sbrk_r>:
41048338:	defffd04 	addi	sp,sp,-12
4104833c:	dc000015 	stw	r16,0(sp)
41048340:	04104174 	movhi	r16,16645
41048344:	dc400115 	stw	r17,4(sp)
41048348:	840ded04 	addi	r16,r16,14260
4104834c:	2023883a 	mov	r17,r4
41048350:	2809883a 	mov	r4,r5
41048354:	dfc00215 	stw	ra,8(sp)
41048358:	80000015 	stw	zero,0(r16)
4104835c:	104dde00 	call	4104dde0 <sbrk>
41048360:	00ffffc4 	movi	r3,-1
41048364:	10c00526 	beq	r2,r3,4104837c <_sbrk_r+0x44>
41048368:	dfc00217 	ldw	ra,8(sp)
4104836c:	dc400117 	ldw	r17,4(sp)
41048370:	dc000017 	ldw	r16,0(sp)
41048374:	dec00304 	addi	sp,sp,12
41048378:	f800283a 	ret
4104837c:	80c00017 	ldw	r3,0(r16)
41048380:	183ff926 	beq	r3,zero,41048368 <__alt_data_end+0xfffc9b68>
41048384:	88c00015 	stw	r3,0(r17)
41048388:	003ff706 	br	41048368 <__alt_data_end+0xfffc9b68>

4104838c <__sread>:
4104838c:	defffe04 	addi	sp,sp,-8
41048390:	dc000015 	stw	r16,0(sp)
41048394:	2821883a 	mov	r16,r5
41048398:	2940038f 	ldh	r5,14(r5)
4104839c:	dfc00115 	stw	ra,4(sp)
410483a0:	104a2d80 	call	4104a2d8 <_read_r>
410483a4:	10000716 	blt	r2,zero,410483c4 <__sread+0x38>
410483a8:	80c01417 	ldw	r3,80(r16)
410483ac:	1887883a 	add	r3,r3,r2
410483b0:	80c01415 	stw	r3,80(r16)
410483b4:	dfc00117 	ldw	ra,4(sp)
410483b8:	dc000017 	ldw	r16,0(sp)
410483bc:	dec00204 	addi	sp,sp,8
410483c0:	f800283a 	ret
410483c4:	80c0030b 	ldhu	r3,12(r16)
410483c8:	18fbffcc 	andi	r3,r3,61439
410483cc:	80c0030d 	sth	r3,12(r16)
410483d0:	dfc00117 	ldw	ra,4(sp)
410483d4:	dc000017 	ldw	r16,0(sp)
410483d8:	dec00204 	addi	sp,sp,8
410483dc:	f800283a 	ret

410483e0 <__seofread>:
410483e0:	0005883a 	mov	r2,zero
410483e4:	f800283a 	ret

410483e8 <__swrite>:
410483e8:	2880030b 	ldhu	r2,12(r5)
410483ec:	defffb04 	addi	sp,sp,-20
410483f0:	dcc00315 	stw	r19,12(sp)
410483f4:	dc800215 	stw	r18,8(sp)
410483f8:	dc400115 	stw	r17,4(sp)
410483fc:	dc000015 	stw	r16,0(sp)
41048400:	dfc00415 	stw	ra,16(sp)
41048404:	10c0400c 	andi	r3,r2,256
41048408:	2821883a 	mov	r16,r5
4104840c:	2023883a 	mov	r17,r4
41048410:	3025883a 	mov	r18,r6
41048414:	3827883a 	mov	r19,r7
41048418:	18000526 	beq	r3,zero,41048430 <__swrite+0x48>
4104841c:	2940038f 	ldh	r5,14(r5)
41048420:	01c00084 	movi	r7,2
41048424:	000d883a 	mov	r6,zero
41048428:	104a2780 	call	4104a278 <_lseek_r>
4104842c:	8080030b 	ldhu	r2,12(r16)
41048430:	8140038f 	ldh	r5,14(r16)
41048434:	10bbffcc 	andi	r2,r2,61439
41048438:	980f883a 	mov	r7,r19
4104843c:	900d883a 	mov	r6,r18
41048440:	8809883a 	mov	r4,r17
41048444:	8080030d 	sth	r2,12(r16)
41048448:	dfc00417 	ldw	ra,16(sp)
4104844c:	dcc00317 	ldw	r19,12(sp)
41048450:	dc800217 	ldw	r18,8(sp)
41048454:	dc400117 	ldw	r17,4(sp)
41048458:	dc000017 	ldw	r16,0(sp)
4104845c:	dec00504 	addi	sp,sp,20
41048460:	1049d441 	jmpi	41049d44 <_write_r>

41048464 <__sseek>:
41048464:	defffe04 	addi	sp,sp,-8
41048468:	dc000015 	stw	r16,0(sp)
4104846c:	2821883a 	mov	r16,r5
41048470:	2940038f 	ldh	r5,14(r5)
41048474:	dfc00115 	stw	ra,4(sp)
41048478:	104a2780 	call	4104a278 <_lseek_r>
4104847c:	00ffffc4 	movi	r3,-1
41048480:	10c00826 	beq	r2,r3,410484a4 <__sseek+0x40>
41048484:	80c0030b 	ldhu	r3,12(r16)
41048488:	80801415 	stw	r2,80(r16)
4104848c:	18c40014 	ori	r3,r3,4096
41048490:	80c0030d 	sth	r3,12(r16)
41048494:	dfc00117 	ldw	ra,4(sp)
41048498:	dc000017 	ldw	r16,0(sp)
4104849c:	dec00204 	addi	sp,sp,8
410484a0:	f800283a 	ret
410484a4:	80c0030b 	ldhu	r3,12(r16)
410484a8:	18fbffcc 	andi	r3,r3,61439
410484ac:	80c0030d 	sth	r3,12(r16)
410484b0:	dfc00117 	ldw	ra,4(sp)
410484b4:	dc000017 	ldw	r16,0(sp)
410484b8:	dec00204 	addi	sp,sp,8
410484bc:	f800283a 	ret

410484c0 <__sclose>:
410484c0:	2940038f 	ldh	r5,14(r5)
410484c4:	1049da41 	jmpi	41049da4 <_close_r>

410484c8 <strcmp>:
410484c8:	2144b03a 	or	r2,r4,r5
410484cc:	108000cc 	andi	r2,r2,3
410484d0:	1000171e 	bne	r2,zero,41048530 <strcmp+0x68>
410484d4:	20800017 	ldw	r2,0(r4)
410484d8:	28c00017 	ldw	r3,0(r5)
410484dc:	10c0141e 	bne	r2,r3,41048530 <strcmp+0x68>
410484e0:	027fbff4 	movhi	r9,65279
410484e4:	4a7fbfc4 	addi	r9,r9,-257
410484e8:	0086303a 	nor	r3,zero,r2
410484ec:	02202074 	movhi	r8,32897
410484f0:	1245883a 	add	r2,r2,r9
410484f4:	42202004 	addi	r8,r8,-32640
410484f8:	10c4703a 	and	r2,r2,r3
410484fc:	1204703a 	and	r2,r2,r8
41048500:	10000226 	beq	r2,zero,4104850c <strcmp+0x44>
41048504:	00002306 	br	41048594 <strcmp+0xcc>
41048508:	1000221e 	bne	r2,zero,41048594 <strcmp+0xcc>
4104850c:	21000104 	addi	r4,r4,4
41048510:	20c00017 	ldw	r3,0(r4)
41048514:	29400104 	addi	r5,r5,4
41048518:	29800017 	ldw	r6,0(r5)
4104851c:	1a4f883a 	add	r7,r3,r9
41048520:	00c4303a 	nor	r2,zero,r3
41048524:	3884703a 	and	r2,r7,r2
41048528:	1204703a 	and	r2,r2,r8
4104852c:	19bff626 	beq	r3,r6,41048508 <__alt_data_end+0xfffc9d08>
41048530:	20800003 	ldbu	r2,0(r4)
41048534:	10c03fcc 	andi	r3,r2,255
41048538:	18c0201c 	xori	r3,r3,128
4104853c:	18ffe004 	addi	r3,r3,-128
41048540:	18000c26 	beq	r3,zero,41048574 <strcmp+0xac>
41048544:	29800007 	ldb	r6,0(r5)
41048548:	19800326 	beq	r3,r6,41048558 <strcmp+0x90>
4104854c:	00001306 	br	4104859c <strcmp+0xd4>
41048550:	29800007 	ldb	r6,0(r5)
41048554:	11800b1e 	bne	r2,r6,41048584 <strcmp+0xbc>
41048558:	21000044 	addi	r4,r4,1
4104855c:	20c00003 	ldbu	r3,0(r4)
41048560:	29400044 	addi	r5,r5,1
41048564:	18803fcc 	andi	r2,r3,255
41048568:	1080201c 	xori	r2,r2,128
4104856c:	10bfe004 	addi	r2,r2,-128
41048570:	103ff71e 	bne	r2,zero,41048550 <__alt_data_end+0xfffc9d50>
41048574:	0007883a 	mov	r3,zero
41048578:	28800003 	ldbu	r2,0(r5)
4104857c:	1885c83a 	sub	r2,r3,r2
41048580:	f800283a 	ret
41048584:	28800003 	ldbu	r2,0(r5)
41048588:	18c03fcc 	andi	r3,r3,255
4104858c:	1885c83a 	sub	r2,r3,r2
41048590:	f800283a 	ret
41048594:	0005883a 	mov	r2,zero
41048598:	f800283a 	ret
4104859c:	10c03fcc 	andi	r3,r2,255
410485a0:	003ff506 	br	41048578 <__alt_data_end+0xfffc9d78>

410485a4 <__sprint_r.part.0>:
410485a4:	28801917 	ldw	r2,100(r5)
410485a8:	defff604 	addi	sp,sp,-40
410485ac:	dd400515 	stw	r21,20(sp)
410485b0:	dfc00915 	stw	ra,36(sp)
410485b4:	df000815 	stw	fp,32(sp)
410485b8:	ddc00715 	stw	r23,28(sp)
410485bc:	dd800615 	stw	r22,24(sp)
410485c0:	dd000415 	stw	r20,16(sp)
410485c4:	dcc00315 	stw	r19,12(sp)
410485c8:	dc800215 	stw	r18,8(sp)
410485cc:	dc400115 	stw	r17,4(sp)
410485d0:	dc000015 	stw	r16,0(sp)
410485d4:	1088000c 	andi	r2,r2,8192
410485d8:	302b883a 	mov	r21,r6
410485dc:	10002e26 	beq	r2,zero,41048698 <__sprint_r.part.0+0xf4>
410485e0:	30800217 	ldw	r2,8(r6)
410485e4:	35800017 	ldw	r22,0(r6)
410485e8:	10002926 	beq	r2,zero,41048690 <__sprint_r.part.0+0xec>
410485ec:	2827883a 	mov	r19,r5
410485f0:	2029883a 	mov	r20,r4
410485f4:	b5c00104 	addi	r23,r22,4
410485f8:	04bfffc4 	movi	r18,-1
410485fc:	bc400017 	ldw	r17,0(r23)
41048600:	b4000017 	ldw	r16,0(r22)
41048604:	0039883a 	mov	fp,zero
41048608:	8822d0ba 	srli	r17,r17,2
4104860c:	8800031e 	bne	r17,zero,4104861c <__sprint_r.part.0+0x78>
41048610:	00001806 	br	41048674 <__sprint_r.part.0+0xd0>
41048614:	84000104 	addi	r16,r16,4
41048618:	8f001526 	beq	r17,fp,41048670 <__sprint_r.part.0+0xcc>
4104861c:	81400017 	ldw	r5,0(r16)
41048620:	980d883a 	mov	r6,r19
41048624:	a009883a 	mov	r4,r20
41048628:	104a1240 	call	4104a124 <_fputwc_r>
4104862c:	e7000044 	addi	fp,fp,1
41048630:	14bff81e 	bne	r2,r18,41048614 <__alt_data_end+0xfffc9e14>
41048634:	9005883a 	mov	r2,r18
41048638:	a8000215 	stw	zero,8(r21)
4104863c:	a8000115 	stw	zero,4(r21)
41048640:	dfc00917 	ldw	ra,36(sp)
41048644:	df000817 	ldw	fp,32(sp)
41048648:	ddc00717 	ldw	r23,28(sp)
4104864c:	dd800617 	ldw	r22,24(sp)
41048650:	dd400517 	ldw	r21,20(sp)
41048654:	dd000417 	ldw	r20,16(sp)
41048658:	dcc00317 	ldw	r19,12(sp)
4104865c:	dc800217 	ldw	r18,8(sp)
41048660:	dc400117 	ldw	r17,4(sp)
41048664:	dc000017 	ldw	r16,0(sp)
41048668:	dec00a04 	addi	sp,sp,40
4104866c:	f800283a 	ret
41048670:	a8800217 	ldw	r2,8(r21)
41048674:	8c63883a 	add	r17,r17,r17
41048678:	8c63883a 	add	r17,r17,r17
4104867c:	1445c83a 	sub	r2,r2,r17
41048680:	a8800215 	stw	r2,8(r21)
41048684:	b5800204 	addi	r22,r22,8
41048688:	bdc00204 	addi	r23,r23,8
4104868c:	103fdb1e 	bne	r2,zero,410485fc <__alt_data_end+0xfffc9dfc>
41048690:	0005883a 	mov	r2,zero
41048694:	003fe806 	br	41048638 <__alt_data_end+0xfffc9e38>
41048698:	10457ac0 	call	410457ac <__sfvwrite_r>
4104869c:	003fe606 	br	41048638 <__alt_data_end+0xfffc9e38>

410486a0 <__sprint_r>:
410486a0:	30c00217 	ldw	r3,8(r6)
410486a4:	18000126 	beq	r3,zero,410486ac <__sprint_r+0xc>
410486a8:	10485a41 	jmpi	410485a4 <__sprint_r.part.0>
410486ac:	30000115 	stw	zero,4(r6)
410486b0:	0005883a 	mov	r2,zero
410486b4:	f800283a 	ret

410486b8 <___vfiprintf_internal_r>:
410486b8:	deffc904 	addi	sp,sp,-220
410486bc:	df003515 	stw	fp,212(sp)
410486c0:	dd003115 	stw	r20,196(sp)
410486c4:	dfc03615 	stw	ra,216(sp)
410486c8:	ddc03415 	stw	r23,208(sp)
410486cc:	dd803315 	stw	r22,204(sp)
410486d0:	dd403215 	stw	r21,200(sp)
410486d4:	dcc03015 	stw	r19,192(sp)
410486d8:	dc802f15 	stw	r18,188(sp)
410486dc:	dc402e15 	stw	r17,184(sp)
410486e0:	dc002d15 	stw	r16,180(sp)
410486e4:	d9002015 	stw	r4,128(sp)
410486e8:	d9c02215 	stw	r7,136(sp)
410486ec:	2829883a 	mov	r20,r5
410486f0:	3039883a 	mov	fp,r6
410486f4:	20000226 	beq	r4,zero,41048700 <___vfiprintf_internal_r+0x48>
410486f8:	20800e17 	ldw	r2,56(r4)
410486fc:	1000cf26 	beq	r2,zero,41048a3c <___vfiprintf_internal_r+0x384>
41048700:	a080030b 	ldhu	r2,12(r20)
41048704:	10c8000c 	andi	r3,r2,8192
41048708:	1800061e 	bne	r3,zero,41048724 <___vfiprintf_internal_r+0x6c>
4104870c:	a1001917 	ldw	r4,100(r20)
41048710:	00f7ffc4 	movi	r3,-8193
41048714:	10880014 	ori	r2,r2,8192
41048718:	20c6703a 	and	r3,r4,r3
4104871c:	a080030d 	sth	r2,12(r20)
41048720:	a0c01915 	stw	r3,100(r20)
41048724:	10c0020c 	andi	r3,r2,8
41048728:	1800a926 	beq	r3,zero,410489d0 <___vfiprintf_internal_r+0x318>
4104872c:	a0c00417 	ldw	r3,16(r20)
41048730:	1800a726 	beq	r3,zero,410489d0 <___vfiprintf_internal_r+0x318>
41048734:	1080068c 	andi	r2,r2,26
41048738:	00c00284 	movi	r3,10
4104873c:	10c0ac26 	beq	r2,r3,410489f0 <___vfiprintf_internal_r+0x338>
41048740:	da801a04 	addi	r10,sp,104
41048744:	da801e15 	stw	r10,120(sp)
41048748:	d8801e17 	ldw	r2,120(sp)
4104874c:	da8019c4 	addi	r10,sp,103
41048750:	05904174 	movhi	r22,16645
41048754:	05d04174 	movhi	r23,16645
41048758:	da801f15 	stw	r10,124(sp)
4104875c:	1295c83a 	sub	r10,r2,r10
41048760:	b5802204 	addi	r22,r22,136
41048764:	bdc01e04 	addi	r23,r23,120
41048768:	dec01a15 	stw	sp,104(sp)
4104876c:	d8001c15 	stw	zero,112(sp)
41048770:	d8001b15 	stw	zero,108(sp)
41048774:	d8002615 	stw	zero,152(sp)
41048778:	d8002315 	stw	zero,140(sp)
4104877c:	da802715 	stw	r10,156(sp)
41048780:	d811883a 	mov	r8,sp
41048784:	dd002115 	stw	r20,132(sp)
41048788:	e021883a 	mov	r16,fp
4104878c:	80800007 	ldb	r2,0(r16)
41048790:	1003ea26 	beq	r2,zero,4104973c <___vfiprintf_internal_r+0x1084>
41048794:	00c00944 	movi	r3,37
41048798:	8025883a 	mov	r18,r16
4104879c:	10c0021e 	bne	r2,r3,410487a8 <___vfiprintf_internal_r+0xf0>
410487a0:	00001606 	br	410487fc <___vfiprintf_internal_r+0x144>
410487a4:	10c00326 	beq	r2,r3,410487b4 <___vfiprintf_internal_r+0xfc>
410487a8:	94800044 	addi	r18,r18,1
410487ac:	90800007 	ldb	r2,0(r18)
410487b0:	103ffc1e 	bne	r2,zero,410487a4 <__alt_data_end+0xfffc9fa4>
410487b4:	9423c83a 	sub	r17,r18,r16
410487b8:	88001026 	beq	r17,zero,410487fc <___vfiprintf_internal_r+0x144>
410487bc:	d8c01c17 	ldw	r3,112(sp)
410487c0:	d8801b17 	ldw	r2,108(sp)
410487c4:	44000015 	stw	r16,0(r8)
410487c8:	88c7883a 	add	r3,r17,r3
410487cc:	10800044 	addi	r2,r2,1
410487d0:	44400115 	stw	r17,4(r8)
410487d4:	d8c01c15 	stw	r3,112(sp)
410487d8:	d8801b15 	stw	r2,108(sp)
410487dc:	010001c4 	movi	r4,7
410487e0:	2080760e 	bge	r4,r2,410489bc <___vfiprintf_internal_r+0x304>
410487e4:	1803821e 	bne	r3,zero,410495f0 <___vfiprintf_internal_r+0xf38>
410487e8:	da802317 	ldw	r10,140(sp)
410487ec:	d8001b15 	stw	zero,108(sp)
410487f0:	d811883a 	mov	r8,sp
410487f4:	5455883a 	add	r10,r10,r17
410487f8:	da802315 	stw	r10,140(sp)
410487fc:	90800007 	ldb	r2,0(r18)
41048800:	10044626 	beq	r2,zero,4104991c <___vfiprintf_internal_r+0x1264>
41048804:	90c00047 	ldb	r3,1(r18)
41048808:	94000044 	addi	r16,r18,1
4104880c:	d8001d85 	stb	zero,118(sp)
41048810:	0009883a 	mov	r4,zero
41048814:	000f883a 	mov	r7,zero
41048818:	027fffc4 	movi	r9,-1
4104881c:	0023883a 	mov	r17,zero
41048820:	0029883a 	mov	r20,zero
41048824:	01401604 	movi	r5,88
41048828:	01800244 	movi	r6,9
4104882c:	03400a84 	movi	r13,42
41048830:	03001b04 	movi	r12,108
41048834:	84000044 	addi	r16,r16,1
41048838:	18bff804 	addi	r2,r3,-32
4104883c:	28827336 	bltu	r5,r2,4104920c <___vfiprintf_internal_r+0xb54>
41048840:	100490ba 	slli	r2,r2,2
41048844:	02904174 	movhi	r10,16645
41048848:	52a21604 	addi	r10,r10,-30632
4104884c:	1285883a 	add	r2,r2,r10
41048850:	10800017 	ldw	r2,0(r2)
41048854:	1000683a 	jmp	r2
41048858:	41048f40 	call	441048f4 <__alt_data_end+0x30860f4>
4104885c:	4104920c 	andi	r4,r8,4680
41048860:	4104920c 	andi	r4,r8,4680
41048864:	41048f60 	cmpeqi	r4,r8,4669
41048868:	4104920c 	andi	r4,r8,4680
4104886c:	4104920c 	andi	r4,r8,4680
41048870:	4104920c 	andi	r4,r8,4680
41048874:	4104920c 	andi	r4,r8,4680
41048878:	4104920c 	andi	r4,r8,4680
4104887c:	4104920c 	andi	r4,r8,4680
41048880:	41049148 	cmpgei	r4,r8,4677
41048884:	41049164 	muli	r4,r8,4677
41048888:	4104920c 	andi	r4,r8,4680
4104888c:	41048a4c 	andi	r4,r8,4649
41048890:	41049174 	orhi	r4,r8,4677
41048894:	4104920c 	andi	r4,r8,4680
41048898:	41048f6c 	andhi	r4,r8,4669
4104889c:	41048f78 	rdprs	r4,r8,4669
410488a0:	41048f78 	rdprs	r4,r8,4669
410488a4:	41048f78 	rdprs	r4,r8,4669
410488a8:	41048f78 	rdprs	r4,r8,4669
410488ac:	41048f78 	rdprs	r4,r8,4669
410488b0:	41048f78 	rdprs	r4,r8,4669
410488b4:	41048f78 	rdprs	r4,r8,4669
410488b8:	41048f78 	rdprs	r4,r8,4669
410488bc:	41048f78 	rdprs	r4,r8,4669
410488c0:	4104920c 	andi	r4,r8,4680
410488c4:	4104920c 	andi	r4,r8,4680
410488c8:	4104920c 	andi	r4,r8,4680
410488cc:	4104920c 	andi	r4,r8,4680
410488d0:	4104920c 	andi	r4,r8,4680
410488d4:	4104920c 	andi	r4,r8,4680
410488d8:	4104920c 	andi	r4,r8,4680
410488dc:	4104920c 	andi	r4,r8,4680
410488e0:	4104920c 	andi	r4,r8,4680
410488e4:	4104920c 	andi	r4,r8,4680
410488e8:	41048fa4 	muli	r4,r8,4670
410488ec:	4104920c 	andi	r4,r8,4680
410488f0:	4104920c 	andi	r4,r8,4680
410488f4:	4104920c 	andi	r4,r8,4680
410488f8:	4104920c 	andi	r4,r8,4680
410488fc:	4104920c 	andi	r4,r8,4680
41048900:	4104920c 	andi	r4,r8,4680
41048904:	4104920c 	andi	r4,r8,4680
41048908:	4104920c 	andi	r4,r8,4680
4104890c:	4104920c 	andi	r4,r8,4680
41048910:	4104920c 	andi	r4,r8,4680
41048914:	41048fdc 	xori	r4,r8,4671
41048918:	4104920c 	andi	r4,r8,4680
4104891c:	4104920c 	andi	r4,r8,4680
41048920:	4104920c 	andi	r4,r8,4680
41048924:	4104920c 	andi	r4,r8,4680
41048928:	4104920c 	andi	r4,r8,4680
4104892c:	41049034 	orhi	r4,r8,4672
41048930:	4104920c 	andi	r4,r8,4680
41048934:	4104920c 	andi	r4,r8,4680
41048938:	410490a4 	muli	r4,r8,4674
4104893c:	4104920c 	andi	r4,r8,4680
41048940:	4104920c 	andi	r4,r8,4680
41048944:	4104920c 	andi	r4,r8,4680
41048948:	4104920c 	andi	r4,r8,4680
4104894c:	4104920c 	andi	r4,r8,4680
41048950:	4104920c 	andi	r4,r8,4680
41048954:	4104920c 	andi	r4,r8,4680
41048958:	4104920c 	andi	r4,r8,4680
4104895c:	4104920c 	andi	r4,r8,4680
41048960:	4104920c 	andi	r4,r8,4680
41048964:	41048e50 	cmplti	r4,r8,4665
41048968:	41048e7c 	xorhi	r4,r8,4665
4104896c:	4104920c 	andi	r4,r8,4680
41048970:	4104920c 	andi	r4,r8,4680
41048974:	4104920c 	andi	r4,r8,4680
41048978:	410491b4 	orhi	r4,r8,4678
4104897c:	41048e7c 	xorhi	r4,r8,4665
41048980:	4104920c 	andi	r4,r8,4680
41048984:	4104920c 	andi	r4,r8,4680
41048988:	41048d10 	cmplti	r4,r8,4660
4104898c:	4104920c 	andi	r4,r8,4680
41048990:	41048d20 	cmpeqi	r4,r8,4660
41048994:	41048d5c 	xori	r4,r8,4661
41048998:	41048a58 	cmpnei	r4,r8,4649
4104899c:	41048d04 	addi	r4,r8,4660
410489a0:	4104920c 	andi	r4,r8,4680
410489a4:	410490e0 	cmpeqi	r4,r8,4675
410489a8:	4104920c 	andi	r4,r8,4680
410489ac:	41049138 	rdprs	r4,r8,4676
410489b0:	4104920c 	andi	r4,r8,4680
410489b4:	4104920c 	andi	r4,r8,4680
410489b8:	41048dfc 	xorhi	r4,r8,4663
410489bc:	42000204 	addi	r8,r8,8
410489c0:	da802317 	ldw	r10,140(sp)
410489c4:	5455883a 	add	r10,r10,r17
410489c8:	da802315 	stw	r10,140(sp)
410489cc:	003f8b06 	br	410487fc <__alt_data_end+0xfffc9ffc>
410489d0:	d9002017 	ldw	r4,128(sp)
410489d4:	a00b883a 	mov	r5,r20
410489d8:	10433540 	call	41043354 <__swsetup_r>
410489dc:	1003b11e 	bne	r2,zero,410498a4 <___vfiprintf_internal_r+0x11ec>
410489e0:	a080030b 	ldhu	r2,12(r20)
410489e4:	00c00284 	movi	r3,10
410489e8:	1080068c 	andi	r2,r2,26
410489ec:	10ff541e 	bne	r2,r3,41048740 <__alt_data_end+0xfffc9f40>
410489f0:	a080038f 	ldh	r2,14(r20)
410489f4:	103f5216 	blt	r2,zero,41048740 <__alt_data_end+0xfffc9f40>
410489f8:	d9c02217 	ldw	r7,136(sp)
410489fc:	d9002017 	ldw	r4,128(sp)
41048a00:	e00d883a 	mov	r6,fp
41048a04:	a00b883a 	mov	r5,r20
41048a08:	1049b300 	call	41049b30 <__sbprintf>
41048a0c:	dfc03617 	ldw	ra,216(sp)
41048a10:	df003517 	ldw	fp,212(sp)
41048a14:	ddc03417 	ldw	r23,208(sp)
41048a18:	dd803317 	ldw	r22,204(sp)
41048a1c:	dd403217 	ldw	r21,200(sp)
41048a20:	dd003117 	ldw	r20,196(sp)
41048a24:	dcc03017 	ldw	r19,192(sp)
41048a28:	dc802f17 	ldw	r18,188(sp)
41048a2c:	dc402e17 	ldw	r17,184(sp)
41048a30:	dc002d17 	ldw	r16,180(sp)
41048a34:	dec03704 	addi	sp,sp,220
41048a38:	f800283a 	ret
41048a3c:	10453280 	call	41045328 <__sinit>
41048a40:	003f2f06 	br	41048700 <__alt_data_end+0xfffc9f00>
41048a44:	0463c83a 	sub	r17,zero,r17
41048a48:	d8802215 	stw	r2,136(sp)
41048a4c:	a5000114 	ori	r20,r20,4
41048a50:	80c00007 	ldb	r3,0(r16)
41048a54:	003f7706 	br	41048834 <__alt_data_end+0xfffca034>
41048a58:	00800c04 	movi	r2,48
41048a5c:	da802217 	ldw	r10,136(sp)
41048a60:	d8801d05 	stb	r2,116(sp)
41048a64:	00801e04 	movi	r2,120
41048a68:	d8801d45 	stb	r2,117(sp)
41048a6c:	d8001d85 	stb	zero,118(sp)
41048a70:	50c00104 	addi	r3,r10,4
41048a74:	54800017 	ldw	r18,0(r10)
41048a78:	0027883a 	mov	r19,zero
41048a7c:	a0800094 	ori	r2,r20,2
41048a80:	48030b16 	blt	r9,zero,410496b0 <___vfiprintf_internal_r+0xff8>
41048a84:	00bfdfc4 	movi	r2,-129
41048a88:	a096703a 	and	r11,r20,r2
41048a8c:	d8c02215 	stw	r3,136(sp)
41048a90:	5d000094 	ori	r20,r11,2
41048a94:	90032b1e 	bne	r18,zero,41049744 <___vfiprintf_internal_r+0x108c>
41048a98:	00904174 	movhi	r2,16645
41048a9c:	10bfbd04 	addi	r2,r2,-268
41048aa0:	d8802615 	stw	r2,152(sp)
41048aa4:	0039883a 	mov	fp,zero
41048aa8:	48017b1e 	bne	r9,zero,41049098 <___vfiprintf_internal_r+0x9e0>
41048aac:	0013883a 	mov	r9,zero
41048ab0:	0027883a 	mov	r19,zero
41048ab4:	dd401a04 	addi	r21,sp,104
41048ab8:	4825883a 	mov	r18,r9
41048abc:	4cc0010e 	bge	r9,r19,41048ac4 <___vfiprintf_internal_r+0x40c>
41048ac0:	9825883a 	mov	r18,r19
41048ac4:	e7003fcc 	andi	fp,fp,255
41048ac8:	e700201c 	xori	fp,fp,128
41048acc:	e73fe004 	addi	fp,fp,-128
41048ad0:	e0000126 	beq	fp,zero,41048ad8 <___vfiprintf_internal_r+0x420>
41048ad4:	94800044 	addi	r18,r18,1
41048ad8:	a380008c 	andi	r14,r20,2
41048adc:	70000126 	beq	r14,zero,41048ae4 <___vfiprintf_internal_r+0x42c>
41048ae0:	94800084 	addi	r18,r18,2
41048ae4:	a700210c 	andi	fp,r20,132
41048ae8:	e001df1e 	bne	fp,zero,41049268 <___vfiprintf_internal_r+0xbb0>
41048aec:	8c87c83a 	sub	r3,r17,r18
41048af0:	00c1dd0e 	bge	zero,r3,41049268 <___vfiprintf_internal_r+0xbb0>
41048af4:	01c00404 	movi	r7,16
41048af8:	d8801c17 	ldw	r2,112(sp)
41048afc:	38c3ad0e 	bge	r7,r3,410499b4 <___vfiprintf_internal_r+0x12fc>
41048b00:	02904174 	movhi	r10,16645
41048b04:	52802204 	addi	r10,r10,136
41048b08:	dc002915 	stw	r16,164(sp)
41048b0c:	d9801b17 	ldw	r6,108(sp)
41048b10:	da802415 	stw	r10,144(sp)
41048b14:	03c001c4 	movi	r15,7
41048b18:	da402515 	stw	r9,148(sp)
41048b1c:	db802815 	stw	r14,160(sp)
41048b20:	1821883a 	mov	r16,r3
41048b24:	00000506 	br	41048b3c <___vfiprintf_internal_r+0x484>
41048b28:	31400084 	addi	r5,r6,2
41048b2c:	42000204 	addi	r8,r8,8
41048b30:	200d883a 	mov	r6,r4
41048b34:	843ffc04 	addi	r16,r16,-16
41048b38:	3c000d0e 	bge	r7,r16,41048b70 <___vfiprintf_internal_r+0x4b8>
41048b3c:	10800404 	addi	r2,r2,16
41048b40:	31000044 	addi	r4,r6,1
41048b44:	45800015 	stw	r22,0(r8)
41048b48:	41c00115 	stw	r7,4(r8)
41048b4c:	d8801c15 	stw	r2,112(sp)
41048b50:	d9001b15 	stw	r4,108(sp)
41048b54:	793ff40e 	bge	r15,r4,41048b28 <__alt_data_end+0xfffca328>
41048b58:	1001b51e 	bne	r2,zero,41049230 <___vfiprintf_internal_r+0xb78>
41048b5c:	843ffc04 	addi	r16,r16,-16
41048b60:	000d883a 	mov	r6,zero
41048b64:	01400044 	movi	r5,1
41048b68:	d811883a 	mov	r8,sp
41048b6c:	3c3ff316 	blt	r7,r16,41048b3c <__alt_data_end+0xfffca33c>
41048b70:	8007883a 	mov	r3,r16
41048b74:	da402517 	ldw	r9,148(sp)
41048b78:	db802817 	ldw	r14,160(sp)
41048b7c:	dc002917 	ldw	r16,164(sp)
41048b80:	da802417 	ldw	r10,144(sp)
41048b84:	1885883a 	add	r2,r3,r2
41048b88:	40c00115 	stw	r3,4(r8)
41048b8c:	42800015 	stw	r10,0(r8)
41048b90:	d8801c15 	stw	r2,112(sp)
41048b94:	d9401b15 	stw	r5,108(sp)
41048b98:	00c001c4 	movi	r3,7
41048b9c:	19426016 	blt	r3,r5,41049520 <___vfiprintf_internal_r+0xe68>
41048ba0:	d8c01d87 	ldb	r3,118(sp)
41048ba4:	42000204 	addi	r8,r8,8
41048ba8:	29000044 	addi	r4,r5,1
41048bac:	1801b31e 	bne	r3,zero,4104927c <___vfiprintf_internal_r+0xbc4>
41048bb0:	7001c026 	beq	r14,zero,410492b4 <___vfiprintf_internal_r+0xbfc>
41048bb4:	d8c01d04 	addi	r3,sp,116
41048bb8:	10800084 	addi	r2,r2,2
41048bbc:	40c00015 	stw	r3,0(r8)
41048bc0:	00c00084 	movi	r3,2
41048bc4:	40c00115 	stw	r3,4(r8)
41048bc8:	d8801c15 	stw	r2,112(sp)
41048bcc:	d9001b15 	stw	r4,108(sp)
41048bd0:	00c001c4 	movi	r3,7
41048bd4:	1902650e 	bge	r3,r4,4104956c <___vfiprintf_internal_r+0xeb4>
41048bd8:	10029a1e 	bne	r2,zero,41049644 <___vfiprintf_internal_r+0xf8c>
41048bdc:	00c02004 	movi	r3,128
41048be0:	01000044 	movi	r4,1
41048be4:	000b883a 	mov	r5,zero
41048be8:	d811883a 	mov	r8,sp
41048bec:	e0c1b31e 	bne	fp,r3,410492bc <___vfiprintf_internal_r+0xc04>
41048bf0:	8cb9c83a 	sub	fp,r17,r18
41048bf4:	0701b10e 	bge	zero,fp,410492bc <___vfiprintf_internal_r+0xc04>
41048bf8:	01c00404 	movi	r7,16
41048bfc:	3f03890e 	bge	r7,fp,41049a24 <___vfiprintf_internal_r+0x136c>
41048c00:	00d04174 	movhi	r3,16645
41048c04:	18c01e04 	addi	r3,r3,120
41048c08:	d8c02415 	stw	r3,144(sp)
41048c0c:	8007883a 	mov	r3,r16
41048c10:	034001c4 	movi	r13,7
41048c14:	e021883a 	mov	r16,fp
41048c18:	da402515 	stw	r9,148(sp)
41048c1c:	1839883a 	mov	fp,r3
41048c20:	00000506 	br	41048c38 <___vfiprintf_internal_r+0x580>
41048c24:	29800084 	addi	r6,r5,2
41048c28:	42000204 	addi	r8,r8,8
41048c2c:	180b883a 	mov	r5,r3
41048c30:	843ffc04 	addi	r16,r16,-16
41048c34:	3c000d0e 	bge	r7,r16,41048c6c <___vfiprintf_internal_r+0x5b4>
41048c38:	10800404 	addi	r2,r2,16
41048c3c:	28c00044 	addi	r3,r5,1
41048c40:	45c00015 	stw	r23,0(r8)
41048c44:	41c00115 	stw	r7,4(r8)
41048c48:	d8801c15 	stw	r2,112(sp)
41048c4c:	d8c01b15 	stw	r3,108(sp)
41048c50:	68fff40e 	bge	r13,r3,41048c24 <__alt_data_end+0xfffca424>
41048c54:	1002241e 	bne	r2,zero,410494e8 <___vfiprintf_internal_r+0xe30>
41048c58:	843ffc04 	addi	r16,r16,-16
41048c5c:	01800044 	movi	r6,1
41048c60:	000b883a 	mov	r5,zero
41048c64:	d811883a 	mov	r8,sp
41048c68:	3c3ff316 	blt	r7,r16,41048c38 <__alt_data_end+0xfffca438>
41048c6c:	da402517 	ldw	r9,148(sp)
41048c70:	e007883a 	mov	r3,fp
41048c74:	8039883a 	mov	fp,r16
41048c78:	1821883a 	mov	r16,r3
41048c7c:	d8c02417 	ldw	r3,144(sp)
41048c80:	1705883a 	add	r2,r2,fp
41048c84:	47000115 	stw	fp,4(r8)
41048c88:	40c00015 	stw	r3,0(r8)
41048c8c:	d8801c15 	stw	r2,112(sp)
41048c90:	d9801b15 	stw	r6,108(sp)
41048c94:	00c001c4 	movi	r3,7
41048c98:	19827616 	blt	r3,r6,41049674 <___vfiprintf_internal_r+0xfbc>
41048c9c:	4cf9c83a 	sub	fp,r9,r19
41048ca0:	42000204 	addi	r8,r8,8
41048ca4:	31000044 	addi	r4,r6,1
41048ca8:	300b883a 	mov	r5,r6
41048cac:	07018516 	blt	zero,fp,410492c4 <___vfiprintf_internal_r+0xc0c>
41048cb0:	9885883a 	add	r2,r19,r2
41048cb4:	45400015 	stw	r21,0(r8)
41048cb8:	44c00115 	stw	r19,4(r8)
41048cbc:	d8801c15 	stw	r2,112(sp)
41048cc0:	d9001b15 	stw	r4,108(sp)
41048cc4:	00c001c4 	movi	r3,7
41048cc8:	1901dd0e 	bge	r3,r4,41049440 <___vfiprintf_internal_r+0xd88>
41048ccc:	1002401e 	bne	r2,zero,410495d0 <___vfiprintf_internal_r+0xf18>
41048cd0:	d8001b15 	stw	zero,108(sp)
41048cd4:	a2c0010c 	andi	r11,r20,4
41048cd8:	58000226 	beq	r11,zero,41048ce4 <___vfiprintf_internal_r+0x62c>
41048cdc:	8ca7c83a 	sub	r19,r17,r18
41048ce0:	04c2f216 	blt	zero,r19,410498ac <___vfiprintf_internal_r+0x11f4>
41048ce4:	8c80010e 	bge	r17,r18,41048cec <___vfiprintf_internal_r+0x634>
41048ce8:	9023883a 	mov	r17,r18
41048cec:	da802317 	ldw	r10,140(sp)
41048cf0:	5455883a 	add	r10,r10,r17
41048cf4:	da802315 	stw	r10,140(sp)
41048cf8:	d8001b15 	stw	zero,108(sp)
41048cfc:	d811883a 	mov	r8,sp
41048d00:	003ea206 	br	4104878c <__alt_data_end+0xfffc9f8c>
41048d04:	a5000814 	ori	r20,r20,32
41048d08:	80c00007 	ldb	r3,0(r16)
41048d0c:	003ec906 	br	41048834 <__alt_data_end+0xfffca034>
41048d10:	80c00007 	ldb	r3,0(r16)
41048d14:	1b030926 	beq	r3,r12,4104993c <___vfiprintf_internal_r+0x1284>
41048d18:	a5000414 	ori	r20,r20,16
41048d1c:	003ec506 	br	41048834 <__alt_data_end+0xfffca034>
41048d20:	21003fcc 	andi	r4,r4,255
41048d24:	20035e1e 	bne	r4,zero,41049aa0 <___vfiprintf_internal_r+0x13e8>
41048d28:	a080080c 	andi	r2,r20,32
41048d2c:	1002a526 	beq	r2,zero,410497c4 <___vfiprintf_internal_r+0x110c>
41048d30:	da802217 	ldw	r10,136(sp)
41048d34:	50800017 	ldw	r2,0(r10)
41048d38:	da802317 	ldw	r10,140(sp)
41048d3c:	5007d7fa 	srai	r3,r10,31
41048d40:	da802217 	ldw	r10,136(sp)
41048d44:	10c00115 	stw	r3,4(r2)
41048d48:	52800104 	addi	r10,r10,4
41048d4c:	da802215 	stw	r10,136(sp)
41048d50:	da802317 	ldw	r10,140(sp)
41048d54:	12800015 	stw	r10,0(r2)
41048d58:	003e8c06 	br	4104878c <__alt_data_end+0xfffc9f8c>
41048d5c:	21003fcc 	andi	r4,r4,255
41048d60:	2003511e 	bne	r4,zero,41049aa8 <___vfiprintf_internal_r+0x13f0>
41048d64:	a080080c 	andi	r2,r20,32
41048d68:	1000a126 	beq	r2,zero,41048ff0 <___vfiprintf_internal_r+0x938>
41048d6c:	da802217 	ldw	r10,136(sp)
41048d70:	d8001d85 	stb	zero,118(sp)
41048d74:	50800204 	addi	r2,r10,8
41048d78:	54800017 	ldw	r18,0(r10)
41048d7c:	54c00117 	ldw	r19,4(r10)
41048d80:	4802b416 	blt	r9,zero,41049854 <___vfiprintf_internal_r+0x119c>
41048d84:	013fdfc4 	movi	r4,-129
41048d88:	94c6b03a 	or	r3,r18,r19
41048d8c:	d8802215 	stw	r2,136(sp)
41048d90:	a128703a 	and	r20,r20,r4
41048d94:	1800a226 	beq	r3,zero,41049020 <___vfiprintf_internal_r+0x968>
41048d98:	0039883a 	mov	fp,zero
41048d9c:	dd401a04 	addi	r21,sp,104
41048da0:	9006d0fa 	srli	r3,r18,3
41048da4:	9808977a 	slli	r4,r19,29
41048da8:	9826d0fa 	srli	r19,r19,3
41048dac:	948001cc 	andi	r18,r18,7
41048db0:	90800c04 	addi	r2,r18,48
41048db4:	ad7fffc4 	addi	r21,r21,-1
41048db8:	20e4b03a 	or	r18,r4,r3
41048dbc:	a8800005 	stb	r2,0(r21)
41048dc0:	94c6b03a 	or	r3,r18,r19
41048dc4:	183ff61e 	bne	r3,zero,41048da0 <__alt_data_end+0xfffca5a0>
41048dc8:	a0c0004c 	andi	r3,r20,1
41048dcc:	18005926 	beq	r3,zero,41048f34 <___vfiprintf_internal_r+0x87c>
41048dd0:	10803fcc 	andi	r2,r2,255
41048dd4:	1080201c 	xori	r2,r2,128
41048dd8:	10bfe004 	addi	r2,r2,-128
41048ddc:	00c00c04 	movi	r3,48
41048de0:	10c05426 	beq	r2,r3,41048f34 <___vfiprintf_internal_r+0x87c>
41048de4:	da801e17 	ldw	r10,120(sp)
41048de8:	a8bfffc4 	addi	r2,r21,-1
41048dec:	a8ffffc5 	stb	r3,-1(r21)
41048df0:	50a7c83a 	sub	r19,r10,r2
41048df4:	102b883a 	mov	r21,r2
41048df8:	003f2f06 	br	41048ab8 <__alt_data_end+0xfffca2b8>
41048dfc:	21003fcc 	andi	r4,r4,255
41048e00:	2003421e 	bne	r4,zero,41049b0c <___vfiprintf_internal_r+0x1454>
41048e04:	00904174 	movhi	r2,16645
41048e08:	10bfbd04 	addi	r2,r2,-268
41048e0c:	d8802615 	stw	r2,152(sp)
41048e10:	a080080c 	andi	r2,r20,32
41048e14:	1000aa26 	beq	r2,zero,410490c0 <___vfiprintf_internal_r+0xa08>
41048e18:	da802217 	ldw	r10,136(sp)
41048e1c:	54800017 	ldw	r18,0(r10)
41048e20:	54c00117 	ldw	r19,4(r10)
41048e24:	52800204 	addi	r10,r10,8
41048e28:	da802215 	stw	r10,136(sp)
41048e2c:	a080004c 	andi	r2,r20,1
41048e30:	1001d226 	beq	r2,zero,4104957c <___vfiprintf_internal_r+0xec4>
41048e34:	94c4b03a 	or	r2,r18,r19
41048e38:	1002351e 	bne	r2,zero,41049710 <___vfiprintf_internal_r+0x1058>
41048e3c:	d8001d85 	stb	zero,118(sp)
41048e40:	48022216 	blt	r9,zero,410496cc <___vfiprintf_internal_r+0x1014>
41048e44:	00bfdfc4 	movi	r2,-129
41048e48:	a0a8703a 	and	r20,r20,r2
41048e4c:	003f1506 	br	41048aa4 <__alt_data_end+0xfffca2a4>
41048e50:	da802217 	ldw	r10,136(sp)
41048e54:	04800044 	movi	r18,1
41048e58:	d8001d85 	stb	zero,118(sp)
41048e5c:	50800017 	ldw	r2,0(r10)
41048e60:	52800104 	addi	r10,r10,4
41048e64:	da802215 	stw	r10,136(sp)
41048e68:	d8801005 	stb	r2,64(sp)
41048e6c:	9027883a 	mov	r19,r18
41048e70:	dd401004 	addi	r21,sp,64
41048e74:	0013883a 	mov	r9,zero
41048e78:	003f1706 	br	41048ad8 <__alt_data_end+0xfffca2d8>
41048e7c:	21003fcc 	andi	r4,r4,255
41048e80:	2003201e 	bne	r4,zero,41049b04 <___vfiprintf_internal_r+0x144c>
41048e84:	a080080c 	andi	r2,r20,32
41048e88:	10004b26 	beq	r2,zero,41048fb8 <___vfiprintf_internal_r+0x900>
41048e8c:	da802217 	ldw	r10,136(sp)
41048e90:	50800117 	ldw	r2,4(r10)
41048e94:	54800017 	ldw	r18,0(r10)
41048e98:	52800204 	addi	r10,r10,8
41048e9c:	da802215 	stw	r10,136(sp)
41048ea0:	1027883a 	mov	r19,r2
41048ea4:	10022c16 	blt	r2,zero,41049758 <___vfiprintf_internal_r+0x10a0>
41048ea8:	df001d83 	ldbu	fp,118(sp)
41048eac:	48007216 	blt	r9,zero,41049078 <___vfiprintf_internal_r+0x9c0>
41048eb0:	00ffdfc4 	movi	r3,-129
41048eb4:	94c4b03a 	or	r2,r18,r19
41048eb8:	a0e8703a 	and	r20,r20,r3
41048ebc:	1000cc26 	beq	r2,zero,410491f0 <___vfiprintf_internal_r+0xb38>
41048ec0:	98021026 	beq	r19,zero,41049704 <___vfiprintf_internal_r+0x104c>
41048ec4:	dc402415 	stw	r17,144(sp)
41048ec8:	dc002515 	stw	r16,148(sp)
41048ecc:	9823883a 	mov	r17,r19
41048ed0:	9021883a 	mov	r16,r18
41048ed4:	dd401a04 	addi	r21,sp,104
41048ed8:	4825883a 	mov	r18,r9
41048edc:	4027883a 	mov	r19,r8
41048ee0:	8009883a 	mov	r4,r16
41048ee4:	880b883a 	mov	r5,r17
41048ee8:	01800284 	movi	r6,10
41048eec:	000f883a 	mov	r7,zero
41048ef0:	104aa980 	call	4104aa98 <__umoddi3>
41048ef4:	10800c04 	addi	r2,r2,48
41048ef8:	ad7fffc4 	addi	r21,r21,-1
41048efc:	8009883a 	mov	r4,r16
41048f00:	880b883a 	mov	r5,r17
41048f04:	a8800005 	stb	r2,0(r21)
41048f08:	01800284 	movi	r6,10
41048f0c:	000f883a 	mov	r7,zero
41048f10:	104a5200 	call	4104a520 <__udivdi3>
41048f14:	1021883a 	mov	r16,r2
41048f18:	10c4b03a 	or	r2,r2,r3
41048f1c:	1823883a 	mov	r17,r3
41048f20:	103fef1e 	bne	r2,zero,41048ee0 <__alt_data_end+0xfffca6e0>
41048f24:	dc402417 	ldw	r17,144(sp)
41048f28:	dc002517 	ldw	r16,148(sp)
41048f2c:	9013883a 	mov	r9,r18
41048f30:	9811883a 	mov	r8,r19
41048f34:	da801e17 	ldw	r10,120(sp)
41048f38:	5567c83a 	sub	r19,r10,r21
41048f3c:	003ede06 	br	41048ab8 <__alt_data_end+0xfffca2b8>
41048f40:	38803fcc 	andi	r2,r7,255
41048f44:	1080201c 	xori	r2,r2,128
41048f48:	10bfe004 	addi	r2,r2,-128
41048f4c:	1002371e 	bne	r2,zero,4104982c <___vfiprintf_internal_r+0x1174>
41048f50:	01000044 	movi	r4,1
41048f54:	01c00804 	movi	r7,32
41048f58:	80c00007 	ldb	r3,0(r16)
41048f5c:	003e3506 	br	41048834 <__alt_data_end+0xfffca034>
41048f60:	a5000054 	ori	r20,r20,1
41048f64:	80c00007 	ldb	r3,0(r16)
41048f68:	003e3206 	br	41048834 <__alt_data_end+0xfffca034>
41048f6c:	a5002014 	ori	r20,r20,128
41048f70:	80c00007 	ldb	r3,0(r16)
41048f74:	003e2f06 	br	41048834 <__alt_data_end+0xfffca034>
41048f78:	8015883a 	mov	r10,r16
41048f7c:	0023883a 	mov	r17,zero
41048f80:	18bff404 	addi	r2,r3,-48
41048f84:	50c00007 	ldb	r3,0(r10)
41048f88:	8c4002a4 	muli	r17,r17,10
41048f8c:	84000044 	addi	r16,r16,1
41048f90:	8015883a 	mov	r10,r16
41048f94:	1463883a 	add	r17,r2,r17
41048f98:	18bff404 	addi	r2,r3,-48
41048f9c:	30bff92e 	bgeu	r6,r2,41048f84 <__alt_data_end+0xfffca784>
41048fa0:	003e2506 	br	41048838 <__alt_data_end+0xfffca038>
41048fa4:	21003fcc 	andi	r4,r4,255
41048fa8:	2002d41e 	bne	r4,zero,41049afc <___vfiprintf_internal_r+0x1444>
41048fac:	a5000414 	ori	r20,r20,16
41048fb0:	a080080c 	andi	r2,r20,32
41048fb4:	103fb51e 	bne	r2,zero,41048e8c <__alt_data_end+0xfffca68c>
41048fb8:	a080040c 	andi	r2,r20,16
41048fbc:	1001f826 	beq	r2,zero,410497a0 <___vfiprintf_internal_r+0x10e8>
41048fc0:	da802217 	ldw	r10,136(sp)
41048fc4:	54800017 	ldw	r18,0(r10)
41048fc8:	52800104 	addi	r10,r10,4
41048fcc:	da802215 	stw	r10,136(sp)
41048fd0:	9027d7fa 	srai	r19,r18,31
41048fd4:	9805883a 	mov	r2,r19
41048fd8:	003fb206 	br	41048ea4 <__alt_data_end+0xfffca6a4>
41048fdc:	21003fcc 	andi	r4,r4,255
41048fe0:	2002c41e 	bne	r4,zero,41049af4 <___vfiprintf_internal_r+0x143c>
41048fe4:	a5000414 	ori	r20,r20,16
41048fe8:	a080080c 	andi	r2,r20,32
41048fec:	103f5f1e 	bne	r2,zero,41048d6c <__alt_data_end+0xfffca56c>
41048ff0:	a080040c 	andi	r2,r20,16
41048ff4:	10020f26 	beq	r2,zero,41049834 <___vfiprintf_internal_r+0x117c>
41048ff8:	da802217 	ldw	r10,136(sp)
41048ffc:	d8001d85 	stb	zero,118(sp)
41049000:	0027883a 	mov	r19,zero
41049004:	50800104 	addi	r2,r10,4
41049008:	54800017 	ldw	r18,0(r10)
4104900c:	48021116 	blt	r9,zero,41049854 <___vfiprintf_internal_r+0x119c>
41049010:	00ffdfc4 	movi	r3,-129
41049014:	d8802215 	stw	r2,136(sp)
41049018:	a0e8703a 	and	r20,r20,r3
4104901c:	903f5e1e 	bne	r18,zero,41048d98 <__alt_data_end+0xfffca598>
41049020:	0039883a 	mov	fp,zero
41049024:	4802a626 	beq	r9,zero,41049ac0 <___vfiprintf_internal_r+0x1408>
41049028:	0025883a 	mov	r18,zero
4104902c:	0027883a 	mov	r19,zero
41049030:	003f5a06 	br	41048d9c <__alt_data_end+0xfffca59c>
41049034:	21003fcc 	andi	r4,r4,255
41049038:	20029f1e 	bne	r4,zero,41049ab8 <___vfiprintf_internal_r+0x1400>
4104903c:	a5000414 	ori	r20,r20,16
41049040:	a080080c 	andi	r2,r20,32
41049044:	10005e1e 	bne	r2,zero,410491c0 <___vfiprintf_internal_r+0xb08>
41049048:	a080040c 	andi	r2,r20,16
4104904c:	1001a21e 	bne	r2,zero,410496d8 <___vfiprintf_internal_r+0x1020>
41049050:	a080100c 	andi	r2,r20,64
41049054:	d8001d85 	stb	zero,118(sp)
41049058:	da802217 	ldw	r10,136(sp)
4104905c:	1002231e 	bne	r2,zero,410498ec <___vfiprintf_internal_r+0x1234>
41049060:	50800104 	addi	r2,r10,4
41049064:	54800017 	ldw	r18,0(r10)
41049068:	0027883a 	mov	r19,zero
4104906c:	4801a00e 	bge	r9,zero,410496f0 <___vfiprintf_internal_r+0x1038>
41049070:	d8802215 	stw	r2,136(sp)
41049074:	0039883a 	mov	fp,zero
41049078:	94c4b03a 	or	r2,r18,r19
4104907c:	103f901e 	bne	r2,zero,41048ec0 <__alt_data_end+0xfffca6c0>
41049080:	00800044 	movi	r2,1
41049084:	10803fcc 	andi	r2,r2,255
41049088:	00c00044 	movi	r3,1
4104908c:	10c05926 	beq	r2,r3,410491f4 <___vfiprintf_internal_r+0xb3c>
41049090:	00c00084 	movi	r3,2
41049094:	10ffe41e 	bne	r2,r3,41049028 <__alt_data_end+0xfffca828>
41049098:	0025883a 	mov	r18,zero
4104909c:	0027883a 	mov	r19,zero
410490a0:	00013d06 	br	41049598 <___vfiprintf_internal_r+0xee0>
410490a4:	21003fcc 	andi	r4,r4,255
410490a8:	2002811e 	bne	r4,zero,41049ab0 <___vfiprintf_internal_r+0x13f8>
410490ac:	00904174 	movhi	r2,16645
410490b0:	10bfb804 	addi	r2,r2,-288
410490b4:	d8802615 	stw	r2,152(sp)
410490b8:	a080080c 	andi	r2,r20,32
410490bc:	103f561e 	bne	r2,zero,41048e18 <__alt_data_end+0xfffca618>
410490c0:	a080040c 	andi	r2,r20,16
410490c4:	1001d126 	beq	r2,zero,4104980c <___vfiprintf_internal_r+0x1154>
410490c8:	da802217 	ldw	r10,136(sp)
410490cc:	0027883a 	mov	r19,zero
410490d0:	54800017 	ldw	r18,0(r10)
410490d4:	52800104 	addi	r10,r10,4
410490d8:	da802215 	stw	r10,136(sp)
410490dc:	003f5306 	br	41048e2c <__alt_data_end+0xfffca62c>
410490e0:	da802217 	ldw	r10,136(sp)
410490e4:	d8001d85 	stb	zero,118(sp)
410490e8:	55400017 	ldw	r21,0(r10)
410490ec:	50c00104 	addi	r3,r10,4
410490f0:	a8024226 	beq	r21,zero,410499fc <___vfiprintf_internal_r+0x1344>
410490f4:	48021816 	blt	r9,zero,41049958 <___vfiprintf_internal_r+0x12a0>
410490f8:	480d883a 	mov	r6,r9
410490fc:	000b883a 	mov	r5,zero
41049100:	a809883a 	mov	r4,r21
41049104:	d8c02a15 	stw	r3,168(sp)
41049108:	da002b15 	stw	r8,172(sp)
4104910c:	da402c15 	stw	r9,176(sp)
41049110:	10468940 	call	41046894 <memchr>
41049114:	d8c02a17 	ldw	r3,168(sp)
41049118:	da002b17 	ldw	r8,172(sp)
4104911c:	da402c17 	ldw	r9,176(sp)
41049120:	10024826 	beq	r2,zero,41049a44 <___vfiprintf_internal_r+0x138c>
41049124:	1567c83a 	sub	r19,r2,r21
41049128:	df001d83 	ldbu	fp,118(sp)
4104912c:	d8c02215 	stw	r3,136(sp)
41049130:	0013883a 	mov	r9,zero
41049134:	003e6006 	br	41048ab8 <__alt_data_end+0xfffca2b8>
41049138:	21003fcc 	andi	r4,r4,255
4104913c:	203fc026 	beq	r4,zero,41049040 <__alt_data_end+0xfffca840>
41049140:	d9c01d85 	stb	r7,118(sp)
41049144:	003fbe06 	br	41049040 <__alt_data_end+0xfffca840>
41049148:	da802217 	ldw	r10,136(sp)
4104914c:	54400017 	ldw	r17,0(r10)
41049150:	50800104 	addi	r2,r10,4
41049154:	883e3b16 	blt	r17,zero,41048a44 <__alt_data_end+0xfffca244>
41049158:	d8802215 	stw	r2,136(sp)
4104915c:	80c00007 	ldb	r3,0(r16)
41049160:	003db406 	br	41048834 <__alt_data_end+0xfffca034>
41049164:	01000044 	movi	r4,1
41049168:	01c00ac4 	movi	r7,43
4104916c:	80c00007 	ldb	r3,0(r16)
41049170:	003db006 	br	41048834 <__alt_data_end+0xfffca034>
41049174:	80c00007 	ldb	r3,0(r16)
41049178:	82800044 	addi	r10,r16,1
4104917c:	1b423c26 	beq	r3,r13,41049a70 <___vfiprintf_internal_r+0x13b8>
41049180:	18bff404 	addi	r2,r3,-48
41049184:	0013883a 	mov	r9,zero
41049188:	30822b36 	bltu	r6,r2,41049a38 <___vfiprintf_internal_r+0x1380>
4104918c:	50c00007 	ldb	r3,0(r10)
41049190:	4a4002a4 	muli	r9,r9,10
41049194:	54000044 	addi	r16,r10,1
41049198:	8015883a 	mov	r10,r16
4104919c:	4893883a 	add	r9,r9,r2
410491a0:	18bff404 	addi	r2,r3,-48
410491a4:	30bff92e 	bgeu	r6,r2,4104918c <__alt_data_end+0xfffca98c>
410491a8:	483da30e 	bge	r9,zero,41048838 <__alt_data_end+0xfffca038>
410491ac:	027fffc4 	movi	r9,-1
410491b0:	003da106 	br	41048838 <__alt_data_end+0xfffca038>
410491b4:	a5001014 	ori	r20,r20,64
410491b8:	80c00007 	ldb	r3,0(r16)
410491bc:	003d9d06 	br	41048834 <__alt_data_end+0xfffca034>
410491c0:	da802217 	ldw	r10,136(sp)
410491c4:	d8001d85 	stb	zero,118(sp)
410491c8:	50c00204 	addi	r3,r10,8
410491cc:	54800017 	ldw	r18,0(r10)
410491d0:	54c00117 	ldw	r19,4(r10)
410491d4:	4801ca16 	blt	r9,zero,41049900 <___vfiprintf_internal_r+0x1248>
410491d8:	013fdfc4 	movi	r4,-129
410491dc:	94c4b03a 	or	r2,r18,r19
410491e0:	d8c02215 	stw	r3,136(sp)
410491e4:	a128703a 	and	r20,r20,r4
410491e8:	0039883a 	mov	fp,zero
410491ec:	103f341e 	bne	r2,zero,41048ec0 <__alt_data_end+0xfffca6c0>
410491f0:	483e2e26 	beq	r9,zero,41048aac <__alt_data_end+0xfffca2ac>
410491f4:	0025883a 	mov	r18,zero
410491f8:	94800c04 	addi	r18,r18,48
410491fc:	dc8019c5 	stb	r18,103(sp)
41049200:	dcc02717 	ldw	r19,156(sp)
41049204:	dd4019c4 	addi	r21,sp,103
41049208:	003e2b06 	br	41048ab8 <__alt_data_end+0xfffca2b8>
4104920c:	21003fcc 	andi	r4,r4,255
41049210:	2002361e 	bne	r4,zero,41049aec <___vfiprintf_internal_r+0x1434>
41049214:	1801c126 	beq	r3,zero,4104991c <___vfiprintf_internal_r+0x1264>
41049218:	04800044 	movi	r18,1
4104921c:	d8c01005 	stb	r3,64(sp)
41049220:	d8001d85 	stb	zero,118(sp)
41049224:	9027883a 	mov	r19,r18
41049228:	dd401004 	addi	r21,sp,64
4104922c:	003f1106 	br	41048e74 <__alt_data_end+0xfffca674>
41049230:	d9402117 	ldw	r5,132(sp)
41049234:	d9002017 	ldw	r4,128(sp)
41049238:	d9801a04 	addi	r6,sp,104
4104923c:	d9c02b15 	stw	r7,172(sp)
41049240:	dbc02a15 	stw	r15,168(sp)
41049244:	10485a40 	call	410485a4 <__sprint_r.part.0>
41049248:	d9c02b17 	ldw	r7,172(sp)
4104924c:	dbc02a17 	ldw	r15,168(sp)
41049250:	10006d1e 	bne	r2,zero,41049408 <___vfiprintf_internal_r+0xd50>
41049254:	d9801b17 	ldw	r6,108(sp)
41049258:	d8801c17 	ldw	r2,112(sp)
4104925c:	d811883a 	mov	r8,sp
41049260:	31400044 	addi	r5,r6,1
41049264:	003e3306 	br	41048b34 <__alt_data_end+0xfffca334>
41049268:	d9401b17 	ldw	r5,108(sp)
4104926c:	d8801c17 	ldw	r2,112(sp)
41049270:	29000044 	addi	r4,r5,1
41049274:	d8c01d87 	ldb	r3,118(sp)
41049278:	183e4d26 	beq	r3,zero,41048bb0 <__alt_data_end+0xfffca3b0>
4104927c:	00c00044 	movi	r3,1
41049280:	d9401d84 	addi	r5,sp,118
41049284:	10c5883a 	add	r2,r2,r3
41049288:	41400015 	stw	r5,0(r8)
4104928c:	40c00115 	stw	r3,4(r8)
41049290:	d8801c15 	stw	r2,112(sp)
41049294:	d9001b15 	stw	r4,108(sp)
41049298:	014001c4 	movi	r5,7
4104929c:	2900a90e 	bge	r5,r4,41049544 <___vfiprintf_internal_r+0xe8c>
410492a0:	1000da1e 	bne	r2,zero,4104960c <___vfiprintf_internal_r+0xf54>
410492a4:	7000ab1e 	bne	r14,zero,41049554 <___vfiprintf_internal_r+0xe9c>
410492a8:	000b883a 	mov	r5,zero
410492ac:	1809883a 	mov	r4,r3
410492b0:	d811883a 	mov	r8,sp
410492b4:	00c02004 	movi	r3,128
410492b8:	e0fe4d26 	beq	fp,r3,41048bf0 <__alt_data_end+0xfffca3f0>
410492bc:	4cf9c83a 	sub	fp,r9,r19
410492c0:	073e7b0e 	bge	zero,fp,41048cb0 <__alt_data_end+0xfffca4b0>
410492c4:	01c00404 	movi	r7,16
410492c8:	3f01900e 	bge	r7,fp,4104990c <___vfiprintf_internal_r+0x1254>
410492cc:	00d04174 	movhi	r3,16645
410492d0:	18c01e04 	addi	r3,r3,120
410492d4:	d8c02415 	stw	r3,144(sp)
410492d8:	034001c4 	movi	r13,7
410492dc:	00000506 	br	410492f4 <___vfiprintf_internal_r+0xc3c>
410492e0:	29000084 	addi	r4,r5,2
410492e4:	42000204 	addi	r8,r8,8
410492e8:	180b883a 	mov	r5,r3
410492ec:	e73ffc04 	addi	fp,fp,-16
410492f0:	3f000d0e 	bge	r7,fp,41049328 <___vfiprintf_internal_r+0xc70>
410492f4:	10800404 	addi	r2,r2,16
410492f8:	28c00044 	addi	r3,r5,1
410492fc:	45c00015 	stw	r23,0(r8)
41049300:	41c00115 	stw	r7,4(r8)
41049304:	d8801c15 	stw	r2,112(sp)
41049308:	d8c01b15 	stw	r3,108(sp)
4104930c:	68fff40e 	bge	r13,r3,410492e0 <__alt_data_end+0xfffcaae0>
41049310:	1000101e 	bne	r2,zero,41049354 <___vfiprintf_internal_r+0xc9c>
41049314:	e73ffc04 	addi	fp,fp,-16
41049318:	01000044 	movi	r4,1
4104931c:	000b883a 	mov	r5,zero
41049320:	d811883a 	mov	r8,sp
41049324:	3f3ff316 	blt	r7,fp,410492f4 <__alt_data_end+0xfffcaaf4>
41049328:	da802417 	ldw	r10,144(sp)
4104932c:	1705883a 	add	r2,r2,fp
41049330:	47000115 	stw	fp,4(r8)
41049334:	42800015 	stw	r10,0(r8)
41049338:	d8801c15 	stw	r2,112(sp)
4104933c:	d9001b15 	stw	r4,108(sp)
41049340:	00c001c4 	movi	r3,7
41049344:	19003616 	blt	r3,r4,41049420 <___vfiprintf_internal_r+0xd68>
41049348:	42000204 	addi	r8,r8,8
4104934c:	21000044 	addi	r4,r4,1
41049350:	003e5706 	br	41048cb0 <__alt_data_end+0xfffca4b0>
41049354:	d9402117 	ldw	r5,132(sp)
41049358:	d9002017 	ldw	r4,128(sp)
4104935c:	d9801a04 	addi	r6,sp,104
41049360:	d9c02b15 	stw	r7,172(sp)
41049364:	db402a15 	stw	r13,168(sp)
41049368:	10485a40 	call	410485a4 <__sprint_r.part.0>
4104936c:	d9c02b17 	ldw	r7,172(sp)
41049370:	db402a17 	ldw	r13,168(sp)
41049374:	1000241e 	bne	r2,zero,41049408 <___vfiprintf_internal_r+0xd50>
41049378:	d9401b17 	ldw	r5,108(sp)
4104937c:	d8801c17 	ldw	r2,112(sp)
41049380:	d811883a 	mov	r8,sp
41049384:	29000044 	addi	r4,r5,1
41049388:	003fd806 	br	410492ec <__alt_data_end+0xfffcaaec>
4104938c:	d9401b17 	ldw	r5,108(sp)
41049390:	00d04174 	movhi	r3,16645
41049394:	18c02204 	addi	r3,r3,136
41049398:	d8c02415 	stw	r3,144(sp)
4104939c:	29400044 	addi	r5,r5,1
410493a0:	d8c02417 	ldw	r3,144(sp)
410493a4:	14c5883a 	add	r2,r2,r19
410493a8:	44c00115 	stw	r19,4(r8)
410493ac:	40c00015 	stw	r3,0(r8)
410493b0:	d8801c15 	stw	r2,112(sp)
410493b4:	d9401b15 	stw	r5,108(sp)
410493b8:	00c001c4 	movi	r3,7
410493bc:	1940070e 	bge	r3,r5,410493dc <___vfiprintf_internal_r+0xd24>
410493c0:	103e4826 	beq	r2,zero,41048ce4 <__alt_data_end+0xfffca4e4>
410493c4:	d9402117 	ldw	r5,132(sp)
410493c8:	d9002017 	ldw	r4,128(sp)
410493cc:	d9801a04 	addi	r6,sp,104
410493d0:	10485a40 	call	410485a4 <__sprint_r.part.0>
410493d4:	10000c1e 	bne	r2,zero,41049408 <___vfiprintf_internal_r+0xd50>
410493d8:	d8801c17 	ldw	r2,112(sp)
410493dc:	8c80010e 	bge	r17,r18,410493e4 <___vfiprintf_internal_r+0xd2c>
410493e0:	9023883a 	mov	r17,r18
410493e4:	da802317 	ldw	r10,140(sp)
410493e8:	5455883a 	add	r10,r10,r17
410493ec:	da802315 	stw	r10,140(sp)
410493f0:	103e4126 	beq	r2,zero,41048cf8 <__alt_data_end+0xfffca4f8>
410493f4:	d9402117 	ldw	r5,132(sp)
410493f8:	d9002017 	ldw	r4,128(sp)
410493fc:	d9801a04 	addi	r6,sp,104
41049400:	10485a40 	call	410485a4 <__sprint_r.part.0>
41049404:	103e3c26 	beq	r2,zero,41048cf8 <__alt_data_end+0xfffca4f8>
41049408:	dd002117 	ldw	r20,132(sp)
4104940c:	a080030b 	ldhu	r2,12(r20)
41049410:	1080100c 	andi	r2,r2,64
41049414:	1001231e 	bne	r2,zero,410498a4 <___vfiprintf_internal_r+0x11ec>
41049418:	d8802317 	ldw	r2,140(sp)
4104941c:	003d7b06 	br	41048a0c <__alt_data_end+0xfffca20c>
41049420:	1000991e 	bne	r2,zero,41049688 <___vfiprintf_internal_r+0xfd0>
41049424:	00c00044 	movi	r3,1
41049428:	9805883a 	mov	r2,r19
4104942c:	dd400015 	stw	r21,0(sp)
41049430:	dcc00115 	stw	r19,4(sp)
41049434:	dcc01c15 	stw	r19,112(sp)
41049438:	d8c01b15 	stw	r3,108(sp)
4104943c:	d811883a 	mov	r8,sp
41049440:	42000204 	addi	r8,r8,8
41049444:	a2c0010c 	andi	r11,r20,4
41049448:	583fe426 	beq	r11,zero,410493dc <__alt_data_end+0xfffcabdc>
4104944c:	8ca7c83a 	sub	r19,r17,r18
41049450:	04ffe20e 	bge	zero,r19,410493dc <__alt_data_end+0xfffcabdc>
41049454:	01c00404 	movi	r7,16
41049458:	3cffcc0e 	bge	r7,r19,4104938c <__alt_data_end+0xfffcab8c>
4104945c:	02904174 	movhi	r10,16645
41049460:	52802204 	addi	r10,r10,136
41049464:	d9001b17 	ldw	r4,108(sp)
41049468:	da802415 	stw	r10,144(sp)
4104946c:	382b883a 	mov	r21,r7
41049470:	050001c4 	movi	r20,7
41049474:	df002017 	ldw	fp,128(sp)
41049478:	00000506 	br	41049490 <___vfiprintf_internal_r+0xdd8>
4104947c:	21400084 	addi	r5,r4,2
41049480:	42000204 	addi	r8,r8,8
41049484:	1809883a 	mov	r4,r3
41049488:	9cfffc04 	addi	r19,r19,-16
4104948c:	acffc40e 	bge	r21,r19,410493a0 <__alt_data_end+0xfffcaba0>
41049490:	10800404 	addi	r2,r2,16
41049494:	20c00044 	addi	r3,r4,1
41049498:	45800015 	stw	r22,0(r8)
4104949c:	45400115 	stw	r21,4(r8)
410494a0:	d8801c15 	stw	r2,112(sp)
410494a4:	d8c01b15 	stw	r3,108(sp)
410494a8:	a0fff40e 	bge	r20,r3,4104947c <__alt_data_end+0xfffcac7c>
410494ac:	1000041e 	bne	r2,zero,410494c0 <___vfiprintf_internal_r+0xe08>
410494b0:	01400044 	movi	r5,1
410494b4:	0009883a 	mov	r4,zero
410494b8:	d811883a 	mov	r8,sp
410494bc:	003ff206 	br	41049488 <__alt_data_end+0xfffcac88>
410494c0:	d9402117 	ldw	r5,132(sp)
410494c4:	d9801a04 	addi	r6,sp,104
410494c8:	e009883a 	mov	r4,fp
410494cc:	10485a40 	call	410485a4 <__sprint_r.part.0>
410494d0:	103fcd1e 	bne	r2,zero,41049408 <__alt_data_end+0xfffcac08>
410494d4:	d9001b17 	ldw	r4,108(sp)
410494d8:	d8801c17 	ldw	r2,112(sp)
410494dc:	d811883a 	mov	r8,sp
410494e0:	21400044 	addi	r5,r4,1
410494e4:	003fe806 	br	41049488 <__alt_data_end+0xfffcac88>
410494e8:	d9402117 	ldw	r5,132(sp)
410494ec:	d9002017 	ldw	r4,128(sp)
410494f0:	d9801a04 	addi	r6,sp,104
410494f4:	d9c02b15 	stw	r7,172(sp)
410494f8:	db402a15 	stw	r13,168(sp)
410494fc:	10485a40 	call	410485a4 <__sprint_r.part.0>
41049500:	d9c02b17 	ldw	r7,172(sp)
41049504:	db402a17 	ldw	r13,168(sp)
41049508:	103fbf1e 	bne	r2,zero,41049408 <__alt_data_end+0xfffcac08>
4104950c:	d9401b17 	ldw	r5,108(sp)
41049510:	d8801c17 	ldw	r2,112(sp)
41049514:	d811883a 	mov	r8,sp
41049518:	29800044 	addi	r6,r5,1
4104951c:	003dc406 	br	41048c30 <__alt_data_end+0xfffca430>
41049520:	1000d21e 	bne	r2,zero,4104986c <___vfiprintf_internal_r+0x11b4>
41049524:	d8c01d87 	ldb	r3,118(sp)
41049528:	18009526 	beq	r3,zero,41049780 <___vfiprintf_internal_r+0x10c8>
4104952c:	00800044 	movi	r2,1
41049530:	d8c01d84 	addi	r3,sp,118
41049534:	1009883a 	mov	r4,r2
41049538:	d8c00015 	stw	r3,0(sp)
4104953c:	d8800115 	stw	r2,4(sp)
41049540:	d811883a 	mov	r8,sp
41049544:	200b883a 	mov	r5,r4
41049548:	42000204 	addi	r8,r8,8
4104954c:	21000044 	addi	r4,r4,1
41049550:	003d9706 	br	41048bb0 <__alt_data_end+0xfffca3b0>
41049554:	d9001d04 	addi	r4,sp,116
41049558:	00800084 	movi	r2,2
4104955c:	d9000015 	stw	r4,0(sp)
41049560:	d8800115 	stw	r2,4(sp)
41049564:	1809883a 	mov	r4,r3
41049568:	d811883a 	mov	r8,sp
4104956c:	200b883a 	mov	r5,r4
41049570:	42000204 	addi	r8,r8,8
41049574:	21000044 	addi	r4,r4,1
41049578:	003f4e06 	br	410492b4 <__alt_data_end+0xfffcaab4>
4104957c:	d8001d85 	stb	zero,118(sp)
41049580:	48005016 	blt	r9,zero,410496c4 <___vfiprintf_internal_r+0x100c>
41049584:	00ffdfc4 	movi	r3,-129
41049588:	94c4b03a 	or	r2,r18,r19
4104958c:	a0e8703a 	and	r20,r20,r3
41049590:	103d4426 	beq	r2,zero,41048aa4 <__alt_data_end+0xfffca2a4>
41049594:	0039883a 	mov	fp,zero
41049598:	d9002617 	ldw	r4,152(sp)
4104959c:	dd401a04 	addi	r21,sp,104
410495a0:	908003cc 	andi	r2,r18,15
410495a4:	9806973a 	slli	r3,r19,28
410495a8:	2085883a 	add	r2,r4,r2
410495ac:	9024d13a 	srli	r18,r18,4
410495b0:	10800003 	ldbu	r2,0(r2)
410495b4:	9826d13a 	srli	r19,r19,4
410495b8:	ad7fffc4 	addi	r21,r21,-1
410495bc:	1ca4b03a 	or	r18,r3,r18
410495c0:	a8800005 	stb	r2,0(r21)
410495c4:	94c4b03a 	or	r2,r18,r19
410495c8:	103ff51e 	bne	r2,zero,410495a0 <__alt_data_end+0xfffcada0>
410495cc:	003e5906 	br	41048f34 <__alt_data_end+0xfffca734>
410495d0:	d9402117 	ldw	r5,132(sp)
410495d4:	d9002017 	ldw	r4,128(sp)
410495d8:	d9801a04 	addi	r6,sp,104
410495dc:	10485a40 	call	410485a4 <__sprint_r.part.0>
410495e0:	103f891e 	bne	r2,zero,41049408 <__alt_data_end+0xfffcac08>
410495e4:	d8801c17 	ldw	r2,112(sp)
410495e8:	d811883a 	mov	r8,sp
410495ec:	003f9506 	br	41049444 <__alt_data_end+0xfffcac44>
410495f0:	d9402117 	ldw	r5,132(sp)
410495f4:	d9002017 	ldw	r4,128(sp)
410495f8:	d9801a04 	addi	r6,sp,104
410495fc:	10485a40 	call	410485a4 <__sprint_r.part.0>
41049600:	103f811e 	bne	r2,zero,41049408 <__alt_data_end+0xfffcac08>
41049604:	d811883a 	mov	r8,sp
41049608:	003ced06 	br	410489c0 <__alt_data_end+0xfffca1c0>
4104960c:	d9402117 	ldw	r5,132(sp)
41049610:	d9002017 	ldw	r4,128(sp)
41049614:	d9801a04 	addi	r6,sp,104
41049618:	da402c15 	stw	r9,176(sp)
4104961c:	db802a15 	stw	r14,168(sp)
41049620:	10485a40 	call	410485a4 <__sprint_r.part.0>
41049624:	da402c17 	ldw	r9,176(sp)
41049628:	db802a17 	ldw	r14,168(sp)
4104962c:	103f761e 	bne	r2,zero,41049408 <__alt_data_end+0xfffcac08>
41049630:	d9401b17 	ldw	r5,108(sp)
41049634:	d8801c17 	ldw	r2,112(sp)
41049638:	d811883a 	mov	r8,sp
4104963c:	29000044 	addi	r4,r5,1
41049640:	003d5b06 	br	41048bb0 <__alt_data_end+0xfffca3b0>
41049644:	d9402117 	ldw	r5,132(sp)
41049648:	d9002017 	ldw	r4,128(sp)
4104964c:	d9801a04 	addi	r6,sp,104
41049650:	da402c15 	stw	r9,176(sp)
41049654:	10485a40 	call	410485a4 <__sprint_r.part.0>
41049658:	da402c17 	ldw	r9,176(sp)
4104965c:	103f6a1e 	bne	r2,zero,41049408 <__alt_data_end+0xfffcac08>
41049660:	d9401b17 	ldw	r5,108(sp)
41049664:	d8801c17 	ldw	r2,112(sp)
41049668:	d811883a 	mov	r8,sp
4104966c:	29000044 	addi	r4,r5,1
41049670:	003f1006 	br	410492b4 <__alt_data_end+0xfffcaab4>
41049674:	1000c31e 	bne	r2,zero,41049984 <___vfiprintf_internal_r+0x12cc>
41049678:	01000044 	movi	r4,1
4104967c:	000b883a 	mov	r5,zero
41049680:	d811883a 	mov	r8,sp
41049684:	003f0d06 	br	410492bc <__alt_data_end+0xfffcaabc>
41049688:	d9402117 	ldw	r5,132(sp)
4104968c:	d9002017 	ldw	r4,128(sp)
41049690:	d9801a04 	addi	r6,sp,104
41049694:	10485a40 	call	410485a4 <__sprint_r.part.0>
41049698:	103f5b1e 	bne	r2,zero,41049408 <__alt_data_end+0xfffcac08>
4104969c:	d9001b17 	ldw	r4,108(sp)
410496a0:	d8801c17 	ldw	r2,112(sp)
410496a4:	d811883a 	mov	r8,sp
410496a8:	21000044 	addi	r4,r4,1
410496ac:	003d8006 	br	41048cb0 <__alt_data_end+0xfffca4b0>
410496b0:	01104174 	movhi	r4,16645
410496b4:	213fbd04 	addi	r4,r4,-268
410496b8:	d9002615 	stw	r4,152(sp)
410496bc:	d8c02215 	stw	r3,136(sp)
410496c0:	1029883a 	mov	r20,r2
410496c4:	94c4b03a 	or	r2,r18,r19
410496c8:	103fb21e 	bne	r2,zero,41049594 <__alt_data_end+0xfffcad94>
410496cc:	0039883a 	mov	fp,zero
410496d0:	00800084 	movi	r2,2
410496d4:	003e6b06 	br	41049084 <__alt_data_end+0xfffca884>
410496d8:	da802217 	ldw	r10,136(sp)
410496dc:	d8001d85 	stb	zero,118(sp)
410496e0:	0027883a 	mov	r19,zero
410496e4:	50800104 	addi	r2,r10,4
410496e8:	54800017 	ldw	r18,0(r10)
410496ec:	483e6016 	blt	r9,zero,41049070 <__alt_data_end+0xfffca870>
410496f0:	00ffdfc4 	movi	r3,-129
410496f4:	d8802215 	stw	r2,136(sp)
410496f8:	a0e8703a 	and	r20,r20,r3
410496fc:	0039883a 	mov	fp,zero
41049700:	903ebb26 	beq	r18,zero,410491f0 <__alt_data_end+0xfffca9f0>
41049704:	00800244 	movi	r2,9
41049708:	14bdee36 	bltu	r2,r18,41048ec4 <__alt_data_end+0xfffca6c4>
4104970c:	003eba06 	br	410491f8 <__alt_data_end+0xfffca9f8>
41049710:	00800c04 	movi	r2,48
41049714:	d8c01d45 	stb	r3,117(sp)
41049718:	d8801d05 	stb	r2,116(sp)
4104971c:	d8001d85 	stb	zero,118(sp)
41049720:	a0c00094 	ori	r3,r20,2
41049724:	4800a916 	blt	r9,zero,410499cc <___vfiprintf_internal_r+0x1314>
41049728:	00bfdfc4 	movi	r2,-129
4104972c:	a096703a 	and	r11,r20,r2
41049730:	5d000094 	ori	r20,r11,2
41049734:	0039883a 	mov	fp,zero
41049738:	003f9706 	br	41049598 <__alt_data_end+0xfffcad98>
4104973c:	8025883a 	mov	r18,r16
41049740:	003c2e06 	br	410487fc <__alt_data_end+0xfffc9ffc>
41049744:	00904174 	movhi	r2,16645
41049748:	10bfbd04 	addi	r2,r2,-268
4104974c:	0039883a 	mov	fp,zero
41049750:	d8802615 	stw	r2,152(sp)
41049754:	003f9006 	br	41049598 <__alt_data_end+0xfffcad98>
41049758:	04a5c83a 	sub	r18,zero,r18
4104975c:	07000b44 	movi	fp,45
41049760:	9004c03a 	cmpne	r2,r18,zero
41049764:	04e7c83a 	sub	r19,zero,r19
41049768:	df001d85 	stb	fp,118(sp)
4104976c:	98a7c83a 	sub	r19,r19,r2
41049770:	48009f16 	blt	r9,zero,410499f0 <___vfiprintf_internal_r+0x1338>
41049774:	00bfdfc4 	movi	r2,-129
41049778:	a0a8703a 	and	r20,r20,r2
4104977c:	003dd006 	br	41048ec0 <__alt_data_end+0xfffca6c0>
41049780:	70004c26 	beq	r14,zero,410498b4 <___vfiprintf_internal_r+0x11fc>
41049784:	00800084 	movi	r2,2
41049788:	d8c01d04 	addi	r3,sp,116
4104978c:	d8c00015 	stw	r3,0(sp)
41049790:	d8800115 	stw	r2,4(sp)
41049794:	01000044 	movi	r4,1
41049798:	d811883a 	mov	r8,sp
4104979c:	003f7306 	br	4104956c <__alt_data_end+0xfffcad6c>
410497a0:	a080100c 	andi	r2,r20,64
410497a4:	da802217 	ldw	r10,136(sp)
410497a8:	103e0626 	beq	r2,zero,41048fc4 <__alt_data_end+0xfffca7c4>
410497ac:	5480000f 	ldh	r18,0(r10)
410497b0:	52800104 	addi	r10,r10,4
410497b4:	da802215 	stw	r10,136(sp)
410497b8:	9027d7fa 	srai	r19,r18,31
410497bc:	9805883a 	mov	r2,r19
410497c0:	003db806 	br	41048ea4 <__alt_data_end+0xfffca6a4>
410497c4:	a080040c 	andi	r2,r20,16
410497c8:	1000091e 	bne	r2,zero,410497f0 <___vfiprintf_internal_r+0x1138>
410497cc:	a2c0100c 	andi	r11,r20,64
410497d0:	58000726 	beq	r11,zero,410497f0 <___vfiprintf_internal_r+0x1138>
410497d4:	da802217 	ldw	r10,136(sp)
410497d8:	50800017 	ldw	r2,0(r10)
410497dc:	52800104 	addi	r10,r10,4
410497e0:	da802215 	stw	r10,136(sp)
410497e4:	da802317 	ldw	r10,140(sp)
410497e8:	1280000d 	sth	r10,0(r2)
410497ec:	003be706 	br	4104878c <__alt_data_end+0xfffc9f8c>
410497f0:	da802217 	ldw	r10,136(sp)
410497f4:	50800017 	ldw	r2,0(r10)
410497f8:	52800104 	addi	r10,r10,4
410497fc:	da802215 	stw	r10,136(sp)
41049800:	da802317 	ldw	r10,140(sp)
41049804:	12800015 	stw	r10,0(r2)
41049808:	003be006 	br	4104878c <__alt_data_end+0xfffc9f8c>
4104980c:	a080100c 	andi	r2,r20,64
41049810:	da802217 	ldw	r10,136(sp)
41049814:	10003026 	beq	r2,zero,410498d8 <___vfiprintf_internal_r+0x1220>
41049818:	5480000b 	ldhu	r18,0(r10)
4104981c:	52800104 	addi	r10,r10,4
41049820:	0027883a 	mov	r19,zero
41049824:	da802215 	stw	r10,136(sp)
41049828:	003d8006 	br	41048e2c <__alt_data_end+0xfffca62c>
4104982c:	80c00007 	ldb	r3,0(r16)
41049830:	003c0006 	br	41048834 <__alt_data_end+0xfffca034>
41049834:	a080100c 	andi	r2,r20,64
41049838:	d8001d85 	stb	zero,118(sp)
4104983c:	da802217 	ldw	r10,136(sp)
41049840:	1000201e 	bne	r2,zero,410498c4 <___vfiprintf_internal_r+0x120c>
41049844:	50800104 	addi	r2,r10,4
41049848:	54800017 	ldw	r18,0(r10)
4104984c:	0027883a 	mov	r19,zero
41049850:	483def0e 	bge	r9,zero,41049010 <__alt_data_end+0xfffca810>
41049854:	94c6b03a 	or	r3,r18,r19
41049858:	d8802215 	stw	r2,136(sp)
4104985c:	183d4e1e 	bne	r3,zero,41048d98 <__alt_data_end+0xfffca598>
41049860:	0039883a 	mov	fp,zero
41049864:	0005883a 	mov	r2,zero
41049868:	003e0606 	br	41049084 <__alt_data_end+0xfffca884>
4104986c:	d9402117 	ldw	r5,132(sp)
41049870:	d9002017 	ldw	r4,128(sp)
41049874:	d9801a04 	addi	r6,sp,104
41049878:	da402c15 	stw	r9,176(sp)
4104987c:	db802a15 	stw	r14,168(sp)
41049880:	10485a40 	call	410485a4 <__sprint_r.part.0>
41049884:	da402c17 	ldw	r9,176(sp)
41049888:	db802a17 	ldw	r14,168(sp)
4104988c:	103ede1e 	bne	r2,zero,41049408 <__alt_data_end+0xfffcac08>
41049890:	d9401b17 	ldw	r5,108(sp)
41049894:	d8801c17 	ldw	r2,112(sp)
41049898:	d811883a 	mov	r8,sp
4104989c:	29000044 	addi	r4,r5,1
410498a0:	003e7406 	br	41049274 <__alt_data_end+0xfffcaa74>
410498a4:	00bfffc4 	movi	r2,-1
410498a8:	003c5806 	br	41048a0c <__alt_data_end+0xfffca20c>
410498ac:	d811883a 	mov	r8,sp
410498b0:	003ee806 	br	41049454 <__alt_data_end+0xfffcac54>
410498b4:	000b883a 	mov	r5,zero
410498b8:	01000044 	movi	r4,1
410498bc:	d811883a 	mov	r8,sp
410498c0:	003e7c06 	br	410492b4 <__alt_data_end+0xfffcaab4>
410498c4:	50800104 	addi	r2,r10,4
410498c8:	5480000b 	ldhu	r18,0(r10)
410498cc:	0027883a 	mov	r19,zero
410498d0:	483dcf0e 	bge	r9,zero,41049010 <__alt_data_end+0xfffca810>
410498d4:	003fdf06 	br	41049854 <__alt_data_end+0xfffcb054>
410498d8:	54800017 	ldw	r18,0(r10)
410498dc:	52800104 	addi	r10,r10,4
410498e0:	0027883a 	mov	r19,zero
410498e4:	da802215 	stw	r10,136(sp)
410498e8:	003d5006 	br	41048e2c <__alt_data_end+0xfffca62c>
410498ec:	50800104 	addi	r2,r10,4
410498f0:	5480000b 	ldhu	r18,0(r10)
410498f4:	0027883a 	mov	r19,zero
410498f8:	483f7d0e 	bge	r9,zero,410496f0 <__alt_data_end+0xfffcaef0>
410498fc:	003ddc06 	br	41049070 <__alt_data_end+0xfffca870>
41049900:	d8c02215 	stw	r3,136(sp)
41049904:	0039883a 	mov	fp,zero
41049908:	003ddb06 	br	41049078 <__alt_data_end+0xfffca878>
4104990c:	02904174 	movhi	r10,16645
41049910:	52801e04 	addi	r10,r10,120
41049914:	da802415 	stw	r10,144(sp)
41049918:	003e8306 	br	41049328 <__alt_data_end+0xfffcab28>
4104991c:	d8801c17 	ldw	r2,112(sp)
41049920:	dd002117 	ldw	r20,132(sp)
41049924:	103eb926 	beq	r2,zero,4104940c <__alt_data_end+0xfffcac0c>
41049928:	d9002017 	ldw	r4,128(sp)
4104992c:	d9801a04 	addi	r6,sp,104
41049930:	a00b883a 	mov	r5,r20
41049934:	10485a40 	call	410485a4 <__sprint_r.part.0>
41049938:	003eb406 	br	4104940c <__alt_data_end+0xfffcac0c>
4104993c:	80c00043 	ldbu	r3,1(r16)
41049940:	a5000814 	ori	r20,r20,32
41049944:	84000044 	addi	r16,r16,1
41049948:	18c03fcc 	andi	r3,r3,255
4104994c:	18c0201c 	xori	r3,r3,128
41049950:	18ffe004 	addi	r3,r3,-128
41049954:	003bb706 	br	41048834 <__alt_data_end+0xfffca034>
41049958:	a809883a 	mov	r4,r21
4104995c:	d8c02a15 	stw	r3,168(sp)
41049960:	da002b15 	stw	r8,172(sp)
41049964:	1040fec0 	call	41040fec <strlen>
41049968:	d8c02a17 	ldw	r3,168(sp)
4104996c:	1027883a 	mov	r19,r2
41049970:	df001d83 	ldbu	fp,118(sp)
41049974:	d8c02215 	stw	r3,136(sp)
41049978:	0013883a 	mov	r9,zero
4104997c:	da002b17 	ldw	r8,172(sp)
41049980:	003c4d06 	br	41048ab8 <__alt_data_end+0xfffca2b8>
41049984:	d9402117 	ldw	r5,132(sp)
41049988:	d9002017 	ldw	r4,128(sp)
4104998c:	d9801a04 	addi	r6,sp,104
41049990:	da402c15 	stw	r9,176(sp)
41049994:	10485a40 	call	410485a4 <__sprint_r.part.0>
41049998:	da402c17 	ldw	r9,176(sp)
4104999c:	103e9a1e 	bne	r2,zero,41049408 <__alt_data_end+0xfffcac08>
410499a0:	d9401b17 	ldw	r5,108(sp)
410499a4:	d8801c17 	ldw	r2,112(sp)
410499a8:	d811883a 	mov	r8,sp
410499ac:	29000044 	addi	r4,r5,1
410499b0:	003e4206 	br	410492bc <__alt_data_end+0xfffcaabc>
410499b4:	d9401b17 	ldw	r5,108(sp)
410499b8:	01104174 	movhi	r4,16645
410499bc:	21002204 	addi	r4,r4,136
410499c0:	d9002415 	stw	r4,144(sp)
410499c4:	29400044 	addi	r5,r5,1
410499c8:	003c6d06 	br	41048b80 <__alt_data_end+0xfffca380>
410499cc:	0039883a 	mov	fp,zero
410499d0:	00800084 	movi	r2,2
410499d4:	10803fcc 	andi	r2,r2,255
410499d8:	01000044 	movi	r4,1
410499dc:	11001e26 	beq	r2,r4,41049a58 <___vfiprintf_internal_r+0x13a0>
410499e0:	01000084 	movi	r4,2
410499e4:	11001e1e 	bne	r2,r4,41049a60 <___vfiprintf_internal_r+0x13a8>
410499e8:	1829883a 	mov	r20,r3
410499ec:	003eea06 	br	41049598 <__alt_data_end+0xfffcad98>
410499f0:	a007883a 	mov	r3,r20
410499f4:	00800044 	movi	r2,1
410499f8:	003ff606 	br	410499d4 <__alt_data_end+0xfffcb1d4>
410499fc:	00800184 	movi	r2,6
41049a00:	1240012e 	bgeu	r2,r9,41049a08 <___vfiprintf_internal_r+0x1350>
41049a04:	1013883a 	mov	r9,r2
41049a08:	4827883a 	mov	r19,r9
41049a0c:	4825883a 	mov	r18,r9
41049a10:	48001516 	blt	r9,zero,41049a68 <___vfiprintf_internal_r+0x13b0>
41049a14:	05504174 	movhi	r21,16645
41049a18:	d8c02215 	stw	r3,136(sp)
41049a1c:	ad7fc204 	addi	r21,r21,-248
41049a20:	003d1406 	br	41048e74 <__alt_data_end+0xfffca674>
41049a24:	02904174 	movhi	r10,16645
41049a28:	52801e04 	addi	r10,r10,120
41049a2c:	da802415 	stw	r10,144(sp)
41049a30:	200d883a 	mov	r6,r4
41049a34:	003c9106 	br	41048c7c <__alt_data_end+0xfffca47c>
41049a38:	5021883a 	mov	r16,r10
41049a3c:	0013883a 	mov	r9,zero
41049a40:	003b7d06 	br	41048838 <__alt_data_end+0xfffca038>
41049a44:	4827883a 	mov	r19,r9
41049a48:	df001d83 	ldbu	fp,118(sp)
41049a4c:	d8c02215 	stw	r3,136(sp)
41049a50:	0013883a 	mov	r9,zero
41049a54:	003c1806 	br	41048ab8 <__alt_data_end+0xfffca2b8>
41049a58:	1829883a 	mov	r20,r3
41049a5c:	003d1806 	br	41048ec0 <__alt_data_end+0xfffca6c0>
41049a60:	1829883a 	mov	r20,r3
41049a64:	003ccd06 	br	41048d9c <__alt_data_end+0xfffca59c>
41049a68:	0025883a 	mov	r18,zero
41049a6c:	003fe906 	br	41049a14 <__alt_data_end+0xfffcb214>
41049a70:	d8802217 	ldw	r2,136(sp)
41049a74:	80c00043 	ldbu	r3,1(r16)
41049a78:	5021883a 	mov	r16,r10
41049a7c:	12400017 	ldw	r9,0(r2)
41049a80:	10800104 	addi	r2,r2,4
41049a84:	d8802215 	stw	r2,136(sp)
41049a88:	483faf0e 	bge	r9,zero,41049948 <__alt_data_end+0xfffcb148>
41049a8c:	18c03fcc 	andi	r3,r3,255
41049a90:	18c0201c 	xori	r3,r3,128
41049a94:	027fffc4 	movi	r9,-1
41049a98:	18ffe004 	addi	r3,r3,-128
41049a9c:	003b6506 	br	41048834 <__alt_data_end+0xfffca034>
41049aa0:	d9c01d85 	stb	r7,118(sp)
41049aa4:	003ca006 	br	41048d28 <__alt_data_end+0xfffca528>
41049aa8:	d9c01d85 	stb	r7,118(sp)
41049aac:	003cad06 	br	41048d64 <__alt_data_end+0xfffca564>
41049ab0:	d9c01d85 	stb	r7,118(sp)
41049ab4:	003d7d06 	br	410490ac <__alt_data_end+0xfffca8ac>
41049ab8:	d9c01d85 	stb	r7,118(sp)
41049abc:	003d5f06 	br	4104903c <__alt_data_end+0xfffca83c>
41049ac0:	a080004c 	andi	r2,r20,1
41049ac4:	0039883a 	mov	fp,zero
41049ac8:	10000526 	beq	r2,zero,41049ae0 <___vfiprintf_internal_r+0x1428>
41049acc:	00800c04 	movi	r2,48
41049ad0:	d88019c5 	stb	r2,103(sp)
41049ad4:	dcc02717 	ldw	r19,156(sp)
41049ad8:	dd4019c4 	addi	r21,sp,103
41049adc:	003bf606 	br	41048ab8 <__alt_data_end+0xfffca2b8>
41049ae0:	0027883a 	mov	r19,zero
41049ae4:	dd401a04 	addi	r21,sp,104
41049ae8:	003bf306 	br	41048ab8 <__alt_data_end+0xfffca2b8>
41049aec:	d9c01d85 	stb	r7,118(sp)
41049af0:	003dc806 	br	41049214 <__alt_data_end+0xfffcaa14>
41049af4:	d9c01d85 	stb	r7,118(sp)
41049af8:	003d3a06 	br	41048fe4 <__alt_data_end+0xfffca7e4>
41049afc:	d9c01d85 	stb	r7,118(sp)
41049b00:	003d2a06 	br	41048fac <__alt_data_end+0xfffca7ac>
41049b04:	d9c01d85 	stb	r7,118(sp)
41049b08:	003cde06 	br	41048e84 <__alt_data_end+0xfffca684>
41049b0c:	d9c01d85 	stb	r7,118(sp)
41049b10:	003cbc06 	br	41048e04 <__alt_data_end+0xfffca604>

41049b14 <__vfiprintf_internal>:
41049b14:	00904174 	movhi	r2,16645
41049b18:	10871d04 	addi	r2,r2,7284
41049b1c:	300f883a 	mov	r7,r6
41049b20:	280d883a 	mov	r6,r5
41049b24:	200b883a 	mov	r5,r4
41049b28:	11000017 	ldw	r4,0(r2)
41049b2c:	10486b81 	jmpi	410486b8 <___vfiprintf_internal_r>

41049b30 <__sbprintf>:
41049b30:	2880030b 	ldhu	r2,12(r5)
41049b34:	2ac01917 	ldw	r11,100(r5)
41049b38:	2a80038b 	ldhu	r10,14(r5)
41049b3c:	2a400717 	ldw	r9,28(r5)
41049b40:	2a000917 	ldw	r8,36(r5)
41049b44:	defee204 	addi	sp,sp,-1144
41049b48:	00c10004 	movi	r3,1024
41049b4c:	dc011a15 	stw	r16,1128(sp)
41049b50:	10bfff4c 	andi	r2,r2,65533
41049b54:	2821883a 	mov	r16,r5
41049b58:	d8cb883a 	add	r5,sp,r3
41049b5c:	dc811c15 	stw	r18,1136(sp)
41049b60:	dc411b15 	stw	r17,1132(sp)
41049b64:	dfc11d15 	stw	ra,1140(sp)
41049b68:	2025883a 	mov	r18,r4
41049b6c:	d881030d 	sth	r2,1036(sp)
41049b70:	dac11915 	stw	r11,1124(sp)
41049b74:	da81038d 	sth	r10,1038(sp)
41049b78:	da410715 	stw	r9,1052(sp)
41049b7c:	da010915 	stw	r8,1060(sp)
41049b80:	dec10015 	stw	sp,1024(sp)
41049b84:	dec10415 	stw	sp,1040(sp)
41049b88:	d8c10215 	stw	r3,1032(sp)
41049b8c:	d8c10515 	stw	r3,1044(sp)
41049b90:	d8010615 	stw	zero,1048(sp)
41049b94:	10486b80 	call	410486b8 <___vfiprintf_internal_r>
41049b98:	1023883a 	mov	r17,r2
41049b9c:	10000416 	blt	r2,zero,41049bb0 <__sbprintf+0x80>
41049ba0:	d9410004 	addi	r5,sp,1024
41049ba4:	9009883a 	mov	r4,r18
41049ba8:	1044f4c0 	call	41044f4c <_fflush_r>
41049bac:	10000d1e 	bne	r2,zero,41049be4 <__sbprintf+0xb4>
41049bb0:	d881030b 	ldhu	r2,1036(sp)
41049bb4:	1080100c 	andi	r2,r2,64
41049bb8:	10000326 	beq	r2,zero,41049bc8 <__sbprintf+0x98>
41049bbc:	8080030b 	ldhu	r2,12(r16)
41049bc0:	10801014 	ori	r2,r2,64
41049bc4:	8080030d 	sth	r2,12(r16)
41049bc8:	8805883a 	mov	r2,r17
41049bcc:	dfc11d17 	ldw	ra,1140(sp)
41049bd0:	dc811c17 	ldw	r18,1136(sp)
41049bd4:	dc411b17 	ldw	r17,1132(sp)
41049bd8:	dc011a17 	ldw	r16,1128(sp)
41049bdc:	dec11e04 	addi	sp,sp,1144
41049be0:	f800283a 	ret
41049be4:	047fffc4 	movi	r17,-1
41049be8:	003ff106 	br	41049bb0 <__alt_data_end+0xfffcb3b0>

41049bec <__swbuf_r>:
41049bec:	defffb04 	addi	sp,sp,-20
41049bf0:	dcc00315 	stw	r19,12(sp)
41049bf4:	dc800215 	stw	r18,8(sp)
41049bf8:	dc000015 	stw	r16,0(sp)
41049bfc:	dfc00415 	stw	ra,16(sp)
41049c00:	dc400115 	stw	r17,4(sp)
41049c04:	2025883a 	mov	r18,r4
41049c08:	2827883a 	mov	r19,r5
41049c0c:	3021883a 	mov	r16,r6
41049c10:	20000226 	beq	r4,zero,41049c1c <__swbuf_r+0x30>
41049c14:	20800e17 	ldw	r2,56(r4)
41049c18:	10004226 	beq	r2,zero,41049d24 <__swbuf_r+0x138>
41049c1c:	80800617 	ldw	r2,24(r16)
41049c20:	8100030b 	ldhu	r4,12(r16)
41049c24:	80800215 	stw	r2,8(r16)
41049c28:	2080020c 	andi	r2,r4,8
41049c2c:	10003626 	beq	r2,zero,41049d08 <__swbuf_r+0x11c>
41049c30:	80c00417 	ldw	r3,16(r16)
41049c34:	18003426 	beq	r3,zero,41049d08 <__swbuf_r+0x11c>
41049c38:	2088000c 	andi	r2,r4,8192
41049c3c:	9c403fcc 	andi	r17,r19,255
41049c40:	10001a26 	beq	r2,zero,41049cac <__swbuf_r+0xc0>
41049c44:	80800017 	ldw	r2,0(r16)
41049c48:	81000517 	ldw	r4,20(r16)
41049c4c:	10c7c83a 	sub	r3,r2,r3
41049c50:	1900200e 	bge	r3,r4,41049cd4 <__swbuf_r+0xe8>
41049c54:	18c00044 	addi	r3,r3,1
41049c58:	81000217 	ldw	r4,8(r16)
41049c5c:	11400044 	addi	r5,r2,1
41049c60:	81400015 	stw	r5,0(r16)
41049c64:	213fffc4 	addi	r4,r4,-1
41049c68:	81000215 	stw	r4,8(r16)
41049c6c:	14c00005 	stb	r19,0(r2)
41049c70:	80800517 	ldw	r2,20(r16)
41049c74:	10c01e26 	beq	r2,r3,41049cf0 <__swbuf_r+0x104>
41049c78:	8080030b 	ldhu	r2,12(r16)
41049c7c:	1080004c 	andi	r2,r2,1
41049c80:	10000226 	beq	r2,zero,41049c8c <__swbuf_r+0xa0>
41049c84:	00800284 	movi	r2,10
41049c88:	88801926 	beq	r17,r2,41049cf0 <__swbuf_r+0x104>
41049c8c:	8805883a 	mov	r2,r17
41049c90:	dfc00417 	ldw	ra,16(sp)
41049c94:	dcc00317 	ldw	r19,12(sp)
41049c98:	dc800217 	ldw	r18,8(sp)
41049c9c:	dc400117 	ldw	r17,4(sp)
41049ca0:	dc000017 	ldw	r16,0(sp)
41049ca4:	dec00504 	addi	sp,sp,20
41049ca8:	f800283a 	ret
41049cac:	81401917 	ldw	r5,100(r16)
41049cb0:	00b7ffc4 	movi	r2,-8193
41049cb4:	21080014 	ori	r4,r4,8192
41049cb8:	2884703a 	and	r2,r5,r2
41049cbc:	80801915 	stw	r2,100(r16)
41049cc0:	80800017 	ldw	r2,0(r16)
41049cc4:	8100030d 	sth	r4,12(r16)
41049cc8:	81000517 	ldw	r4,20(r16)
41049ccc:	10c7c83a 	sub	r3,r2,r3
41049cd0:	193fe016 	blt	r3,r4,41049c54 <__alt_data_end+0xfffcb454>
41049cd4:	800b883a 	mov	r5,r16
41049cd8:	9009883a 	mov	r4,r18
41049cdc:	1044f4c0 	call	41044f4c <_fflush_r>
41049ce0:	1000071e 	bne	r2,zero,41049d00 <__swbuf_r+0x114>
41049ce4:	80800017 	ldw	r2,0(r16)
41049ce8:	00c00044 	movi	r3,1
41049cec:	003fda06 	br	41049c58 <__alt_data_end+0xfffcb458>
41049cf0:	800b883a 	mov	r5,r16
41049cf4:	9009883a 	mov	r4,r18
41049cf8:	1044f4c0 	call	41044f4c <_fflush_r>
41049cfc:	103fe326 	beq	r2,zero,41049c8c <__alt_data_end+0xfffcb48c>
41049d00:	00bfffc4 	movi	r2,-1
41049d04:	003fe206 	br	41049c90 <__alt_data_end+0xfffcb490>
41049d08:	800b883a 	mov	r5,r16
41049d0c:	9009883a 	mov	r4,r18
41049d10:	10433540 	call	41043354 <__swsetup_r>
41049d14:	103ffa1e 	bne	r2,zero,41049d00 <__alt_data_end+0xfffcb500>
41049d18:	8100030b 	ldhu	r4,12(r16)
41049d1c:	80c00417 	ldw	r3,16(r16)
41049d20:	003fc506 	br	41049c38 <__alt_data_end+0xfffcb438>
41049d24:	10453280 	call	41045328 <__sinit>
41049d28:	003fbc06 	br	41049c1c <__alt_data_end+0xfffcb41c>

41049d2c <__swbuf>:
41049d2c:	00904174 	movhi	r2,16645
41049d30:	10871d04 	addi	r2,r2,7284
41049d34:	280d883a 	mov	r6,r5
41049d38:	200b883a 	mov	r5,r4
41049d3c:	11000017 	ldw	r4,0(r2)
41049d40:	1049bec1 	jmpi	41049bec <__swbuf_r>

41049d44 <_write_r>:
41049d44:	defffd04 	addi	sp,sp,-12
41049d48:	2805883a 	mov	r2,r5
41049d4c:	dc000015 	stw	r16,0(sp)
41049d50:	04104174 	movhi	r16,16645
41049d54:	dc400115 	stw	r17,4(sp)
41049d58:	300b883a 	mov	r5,r6
41049d5c:	840ded04 	addi	r16,r16,14260
41049d60:	2023883a 	mov	r17,r4
41049d64:	380d883a 	mov	r6,r7
41049d68:	1009883a 	mov	r4,r2
41049d6c:	dfc00215 	stw	ra,8(sp)
41049d70:	80000015 	stw	zero,0(r16)
41049d74:	104e0700 	call	4104e070 <write>
41049d78:	00ffffc4 	movi	r3,-1
41049d7c:	10c00526 	beq	r2,r3,41049d94 <_write_r+0x50>
41049d80:	dfc00217 	ldw	ra,8(sp)
41049d84:	dc400117 	ldw	r17,4(sp)
41049d88:	dc000017 	ldw	r16,0(sp)
41049d8c:	dec00304 	addi	sp,sp,12
41049d90:	f800283a 	ret
41049d94:	80c00017 	ldw	r3,0(r16)
41049d98:	183ff926 	beq	r3,zero,41049d80 <__alt_data_end+0xfffcb580>
41049d9c:	88c00015 	stw	r3,0(r17)
41049da0:	003ff706 	br	41049d80 <__alt_data_end+0xfffcb580>

41049da4 <_close_r>:
41049da4:	defffd04 	addi	sp,sp,-12
41049da8:	dc000015 	stw	r16,0(sp)
41049dac:	04104174 	movhi	r16,16645
41049db0:	dc400115 	stw	r17,4(sp)
41049db4:	840ded04 	addi	r16,r16,14260
41049db8:	2023883a 	mov	r17,r4
41049dbc:	2809883a 	mov	r4,r5
41049dc0:	dfc00215 	stw	ra,8(sp)
41049dc4:	80000015 	stw	zero,0(r16)
41049dc8:	104d6740 	call	4104d674 <close>
41049dcc:	00ffffc4 	movi	r3,-1
41049dd0:	10c00526 	beq	r2,r3,41049de8 <_close_r+0x44>
41049dd4:	dfc00217 	ldw	ra,8(sp)
41049dd8:	dc400117 	ldw	r17,4(sp)
41049ddc:	dc000017 	ldw	r16,0(sp)
41049de0:	dec00304 	addi	sp,sp,12
41049de4:	f800283a 	ret
41049de8:	80c00017 	ldw	r3,0(r16)
41049dec:	183ff926 	beq	r3,zero,41049dd4 <__alt_data_end+0xfffcb5d4>
41049df0:	88c00015 	stw	r3,0(r17)
41049df4:	003ff706 	br	41049dd4 <__alt_data_end+0xfffcb5d4>

41049df8 <_calloc_r>:
41049df8:	298b383a 	mul	r5,r5,r6
41049dfc:	defffe04 	addi	sp,sp,-8
41049e00:	dfc00115 	stw	ra,4(sp)
41049e04:	dc000015 	stw	r16,0(sp)
41049e08:	10460880 	call	41046088 <_malloc_r>
41049e0c:	10002926 	beq	r2,zero,41049eb4 <_calloc_r+0xbc>
41049e10:	11bfff17 	ldw	r6,-4(r2)
41049e14:	1021883a 	mov	r16,r2
41049e18:	00bfff04 	movi	r2,-4
41049e1c:	308c703a 	and	r6,r6,r2
41049e20:	00c00904 	movi	r3,36
41049e24:	308d883a 	add	r6,r6,r2
41049e28:	19801636 	bltu	r3,r6,41049e84 <_calloc_r+0x8c>
41049e2c:	008004c4 	movi	r2,19
41049e30:	11800b2e 	bgeu	r2,r6,41049e60 <_calloc_r+0x68>
41049e34:	80000015 	stw	zero,0(r16)
41049e38:	80000115 	stw	zero,4(r16)
41049e3c:	008006c4 	movi	r2,27
41049e40:	11801a2e 	bgeu	r2,r6,41049eac <_calloc_r+0xb4>
41049e44:	80000215 	stw	zero,8(r16)
41049e48:	80000315 	stw	zero,12(r16)
41049e4c:	30c0151e 	bne	r6,r3,41049ea4 <_calloc_r+0xac>
41049e50:	80000415 	stw	zero,16(r16)
41049e54:	80800604 	addi	r2,r16,24
41049e58:	80000515 	stw	zero,20(r16)
41049e5c:	00000106 	br	41049e64 <_calloc_r+0x6c>
41049e60:	8005883a 	mov	r2,r16
41049e64:	10000015 	stw	zero,0(r2)
41049e68:	10000115 	stw	zero,4(r2)
41049e6c:	10000215 	stw	zero,8(r2)
41049e70:	8005883a 	mov	r2,r16
41049e74:	dfc00117 	ldw	ra,4(sp)
41049e78:	dc000017 	ldw	r16,0(sp)
41049e7c:	dec00204 	addi	sp,sp,8
41049e80:	f800283a 	ret
41049e84:	000b883a 	mov	r5,zero
41049e88:	8009883a 	mov	r4,r16
41049e8c:	1046ad40 	call	41046ad4 <memset>
41049e90:	8005883a 	mov	r2,r16
41049e94:	dfc00117 	ldw	ra,4(sp)
41049e98:	dc000017 	ldw	r16,0(sp)
41049e9c:	dec00204 	addi	sp,sp,8
41049ea0:	f800283a 	ret
41049ea4:	80800404 	addi	r2,r16,16
41049ea8:	003fee06 	br	41049e64 <__alt_data_end+0xfffcb664>
41049eac:	80800204 	addi	r2,r16,8
41049eb0:	003fec06 	br	41049e64 <__alt_data_end+0xfffcb664>
41049eb4:	0005883a 	mov	r2,zero
41049eb8:	003fee06 	br	41049e74 <__alt_data_end+0xfffcb674>

41049ebc <_fclose_r>:
41049ebc:	28003926 	beq	r5,zero,41049fa4 <_fclose_r+0xe8>
41049ec0:	defffc04 	addi	sp,sp,-16
41049ec4:	dc400115 	stw	r17,4(sp)
41049ec8:	dc000015 	stw	r16,0(sp)
41049ecc:	dfc00315 	stw	ra,12(sp)
41049ed0:	dc800215 	stw	r18,8(sp)
41049ed4:	2023883a 	mov	r17,r4
41049ed8:	2821883a 	mov	r16,r5
41049edc:	20000226 	beq	r4,zero,41049ee8 <_fclose_r+0x2c>
41049ee0:	20800e17 	ldw	r2,56(r4)
41049ee4:	10002726 	beq	r2,zero,41049f84 <_fclose_r+0xc8>
41049ee8:	8080030f 	ldh	r2,12(r16)
41049eec:	1000071e 	bne	r2,zero,41049f0c <_fclose_r+0x50>
41049ef0:	0005883a 	mov	r2,zero
41049ef4:	dfc00317 	ldw	ra,12(sp)
41049ef8:	dc800217 	ldw	r18,8(sp)
41049efc:	dc400117 	ldw	r17,4(sp)
41049f00:	dc000017 	ldw	r16,0(sp)
41049f04:	dec00404 	addi	sp,sp,16
41049f08:	f800283a 	ret
41049f0c:	800b883a 	mov	r5,r16
41049f10:	8809883a 	mov	r4,r17
41049f14:	1044d300 	call	41044d30 <__sflush_r>
41049f18:	1025883a 	mov	r18,r2
41049f1c:	80800b17 	ldw	r2,44(r16)
41049f20:	10000426 	beq	r2,zero,41049f34 <_fclose_r+0x78>
41049f24:	81400717 	ldw	r5,28(r16)
41049f28:	8809883a 	mov	r4,r17
41049f2c:	103ee83a 	callr	r2
41049f30:	10001616 	blt	r2,zero,41049f8c <_fclose_r+0xd0>
41049f34:	8080030b 	ldhu	r2,12(r16)
41049f38:	1080200c 	andi	r2,r2,128
41049f3c:	1000151e 	bne	r2,zero,41049f94 <_fclose_r+0xd8>
41049f40:	81400c17 	ldw	r5,48(r16)
41049f44:	28000526 	beq	r5,zero,41049f5c <_fclose_r+0xa0>
41049f48:	80801004 	addi	r2,r16,64
41049f4c:	28800226 	beq	r5,r2,41049f58 <_fclose_r+0x9c>
41049f50:	8809883a 	mov	r4,r17
41049f54:	104549c0 	call	4104549c <_free_r>
41049f58:	80000c15 	stw	zero,48(r16)
41049f5c:	81401117 	ldw	r5,68(r16)
41049f60:	28000326 	beq	r5,zero,41049f70 <_fclose_r+0xb4>
41049f64:	8809883a 	mov	r4,r17
41049f68:	104549c0 	call	4104549c <_free_r>
41049f6c:	80001115 	stw	zero,68(r16)
41049f70:	10453380 	call	41045338 <__sfp_lock_acquire>
41049f74:	8000030d 	sth	zero,12(r16)
41049f78:	104533c0 	call	4104533c <__sfp_lock_release>
41049f7c:	9005883a 	mov	r2,r18
41049f80:	003fdc06 	br	41049ef4 <__alt_data_end+0xfffcb6f4>
41049f84:	10453280 	call	41045328 <__sinit>
41049f88:	003fd706 	br	41049ee8 <__alt_data_end+0xfffcb6e8>
41049f8c:	04bfffc4 	movi	r18,-1
41049f90:	003fe806 	br	41049f34 <__alt_data_end+0xfffcb734>
41049f94:	81400417 	ldw	r5,16(r16)
41049f98:	8809883a 	mov	r4,r17
41049f9c:	104549c0 	call	4104549c <_free_r>
41049fa0:	003fe706 	br	41049f40 <__alt_data_end+0xfffcb740>
41049fa4:	0005883a 	mov	r2,zero
41049fa8:	f800283a 	ret

41049fac <fclose>:
41049fac:	00904174 	movhi	r2,16645
41049fb0:	10871d04 	addi	r2,r2,7284
41049fb4:	200b883a 	mov	r5,r4
41049fb8:	11000017 	ldw	r4,0(r2)
41049fbc:	1049ebc1 	jmpi	41049ebc <_fclose_r>

41049fc0 <__fputwc>:
41049fc0:	defff804 	addi	sp,sp,-32
41049fc4:	dcc00415 	stw	r19,16(sp)
41049fc8:	dc800315 	stw	r18,12(sp)
41049fcc:	dc000115 	stw	r16,4(sp)
41049fd0:	dfc00715 	stw	ra,28(sp)
41049fd4:	dd400615 	stw	r21,24(sp)
41049fd8:	dd000515 	stw	r20,20(sp)
41049fdc:	dc400215 	stw	r17,8(sp)
41049fe0:	2027883a 	mov	r19,r4
41049fe4:	2825883a 	mov	r18,r5
41049fe8:	3021883a 	mov	r16,r6
41049fec:	1045e780 	call	41045e78 <__locale_mb_cur_max>
41049ff0:	00c00044 	movi	r3,1
41049ff4:	10c03e26 	beq	r2,r3,4104a0f0 <__fputwc+0x130>
41049ff8:	81c01704 	addi	r7,r16,92
41049ffc:	900d883a 	mov	r6,r18
4104a000:	d80b883a 	mov	r5,sp
4104a004:	9809883a 	mov	r4,r19
4104a008:	104a3380 	call	4104a338 <_wcrtomb_r>
4104a00c:	1029883a 	mov	r20,r2
4104a010:	00bfffc4 	movi	r2,-1
4104a014:	a0802026 	beq	r20,r2,4104a098 <__fputwc+0xd8>
4104a018:	d9400003 	ldbu	r5,0(sp)
4104a01c:	a0001c26 	beq	r20,zero,4104a090 <__fputwc+0xd0>
4104a020:	0023883a 	mov	r17,zero
4104a024:	05400284 	movi	r21,10
4104a028:	00000906 	br	4104a050 <__fputwc+0x90>
4104a02c:	80800017 	ldw	r2,0(r16)
4104a030:	11400005 	stb	r5,0(r2)
4104a034:	80c00017 	ldw	r3,0(r16)
4104a038:	18c00044 	addi	r3,r3,1
4104a03c:	80c00015 	stw	r3,0(r16)
4104a040:	8c400044 	addi	r17,r17,1
4104a044:	dc45883a 	add	r2,sp,r17
4104a048:	8d00112e 	bgeu	r17,r20,4104a090 <__fputwc+0xd0>
4104a04c:	11400003 	ldbu	r5,0(r2)
4104a050:	80c00217 	ldw	r3,8(r16)
4104a054:	18ffffc4 	addi	r3,r3,-1
4104a058:	80c00215 	stw	r3,8(r16)
4104a05c:	183ff30e 	bge	r3,zero,4104a02c <__alt_data_end+0xfffcb82c>
4104a060:	80800617 	ldw	r2,24(r16)
4104a064:	18801916 	blt	r3,r2,4104a0cc <__fputwc+0x10c>
4104a068:	80800017 	ldw	r2,0(r16)
4104a06c:	11400005 	stb	r5,0(r2)
4104a070:	80800017 	ldw	r2,0(r16)
4104a074:	10c00003 	ldbu	r3,0(r2)
4104a078:	10800044 	addi	r2,r2,1
4104a07c:	1d402326 	beq	r3,r21,4104a10c <__fputwc+0x14c>
4104a080:	80800015 	stw	r2,0(r16)
4104a084:	8c400044 	addi	r17,r17,1
4104a088:	dc45883a 	add	r2,sp,r17
4104a08c:	8d3fef36 	bltu	r17,r20,4104a04c <__alt_data_end+0xfffcb84c>
4104a090:	9005883a 	mov	r2,r18
4104a094:	00000406 	br	4104a0a8 <__fputwc+0xe8>
4104a098:	80c0030b 	ldhu	r3,12(r16)
4104a09c:	a005883a 	mov	r2,r20
4104a0a0:	18c01014 	ori	r3,r3,64
4104a0a4:	80c0030d 	sth	r3,12(r16)
4104a0a8:	dfc00717 	ldw	ra,28(sp)
4104a0ac:	dd400617 	ldw	r21,24(sp)
4104a0b0:	dd000517 	ldw	r20,20(sp)
4104a0b4:	dcc00417 	ldw	r19,16(sp)
4104a0b8:	dc800317 	ldw	r18,12(sp)
4104a0bc:	dc400217 	ldw	r17,8(sp)
4104a0c0:	dc000117 	ldw	r16,4(sp)
4104a0c4:	dec00804 	addi	sp,sp,32
4104a0c8:	f800283a 	ret
4104a0cc:	800d883a 	mov	r6,r16
4104a0d0:	29403fcc 	andi	r5,r5,255
4104a0d4:	9809883a 	mov	r4,r19
4104a0d8:	1049bec0 	call	41049bec <__swbuf_r>
4104a0dc:	10bfffe0 	cmpeqi	r2,r2,-1
4104a0e0:	10803fcc 	andi	r2,r2,255
4104a0e4:	103fd626 	beq	r2,zero,4104a040 <__alt_data_end+0xfffcb840>
4104a0e8:	00bfffc4 	movi	r2,-1
4104a0ec:	003fee06 	br	4104a0a8 <__alt_data_end+0xfffcb8a8>
4104a0f0:	90ffffc4 	addi	r3,r18,-1
4104a0f4:	01003f84 	movi	r4,254
4104a0f8:	20ffbf36 	bltu	r4,r3,41049ff8 <__alt_data_end+0xfffcb7f8>
4104a0fc:	900b883a 	mov	r5,r18
4104a100:	dc800005 	stb	r18,0(sp)
4104a104:	1029883a 	mov	r20,r2
4104a108:	003fc506 	br	4104a020 <__alt_data_end+0xfffcb820>
4104a10c:	800d883a 	mov	r6,r16
4104a110:	a80b883a 	mov	r5,r21
4104a114:	9809883a 	mov	r4,r19
4104a118:	1049bec0 	call	41049bec <__swbuf_r>
4104a11c:	10bfffe0 	cmpeqi	r2,r2,-1
4104a120:	003fef06 	br	4104a0e0 <__alt_data_end+0xfffcb8e0>

4104a124 <_fputwc_r>:
4104a124:	3080030b 	ldhu	r2,12(r6)
4104a128:	10c8000c 	andi	r3,r2,8192
4104a12c:	1800051e 	bne	r3,zero,4104a144 <_fputwc_r+0x20>
4104a130:	30c01917 	ldw	r3,100(r6)
4104a134:	10880014 	ori	r2,r2,8192
4104a138:	3080030d 	sth	r2,12(r6)
4104a13c:	18880014 	ori	r2,r3,8192
4104a140:	30801915 	stw	r2,100(r6)
4104a144:	1049fc01 	jmpi	41049fc0 <__fputwc>

4104a148 <fputwc>:
4104a148:	00904174 	movhi	r2,16645
4104a14c:	defffc04 	addi	sp,sp,-16
4104a150:	10871d04 	addi	r2,r2,7284
4104a154:	dc000115 	stw	r16,4(sp)
4104a158:	14000017 	ldw	r16,0(r2)
4104a15c:	dc400215 	stw	r17,8(sp)
4104a160:	dfc00315 	stw	ra,12(sp)
4104a164:	2023883a 	mov	r17,r4
4104a168:	80000226 	beq	r16,zero,4104a174 <fputwc+0x2c>
4104a16c:	80800e17 	ldw	r2,56(r16)
4104a170:	10001026 	beq	r2,zero,4104a1b4 <fputwc+0x6c>
4104a174:	2880030b 	ldhu	r2,12(r5)
4104a178:	10c8000c 	andi	r3,r2,8192
4104a17c:	1800051e 	bne	r3,zero,4104a194 <fputwc+0x4c>
4104a180:	28c01917 	ldw	r3,100(r5)
4104a184:	10880014 	ori	r2,r2,8192
4104a188:	2880030d 	sth	r2,12(r5)
4104a18c:	18880014 	ori	r2,r3,8192
4104a190:	28801915 	stw	r2,100(r5)
4104a194:	280d883a 	mov	r6,r5
4104a198:	8009883a 	mov	r4,r16
4104a19c:	880b883a 	mov	r5,r17
4104a1a0:	dfc00317 	ldw	ra,12(sp)
4104a1a4:	dc400217 	ldw	r17,8(sp)
4104a1a8:	dc000117 	ldw	r16,4(sp)
4104a1ac:	dec00404 	addi	sp,sp,16
4104a1b0:	1049fc01 	jmpi	41049fc0 <__fputwc>
4104a1b4:	8009883a 	mov	r4,r16
4104a1b8:	d9400015 	stw	r5,0(sp)
4104a1bc:	10453280 	call	41045328 <__sinit>
4104a1c0:	d9400017 	ldw	r5,0(sp)
4104a1c4:	003feb06 	br	4104a174 <__alt_data_end+0xfffcb974>

4104a1c8 <_fstat_r>:
4104a1c8:	defffd04 	addi	sp,sp,-12
4104a1cc:	2805883a 	mov	r2,r5
4104a1d0:	dc000015 	stw	r16,0(sp)
4104a1d4:	04104174 	movhi	r16,16645
4104a1d8:	dc400115 	stw	r17,4(sp)
4104a1dc:	840ded04 	addi	r16,r16,14260
4104a1e0:	2023883a 	mov	r17,r4
4104a1e4:	300b883a 	mov	r5,r6
4104a1e8:	1009883a 	mov	r4,r2
4104a1ec:	dfc00215 	stw	ra,8(sp)
4104a1f0:	80000015 	stw	zero,0(r16)
4104a1f4:	104d7f40 	call	4104d7f4 <fstat>
4104a1f8:	00ffffc4 	movi	r3,-1
4104a1fc:	10c00526 	beq	r2,r3,4104a214 <_fstat_r+0x4c>
4104a200:	dfc00217 	ldw	ra,8(sp)
4104a204:	dc400117 	ldw	r17,4(sp)
4104a208:	dc000017 	ldw	r16,0(sp)
4104a20c:	dec00304 	addi	sp,sp,12
4104a210:	f800283a 	ret
4104a214:	80c00017 	ldw	r3,0(r16)
4104a218:	183ff926 	beq	r3,zero,4104a200 <__alt_data_end+0xfffcba00>
4104a21c:	88c00015 	stw	r3,0(r17)
4104a220:	003ff706 	br	4104a200 <__alt_data_end+0xfffcba00>

4104a224 <_isatty_r>:
4104a224:	defffd04 	addi	sp,sp,-12
4104a228:	dc000015 	stw	r16,0(sp)
4104a22c:	04104174 	movhi	r16,16645
4104a230:	dc400115 	stw	r17,4(sp)
4104a234:	840ded04 	addi	r16,r16,14260
4104a238:	2023883a 	mov	r17,r4
4104a23c:	2809883a 	mov	r4,r5
4104a240:	dfc00215 	stw	ra,8(sp)
4104a244:	80000015 	stw	zero,0(r16)
4104a248:	104d8e00 	call	4104d8e0 <isatty>
4104a24c:	00ffffc4 	movi	r3,-1
4104a250:	10c00526 	beq	r2,r3,4104a268 <_isatty_r+0x44>
4104a254:	dfc00217 	ldw	ra,8(sp)
4104a258:	dc400117 	ldw	r17,4(sp)
4104a25c:	dc000017 	ldw	r16,0(sp)
4104a260:	dec00304 	addi	sp,sp,12
4104a264:	f800283a 	ret
4104a268:	80c00017 	ldw	r3,0(r16)
4104a26c:	183ff926 	beq	r3,zero,4104a254 <__alt_data_end+0xfffcba54>
4104a270:	88c00015 	stw	r3,0(r17)
4104a274:	003ff706 	br	4104a254 <__alt_data_end+0xfffcba54>

4104a278 <_lseek_r>:
4104a278:	defffd04 	addi	sp,sp,-12
4104a27c:	2805883a 	mov	r2,r5
4104a280:	dc000015 	stw	r16,0(sp)
4104a284:	04104174 	movhi	r16,16645
4104a288:	dc400115 	stw	r17,4(sp)
4104a28c:	300b883a 	mov	r5,r6
4104a290:	840ded04 	addi	r16,r16,14260
4104a294:	2023883a 	mov	r17,r4
4104a298:	380d883a 	mov	r6,r7
4104a29c:	1009883a 	mov	r4,r2
4104a2a0:	dfc00215 	stw	ra,8(sp)
4104a2a4:	80000015 	stw	zero,0(r16)
4104a2a8:	104daac0 	call	4104daac <lseek>
4104a2ac:	00ffffc4 	movi	r3,-1
4104a2b0:	10c00526 	beq	r2,r3,4104a2c8 <_lseek_r+0x50>
4104a2b4:	dfc00217 	ldw	ra,8(sp)
4104a2b8:	dc400117 	ldw	r17,4(sp)
4104a2bc:	dc000017 	ldw	r16,0(sp)
4104a2c0:	dec00304 	addi	sp,sp,12
4104a2c4:	f800283a 	ret
4104a2c8:	80c00017 	ldw	r3,0(r16)
4104a2cc:	183ff926 	beq	r3,zero,4104a2b4 <__alt_data_end+0xfffcbab4>
4104a2d0:	88c00015 	stw	r3,0(r17)
4104a2d4:	003ff706 	br	4104a2b4 <__alt_data_end+0xfffcbab4>

4104a2d8 <_read_r>:
4104a2d8:	defffd04 	addi	sp,sp,-12
4104a2dc:	2805883a 	mov	r2,r5
4104a2e0:	dc000015 	stw	r16,0(sp)
4104a2e4:	04104174 	movhi	r16,16645
4104a2e8:	dc400115 	stw	r17,4(sp)
4104a2ec:	300b883a 	mov	r5,r6
4104a2f0:	840ded04 	addi	r16,r16,14260
4104a2f4:	2023883a 	mov	r17,r4
4104a2f8:	380d883a 	mov	r6,r7
4104a2fc:	1009883a 	mov	r4,r2
4104a300:	dfc00215 	stw	ra,8(sp)
4104a304:	80000015 	stw	zero,0(r16)
4104a308:	104dc800 	call	4104dc80 <read>
4104a30c:	00ffffc4 	movi	r3,-1
4104a310:	10c00526 	beq	r2,r3,4104a328 <_read_r+0x50>
4104a314:	dfc00217 	ldw	ra,8(sp)
4104a318:	dc400117 	ldw	r17,4(sp)
4104a31c:	dc000017 	ldw	r16,0(sp)
4104a320:	dec00304 	addi	sp,sp,12
4104a324:	f800283a 	ret
4104a328:	80c00017 	ldw	r3,0(r16)
4104a32c:	183ff926 	beq	r3,zero,4104a314 <__alt_data_end+0xfffcbb14>
4104a330:	88c00015 	stw	r3,0(r17)
4104a334:	003ff706 	br	4104a314 <__alt_data_end+0xfffcbb14>

4104a338 <_wcrtomb_r>:
4104a338:	defff604 	addi	sp,sp,-40
4104a33c:	00904174 	movhi	r2,16645
4104a340:	dc800815 	stw	r18,32(sp)
4104a344:	dc400715 	stw	r17,28(sp)
4104a348:	dc000615 	stw	r16,24(sp)
4104a34c:	10872104 	addi	r2,r2,7300
4104a350:	dfc00915 	stw	ra,36(sp)
4104a354:	2021883a 	mov	r16,r4
4104a358:	3823883a 	mov	r17,r7
4104a35c:	14800017 	ldw	r18,0(r2)
4104a360:	28001426 	beq	r5,zero,4104a3b4 <_wcrtomb_r+0x7c>
4104a364:	d9400415 	stw	r5,16(sp)
4104a368:	d9800515 	stw	r6,20(sp)
4104a36c:	1045e6c0 	call	41045e6c <__locale_charset>
4104a370:	d9800517 	ldw	r6,20(sp)
4104a374:	d9400417 	ldw	r5,16(sp)
4104a378:	100f883a 	mov	r7,r2
4104a37c:	dc400015 	stw	r17,0(sp)
4104a380:	8009883a 	mov	r4,r16
4104a384:	903ee83a 	callr	r18
4104a388:	00ffffc4 	movi	r3,-1
4104a38c:	10c0031e 	bne	r2,r3,4104a39c <_wcrtomb_r+0x64>
4104a390:	88000015 	stw	zero,0(r17)
4104a394:	00c02284 	movi	r3,138
4104a398:	80c00015 	stw	r3,0(r16)
4104a39c:	dfc00917 	ldw	ra,36(sp)
4104a3a0:	dc800817 	ldw	r18,32(sp)
4104a3a4:	dc400717 	ldw	r17,28(sp)
4104a3a8:	dc000617 	ldw	r16,24(sp)
4104a3ac:	dec00a04 	addi	sp,sp,40
4104a3b0:	f800283a 	ret
4104a3b4:	1045e6c0 	call	41045e6c <__locale_charset>
4104a3b8:	100f883a 	mov	r7,r2
4104a3bc:	dc400015 	stw	r17,0(sp)
4104a3c0:	000d883a 	mov	r6,zero
4104a3c4:	d9400104 	addi	r5,sp,4
4104a3c8:	8009883a 	mov	r4,r16
4104a3cc:	903ee83a 	callr	r18
4104a3d0:	003fed06 	br	4104a388 <__alt_data_end+0xfffcbb88>

4104a3d4 <wcrtomb>:
4104a3d4:	defff604 	addi	sp,sp,-40
4104a3d8:	00904174 	movhi	r2,16645
4104a3dc:	dc800615 	stw	r18,24(sp)
4104a3e0:	dc400515 	stw	r17,20(sp)
4104a3e4:	10871d04 	addi	r2,r2,7284
4104a3e8:	dfc00915 	stw	ra,36(sp)
4104a3ec:	dd000815 	stw	r20,32(sp)
4104a3f0:	dcc00715 	stw	r19,28(sp)
4104a3f4:	dc000415 	stw	r16,16(sp)
4104a3f8:	3025883a 	mov	r18,r6
4104a3fc:	14400017 	ldw	r17,0(r2)
4104a400:	20001926 	beq	r4,zero,4104a468 <wcrtomb+0x94>
4104a404:	00904174 	movhi	r2,16645
4104a408:	10872104 	addi	r2,r2,7300
4104a40c:	15000017 	ldw	r20,0(r2)
4104a410:	2021883a 	mov	r16,r4
4104a414:	2827883a 	mov	r19,r5
4104a418:	1045e6c0 	call	41045e6c <__locale_charset>
4104a41c:	100f883a 	mov	r7,r2
4104a420:	dc800015 	stw	r18,0(sp)
4104a424:	980d883a 	mov	r6,r19
4104a428:	800b883a 	mov	r5,r16
4104a42c:	8809883a 	mov	r4,r17
4104a430:	a03ee83a 	callr	r20
4104a434:	00ffffc4 	movi	r3,-1
4104a438:	10c0031e 	bne	r2,r3,4104a448 <wcrtomb+0x74>
4104a43c:	90000015 	stw	zero,0(r18)
4104a440:	00c02284 	movi	r3,138
4104a444:	88c00015 	stw	r3,0(r17)
4104a448:	dfc00917 	ldw	ra,36(sp)
4104a44c:	dd000817 	ldw	r20,32(sp)
4104a450:	dcc00717 	ldw	r19,28(sp)
4104a454:	dc800617 	ldw	r18,24(sp)
4104a458:	dc400517 	ldw	r17,20(sp)
4104a45c:	dc000417 	ldw	r16,16(sp)
4104a460:	dec00a04 	addi	sp,sp,40
4104a464:	f800283a 	ret
4104a468:	00904174 	movhi	r2,16645
4104a46c:	10872104 	addi	r2,r2,7300
4104a470:	14000017 	ldw	r16,0(r2)
4104a474:	1045e6c0 	call	41045e6c <__locale_charset>
4104a478:	100f883a 	mov	r7,r2
4104a47c:	dc800015 	stw	r18,0(sp)
4104a480:	000d883a 	mov	r6,zero
4104a484:	d9400104 	addi	r5,sp,4
4104a488:	8809883a 	mov	r4,r17
4104a48c:	803ee83a 	callr	r16
4104a490:	003fe806 	br	4104a434 <__alt_data_end+0xfffcbc34>

4104a494 <__ascii_wctomb>:
4104a494:	28000526 	beq	r5,zero,4104a4ac <__ascii_wctomb+0x18>
4104a498:	00803fc4 	movi	r2,255
4104a49c:	11800536 	bltu	r2,r6,4104a4b4 <__ascii_wctomb+0x20>
4104a4a0:	29800005 	stb	r6,0(r5)
4104a4a4:	00800044 	movi	r2,1
4104a4a8:	f800283a 	ret
4104a4ac:	0005883a 	mov	r2,zero
4104a4b0:	f800283a 	ret
4104a4b4:	00802284 	movi	r2,138
4104a4b8:	20800015 	stw	r2,0(r4)
4104a4bc:	00bfffc4 	movi	r2,-1
4104a4c0:	f800283a 	ret

4104a4c4 <_wctomb_r>:
4104a4c4:	00904174 	movhi	r2,16645
4104a4c8:	defff904 	addi	sp,sp,-28
4104a4cc:	10872104 	addi	r2,r2,7300
4104a4d0:	dfc00615 	stw	ra,24(sp)
4104a4d4:	dc400515 	stw	r17,20(sp)
4104a4d8:	dc000415 	stw	r16,16(sp)
4104a4dc:	3823883a 	mov	r17,r7
4104a4e0:	14000017 	ldw	r16,0(r2)
4104a4e4:	d9000115 	stw	r4,4(sp)
4104a4e8:	d9400215 	stw	r5,8(sp)
4104a4ec:	d9800315 	stw	r6,12(sp)
4104a4f0:	1045e6c0 	call	41045e6c <__locale_charset>
4104a4f4:	d9800317 	ldw	r6,12(sp)
4104a4f8:	d9400217 	ldw	r5,8(sp)
4104a4fc:	d9000117 	ldw	r4,4(sp)
4104a500:	100f883a 	mov	r7,r2
4104a504:	dc400015 	stw	r17,0(sp)
4104a508:	803ee83a 	callr	r16
4104a50c:	dfc00617 	ldw	ra,24(sp)
4104a510:	dc400517 	ldw	r17,20(sp)
4104a514:	dc000417 	ldw	r16,16(sp)
4104a518:	dec00704 	addi	sp,sp,28
4104a51c:	f800283a 	ret

4104a520 <__udivdi3>:
4104a520:	defff504 	addi	sp,sp,-44
4104a524:	dcc00415 	stw	r19,16(sp)
4104a528:	dc000115 	stw	r16,4(sp)
4104a52c:	dfc00a15 	stw	ra,40(sp)
4104a530:	df000915 	stw	fp,36(sp)
4104a534:	ddc00815 	stw	r23,32(sp)
4104a538:	dd800715 	stw	r22,28(sp)
4104a53c:	dd400615 	stw	r21,24(sp)
4104a540:	dd000515 	stw	r20,20(sp)
4104a544:	dc800315 	stw	r18,12(sp)
4104a548:	dc400215 	stw	r17,8(sp)
4104a54c:	2027883a 	mov	r19,r4
4104a550:	2821883a 	mov	r16,r5
4104a554:	3800411e 	bne	r7,zero,4104a65c <__udivdi3+0x13c>
4104a558:	3023883a 	mov	r17,r6
4104a55c:	2025883a 	mov	r18,r4
4104a560:	2980522e 	bgeu	r5,r6,4104a6ac <__udivdi3+0x18c>
4104a564:	00bfffd4 	movui	r2,65535
4104a568:	282d883a 	mov	r22,r5
4104a56c:	1180a836 	bltu	r2,r6,4104a810 <__udivdi3+0x2f0>
4104a570:	00803fc4 	movi	r2,255
4104a574:	1185803a 	cmpltu	r2,r2,r6
4104a578:	100490fa 	slli	r2,r2,3
4104a57c:	3086d83a 	srl	r3,r6,r2
4104a580:	01104174 	movhi	r4,16645
4104a584:	21002604 	addi	r4,r4,152
4104a588:	20c7883a 	add	r3,r4,r3
4104a58c:	18c00003 	ldbu	r3,0(r3)
4104a590:	1885883a 	add	r2,r3,r2
4104a594:	00c00804 	movi	r3,32
4104a598:	1887c83a 	sub	r3,r3,r2
4104a59c:	18000526 	beq	r3,zero,4104a5b4 <__udivdi3+0x94>
4104a5a0:	80e0983a 	sll	r16,r16,r3
4104a5a4:	9884d83a 	srl	r2,r19,r2
4104a5a8:	30e2983a 	sll	r17,r6,r3
4104a5ac:	98e4983a 	sll	r18,r19,r3
4104a5b0:	142cb03a 	or	r22,r2,r16
4104a5b4:	882ad43a 	srli	r21,r17,16
4104a5b8:	b009883a 	mov	r4,r22
4104a5bc:	8d3fffcc 	andi	r20,r17,65535
4104a5c0:	a80b883a 	mov	r5,r21
4104a5c4:	1040c740 	call	41040c74 <__umodsi3>
4104a5c8:	b009883a 	mov	r4,r22
4104a5cc:	a80b883a 	mov	r5,r21
4104a5d0:	1027883a 	mov	r19,r2
4104a5d4:	1040c100 	call	41040c10 <__udivsi3>
4104a5d8:	102d883a 	mov	r22,r2
4104a5dc:	9826943a 	slli	r19,r19,16
4104a5e0:	9004d43a 	srli	r2,r18,16
4104a5e4:	a5a1383a 	mul	r16,r20,r22
4104a5e8:	14c4b03a 	or	r2,r2,r19
4104a5ec:	1400052e 	bgeu	r2,r16,4104a604 <__udivdi3+0xe4>
4104a5f0:	1445883a 	add	r2,r2,r17
4104a5f4:	b0ffffc4 	addi	r3,r22,-1
4104a5f8:	14400136 	bltu	r2,r17,4104a600 <__udivdi3+0xe0>
4104a5fc:	14012336 	bltu	r2,r16,4104aa8c <__udivdi3+0x56c>
4104a600:	182d883a 	mov	r22,r3
4104a604:	1421c83a 	sub	r16,r2,r16
4104a608:	a80b883a 	mov	r5,r21
4104a60c:	8009883a 	mov	r4,r16
4104a610:	1040c740 	call	41040c74 <__umodsi3>
4104a614:	1027883a 	mov	r19,r2
4104a618:	a80b883a 	mov	r5,r21
4104a61c:	8009883a 	mov	r4,r16
4104a620:	1040c100 	call	41040c10 <__udivsi3>
4104a624:	9826943a 	slli	r19,r19,16
4104a628:	a0a9383a 	mul	r20,r20,r2
4104a62c:	94bfffcc 	andi	r18,r18,65535
4104a630:	94e4b03a 	or	r18,r18,r19
4104a634:	9500052e 	bgeu	r18,r20,4104a64c <__udivdi3+0x12c>
4104a638:	8ca5883a 	add	r18,r17,r18
4104a63c:	10ffffc4 	addi	r3,r2,-1
4104a640:	9440f136 	bltu	r18,r17,4104aa08 <__udivdi3+0x4e8>
4104a644:	9500f02e 	bgeu	r18,r20,4104aa08 <__udivdi3+0x4e8>
4104a648:	10bfff84 	addi	r2,r2,-2
4104a64c:	b00c943a 	slli	r6,r22,16
4104a650:	0007883a 	mov	r3,zero
4104a654:	3084b03a 	or	r2,r6,r2
4104a658:	00005906 	br	4104a7c0 <__udivdi3+0x2a0>
4104a65c:	29c05636 	bltu	r5,r7,4104a7b8 <__udivdi3+0x298>
4104a660:	00bfffd4 	movui	r2,65535
4104a664:	11c0622e 	bgeu	r2,r7,4104a7f0 <__udivdi3+0x2d0>
4104a668:	00804034 	movhi	r2,256
4104a66c:	10bfffc4 	addi	r2,r2,-1
4104a670:	11c0ee36 	bltu	r2,r7,4104aa2c <__udivdi3+0x50c>
4104a674:	00800404 	movi	r2,16
4104a678:	3886d83a 	srl	r3,r7,r2
4104a67c:	01104174 	movhi	r4,16645
4104a680:	21002604 	addi	r4,r4,152
4104a684:	20c7883a 	add	r3,r4,r3
4104a688:	18c00003 	ldbu	r3,0(r3)
4104a68c:	05400804 	movi	r21,32
4104a690:	1885883a 	add	r2,r3,r2
4104a694:	a8abc83a 	sub	r21,r21,r2
4104a698:	a800621e 	bne	r21,zero,4104a824 <__udivdi3+0x304>
4104a69c:	3c00e936 	bltu	r7,r16,4104aa44 <__udivdi3+0x524>
4104a6a0:	9985403a 	cmpgeu	r2,r19,r6
4104a6a4:	0007883a 	mov	r3,zero
4104a6a8:	00004506 	br	4104a7c0 <__udivdi3+0x2a0>
4104a6ac:	3000041e 	bne	r6,zero,4104a6c0 <__udivdi3+0x1a0>
4104a6b0:	000b883a 	mov	r5,zero
4104a6b4:	01000044 	movi	r4,1
4104a6b8:	1040c100 	call	41040c10 <__udivsi3>
4104a6bc:	1023883a 	mov	r17,r2
4104a6c0:	00bfffd4 	movui	r2,65535
4104a6c4:	14404e2e 	bgeu	r2,r17,4104a800 <__udivdi3+0x2e0>
4104a6c8:	00804034 	movhi	r2,256
4104a6cc:	10bfffc4 	addi	r2,r2,-1
4104a6d0:	1440d836 	bltu	r2,r17,4104aa34 <__udivdi3+0x514>
4104a6d4:	00800404 	movi	r2,16
4104a6d8:	8886d83a 	srl	r3,r17,r2
4104a6dc:	01104174 	movhi	r4,16645
4104a6e0:	21002604 	addi	r4,r4,152
4104a6e4:	20c7883a 	add	r3,r4,r3
4104a6e8:	18c00003 	ldbu	r3,0(r3)
4104a6ec:	1885883a 	add	r2,r3,r2
4104a6f0:	00c00804 	movi	r3,32
4104a6f4:	1887c83a 	sub	r3,r3,r2
4104a6f8:	18008f1e 	bne	r3,zero,4104a938 <__udivdi3+0x418>
4104a6fc:	882ad43a 	srli	r21,r17,16
4104a700:	8461c83a 	sub	r16,r16,r17
4104a704:	8d3fffcc 	andi	r20,r17,65535
4104a708:	00c00044 	movi	r3,1
4104a70c:	8009883a 	mov	r4,r16
4104a710:	a80b883a 	mov	r5,r21
4104a714:	d8c00015 	stw	r3,0(sp)
4104a718:	1040c740 	call	41040c74 <__umodsi3>
4104a71c:	8009883a 	mov	r4,r16
4104a720:	a80b883a 	mov	r5,r21
4104a724:	1027883a 	mov	r19,r2
4104a728:	1040c100 	call	41040c10 <__udivsi3>
4104a72c:	9826943a 	slli	r19,r19,16
4104a730:	9008d43a 	srli	r4,r18,16
4104a734:	1521383a 	mul	r16,r2,r20
4104a738:	102d883a 	mov	r22,r2
4104a73c:	24c8b03a 	or	r4,r4,r19
4104a740:	d8c00017 	ldw	r3,0(sp)
4104a744:	2400052e 	bgeu	r4,r16,4104a75c <__udivdi3+0x23c>
4104a748:	2449883a 	add	r4,r4,r17
4104a74c:	b0bfffc4 	addi	r2,r22,-1
4104a750:	24400136 	bltu	r4,r17,4104a758 <__udivdi3+0x238>
4104a754:	2400ca36 	bltu	r4,r16,4104aa80 <__udivdi3+0x560>
4104a758:	102d883a 	mov	r22,r2
4104a75c:	2421c83a 	sub	r16,r4,r16
4104a760:	a80b883a 	mov	r5,r21
4104a764:	8009883a 	mov	r4,r16
4104a768:	d8c00015 	stw	r3,0(sp)
4104a76c:	1040c740 	call	41040c74 <__umodsi3>
4104a770:	1027883a 	mov	r19,r2
4104a774:	a80b883a 	mov	r5,r21
4104a778:	8009883a 	mov	r4,r16
4104a77c:	1040c100 	call	41040c10 <__udivsi3>
4104a780:	9826943a 	slli	r19,r19,16
4104a784:	1529383a 	mul	r20,r2,r20
4104a788:	94bfffcc 	andi	r18,r18,65535
4104a78c:	94e4b03a 	or	r18,r18,r19
4104a790:	d8c00017 	ldw	r3,0(sp)
4104a794:	9500052e 	bgeu	r18,r20,4104a7ac <__udivdi3+0x28c>
4104a798:	8ca5883a 	add	r18,r17,r18
4104a79c:	113fffc4 	addi	r4,r2,-1
4104a7a0:	94409736 	bltu	r18,r17,4104aa00 <__udivdi3+0x4e0>
4104a7a4:	9500962e 	bgeu	r18,r20,4104aa00 <__udivdi3+0x4e0>
4104a7a8:	10bfff84 	addi	r2,r2,-2
4104a7ac:	b00c943a 	slli	r6,r22,16
4104a7b0:	3084b03a 	or	r2,r6,r2
4104a7b4:	00000206 	br	4104a7c0 <__udivdi3+0x2a0>
4104a7b8:	0007883a 	mov	r3,zero
4104a7bc:	0005883a 	mov	r2,zero
4104a7c0:	dfc00a17 	ldw	ra,40(sp)
4104a7c4:	df000917 	ldw	fp,36(sp)
4104a7c8:	ddc00817 	ldw	r23,32(sp)
4104a7cc:	dd800717 	ldw	r22,28(sp)
4104a7d0:	dd400617 	ldw	r21,24(sp)
4104a7d4:	dd000517 	ldw	r20,20(sp)
4104a7d8:	dcc00417 	ldw	r19,16(sp)
4104a7dc:	dc800317 	ldw	r18,12(sp)
4104a7e0:	dc400217 	ldw	r17,8(sp)
4104a7e4:	dc000117 	ldw	r16,4(sp)
4104a7e8:	dec00b04 	addi	sp,sp,44
4104a7ec:	f800283a 	ret
4104a7f0:	00803fc4 	movi	r2,255
4104a7f4:	11c5803a 	cmpltu	r2,r2,r7
4104a7f8:	100490fa 	slli	r2,r2,3
4104a7fc:	003f9e06 	br	4104a678 <__alt_data_end+0xfffcbe78>
4104a800:	00803fc4 	movi	r2,255
4104a804:	1445803a 	cmpltu	r2,r2,r17
4104a808:	100490fa 	slli	r2,r2,3
4104a80c:	003fb206 	br	4104a6d8 <__alt_data_end+0xfffcbed8>
4104a810:	00804034 	movhi	r2,256
4104a814:	10bfffc4 	addi	r2,r2,-1
4104a818:	11808836 	bltu	r2,r6,4104aa3c <__udivdi3+0x51c>
4104a81c:	00800404 	movi	r2,16
4104a820:	003f5606 	br	4104a57c <__alt_data_end+0xfffcbd7c>
4104a824:	30aed83a 	srl	r23,r6,r2
4104a828:	3d4e983a 	sll	r7,r7,r21
4104a82c:	80acd83a 	srl	r22,r16,r2
4104a830:	9884d83a 	srl	r2,r19,r2
4104a834:	3deeb03a 	or	r23,r7,r23
4104a838:	b824d43a 	srli	r18,r23,16
4104a83c:	8560983a 	sll	r16,r16,r21
4104a840:	b009883a 	mov	r4,r22
4104a844:	900b883a 	mov	r5,r18
4104a848:	3568983a 	sll	r20,r6,r21
4104a84c:	1420b03a 	or	r16,r2,r16
4104a850:	1040c740 	call	41040c74 <__umodsi3>
4104a854:	b009883a 	mov	r4,r22
4104a858:	900b883a 	mov	r5,r18
4104a85c:	1023883a 	mov	r17,r2
4104a860:	1040c100 	call	41040c10 <__udivsi3>
4104a864:	8808943a 	slli	r4,r17,16
4104a868:	bf3fffcc 	andi	fp,r23,65535
4104a86c:	8006d43a 	srli	r3,r16,16
4104a870:	e0a3383a 	mul	r17,fp,r2
4104a874:	100d883a 	mov	r6,r2
4104a878:	1906b03a 	or	r3,r3,r4
4104a87c:	1c40042e 	bgeu	r3,r17,4104a890 <__udivdi3+0x370>
4104a880:	1dc7883a 	add	r3,r3,r23
4104a884:	10bfffc4 	addi	r2,r2,-1
4104a888:	1dc0752e 	bgeu	r3,r23,4104aa60 <__udivdi3+0x540>
4104a88c:	100d883a 	mov	r6,r2
4104a890:	1c63c83a 	sub	r17,r3,r17
4104a894:	900b883a 	mov	r5,r18
4104a898:	8809883a 	mov	r4,r17
4104a89c:	d9800015 	stw	r6,0(sp)
4104a8a0:	1040c740 	call	41040c74 <__umodsi3>
4104a8a4:	102d883a 	mov	r22,r2
4104a8a8:	8809883a 	mov	r4,r17
4104a8ac:	900b883a 	mov	r5,r18
4104a8b0:	1040c100 	call	41040c10 <__udivsi3>
4104a8b4:	b02c943a 	slli	r22,r22,16
4104a8b8:	e089383a 	mul	r4,fp,r2
4104a8bc:	843fffcc 	andi	r16,r16,65535
4104a8c0:	85a0b03a 	or	r16,r16,r22
4104a8c4:	d9800017 	ldw	r6,0(sp)
4104a8c8:	8100042e 	bgeu	r16,r4,4104a8dc <__udivdi3+0x3bc>
4104a8cc:	85e1883a 	add	r16,r16,r23
4104a8d0:	10ffffc4 	addi	r3,r2,-1
4104a8d4:	85c05e2e 	bgeu	r16,r23,4104aa50 <__udivdi3+0x530>
4104a8d8:	1805883a 	mov	r2,r3
4104a8dc:	300c943a 	slli	r6,r6,16
4104a8e0:	a17fffcc 	andi	r5,r20,65535
4104a8e4:	a028d43a 	srli	r20,r20,16
4104a8e8:	3084b03a 	or	r2,r6,r2
4104a8ec:	10ffffcc 	andi	r3,r2,65535
4104a8f0:	100cd43a 	srli	r6,r2,16
4104a8f4:	194f383a 	mul	r7,r3,r5
4104a8f8:	1d07383a 	mul	r3,r3,r20
4104a8fc:	314b383a 	mul	r5,r6,r5
4104a900:	3810d43a 	srli	r8,r7,16
4104a904:	8121c83a 	sub	r16,r16,r4
4104a908:	1947883a 	add	r3,r3,r5
4104a90c:	40c7883a 	add	r3,r8,r3
4104a910:	350d383a 	mul	r6,r6,r20
4104a914:	1940022e 	bgeu	r3,r5,4104a920 <__udivdi3+0x400>
4104a918:	01000074 	movhi	r4,1
4104a91c:	310d883a 	add	r6,r6,r4
4104a920:	1828d43a 	srli	r20,r3,16
4104a924:	a18d883a 	add	r6,r20,r6
4104a928:	81803e36 	bltu	r16,r6,4104aa24 <__udivdi3+0x504>
4104a92c:	81803826 	beq	r16,r6,4104aa10 <__udivdi3+0x4f0>
4104a930:	0007883a 	mov	r3,zero
4104a934:	003fa206 	br	4104a7c0 <__alt_data_end+0xfffcbfc0>
4104a938:	88e2983a 	sll	r17,r17,r3
4104a93c:	80a8d83a 	srl	r20,r16,r2
4104a940:	80e0983a 	sll	r16,r16,r3
4104a944:	882ad43a 	srli	r21,r17,16
4104a948:	9884d83a 	srl	r2,r19,r2
4104a94c:	a009883a 	mov	r4,r20
4104a950:	a80b883a 	mov	r5,r21
4104a954:	142eb03a 	or	r23,r2,r16
4104a958:	98e4983a 	sll	r18,r19,r3
4104a95c:	1040c740 	call	41040c74 <__umodsi3>
4104a960:	a009883a 	mov	r4,r20
4104a964:	a80b883a 	mov	r5,r21
4104a968:	1021883a 	mov	r16,r2
4104a96c:	1040c100 	call	41040c10 <__udivsi3>
4104a970:	1039883a 	mov	fp,r2
4104a974:	8d3fffcc 	andi	r20,r17,65535
4104a978:	8020943a 	slli	r16,r16,16
4104a97c:	b804d43a 	srli	r2,r23,16
4104a980:	a72d383a 	mul	r22,r20,fp
4104a984:	1404b03a 	or	r2,r2,r16
4104a988:	1580062e 	bgeu	r2,r22,4104a9a4 <__udivdi3+0x484>
4104a98c:	1445883a 	add	r2,r2,r17
4104a990:	e0ffffc4 	addi	r3,fp,-1
4104a994:	14403836 	bltu	r2,r17,4104aa78 <__udivdi3+0x558>
4104a998:	1580372e 	bgeu	r2,r22,4104aa78 <__udivdi3+0x558>
4104a99c:	e73fff84 	addi	fp,fp,-2
4104a9a0:	1445883a 	add	r2,r2,r17
4104a9a4:	15adc83a 	sub	r22,r2,r22
4104a9a8:	a80b883a 	mov	r5,r21
4104a9ac:	b009883a 	mov	r4,r22
4104a9b0:	1040c740 	call	41040c74 <__umodsi3>
4104a9b4:	1027883a 	mov	r19,r2
4104a9b8:	b009883a 	mov	r4,r22
4104a9bc:	a80b883a 	mov	r5,r21
4104a9c0:	1040c100 	call	41040c10 <__udivsi3>
4104a9c4:	9826943a 	slli	r19,r19,16
4104a9c8:	a0a1383a 	mul	r16,r20,r2
4104a9cc:	b93fffcc 	andi	r4,r23,65535
4104a9d0:	24c8b03a 	or	r4,r4,r19
4104a9d4:	2400062e 	bgeu	r4,r16,4104a9f0 <__udivdi3+0x4d0>
4104a9d8:	2449883a 	add	r4,r4,r17
4104a9dc:	10ffffc4 	addi	r3,r2,-1
4104a9e0:	24402336 	bltu	r4,r17,4104aa70 <__udivdi3+0x550>
4104a9e4:	2400222e 	bgeu	r4,r16,4104aa70 <__udivdi3+0x550>
4104a9e8:	10bfff84 	addi	r2,r2,-2
4104a9ec:	2449883a 	add	r4,r4,r17
4104a9f0:	e038943a 	slli	fp,fp,16
4104a9f4:	2421c83a 	sub	r16,r4,r16
4104a9f8:	e086b03a 	or	r3,fp,r2
4104a9fc:	003f4306 	br	4104a70c <__alt_data_end+0xfffcbf0c>
4104aa00:	2005883a 	mov	r2,r4
4104aa04:	003f6906 	br	4104a7ac <__alt_data_end+0xfffcbfac>
4104aa08:	1805883a 	mov	r2,r3
4104aa0c:	003f0f06 	br	4104a64c <__alt_data_end+0xfffcbe4c>
4104aa10:	1806943a 	slli	r3,r3,16
4104aa14:	9d66983a 	sll	r19,r19,r21
4104aa18:	39ffffcc 	andi	r7,r7,65535
4104aa1c:	19c7883a 	add	r3,r3,r7
4104aa20:	98ffc32e 	bgeu	r19,r3,4104a930 <__alt_data_end+0xfffcc130>
4104aa24:	10bfffc4 	addi	r2,r2,-1
4104aa28:	003fc106 	br	4104a930 <__alt_data_end+0xfffcc130>
4104aa2c:	00800604 	movi	r2,24
4104aa30:	003f1106 	br	4104a678 <__alt_data_end+0xfffcbe78>
4104aa34:	00800604 	movi	r2,24
4104aa38:	003f2706 	br	4104a6d8 <__alt_data_end+0xfffcbed8>
4104aa3c:	00800604 	movi	r2,24
4104aa40:	003ece06 	br	4104a57c <__alt_data_end+0xfffcbd7c>
4104aa44:	0007883a 	mov	r3,zero
4104aa48:	00800044 	movi	r2,1
4104aa4c:	003f5c06 	br	4104a7c0 <__alt_data_end+0xfffcbfc0>
4104aa50:	813fa12e 	bgeu	r16,r4,4104a8d8 <__alt_data_end+0xfffcc0d8>
4104aa54:	10bfff84 	addi	r2,r2,-2
4104aa58:	85e1883a 	add	r16,r16,r23
4104aa5c:	003f9f06 	br	4104a8dc <__alt_data_end+0xfffcc0dc>
4104aa60:	1c7f8a2e 	bgeu	r3,r17,4104a88c <__alt_data_end+0xfffcc08c>
4104aa64:	31bfff84 	addi	r6,r6,-2
4104aa68:	1dc7883a 	add	r3,r3,r23
4104aa6c:	003f8806 	br	4104a890 <__alt_data_end+0xfffcc090>
4104aa70:	1805883a 	mov	r2,r3
4104aa74:	003fde06 	br	4104a9f0 <__alt_data_end+0xfffcc1f0>
4104aa78:	1839883a 	mov	fp,r3
4104aa7c:	003fc906 	br	4104a9a4 <__alt_data_end+0xfffcc1a4>
4104aa80:	b5bfff84 	addi	r22,r22,-2
4104aa84:	2449883a 	add	r4,r4,r17
4104aa88:	003f3406 	br	4104a75c <__alt_data_end+0xfffcbf5c>
4104aa8c:	b5bfff84 	addi	r22,r22,-2
4104aa90:	1445883a 	add	r2,r2,r17
4104aa94:	003edb06 	br	4104a604 <__alt_data_end+0xfffcbe04>

4104aa98 <__umoddi3>:
4104aa98:	defff404 	addi	sp,sp,-48
4104aa9c:	df000a15 	stw	fp,40(sp)
4104aaa0:	dc400315 	stw	r17,12(sp)
4104aaa4:	dc000215 	stw	r16,8(sp)
4104aaa8:	dfc00b15 	stw	ra,44(sp)
4104aaac:	ddc00915 	stw	r23,36(sp)
4104aab0:	dd800815 	stw	r22,32(sp)
4104aab4:	dd400715 	stw	r21,28(sp)
4104aab8:	dd000615 	stw	r20,24(sp)
4104aabc:	dcc00515 	stw	r19,20(sp)
4104aac0:	dc800415 	stw	r18,16(sp)
4104aac4:	2021883a 	mov	r16,r4
4104aac8:	2823883a 	mov	r17,r5
4104aacc:	2839883a 	mov	fp,r5
4104aad0:	38003c1e 	bne	r7,zero,4104abc4 <__umoddi3+0x12c>
4104aad4:	3027883a 	mov	r19,r6
4104aad8:	2029883a 	mov	r20,r4
4104aadc:	2980512e 	bgeu	r5,r6,4104ac24 <__umoddi3+0x18c>
4104aae0:	00bfffd4 	movui	r2,65535
4104aae4:	11809a36 	bltu	r2,r6,4104ad50 <__umoddi3+0x2b8>
4104aae8:	01003fc4 	movi	r4,255
4104aaec:	2189803a 	cmpltu	r4,r4,r6
4104aaf0:	200890fa 	slli	r4,r4,3
4104aaf4:	3104d83a 	srl	r2,r6,r4
4104aaf8:	00d04174 	movhi	r3,16645
4104aafc:	18c02604 	addi	r3,r3,152
4104ab00:	1885883a 	add	r2,r3,r2
4104ab04:	10c00003 	ldbu	r3,0(r2)
4104ab08:	00800804 	movi	r2,32
4104ab0c:	1909883a 	add	r4,r3,r4
4104ab10:	1125c83a 	sub	r18,r2,r4
4104ab14:	90000526 	beq	r18,zero,4104ab2c <__umoddi3+0x94>
4104ab18:	8ca2983a 	sll	r17,r17,r18
4104ab1c:	8108d83a 	srl	r4,r16,r4
4104ab20:	34a6983a 	sll	r19,r6,r18
4104ab24:	84a8983a 	sll	r20,r16,r18
4104ab28:	2478b03a 	or	fp,r4,r17
4104ab2c:	982ed43a 	srli	r23,r19,16
4104ab30:	e009883a 	mov	r4,fp
4104ab34:	9dbfffcc 	andi	r22,r19,65535
4104ab38:	b80b883a 	mov	r5,r23
4104ab3c:	1040c740 	call	41040c74 <__umodsi3>
4104ab40:	e009883a 	mov	r4,fp
4104ab44:	b80b883a 	mov	r5,r23
4104ab48:	102b883a 	mov	r21,r2
4104ab4c:	1040c100 	call	41040c10 <__udivsi3>
4104ab50:	a806943a 	slli	r3,r21,16
4104ab54:	a008d43a 	srli	r4,r20,16
4104ab58:	b085383a 	mul	r2,r22,r2
4104ab5c:	20c8b03a 	or	r4,r4,r3
4104ab60:	2080032e 	bgeu	r4,r2,4104ab70 <__umoddi3+0xd8>
4104ab64:	24c9883a 	add	r4,r4,r19
4104ab68:	24c00136 	bltu	r4,r19,4104ab70 <__umoddi3+0xd8>
4104ab6c:	20811036 	bltu	r4,r2,4104afb0 <__umoddi3+0x518>
4104ab70:	20abc83a 	sub	r21,r4,r2
4104ab74:	b80b883a 	mov	r5,r23
4104ab78:	a809883a 	mov	r4,r21
4104ab7c:	1040c740 	call	41040c74 <__umodsi3>
4104ab80:	1023883a 	mov	r17,r2
4104ab84:	b80b883a 	mov	r5,r23
4104ab88:	a809883a 	mov	r4,r21
4104ab8c:	1040c100 	call	41040c10 <__udivsi3>
4104ab90:	8822943a 	slli	r17,r17,16
4104ab94:	b085383a 	mul	r2,r22,r2
4104ab98:	a0ffffcc 	andi	r3,r20,65535
4104ab9c:	1c46b03a 	or	r3,r3,r17
4104aba0:	1880042e 	bgeu	r3,r2,4104abb4 <__umoddi3+0x11c>
4104aba4:	1cc7883a 	add	r3,r3,r19
4104aba8:	1cc00236 	bltu	r3,r19,4104abb4 <__umoddi3+0x11c>
4104abac:	1880012e 	bgeu	r3,r2,4104abb4 <__umoddi3+0x11c>
4104abb0:	1cc7883a 	add	r3,r3,r19
4104abb4:	1885c83a 	sub	r2,r3,r2
4104abb8:	1484d83a 	srl	r2,r2,r18
4104abbc:	0007883a 	mov	r3,zero
4104abc0:	00004f06 	br	4104ad00 <__umoddi3+0x268>
4104abc4:	29c04c36 	bltu	r5,r7,4104acf8 <__umoddi3+0x260>
4104abc8:	00bfffd4 	movui	r2,65535
4104abcc:	11c0582e 	bgeu	r2,r7,4104ad30 <__umoddi3+0x298>
4104abd0:	00804034 	movhi	r2,256
4104abd4:	10bfffc4 	addi	r2,r2,-1
4104abd8:	11c0e736 	bltu	r2,r7,4104af78 <__umoddi3+0x4e0>
4104abdc:	01000404 	movi	r4,16
4104abe0:	3904d83a 	srl	r2,r7,r4
4104abe4:	00d04174 	movhi	r3,16645
4104abe8:	18c02604 	addi	r3,r3,152
4104abec:	1885883a 	add	r2,r3,r2
4104abf0:	14c00003 	ldbu	r19,0(r2)
4104abf4:	00c00804 	movi	r3,32
4104abf8:	9927883a 	add	r19,r19,r4
4104abfc:	1ce9c83a 	sub	r20,r3,r19
4104ac00:	a000581e 	bne	r20,zero,4104ad64 <__umoddi3+0x2cc>
4104ac04:	3c400136 	bltu	r7,r17,4104ac0c <__umoddi3+0x174>
4104ac08:	8180eb36 	bltu	r16,r6,4104afb8 <__umoddi3+0x520>
4104ac0c:	8185c83a 	sub	r2,r16,r6
4104ac10:	89e3c83a 	sub	r17,r17,r7
4104ac14:	8089803a 	cmpltu	r4,r16,r2
4104ac18:	8939c83a 	sub	fp,r17,r4
4104ac1c:	e007883a 	mov	r3,fp
4104ac20:	00003706 	br	4104ad00 <__umoddi3+0x268>
4104ac24:	3000041e 	bne	r6,zero,4104ac38 <__umoddi3+0x1a0>
4104ac28:	000b883a 	mov	r5,zero
4104ac2c:	01000044 	movi	r4,1
4104ac30:	1040c100 	call	41040c10 <__udivsi3>
4104ac34:	1027883a 	mov	r19,r2
4104ac38:	00bfffd4 	movui	r2,65535
4104ac3c:	14c0402e 	bgeu	r2,r19,4104ad40 <__umoddi3+0x2a8>
4104ac40:	00804034 	movhi	r2,256
4104ac44:	10bfffc4 	addi	r2,r2,-1
4104ac48:	14c0cd36 	bltu	r2,r19,4104af80 <__umoddi3+0x4e8>
4104ac4c:	00800404 	movi	r2,16
4104ac50:	9886d83a 	srl	r3,r19,r2
4104ac54:	01104174 	movhi	r4,16645
4104ac58:	21002604 	addi	r4,r4,152
4104ac5c:	20c7883a 	add	r3,r4,r3
4104ac60:	18c00003 	ldbu	r3,0(r3)
4104ac64:	1887883a 	add	r3,r3,r2
4104ac68:	00800804 	movi	r2,32
4104ac6c:	10e5c83a 	sub	r18,r2,r3
4104ac70:	9000901e 	bne	r18,zero,4104aeb4 <__umoddi3+0x41c>
4104ac74:	982cd43a 	srli	r22,r19,16
4104ac78:	8ce3c83a 	sub	r17,r17,r19
4104ac7c:	9d7fffcc 	andi	r21,r19,65535
4104ac80:	b00b883a 	mov	r5,r22
4104ac84:	8809883a 	mov	r4,r17
4104ac88:	1040c740 	call	41040c74 <__umodsi3>
4104ac8c:	8809883a 	mov	r4,r17
4104ac90:	b00b883a 	mov	r5,r22
4104ac94:	1021883a 	mov	r16,r2
4104ac98:	1040c100 	call	41040c10 <__udivsi3>
4104ac9c:	8006943a 	slli	r3,r16,16
4104aca0:	a008d43a 	srli	r4,r20,16
4104aca4:	1545383a 	mul	r2,r2,r21
4104aca8:	20c8b03a 	or	r4,r4,r3
4104acac:	2080042e 	bgeu	r4,r2,4104acc0 <__umoddi3+0x228>
4104acb0:	24c9883a 	add	r4,r4,r19
4104acb4:	24c00236 	bltu	r4,r19,4104acc0 <__umoddi3+0x228>
4104acb8:	2080012e 	bgeu	r4,r2,4104acc0 <__umoddi3+0x228>
4104acbc:	24c9883a 	add	r4,r4,r19
4104acc0:	20a1c83a 	sub	r16,r4,r2
4104acc4:	b00b883a 	mov	r5,r22
4104acc8:	8009883a 	mov	r4,r16
4104accc:	1040c740 	call	41040c74 <__umodsi3>
4104acd0:	1023883a 	mov	r17,r2
4104acd4:	b00b883a 	mov	r5,r22
4104acd8:	8009883a 	mov	r4,r16
4104acdc:	1040c100 	call	41040c10 <__udivsi3>
4104ace0:	8822943a 	slli	r17,r17,16
4104ace4:	1545383a 	mul	r2,r2,r21
4104ace8:	a53fffcc 	andi	r20,r20,65535
4104acec:	a446b03a 	or	r3,r20,r17
4104acf0:	18bfb02e 	bgeu	r3,r2,4104abb4 <__alt_data_end+0xfffcc3b4>
4104acf4:	003fab06 	br	4104aba4 <__alt_data_end+0xfffcc3a4>
4104acf8:	2005883a 	mov	r2,r4
4104acfc:	2807883a 	mov	r3,r5
4104ad00:	dfc00b17 	ldw	ra,44(sp)
4104ad04:	df000a17 	ldw	fp,40(sp)
4104ad08:	ddc00917 	ldw	r23,36(sp)
4104ad0c:	dd800817 	ldw	r22,32(sp)
4104ad10:	dd400717 	ldw	r21,28(sp)
4104ad14:	dd000617 	ldw	r20,24(sp)
4104ad18:	dcc00517 	ldw	r19,20(sp)
4104ad1c:	dc800417 	ldw	r18,16(sp)
4104ad20:	dc400317 	ldw	r17,12(sp)
4104ad24:	dc000217 	ldw	r16,8(sp)
4104ad28:	dec00c04 	addi	sp,sp,48
4104ad2c:	f800283a 	ret
4104ad30:	04c03fc4 	movi	r19,255
4104ad34:	99c9803a 	cmpltu	r4,r19,r7
4104ad38:	200890fa 	slli	r4,r4,3
4104ad3c:	003fa806 	br	4104abe0 <__alt_data_end+0xfffcc3e0>
4104ad40:	00803fc4 	movi	r2,255
4104ad44:	14c5803a 	cmpltu	r2,r2,r19
4104ad48:	100490fa 	slli	r2,r2,3
4104ad4c:	003fc006 	br	4104ac50 <__alt_data_end+0xfffcc450>
4104ad50:	00804034 	movhi	r2,256
4104ad54:	10bfffc4 	addi	r2,r2,-1
4104ad58:	11808b36 	bltu	r2,r6,4104af88 <__umoddi3+0x4f0>
4104ad5c:	01000404 	movi	r4,16
4104ad60:	003f6406 	br	4104aaf4 <__alt_data_end+0xfffcc2f4>
4104ad64:	34c4d83a 	srl	r2,r6,r19
4104ad68:	3d0e983a 	sll	r7,r7,r20
4104ad6c:	8cf8d83a 	srl	fp,r17,r19
4104ad70:	8d10983a 	sll	r8,r17,r20
4104ad74:	38aab03a 	or	r21,r7,r2
4104ad78:	a82cd43a 	srli	r22,r21,16
4104ad7c:	84e2d83a 	srl	r17,r16,r19
4104ad80:	e009883a 	mov	r4,fp
4104ad84:	b00b883a 	mov	r5,r22
4104ad88:	8a22b03a 	or	r17,r17,r8
4104ad8c:	3524983a 	sll	r18,r6,r20
4104ad90:	1040c740 	call	41040c74 <__umodsi3>
4104ad94:	e009883a 	mov	r4,fp
4104ad98:	b00b883a 	mov	r5,r22
4104ad9c:	102f883a 	mov	r23,r2
4104ada0:	1040c100 	call	41040c10 <__udivsi3>
4104ada4:	100d883a 	mov	r6,r2
4104ada8:	b808943a 	slli	r4,r23,16
4104adac:	aa3fffcc 	andi	r8,r21,65535
4104adb0:	8804d43a 	srli	r2,r17,16
4104adb4:	41af383a 	mul	r23,r8,r6
4104adb8:	8520983a 	sll	r16,r16,r20
4104adbc:	1104b03a 	or	r2,r2,r4
4104adc0:	15c0042e 	bgeu	r2,r23,4104add4 <__umoddi3+0x33c>
4104adc4:	1545883a 	add	r2,r2,r21
4104adc8:	30ffffc4 	addi	r3,r6,-1
4104adcc:	1540742e 	bgeu	r2,r21,4104afa0 <__umoddi3+0x508>
4104add0:	180d883a 	mov	r6,r3
4104add4:	15efc83a 	sub	r23,r2,r23
4104add8:	b00b883a 	mov	r5,r22
4104addc:	b809883a 	mov	r4,r23
4104ade0:	d9800115 	stw	r6,4(sp)
4104ade4:	da000015 	stw	r8,0(sp)
4104ade8:	1040c740 	call	41040c74 <__umodsi3>
4104adec:	b00b883a 	mov	r5,r22
4104adf0:	b809883a 	mov	r4,r23
4104adf4:	1039883a 	mov	fp,r2
4104adf8:	1040c100 	call	41040c10 <__udivsi3>
4104adfc:	da000017 	ldw	r8,0(sp)
4104ae00:	e038943a 	slli	fp,fp,16
4104ae04:	100b883a 	mov	r5,r2
4104ae08:	4089383a 	mul	r4,r8,r2
4104ae0c:	8a3fffcc 	andi	r8,r17,65535
4104ae10:	4710b03a 	or	r8,r8,fp
4104ae14:	d9800117 	ldw	r6,4(sp)
4104ae18:	4100042e 	bgeu	r8,r4,4104ae2c <__umoddi3+0x394>
4104ae1c:	4551883a 	add	r8,r8,r21
4104ae20:	10bfffc4 	addi	r2,r2,-1
4104ae24:	45405a2e 	bgeu	r8,r21,4104af90 <__umoddi3+0x4f8>
4104ae28:	100b883a 	mov	r5,r2
4104ae2c:	300c943a 	slli	r6,r6,16
4104ae30:	91ffffcc 	andi	r7,r18,65535
4104ae34:	9004d43a 	srli	r2,r18,16
4104ae38:	314cb03a 	or	r6,r6,r5
4104ae3c:	317fffcc 	andi	r5,r6,65535
4104ae40:	300cd43a 	srli	r6,r6,16
4104ae44:	29d3383a 	mul	r9,r5,r7
4104ae48:	288b383a 	mul	r5,r5,r2
4104ae4c:	31cf383a 	mul	r7,r6,r7
4104ae50:	4806d43a 	srli	r3,r9,16
4104ae54:	4111c83a 	sub	r8,r8,r4
4104ae58:	29cb883a 	add	r5,r5,r7
4104ae5c:	194b883a 	add	r5,r3,r5
4104ae60:	3085383a 	mul	r2,r6,r2
4104ae64:	29c0022e 	bgeu	r5,r7,4104ae70 <__umoddi3+0x3d8>
4104ae68:	00c00074 	movhi	r3,1
4104ae6c:	10c5883a 	add	r2,r2,r3
4104ae70:	2808d43a 	srli	r4,r5,16
4104ae74:	280a943a 	slli	r5,r5,16
4104ae78:	4a7fffcc 	andi	r9,r9,65535
4104ae7c:	2085883a 	add	r2,r4,r2
4104ae80:	2a4b883a 	add	r5,r5,r9
4104ae84:	40803636 	bltu	r8,r2,4104af60 <__umoddi3+0x4c8>
4104ae88:	40804d26 	beq	r8,r2,4104afc0 <__umoddi3+0x528>
4104ae8c:	4089c83a 	sub	r4,r8,r2
4104ae90:	280f883a 	mov	r7,r5
4104ae94:	81cfc83a 	sub	r7,r16,r7
4104ae98:	81c7803a 	cmpltu	r3,r16,r7
4104ae9c:	20c7c83a 	sub	r3,r4,r3
4104aea0:	1cc4983a 	sll	r2,r3,r19
4104aea4:	3d0ed83a 	srl	r7,r7,r20
4104aea8:	1d06d83a 	srl	r3,r3,r20
4104aeac:	11c4b03a 	or	r2,r2,r7
4104aeb0:	003f9306 	br	4104ad00 <__alt_data_end+0xfffcc500>
4104aeb4:	9ca6983a 	sll	r19,r19,r18
4104aeb8:	88e8d83a 	srl	r20,r17,r3
4104aebc:	80c4d83a 	srl	r2,r16,r3
4104aec0:	982cd43a 	srli	r22,r19,16
4104aec4:	8ca2983a 	sll	r17,r17,r18
4104aec8:	a009883a 	mov	r4,r20
4104aecc:	b00b883a 	mov	r5,r22
4104aed0:	1478b03a 	or	fp,r2,r17
4104aed4:	1040c740 	call	41040c74 <__umodsi3>
4104aed8:	a009883a 	mov	r4,r20
4104aedc:	b00b883a 	mov	r5,r22
4104aee0:	1023883a 	mov	r17,r2
4104aee4:	1040c100 	call	41040c10 <__udivsi3>
4104aee8:	9d7fffcc 	andi	r21,r19,65535
4104aeec:	880a943a 	slli	r5,r17,16
4104aef0:	e008d43a 	srli	r4,fp,16
4104aef4:	a885383a 	mul	r2,r21,r2
4104aef8:	84a8983a 	sll	r20,r16,r18
4104aefc:	2148b03a 	or	r4,r4,r5
4104af00:	2080042e 	bgeu	r4,r2,4104af14 <__umoddi3+0x47c>
4104af04:	24c9883a 	add	r4,r4,r19
4104af08:	24c00236 	bltu	r4,r19,4104af14 <__umoddi3+0x47c>
4104af0c:	2080012e 	bgeu	r4,r2,4104af14 <__umoddi3+0x47c>
4104af10:	24c9883a 	add	r4,r4,r19
4104af14:	20a3c83a 	sub	r17,r4,r2
4104af18:	b00b883a 	mov	r5,r22
4104af1c:	8809883a 	mov	r4,r17
4104af20:	1040c740 	call	41040c74 <__umodsi3>
4104af24:	102f883a 	mov	r23,r2
4104af28:	8809883a 	mov	r4,r17
4104af2c:	b00b883a 	mov	r5,r22
4104af30:	1040c100 	call	41040c10 <__udivsi3>
4104af34:	b82e943a 	slli	r23,r23,16
4104af38:	a885383a 	mul	r2,r21,r2
4104af3c:	e13fffcc 	andi	r4,fp,65535
4104af40:	25c8b03a 	or	r4,r4,r23
4104af44:	2080042e 	bgeu	r4,r2,4104af58 <__umoddi3+0x4c0>
4104af48:	24c9883a 	add	r4,r4,r19
4104af4c:	24c00236 	bltu	r4,r19,4104af58 <__umoddi3+0x4c0>
4104af50:	2080012e 	bgeu	r4,r2,4104af58 <__umoddi3+0x4c0>
4104af54:	24c9883a 	add	r4,r4,r19
4104af58:	20a3c83a 	sub	r17,r4,r2
4104af5c:	003f4806 	br	4104ac80 <__alt_data_end+0xfffcc480>
4104af60:	2c8fc83a 	sub	r7,r5,r18
4104af64:	1545c83a 	sub	r2,r2,r21
4104af68:	29cb803a 	cmpltu	r5,r5,r7
4104af6c:	1145c83a 	sub	r2,r2,r5
4104af70:	4089c83a 	sub	r4,r8,r2
4104af74:	003fc706 	br	4104ae94 <__alt_data_end+0xfffcc694>
4104af78:	01000604 	movi	r4,24
4104af7c:	003f1806 	br	4104abe0 <__alt_data_end+0xfffcc3e0>
4104af80:	00800604 	movi	r2,24
4104af84:	003f3206 	br	4104ac50 <__alt_data_end+0xfffcc450>
4104af88:	01000604 	movi	r4,24
4104af8c:	003ed906 	br	4104aaf4 <__alt_data_end+0xfffcc2f4>
4104af90:	413fa52e 	bgeu	r8,r4,4104ae28 <__alt_data_end+0xfffcc628>
4104af94:	297fff84 	addi	r5,r5,-2
4104af98:	4551883a 	add	r8,r8,r21
4104af9c:	003fa306 	br	4104ae2c <__alt_data_end+0xfffcc62c>
4104afa0:	15ff8b2e 	bgeu	r2,r23,4104add0 <__alt_data_end+0xfffcc5d0>
4104afa4:	31bfff84 	addi	r6,r6,-2
4104afa8:	1545883a 	add	r2,r2,r21
4104afac:	003f8906 	br	4104add4 <__alt_data_end+0xfffcc5d4>
4104afb0:	24c9883a 	add	r4,r4,r19
4104afb4:	003eee06 	br	4104ab70 <__alt_data_end+0xfffcc370>
4104afb8:	8005883a 	mov	r2,r16
4104afbc:	003f1706 	br	4104ac1c <__alt_data_end+0xfffcc41c>
4104afc0:	817fe736 	bltu	r16,r5,4104af60 <__alt_data_end+0xfffcc760>
4104afc4:	280f883a 	mov	r7,r5
4104afc8:	0009883a 	mov	r4,zero
4104afcc:	003fb106 	br	4104ae94 <__alt_data_end+0xfffcc694>

4104afd0 <__adddf3>:
4104afd0:	02c00434 	movhi	r11,16
4104afd4:	5affffc4 	addi	r11,r11,-1
4104afd8:	2806d7fa 	srli	r3,r5,31
4104afdc:	2ad4703a 	and	r10,r5,r11
4104afe0:	3ad2703a 	and	r9,r7,r11
4104afe4:	3804d53a 	srli	r2,r7,20
4104afe8:	3018d77a 	srli	r12,r6,29
4104afec:	280ad53a 	srli	r5,r5,20
4104aff0:	501490fa 	slli	r10,r10,3
4104aff4:	2010d77a 	srli	r8,r4,29
4104aff8:	481290fa 	slli	r9,r9,3
4104affc:	380ed7fa 	srli	r7,r7,31
4104b000:	defffb04 	addi	sp,sp,-20
4104b004:	dc800215 	stw	r18,8(sp)
4104b008:	dc400115 	stw	r17,4(sp)
4104b00c:	dc000015 	stw	r16,0(sp)
4104b010:	dfc00415 	stw	ra,16(sp)
4104b014:	dcc00315 	stw	r19,12(sp)
4104b018:	1c803fcc 	andi	r18,r3,255
4104b01c:	2c01ffcc 	andi	r16,r5,2047
4104b020:	5210b03a 	or	r8,r10,r8
4104b024:	202290fa 	slli	r17,r4,3
4104b028:	1081ffcc 	andi	r2,r2,2047
4104b02c:	4b12b03a 	or	r9,r9,r12
4104b030:	300c90fa 	slli	r6,r6,3
4104b034:	91c07526 	beq	r18,r7,4104b20c <__adddf3+0x23c>
4104b038:	8087c83a 	sub	r3,r16,r2
4104b03c:	00c0ab0e 	bge	zero,r3,4104b2ec <__adddf3+0x31c>
4104b040:	10002a1e 	bne	r2,zero,4104b0ec <__adddf3+0x11c>
4104b044:	4984b03a 	or	r2,r9,r6
4104b048:	1000961e 	bne	r2,zero,4104b2a4 <__adddf3+0x2d4>
4104b04c:	888001cc 	andi	r2,r17,7
4104b050:	10000726 	beq	r2,zero,4104b070 <__adddf3+0xa0>
4104b054:	888003cc 	andi	r2,r17,15
4104b058:	00c00104 	movi	r3,4
4104b05c:	10c00426 	beq	r2,r3,4104b070 <__adddf3+0xa0>
4104b060:	88c7883a 	add	r3,r17,r3
4104b064:	1c63803a 	cmpltu	r17,r3,r17
4104b068:	4451883a 	add	r8,r8,r17
4104b06c:	1823883a 	mov	r17,r3
4104b070:	4080202c 	andhi	r2,r8,128
4104b074:	10005926 	beq	r2,zero,4104b1dc <__adddf3+0x20c>
4104b078:	84000044 	addi	r16,r16,1
4104b07c:	0081ffc4 	movi	r2,2047
4104b080:	8080ba26 	beq	r16,r2,4104b36c <__adddf3+0x39c>
4104b084:	00bfe034 	movhi	r2,65408
4104b088:	10bfffc4 	addi	r2,r2,-1
4104b08c:	4090703a 	and	r8,r8,r2
4104b090:	4004977a 	slli	r2,r8,29
4104b094:	4010927a 	slli	r8,r8,9
4104b098:	8822d0fa 	srli	r17,r17,3
4104b09c:	8401ffcc 	andi	r16,r16,2047
4104b0a0:	4010d33a 	srli	r8,r8,12
4104b0a4:	9007883a 	mov	r3,r18
4104b0a8:	1444b03a 	or	r2,r2,r17
4104b0ac:	8401ffcc 	andi	r16,r16,2047
4104b0b0:	8020953a 	slli	r16,r16,20
4104b0b4:	18c03fcc 	andi	r3,r3,255
4104b0b8:	01000434 	movhi	r4,16
4104b0bc:	213fffc4 	addi	r4,r4,-1
4104b0c0:	180697fa 	slli	r3,r3,31
4104b0c4:	4110703a 	and	r8,r8,r4
4104b0c8:	4410b03a 	or	r8,r8,r16
4104b0cc:	40c6b03a 	or	r3,r8,r3
4104b0d0:	dfc00417 	ldw	ra,16(sp)
4104b0d4:	dcc00317 	ldw	r19,12(sp)
4104b0d8:	dc800217 	ldw	r18,8(sp)
4104b0dc:	dc400117 	ldw	r17,4(sp)
4104b0e0:	dc000017 	ldw	r16,0(sp)
4104b0e4:	dec00504 	addi	sp,sp,20
4104b0e8:	f800283a 	ret
4104b0ec:	0081ffc4 	movi	r2,2047
4104b0f0:	80bfd626 	beq	r16,r2,4104b04c <__alt_data_end+0xfffcc84c>
4104b0f4:	4a402034 	orhi	r9,r9,128
4104b0f8:	00800e04 	movi	r2,56
4104b0fc:	10c09f16 	blt	r2,r3,4104b37c <__adddf3+0x3ac>
4104b100:	008007c4 	movi	r2,31
4104b104:	10c0c216 	blt	r2,r3,4104b410 <__adddf3+0x440>
4104b108:	00800804 	movi	r2,32
4104b10c:	10c5c83a 	sub	r2,r2,r3
4104b110:	488a983a 	sll	r5,r9,r2
4104b114:	30c8d83a 	srl	r4,r6,r3
4104b118:	3084983a 	sll	r2,r6,r2
4104b11c:	48c6d83a 	srl	r3,r9,r3
4104b120:	290cb03a 	or	r6,r5,r4
4104b124:	1004c03a 	cmpne	r2,r2,zero
4104b128:	308cb03a 	or	r6,r6,r2
4104b12c:	898dc83a 	sub	r6,r17,r6
4104b130:	89a3803a 	cmpltu	r17,r17,r6
4104b134:	40d1c83a 	sub	r8,r8,r3
4104b138:	4451c83a 	sub	r8,r8,r17
4104b13c:	3023883a 	mov	r17,r6
4104b140:	4080202c 	andhi	r2,r8,128
4104b144:	10002326 	beq	r2,zero,4104b1d4 <__adddf3+0x204>
4104b148:	04c02034 	movhi	r19,128
4104b14c:	9cffffc4 	addi	r19,r19,-1
4104b150:	44e6703a 	and	r19,r8,r19
4104b154:	98007626 	beq	r19,zero,4104b330 <__adddf3+0x360>
4104b158:	9809883a 	mov	r4,r19
4104b15c:	104d5d40 	call	4104d5d4 <__clzsi2>
4104b160:	10fffe04 	addi	r3,r2,-8
4104b164:	010007c4 	movi	r4,31
4104b168:	20c07716 	blt	r4,r3,4104b348 <__adddf3+0x378>
4104b16c:	00800804 	movi	r2,32
4104b170:	10c5c83a 	sub	r2,r2,r3
4104b174:	8884d83a 	srl	r2,r17,r2
4104b178:	98d0983a 	sll	r8,r19,r3
4104b17c:	88e2983a 	sll	r17,r17,r3
4104b180:	1204b03a 	or	r2,r2,r8
4104b184:	1c007416 	blt	r3,r16,4104b358 <__adddf3+0x388>
4104b188:	1c21c83a 	sub	r16,r3,r16
4104b18c:	82000044 	addi	r8,r16,1
4104b190:	00c007c4 	movi	r3,31
4104b194:	1a009116 	blt	r3,r8,4104b3dc <__adddf3+0x40c>
4104b198:	00c00804 	movi	r3,32
4104b19c:	1a07c83a 	sub	r3,r3,r8
4104b1a0:	8a08d83a 	srl	r4,r17,r8
4104b1a4:	88e2983a 	sll	r17,r17,r3
4104b1a8:	10c6983a 	sll	r3,r2,r3
4104b1ac:	1210d83a 	srl	r8,r2,r8
4104b1b0:	8804c03a 	cmpne	r2,r17,zero
4104b1b4:	1906b03a 	or	r3,r3,r4
4104b1b8:	18a2b03a 	or	r17,r3,r2
4104b1bc:	0021883a 	mov	r16,zero
4104b1c0:	003fa206 	br	4104b04c <__alt_data_end+0xfffcc84c>
4104b1c4:	1890b03a 	or	r8,r3,r2
4104b1c8:	40017d26 	beq	r8,zero,4104b7c0 <__adddf3+0x7f0>
4104b1cc:	1011883a 	mov	r8,r2
4104b1d0:	1823883a 	mov	r17,r3
4104b1d4:	888001cc 	andi	r2,r17,7
4104b1d8:	103f9e1e 	bne	r2,zero,4104b054 <__alt_data_end+0xfffcc854>
4104b1dc:	4004977a 	slli	r2,r8,29
4104b1e0:	8822d0fa 	srli	r17,r17,3
4104b1e4:	4010d0fa 	srli	r8,r8,3
4104b1e8:	9007883a 	mov	r3,r18
4104b1ec:	1444b03a 	or	r2,r2,r17
4104b1f0:	0101ffc4 	movi	r4,2047
4104b1f4:	81002426 	beq	r16,r4,4104b288 <__adddf3+0x2b8>
4104b1f8:	8120703a 	and	r16,r16,r4
4104b1fc:	01000434 	movhi	r4,16
4104b200:	213fffc4 	addi	r4,r4,-1
4104b204:	4110703a 	and	r8,r8,r4
4104b208:	003fa806 	br	4104b0ac <__alt_data_end+0xfffcc8ac>
4104b20c:	8089c83a 	sub	r4,r16,r2
4104b210:	01005e0e 	bge	zero,r4,4104b38c <__adddf3+0x3bc>
4104b214:	10002b26 	beq	r2,zero,4104b2c4 <__adddf3+0x2f4>
4104b218:	0081ffc4 	movi	r2,2047
4104b21c:	80bf8b26 	beq	r16,r2,4104b04c <__alt_data_end+0xfffcc84c>
4104b220:	4a402034 	orhi	r9,r9,128
4104b224:	00800e04 	movi	r2,56
4104b228:	1100a40e 	bge	r2,r4,4104b4bc <__adddf3+0x4ec>
4104b22c:	498cb03a 	or	r6,r9,r6
4104b230:	300ac03a 	cmpne	r5,r6,zero
4104b234:	0013883a 	mov	r9,zero
4104b238:	2c4b883a 	add	r5,r5,r17
4104b23c:	2c63803a 	cmpltu	r17,r5,r17
4104b240:	4a11883a 	add	r8,r9,r8
4104b244:	8a11883a 	add	r8,r17,r8
4104b248:	2823883a 	mov	r17,r5
4104b24c:	4080202c 	andhi	r2,r8,128
4104b250:	103fe026 	beq	r2,zero,4104b1d4 <__alt_data_end+0xfffcc9d4>
4104b254:	84000044 	addi	r16,r16,1
4104b258:	0081ffc4 	movi	r2,2047
4104b25c:	8080d226 	beq	r16,r2,4104b5a8 <__adddf3+0x5d8>
4104b260:	00bfe034 	movhi	r2,65408
4104b264:	10bfffc4 	addi	r2,r2,-1
4104b268:	4090703a 	and	r8,r8,r2
4104b26c:	880ad07a 	srli	r5,r17,1
4104b270:	400897fa 	slli	r4,r8,31
4104b274:	88c0004c 	andi	r3,r17,1
4104b278:	28e2b03a 	or	r17,r5,r3
4104b27c:	4010d07a 	srli	r8,r8,1
4104b280:	2462b03a 	or	r17,r4,r17
4104b284:	003f7106 	br	4104b04c <__alt_data_end+0xfffcc84c>
4104b288:	4088b03a 	or	r4,r8,r2
4104b28c:	20014526 	beq	r4,zero,4104b7a4 <__adddf3+0x7d4>
4104b290:	01000434 	movhi	r4,16
4104b294:	42000234 	orhi	r8,r8,8
4104b298:	213fffc4 	addi	r4,r4,-1
4104b29c:	4110703a 	and	r8,r8,r4
4104b2a0:	003f8206 	br	4104b0ac <__alt_data_end+0xfffcc8ac>
4104b2a4:	18ffffc4 	addi	r3,r3,-1
4104b2a8:	1800491e 	bne	r3,zero,4104b3d0 <__adddf3+0x400>
4104b2ac:	898bc83a 	sub	r5,r17,r6
4104b2b0:	8963803a 	cmpltu	r17,r17,r5
4104b2b4:	4251c83a 	sub	r8,r8,r9
4104b2b8:	4451c83a 	sub	r8,r8,r17
4104b2bc:	2823883a 	mov	r17,r5
4104b2c0:	003f9f06 	br	4104b140 <__alt_data_end+0xfffcc940>
4104b2c4:	4984b03a 	or	r2,r9,r6
4104b2c8:	103f6026 	beq	r2,zero,4104b04c <__alt_data_end+0xfffcc84c>
4104b2cc:	213fffc4 	addi	r4,r4,-1
4104b2d0:	2000931e 	bne	r4,zero,4104b520 <__adddf3+0x550>
4104b2d4:	898d883a 	add	r6,r17,r6
4104b2d8:	3463803a 	cmpltu	r17,r6,r17
4104b2dc:	4251883a 	add	r8,r8,r9
4104b2e0:	8a11883a 	add	r8,r17,r8
4104b2e4:	3023883a 	mov	r17,r6
4104b2e8:	003fd806 	br	4104b24c <__alt_data_end+0xfffcca4c>
4104b2ec:	1800541e 	bne	r3,zero,4104b440 <__adddf3+0x470>
4104b2f0:	80800044 	addi	r2,r16,1
4104b2f4:	1081ffcc 	andi	r2,r2,2047
4104b2f8:	00c00044 	movi	r3,1
4104b2fc:	1880a00e 	bge	r3,r2,4104b580 <__adddf3+0x5b0>
4104b300:	8989c83a 	sub	r4,r17,r6
4104b304:	8905803a 	cmpltu	r2,r17,r4
4104b308:	4267c83a 	sub	r19,r8,r9
4104b30c:	98a7c83a 	sub	r19,r19,r2
4104b310:	9880202c 	andhi	r2,r19,128
4104b314:	10006326 	beq	r2,zero,4104b4a4 <__adddf3+0x4d4>
4104b318:	3463c83a 	sub	r17,r6,r17
4104b31c:	4a07c83a 	sub	r3,r9,r8
4104b320:	344d803a 	cmpltu	r6,r6,r17
4104b324:	19a7c83a 	sub	r19,r3,r6
4104b328:	3825883a 	mov	r18,r7
4104b32c:	983f8a1e 	bne	r19,zero,4104b158 <__alt_data_end+0xfffcc958>
4104b330:	8809883a 	mov	r4,r17
4104b334:	104d5d40 	call	4104d5d4 <__clzsi2>
4104b338:	10800804 	addi	r2,r2,32
4104b33c:	10fffe04 	addi	r3,r2,-8
4104b340:	010007c4 	movi	r4,31
4104b344:	20ff890e 	bge	r4,r3,4104b16c <__alt_data_end+0xfffcc96c>
4104b348:	10bff604 	addi	r2,r2,-40
4104b34c:	8884983a 	sll	r2,r17,r2
4104b350:	0023883a 	mov	r17,zero
4104b354:	1c3f8c0e 	bge	r3,r16,4104b188 <__alt_data_end+0xfffcc988>
4104b358:	023fe034 	movhi	r8,65408
4104b35c:	423fffc4 	addi	r8,r8,-1
4104b360:	80e1c83a 	sub	r16,r16,r3
4104b364:	1210703a 	and	r8,r2,r8
4104b368:	003f3806 	br	4104b04c <__alt_data_end+0xfffcc84c>
4104b36c:	9007883a 	mov	r3,r18
4104b370:	0011883a 	mov	r8,zero
4104b374:	0005883a 	mov	r2,zero
4104b378:	003f4c06 	br	4104b0ac <__alt_data_end+0xfffcc8ac>
4104b37c:	498cb03a 	or	r6,r9,r6
4104b380:	300cc03a 	cmpne	r6,r6,zero
4104b384:	0007883a 	mov	r3,zero
4104b388:	003f6806 	br	4104b12c <__alt_data_end+0xfffcc92c>
4104b38c:	20009c1e 	bne	r4,zero,4104b600 <__adddf3+0x630>
4104b390:	80800044 	addi	r2,r16,1
4104b394:	1141ffcc 	andi	r5,r2,2047
4104b398:	01000044 	movi	r4,1
4104b39c:	2140670e 	bge	r4,r5,4104b53c <__adddf3+0x56c>
4104b3a0:	0101ffc4 	movi	r4,2047
4104b3a4:	11007f26 	beq	r2,r4,4104b5a4 <__adddf3+0x5d4>
4104b3a8:	898d883a 	add	r6,r17,r6
4104b3ac:	4247883a 	add	r3,r8,r9
4104b3b0:	3451803a 	cmpltu	r8,r6,r17
4104b3b4:	40d1883a 	add	r8,r8,r3
4104b3b8:	402297fa 	slli	r17,r8,31
4104b3bc:	300cd07a 	srli	r6,r6,1
4104b3c0:	4010d07a 	srli	r8,r8,1
4104b3c4:	1021883a 	mov	r16,r2
4104b3c8:	89a2b03a 	or	r17,r17,r6
4104b3cc:	003f1f06 	br	4104b04c <__alt_data_end+0xfffcc84c>
4104b3d0:	0081ffc4 	movi	r2,2047
4104b3d4:	80bf481e 	bne	r16,r2,4104b0f8 <__alt_data_end+0xfffcc8f8>
4104b3d8:	003f1c06 	br	4104b04c <__alt_data_end+0xfffcc84c>
4104b3dc:	843ff844 	addi	r16,r16,-31
4104b3e0:	01000804 	movi	r4,32
4104b3e4:	1406d83a 	srl	r3,r2,r16
4104b3e8:	41005026 	beq	r8,r4,4104b52c <__adddf3+0x55c>
4104b3ec:	01001004 	movi	r4,64
4104b3f0:	2211c83a 	sub	r8,r4,r8
4104b3f4:	1204983a 	sll	r2,r2,r8
4104b3f8:	88a2b03a 	or	r17,r17,r2
4104b3fc:	8822c03a 	cmpne	r17,r17,zero
4104b400:	1c62b03a 	or	r17,r3,r17
4104b404:	0011883a 	mov	r8,zero
4104b408:	0021883a 	mov	r16,zero
4104b40c:	003f7106 	br	4104b1d4 <__alt_data_end+0xfffcc9d4>
4104b410:	193ff804 	addi	r4,r3,-32
4104b414:	00800804 	movi	r2,32
4104b418:	4908d83a 	srl	r4,r9,r4
4104b41c:	18804526 	beq	r3,r2,4104b534 <__adddf3+0x564>
4104b420:	00801004 	movi	r2,64
4104b424:	10c5c83a 	sub	r2,r2,r3
4104b428:	4886983a 	sll	r3,r9,r2
4104b42c:	198cb03a 	or	r6,r3,r6
4104b430:	300cc03a 	cmpne	r6,r6,zero
4104b434:	218cb03a 	or	r6,r4,r6
4104b438:	0007883a 	mov	r3,zero
4104b43c:	003f3b06 	br	4104b12c <__alt_data_end+0xfffcc92c>
4104b440:	80002a26 	beq	r16,zero,4104b4ec <__adddf3+0x51c>
4104b444:	0101ffc4 	movi	r4,2047
4104b448:	11006826 	beq	r2,r4,4104b5ec <__adddf3+0x61c>
4104b44c:	00c7c83a 	sub	r3,zero,r3
4104b450:	42002034 	orhi	r8,r8,128
4104b454:	01000e04 	movi	r4,56
4104b458:	20c07c16 	blt	r4,r3,4104b64c <__adddf3+0x67c>
4104b45c:	010007c4 	movi	r4,31
4104b460:	20c0da16 	blt	r4,r3,4104b7cc <__adddf3+0x7fc>
4104b464:	01000804 	movi	r4,32
4104b468:	20c9c83a 	sub	r4,r4,r3
4104b46c:	4114983a 	sll	r10,r8,r4
4104b470:	88cad83a 	srl	r5,r17,r3
4104b474:	8908983a 	sll	r4,r17,r4
4104b478:	40c6d83a 	srl	r3,r8,r3
4104b47c:	5162b03a 	or	r17,r10,r5
4104b480:	2008c03a 	cmpne	r4,r4,zero
4104b484:	8922b03a 	or	r17,r17,r4
4104b488:	3463c83a 	sub	r17,r6,r17
4104b48c:	48c7c83a 	sub	r3,r9,r3
4104b490:	344d803a 	cmpltu	r6,r6,r17
4104b494:	1991c83a 	sub	r8,r3,r6
4104b498:	1021883a 	mov	r16,r2
4104b49c:	3825883a 	mov	r18,r7
4104b4a0:	003f2706 	br	4104b140 <__alt_data_end+0xfffcc940>
4104b4a4:	24d0b03a 	or	r8,r4,r19
4104b4a8:	40001b1e 	bne	r8,zero,4104b518 <__adddf3+0x548>
4104b4ac:	0005883a 	mov	r2,zero
4104b4b0:	0007883a 	mov	r3,zero
4104b4b4:	0021883a 	mov	r16,zero
4104b4b8:	003f4d06 	br	4104b1f0 <__alt_data_end+0xfffcc9f0>
4104b4bc:	008007c4 	movi	r2,31
4104b4c0:	11003c16 	blt	r2,r4,4104b5b4 <__adddf3+0x5e4>
4104b4c4:	00800804 	movi	r2,32
4104b4c8:	1105c83a 	sub	r2,r2,r4
4104b4cc:	488e983a 	sll	r7,r9,r2
4104b4d0:	310ad83a 	srl	r5,r6,r4
4104b4d4:	3084983a 	sll	r2,r6,r2
4104b4d8:	4912d83a 	srl	r9,r9,r4
4104b4dc:	394ab03a 	or	r5,r7,r5
4104b4e0:	1004c03a 	cmpne	r2,r2,zero
4104b4e4:	288ab03a 	or	r5,r5,r2
4104b4e8:	003f5306 	br	4104b238 <__alt_data_end+0xfffcca38>
4104b4ec:	4448b03a 	or	r4,r8,r17
4104b4f0:	20003e26 	beq	r4,zero,4104b5ec <__adddf3+0x61c>
4104b4f4:	00c6303a 	nor	r3,zero,r3
4104b4f8:	18003a1e 	bne	r3,zero,4104b5e4 <__adddf3+0x614>
4104b4fc:	3463c83a 	sub	r17,r6,r17
4104b500:	4a07c83a 	sub	r3,r9,r8
4104b504:	344d803a 	cmpltu	r6,r6,r17
4104b508:	1991c83a 	sub	r8,r3,r6
4104b50c:	1021883a 	mov	r16,r2
4104b510:	3825883a 	mov	r18,r7
4104b514:	003f0a06 	br	4104b140 <__alt_data_end+0xfffcc940>
4104b518:	2023883a 	mov	r17,r4
4104b51c:	003f0d06 	br	4104b154 <__alt_data_end+0xfffcc954>
4104b520:	0081ffc4 	movi	r2,2047
4104b524:	80bf3f1e 	bne	r16,r2,4104b224 <__alt_data_end+0xfffcca24>
4104b528:	003ec806 	br	4104b04c <__alt_data_end+0xfffcc84c>
4104b52c:	0005883a 	mov	r2,zero
4104b530:	003fb106 	br	4104b3f8 <__alt_data_end+0xfffccbf8>
4104b534:	0007883a 	mov	r3,zero
4104b538:	003fbc06 	br	4104b42c <__alt_data_end+0xfffccc2c>
4104b53c:	4444b03a 	or	r2,r8,r17
4104b540:	8000871e 	bne	r16,zero,4104b760 <__adddf3+0x790>
4104b544:	1000ba26 	beq	r2,zero,4104b830 <__adddf3+0x860>
4104b548:	4984b03a 	or	r2,r9,r6
4104b54c:	103ebf26 	beq	r2,zero,4104b04c <__alt_data_end+0xfffcc84c>
4104b550:	8985883a 	add	r2,r17,r6
4104b554:	4247883a 	add	r3,r8,r9
4104b558:	1451803a 	cmpltu	r8,r2,r17
4104b55c:	40d1883a 	add	r8,r8,r3
4104b560:	40c0202c 	andhi	r3,r8,128
4104b564:	1023883a 	mov	r17,r2
4104b568:	183f1a26 	beq	r3,zero,4104b1d4 <__alt_data_end+0xfffcc9d4>
4104b56c:	00bfe034 	movhi	r2,65408
4104b570:	10bfffc4 	addi	r2,r2,-1
4104b574:	2021883a 	mov	r16,r4
4104b578:	4090703a 	and	r8,r8,r2
4104b57c:	003eb306 	br	4104b04c <__alt_data_end+0xfffcc84c>
4104b580:	4444b03a 	or	r2,r8,r17
4104b584:	8000291e 	bne	r16,zero,4104b62c <__adddf3+0x65c>
4104b588:	10004b1e 	bne	r2,zero,4104b6b8 <__adddf3+0x6e8>
4104b58c:	4990b03a 	or	r8,r9,r6
4104b590:	40008b26 	beq	r8,zero,4104b7c0 <__adddf3+0x7f0>
4104b594:	4811883a 	mov	r8,r9
4104b598:	3023883a 	mov	r17,r6
4104b59c:	3825883a 	mov	r18,r7
4104b5a0:	003eaa06 	br	4104b04c <__alt_data_end+0xfffcc84c>
4104b5a4:	1021883a 	mov	r16,r2
4104b5a8:	0011883a 	mov	r8,zero
4104b5ac:	0005883a 	mov	r2,zero
4104b5b0:	003f0f06 	br	4104b1f0 <__alt_data_end+0xfffcc9f0>
4104b5b4:	217ff804 	addi	r5,r4,-32
4104b5b8:	00800804 	movi	r2,32
4104b5bc:	494ad83a 	srl	r5,r9,r5
4104b5c0:	20807d26 	beq	r4,r2,4104b7b8 <__adddf3+0x7e8>
4104b5c4:	00801004 	movi	r2,64
4104b5c8:	1109c83a 	sub	r4,r2,r4
4104b5cc:	4912983a 	sll	r9,r9,r4
4104b5d0:	498cb03a 	or	r6,r9,r6
4104b5d4:	300cc03a 	cmpne	r6,r6,zero
4104b5d8:	298ab03a 	or	r5,r5,r6
4104b5dc:	0013883a 	mov	r9,zero
4104b5e0:	003f1506 	br	4104b238 <__alt_data_end+0xfffcca38>
4104b5e4:	0101ffc4 	movi	r4,2047
4104b5e8:	113f9a1e 	bne	r2,r4,4104b454 <__alt_data_end+0xfffccc54>
4104b5ec:	4811883a 	mov	r8,r9
4104b5f0:	3023883a 	mov	r17,r6
4104b5f4:	1021883a 	mov	r16,r2
4104b5f8:	3825883a 	mov	r18,r7
4104b5fc:	003e9306 	br	4104b04c <__alt_data_end+0xfffcc84c>
4104b600:	8000161e 	bne	r16,zero,4104b65c <__adddf3+0x68c>
4104b604:	444ab03a 	or	r5,r8,r17
4104b608:	28005126 	beq	r5,zero,4104b750 <__adddf3+0x780>
4104b60c:	0108303a 	nor	r4,zero,r4
4104b610:	20004d1e 	bne	r4,zero,4104b748 <__adddf3+0x778>
4104b614:	89a3883a 	add	r17,r17,r6
4104b618:	4253883a 	add	r9,r8,r9
4104b61c:	898d803a 	cmpltu	r6,r17,r6
4104b620:	3251883a 	add	r8,r6,r9
4104b624:	1021883a 	mov	r16,r2
4104b628:	003f0806 	br	4104b24c <__alt_data_end+0xfffcca4c>
4104b62c:	1000301e 	bne	r2,zero,4104b6f0 <__adddf3+0x720>
4104b630:	4984b03a 	or	r2,r9,r6
4104b634:	10007126 	beq	r2,zero,4104b7fc <__adddf3+0x82c>
4104b638:	4811883a 	mov	r8,r9
4104b63c:	3023883a 	mov	r17,r6
4104b640:	3825883a 	mov	r18,r7
4104b644:	0401ffc4 	movi	r16,2047
4104b648:	003e8006 	br	4104b04c <__alt_data_end+0xfffcc84c>
4104b64c:	4462b03a 	or	r17,r8,r17
4104b650:	8822c03a 	cmpne	r17,r17,zero
4104b654:	0007883a 	mov	r3,zero
4104b658:	003f8b06 	br	4104b488 <__alt_data_end+0xfffccc88>
4104b65c:	0141ffc4 	movi	r5,2047
4104b660:	11403b26 	beq	r2,r5,4104b750 <__adddf3+0x780>
4104b664:	0109c83a 	sub	r4,zero,r4
4104b668:	42002034 	orhi	r8,r8,128
4104b66c:	01400e04 	movi	r5,56
4104b670:	29006716 	blt	r5,r4,4104b810 <__adddf3+0x840>
4104b674:	014007c4 	movi	r5,31
4104b678:	29007016 	blt	r5,r4,4104b83c <__adddf3+0x86c>
4104b67c:	01400804 	movi	r5,32
4104b680:	290bc83a 	sub	r5,r5,r4
4104b684:	4154983a 	sll	r10,r8,r5
4104b688:	890ed83a 	srl	r7,r17,r4
4104b68c:	894a983a 	sll	r5,r17,r5
4104b690:	4108d83a 	srl	r4,r8,r4
4104b694:	51e2b03a 	or	r17,r10,r7
4104b698:	280ac03a 	cmpne	r5,r5,zero
4104b69c:	8962b03a 	or	r17,r17,r5
4104b6a0:	89a3883a 	add	r17,r17,r6
4104b6a4:	2253883a 	add	r9,r4,r9
4104b6a8:	898d803a 	cmpltu	r6,r17,r6
4104b6ac:	3251883a 	add	r8,r6,r9
4104b6b0:	1021883a 	mov	r16,r2
4104b6b4:	003ee506 	br	4104b24c <__alt_data_end+0xfffcca4c>
4104b6b8:	4984b03a 	or	r2,r9,r6
4104b6bc:	103e6326 	beq	r2,zero,4104b04c <__alt_data_end+0xfffcc84c>
4104b6c0:	8987c83a 	sub	r3,r17,r6
4104b6c4:	88c9803a 	cmpltu	r4,r17,r3
4104b6c8:	4245c83a 	sub	r2,r8,r9
4104b6cc:	1105c83a 	sub	r2,r2,r4
4104b6d0:	1100202c 	andhi	r4,r2,128
4104b6d4:	203ebb26 	beq	r4,zero,4104b1c4 <__alt_data_end+0xfffcc9c4>
4104b6d8:	3463c83a 	sub	r17,r6,r17
4104b6dc:	4a07c83a 	sub	r3,r9,r8
4104b6e0:	344d803a 	cmpltu	r6,r6,r17
4104b6e4:	1991c83a 	sub	r8,r3,r6
4104b6e8:	3825883a 	mov	r18,r7
4104b6ec:	003e5706 	br	4104b04c <__alt_data_end+0xfffcc84c>
4104b6f0:	4984b03a 	or	r2,r9,r6
4104b6f4:	10002e26 	beq	r2,zero,4104b7b0 <__adddf3+0x7e0>
4104b6f8:	4004d0fa 	srli	r2,r8,3
4104b6fc:	8822d0fa 	srli	r17,r17,3
4104b700:	4010977a 	slli	r8,r8,29
4104b704:	10c0022c 	andhi	r3,r2,8
4104b708:	4462b03a 	or	r17,r8,r17
4104b70c:	18000826 	beq	r3,zero,4104b730 <__adddf3+0x760>
4104b710:	4808d0fa 	srli	r4,r9,3
4104b714:	20c0022c 	andhi	r3,r4,8
4104b718:	1800051e 	bne	r3,zero,4104b730 <__adddf3+0x760>
4104b71c:	300cd0fa 	srli	r6,r6,3
4104b720:	4806977a 	slli	r3,r9,29
4104b724:	2005883a 	mov	r2,r4
4104b728:	3825883a 	mov	r18,r7
4104b72c:	19a2b03a 	or	r17,r3,r6
4104b730:	8810d77a 	srli	r8,r17,29
4104b734:	100490fa 	slli	r2,r2,3
4104b738:	882290fa 	slli	r17,r17,3
4104b73c:	0401ffc4 	movi	r16,2047
4104b740:	4090b03a 	or	r8,r8,r2
4104b744:	003e4106 	br	4104b04c <__alt_data_end+0xfffcc84c>
4104b748:	0141ffc4 	movi	r5,2047
4104b74c:	117fc71e 	bne	r2,r5,4104b66c <__alt_data_end+0xfffcce6c>
4104b750:	4811883a 	mov	r8,r9
4104b754:	3023883a 	mov	r17,r6
4104b758:	1021883a 	mov	r16,r2
4104b75c:	003e3b06 	br	4104b04c <__alt_data_end+0xfffcc84c>
4104b760:	10002f26 	beq	r2,zero,4104b820 <__adddf3+0x850>
4104b764:	4984b03a 	or	r2,r9,r6
4104b768:	10001126 	beq	r2,zero,4104b7b0 <__adddf3+0x7e0>
4104b76c:	4004d0fa 	srli	r2,r8,3
4104b770:	8822d0fa 	srli	r17,r17,3
4104b774:	4010977a 	slli	r8,r8,29
4104b778:	10c0022c 	andhi	r3,r2,8
4104b77c:	4462b03a 	or	r17,r8,r17
4104b780:	183feb26 	beq	r3,zero,4104b730 <__alt_data_end+0xfffccf30>
4104b784:	4808d0fa 	srli	r4,r9,3
4104b788:	20c0022c 	andhi	r3,r4,8
4104b78c:	183fe81e 	bne	r3,zero,4104b730 <__alt_data_end+0xfffccf30>
4104b790:	300cd0fa 	srli	r6,r6,3
4104b794:	4806977a 	slli	r3,r9,29
4104b798:	2005883a 	mov	r2,r4
4104b79c:	19a2b03a 	or	r17,r3,r6
4104b7a0:	003fe306 	br	4104b730 <__alt_data_end+0xfffccf30>
4104b7a4:	0011883a 	mov	r8,zero
4104b7a8:	0005883a 	mov	r2,zero
4104b7ac:	003e3f06 	br	4104b0ac <__alt_data_end+0xfffcc8ac>
4104b7b0:	0401ffc4 	movi	r16,2047
4104b7b4:	003e2506 	br	4104b04c <__alt_data_end+0xfffcc84c>
4104b7b8:	0013883a 	mov	r9,zero
4104b7bc:	003f8406 	br	4104b5d0 <__alt_data_end+0xfffccdd0>
4104b7c0:	0005883a 	mov	r2,zero
4104b7c4:	0007883a 	mov	r3,zero
4104b7c8:	003e8906 	br	4104b1f0 <__alt_data_end+0xfffcc9f0>
4104b7cc:	197ff804 	addi	r5,r3,-32
4104b7d0:	01000804 	movi	r4,32
4104b7d4:	414ad83a 	srl	r5,r8,r5
4104b7d8:	19002426 	beq	r3,r4,4104b86c <__adddf3+0x89c>
4104b7dc:	01001004 	movi	r4,64
4104b7e0:	20c7c83a 	sub	r3,r4,r3
4104b7e4:	40c6983a 	sll	r3,r8,r3
4104b7e8:	1c46b03a 	or	r3,r3,r17
4104b7ec:	1806c03a 	cmpne	r3,r3,zero
4104b7f0:	28e2b03a 	or	r17,r5,r3
4104b7f4:	0007883a 	mov	r3,zero
4104b7f8:	003f2306 	br	4104b488 <__alt_data_end+0xfffccc88>
4104b7fc:	0007883a 	mov	r3,zero
4104b800:	5811883a 	mov	r8,r11
4104b804:	00bfffc4 	movi	r2,-1
4104b808:	0401ffc4 	movi	r16,2047
4104b80c:	003e7806 	br	4104b1f0 <__alt_data_end+0xfffcc9f0>
4104b810:	4462b03a 	or	r17,r8,r17
4104b814:	8822c03a 	cmpne	r17,r17,zero
4104b818:	0009883a 	mov	r4,zero
4104b81c:	003fa006 	br	4104b6a0 <__alt_data_end+0xfffccea0>
4104b820:	4811883a 	mov	r8,r9
4104b824:	3023883a 	mov	r17,r6
4104b828:	0401ffc4 	movi	r16,2047
4104b82c:	003e0706 	br	4104b04c <__alt_data_end+0xfffcc84c>
4104b830:	4811883a 	mov	r8,r9
4104b834:	3023883a 	mov	r17,r6
4104b838:	003e0406 	br	4104b04c <__alt_data_end+0xfffcc84c>
4104b83c:	21fff804 	addi	r7,r4,-32
4104b840:	01400804 	movi	r5,32
4104b844:	41ced83a 	srl	r7,r8,r7
4104b848:	21400a26 	beq	r4,r5,4104b874 <__adddf3+0x8a4>
4104b84c:	01401004 	movi	r5,64
4104b850:	2909c83a 	sub	r4,r5,r4
4104b854:	4108983a 	sll	r4,r8,r4
4104b858:	2448b03a 	or	r4,r4,r17
4104b85c:	2008c03a 	cmpne	r4,r4,zero
4104b860:	3922b03a 	or	r17,r7,r4
4104b864:	0009883a 	mov	r4,zero
4104b868:	003f8d06 	br	4104b6a0 <__alt_data_end+0xfffccea0>
4104b86c:	0007883a 	mov	r3,zero
4104b870:	003fdd06 	br	4104b7e8 <__alt_data_end+0xfffccfe8>
4104b874:	0009883a 	mov	r4,zero
4104b878:	003ff706 	br	4104b858 <__alt_data_end+0xfffcd058>

4104b87c <__divdf3>:
4104b87c:	defff204 	addi	sp,sp,-56
4104b880:	dd400915 	stw	r21,36(sp)
4104b884:	282ad53a 	srli	r21,r5,20
4104b888:	dd000815 	stw	r20,32(sp)
4104b88c:	2828d7fa 	srli	r20,r5,31
4104b890:	dc000415 	stw	r16,16(sp)
4104b894:	04000434 	movhi	r16,16
4104b898:	df000c15 	stw	fp,48(sp)
4104b89c:	843fffc4 	addi	r16,r16,-1
4104b8a0:	dfc00d15 	stw	ra,52(sp)
4104b8a4:	ddc00b15 	stw	r23,44(sp)
4104b8a8:	dd800a15 	stw	r22,40(sp)
4104b8ac:	dcc00715 	stw	r19,28(sp)
4104b8b0:	dc800615 	stw	r18,24(sp)
4104b8b4:	dc400515 	stw	r17,20(sp)
4104b8b8:	ad41ffcc 	andi	r21,r21,2047
4104b8bc:	2c20703a 	and	r16,r5,r16
4104b8c0:	a7003fcc 	andi	fp,r20,255
4104b8c4:	a8006126 	beq	r21,zero,4104ba4c <__divdf3+0x1d0>
4104b8c8:	0081ffc4 	movi	r2,2047
4104b8cc:	2025883a 	mov	r18,r4
4104b8d0:	a8803726 	beq	r21,r2,4104b9b0 <__divdf3+0x134>
4104b8d4:	80800434 	orhi	r2,r16,16
4104b8d8:	100490fa 	slli	r2,r2,3
4104b8dc:	2020d77a 	srli	r16,r4,29
4104b8e0:	202490fa 	slli	r18,r4,3
4104b8e4:	ad7f0044 	addi	r21,r21,-1023
4104b8e8:	80a0b03a 	or	r16,r16,r2
4104b8ec:	0027883a 	mov	r19,zero
4104b8f0:	0013883a 	mov	r9,zero
4104b8f4:	3804d53a 	srli	r2,r7,20
4104b8f8:	382cd7fa 	srli	r22,r7,31
4104b8fc:	04400434 	movhi	r17,16
4104b900:	8c7fffc4 	addi	r17,r17,-1
4104b904:	1081ffcc 	andi	r2,r2,2047
4104b908:	3011883a 	mov	r8,r6
4104b90c:	3c62703a 	and	r17,r7,r17
4104b910:	b5c03fcc 	andi	r23,r22,255
4104b914:	10006c26 	beq	r2,zero,4104bac8 <__divdf3+0x24c>
4104b918:	00c1ffc4 	movi	r3,2047
4104b91c:	10c06426 	beq	r2,r3,4104bab0 <__divdf3+0x234>
4104b920:	88c00434 	orhi	r3,r17,16
4104b924:	180690fa 	slli	r3,r3,3
4104b928:	3022d77a 	srli	r17,r6,29
4104b92c:	301090fa 	slli	r8,r6,3
4104b930:	10bf0044 	addi	r2,r2,-1023
4104b934:	88e2b03a 	or	r17,r17,r3
4104b938:	000f883a 	mov	r7,zero
4104b93c:	a58cf03a 	xor	r6,r20,r22
4104b940:	3cc8b03a 	or	r4,r7,r19
4104b944:	a8abc83a 	sub	r21,r21,r2
4104b948:	008003c4 	movi	r2,15
4104b94c:	3007883a 	mov	r3,r6
4104b950:	34c03fcc 	andi	r19,r6,255
4104b954:	11009036 	bltu	r2,r4,4104bb98 <__divdf3+0x31c>
4104b958:	200890ba 	slli	r4,r4,2
4104b95c:	00904174 	movhi	r2,16645
4104b960:	10ae5c04 	addi	r2,r2,-18064
4104b964:	2089883a 	add	r4,r4,r2
4104b968:	20800017 	ldw	r2,0(r4)
4104b96c:	1000683a 	jmp	r2
4104b970:	4104bb98 	cmpnei	r4,r8,4846
4104b974:	4104b9e8 	cmpgeui	r4,r8,4839
4104b978:	4104bb88 	cmpgei	r4,r8,4846
4104b97c:	4104b9dc 	xori	r4,r8,4839
4104b980:	4104bb88 	cmpgei	r4,r8,4846
4104b984:	4104bb5c 	xori	r4,r8,4845
4104b988:	4104bb88 	cmpgei	r4,r8,4846
4104b98c:	4104b9dc 	xori	r4,r8,4839
4104b990:	4104b9e8 	cmpgeui	r4,r8,4839
4104b994:	4104b9e8 	cmpgeui	r4,r8,4839
4104b998:	4104bb5c 	xori	r4,r8,4845
4104b99c:	4104b9dc 	xori	r4,r8,4839
4104b9a0:	4104b9cc 	andi	r4,r8,4839
4104b9a4:	4104b9cc 	andi	r4,r8,4839
4104b9a8:	4104b9cc 	andi	r4,r8,4839
4104b9ac:	4104be7c 	xorhi	r4,r8,4857
4104b9b0:	2404b03a 	or	r2,r4,r16
4104b9b4:	1000661e 	bne	r2,zero,4104bb50 <__divdf3+0x2d4>
4104b9b8:	04c00204 	movi	r19,8
4104b9bc:	0021883a 	mov	r16,zero
4104b9c0:	0025883a 	mov	r18,zero
4104b9c4:	02400084 	movi	r9,2
4104b9c8:	003fca06 	br	4104b8f4 <__alt_data_end+0xfffcd0f4>
4104b9cc:	8023883a 	mov	r17,r16
4104b9d0:	9011883a 	mov	r8,r18
4104b9d4:	e02f883a 	mov	r23,fp
4104b9d8:	480f883a 	mov	r7,r9
4104b9dc:	00800084 	movi	r2,2
4104b9e0:	3881311e 	bne	r7,r2,4104bea8 <__divdf3+0x62c>
4104b9e4:	b827883a 	mov	r19,r23
4104b9e8:	98c0004c 	andi	r3,r19,1
4104b9ec:	0081ffc4 	movi	r2,2047
4104b9f0:	000b883a 	mov	r5,zero
4104b9f4:	0025883a 	mov	r18,zero
4104b9f8:	1004953a 	slli	r2,r2,20
4104b9fc:	18c03fcc 	andi	r3,r3,255
4104ba00:	04400434 	movhi	r17,16
4104ba04:	8c7fffc4 	addi	r17,r17,-1
4104ba08:	180697fa 	slli	r3,r3,31
4104ba0c:	2c4a703a 	and	r5,r5,r17
4104ba10:	288ab03a 	or	r5,r5,r2
4104ba14:	28c6b03a 	or	r3,r5,r3
4104ba18:	9005883a 	mov	r2,r18
4104ba1c:	dfc00d17 	ldw	ra,52(sp)
4104ba20:	df000c17 	ldw	fp,48(sp)
4104ba24:	ddc00b17 	ldw	r23,44(sp)
4104ba28:	dd800a17 	ldw	r22,40(sp)
4104ba2c:	dd400917 	ldw	r21,36(sp)
4104ba30:	dd000817 	ldw	r20,32(sp)
4104ba34:	dcc00717 	ldw	r19,28(sp)
4104ba38:	dc800617 	ldw	r18,24(sp)
4104ba3c:	dc400517 	ldw	r17,20(sp)
4104ba40:	dc000417 	ldw	r16,16(sp)
4104ba44:	dec00e04 	addi	sp,sp,56
4104ba48:	f800283a 	ret
4104ba4c:	2404b03a 	or	r2,r4,r16
4104ba50:	2027883a 	mov	r19,r4
4104ba54:	10003926 	beq	r2,zero,4104bb3c <__divdf3+0x2c0>
4104ba58:	80012e26 	beq	r16,zero,4104bf14 <__divdf3+0x698>
4104ba5c:	8009883a 	mov	r4,r16
4104ba60:	d9800315 	stw	r6,12(sp)
4104ba64:	d9c00215 	stw	r7,8(sp)
4104ba68:	104d5d40 	call	4104d5d4 <__clzsi2>
4104ba6c:	d9800317 	ldw	r6,12(sp)
4104ba70:	d9c00217 	ldw	r7,8(sp)
4104ba74:	113ffd44 	addi	r4,r2,-11
4104ba78:	00c00704 	movi	r3,28
4104ba7c:	19012116 	blt	r3,r4,4104bf04 <__divdf3+0x688>
4104ba80:	00c00744 	movi	r3,29
4104ba84:	147ffe04 	addi	r17,r2,-8
4104ba88:	1907c83a 	sub	r3,r3,r4
4104ba8c:	8460983a 	sll	r16,r16,r17
4104ba90:	98c6d83a 	srl	r3,r19,r3
4104ba94:	9c64983a 	sll	r18,r19,r17
4104ba98:	1c20b03a 	or	r16,r3,r16
4104ba9c:	1080fcc4 	addi	r2,r2,1011
4104baa0:	00abc83a 	sub	r21,zero,r2
4104baa4:	0027883a 	mov	r19,zero
4104baa8:	0013883a 	mov	r9,zero
4104baac:	003f9106 	br	4104b8f4 <__alt_data_end+0xfffcd0f4>
4104bab0:	3446b03a 	or	r3,r6,r17
4104bab4:	18001f1e 	bne	r3,zero,4104bb34 <__divdf3+0x2b8>
4104bab8:	0023883a 	mov	r17,zero
4104babc:	0011883a 	mov	r8,zero
4104bac0:	01c00084 	movi	r7,2
4104bac4:	003f9d06 	br	4104b93c <__alt_data_end+0xfffcd13c>
4104bac8:	3446b03a 	or	r3,r6,r17
4104bacc:	18001526 	beq	r3,zero,4104bb24 <__divdf3+0x2a8>
4104bad0:	88011b26 	beq	r17,zero,4104bf40 <__divdf3+0x6c4>
4104bad4:	8809883a 	mov	r4,r17
4104bad8:	d9800315 	stw	r6,12(sp)
4104badc:	da400115 	stw	r9,4(sp)
4104bae0:	104d5d40 	call	4104d5d4 <__clzsi2>
4104bae4:	d9800317 	ldw	r6,12(sp)
4104bae8:	da400117 	ldw	r9,4(sp)
4104baec:	113ffd44 	addi	r4,r2,-11
4104baf0:	00c00704 	movi	r3,28
4104baf4:	19010e16 	blt	r3,r4,4104bf30 <__divdf3+0x6b4>
4104baf8:	00c00744 	movi	r3,29
4104bafc:	123ffe04 	addi	r8,r2,-8
4104bb00:	1907c83a 	sub	r3,r3,r4
4104bb04:	8a22983a 	sll	r17,r17,r8
4104bb08:	30c6d83a 	srl	r3,r6,r3
4104bb0c:	3210983a 	sll	r8,r6,r8
4104bb10:	1c62b03a 	or	r17,r3,r17
4104bb14:	1080fcc4 	addi	r2,r2,1011
4104bb18:	0085c83a 	sub	r2,zero,r2
4104bb1c:	000f883a 	mov	r7,zero
4104bb20:	003f8606 	br	4104b93c <__alt_data_end+0xfffcd13c>
4104bb24:	0023883a 	mov	r17,zero
4104bb28:	0011883a 	mov	r8,zero
4104bb2c:	01c00044 	movi	r7,1
4104bb30:	003f8206 	br	4104b93c <__alt_data_end+0xfffcd13c>
4104bb34:	01c000c4 	movi	r7,3
4104bb38:	003f8006 	br	4104b93c <__alt_data_end+0xfffcd13c>
4104bb3c:	04c00104 	movi	r19,4
4104bb40:	0021883a 	mov	r16,zero
4104bb44:	0025883a 	mov	r18,zero
4104bb48:	02400044 	movi	r9,1
4104bb4c:	003f6906 	br	4104b8f4 <__alt_data_end+0xfffcd0f4>
4104bb50:	04c00304 	movi	r19,12
4104bb54:	024000c4 	movi	r9,3
4104bb58:	003f6606 	br	4104b8f4 <__alt_data_end+0xfffcd0f4>
4104bb5c:	01400434 	movhi	r5,16
4104bb60:	0007883a 	mov	r3,zero
4104bb64:	297fffc4 	addi	r5,r5,-1
4104bb68:	04bfffc4 	movi	r18,-1
4104bb6c:	0081ffc4 	movi	r2,2047
4104bb70:	003fa106 	br	4104b9f8 <__alt_data_end+0xfffcd1f8>
4104bb74:	00c00044 	movi	r3,1
4104bb78:	1887c83a 	sub	r3,r3,r2
4104bb7c:	01000e04 	movi	r4,56
4104bb80:	20c1210e 	bge	r4,r3,4104c008 <__divdf3+0x78c>
4104bb84:	98c0004c 	andi	r3,r19,1
4104bb88:	0005883a 	mov	r2,zero
4104bb8c:	000b883a 	mov	r5,zero
4104bb90:	0025883a 	mov	r18,zero
4104bb94:	003f9806 	br	4104b9f8 <__alt_data_end+0xfffcd1f8>
4104bb98:	8c00fd36 	bltu	r17,r16,4104bf90 <__divdf3+0x714>
4104bb9c:	8440fb26 	beq	r16,r17,4104bf8c <__divdf3+0x710>
4104bba0:	8007883a 	mov	r3,r16
4104bba4:	ad7fffc4 	addi	r21,r21,-1
4104bba8:	0021883a 	mov	r16,zero
4104bbac:	4004d63a 	srli	r2,r8,24
4104bbb0:	8822923a 	slli	r17,r17,8
4104bbb4:	1809883a 	mov	r4,r3
4104bbb8:	402c923a 	slli	r22,r8,8
4104bbbc:	88b8b03a 	or	fp,r17,r2
4104bbc0:	e028d43a 	srli	r20,fp,16
4104bbc4:	d8c00015 	stw	r3,0(sp)
4104bbc8:	e5ffffcc 	andi	r23,fp,65535
4104bbcc:	a00b883a 	mov	r5,r20
4104bbd0:	1040c100 	call	41040c10 <__udivsi3>
4104bbd4:	d8c00017 	ldw	r3,0(sp)
4104bbd8:	a00b883a 	mov	r5,r20
4104bbdc:	d8800315 	stw	r2,12(sp)
4104bbe0:	1809883a 	mov	r4,r3
4104bbe4:	1040c740 	call	41040c74 <__umodsi3>
4104bbe8:	d9800317 	ldw	r6,12(sp)
4104bbec:	1006943a 	slli	r3,r2,16
4104bbf0:	9004d43a 	srli	r2,r18,16
4104bbf4:	b9a3383a 	mul	r17,r23,r6
4104bbf8:	10c4b03a 	or	r2,r2,r3
4104bbfc:	1440062e 	bgeu	r2,r17,4104bc18 <__divdf3+0x39c>
4104bc00:	1705883a 	add	r2,r2,fp
4104bc04:	30ffffc4 	addi	r3,r6,-1
4104bc08:	1700ee36 	bltu	r2,fp,4104bfc4 <__divdf3+0x748>
4104bc0c:	1440ed2e 	bgeu	r2,r17,4104bfc4 <__divdf3+0x748>
4104bc10:	31bfff84 	addi	r6,r6,-2
4104bc14:	1705883a 	add	r2,r2,fp
4104bc18:	1463c83a 	sub	r17,r2,r17
4104bc1c:	a00b883a 	mov	r5,r20
4104bc20:	8809883a 	mov	r4,r17
4104bc24:	d9800315 	stw	r6,12(sp)
4104bc28:	1040c100 	call	41040c10 <__udivsi3>
4104bc2c:	a00b883a 	mov	r5,r20
4104bc30:	8809883a 	mov	r4,r17
4104bc34:	d8800215 	stw	r2,8(sp)
4104bc38:	1040c740 	call	41040c74 <__umodsi3>
4104bc3c:	d9c00217 	ldw	r7,8(sp)
4104bc40:	1004943a 	slli	r2,r2,16
4104bc44:	94bfffcc 	andi	r18,r18,65535
4104bc48:	b9d1383a 	mul	r8,r23,r7
4104bc4c:	90a4b03a 	or	r18,r18,r2
4104bc50:	d9800317 	ldw	r6,12(sp)
4104bc54:	9200062e 	bgeu	r18,r8,4104bc70 <__divdf3+0x3f4>
4104bc58:	9725883a 	add	r18,r18,fp
4104bc5c:	38bfffc4 	addi	r2,r7,-1
4104bc60:	9700d636 	bltu	r18,fp,4104bfbc <__divdf3+0x740>
4104bc64:	9200d52e 	bgeu	r18,r8,4104bfbc <__divdf3+0x740>
4104bc68:	39ffff84 	addi	r7,r7,-2
4104bc6c:	9725883a 	add	r18,r18,fp
4104bc70:	3004943a 	slli	r2,r6,16
4104bc74:	b012d43a 	srli	r9,r22,16
4104bc78:	b1bfffcc 	andi	r6,r22,65535
4104bc7c:	11e2b03a 	or	r17,r2,r7
4104bc80:	8806d43a 	srli	r3,r17,16
4104bc84:	893fffcc 	andi	r4,r17,65535
4104bc88:	218b383a 	mul	r5,r4,r6
4104bc8c:	30c5383a 	mul	r2,r6,r3
4104bc90:	2249383a 	mul	r4,r4,r9
4104bc94:	280ed43a 	srli	r7,r5,16
4104bc98:	9225c83a 	sub	r18,r18,r8
4104bc9c:	2089883a 	add	r4,r4,r2
4104bca0:	3909883a 	add	r4,r7,r4
4104bca4:	1a47383a 	mul	r3,r3,r9
4104bca8:	2080022e 	bgeu	r4,r2,4104bcb4 <__divdf3+0x438>
4104bcac:	00800074 	movhi	r2,1
4104bcb0:	1887883a 	add	r3,r3,r2
4104bcb4:	2004d43a 	srli	r2,r4,16
4104bcb8:	2008943a 	slli	r4,r4,16
4104bcbc:	297fffcc 	andi	r5,r5,65535
4104bcc0:	10c7883a 	add	r3,r2,r3
4104bcc4:	2149883a 	add	r4,r4,r5
4104bcc8:	90c0a536 	bltu	r18,r3,4104bf60 <__divdf3+0x6e4>
4104bccc:	90c0bf26 	beq	r18,r3,4104bfcc <__divdf3+0x750>
4104bcd0:	90c7c83a 	sub	r3,r18,r3
4104bcd4:	810fc83a 	sub	r7,r16,r4
4104bcd8:	81e5803a 	cmpltu	r18,r16,r7
4104bcdc:	1ca5c83a 	sub	r18,r3,r18
4104bce0:	e480c126 	beq	fp,r18,4104bfe8 <__divdf3+0x76c>
4104bce4:	a00b883a 	mov	r5,r20
4104bce8:	9009883a 	mov	r4,r18
4104bcec:	d9800315 	stw	r6,12(sp)
4104bcf0:	d9c00215 	stw	r7,8(sp)
4104bcf4:	da400115 	stw	r9,4(sp)
4104bcf8:	1040c100 	call	41040c10 <__udivsi3>
4104bcfc:	a00b883a 	mov	r5,r20
4104bd00:	9009883a 	mov	r4,r18
4104bd04:	d8800015 	stw	r2,0(sp)
4104bd08:	1040c740 	call	41040c74 <__umodsi3>
4104bd0c:	d9c00217 	ldw	r7,8(sp)
4104bd10:	da000017 	ldw	r8,0(sp)
4104bd14:	1006943a 	slli	r3,r2,16
4104bd18:	3804d43a 	srli	r2,r7,16
4104bd1c:	ba21383a 	mul	r16,r23,r8
4104bd20:	d9800317 	ldw	r6,12(sp)
4104bd24:	10c4b03a 	or	r2,r2,r3
4104bd28:	da400117 	ldw	r9,4(sp)
4104bd2c:	1400062e 	bgeu	r2,r16,4104bd48 <__divdf3+0x4cc>
4104bd30:	1705883a 	add	r2,r2,fp
4104bd34:	40ffffc4 	addi	r3,r8,-1
4104bd38:	1700ad36 	bltu	r2,fp,4104bff0 <__divdf3+0x774>
4104bd3c:	1400ac2e 	bgeu	r2,r16,4104bff0 <__divdf3+0x774>
4104bd40:	423fff84 	addi	r8,r8,-2
4104bd44:	1705883a 	add	r2,r2,fp
4104bd48:	1421c83a 	sub	r16,r2,r16
4104bd4c:	a00b883a 	mov	r5,r20
4104bd50:	8009883a 	mov	r4,r16
4104bd54:	d9800315 	stw	r6,12(sp)
4104bd58:	d9c00215 	stw	r7,8(sp)
4104bd5c:	da000015 	stw	r8,0(sp)
4104bd60:	da400115 	stw	r9,4(sp)
4104bd64:	1040c100 	call	41040c10 <__udivsi3>
4104bd68:	8009883a 	mov	r4,r16
4104bd6c:	a00b883a 	mov	r5,r20
4104bd70:	1025883a 	mov	r18,r2
4104bd74:	1040c740 	call	41040c74 <__umodsi3>
4104bd78:	d9c00217 	ldw	r7,8(sp)
4104bd7c:	1004943a 	slli	r2,r2,16
4104bd80:	bcaf383a 	mul	r23,r23,r18
4104bd84:	393fffcc 	andi	r4,r7,65535
4104bd88:	2088b03a 	or	r4,r4,r2
4104bd8c:	d9800317 	ldw	r6,12(sp)
4104bd90:	da000017 	ldw	r8,0(sp)
4104bd94:	da400117 	ldw	r9,4(sp)
4104bd98:	25c0062e 	bgeu	r4,r23,4104bdb4 <__divdf3+0x538>
4104bd9c:	2709883a 	add	r4,r4,fp
4104bda0:	90bfffc4 	addi	r2,r18,-1
4104bda4:	27009436 	bltu	r4,fp,4104bff8 <__divdf3+0x77c>
4104bda8:	25c0932e 	bgeu	r4,r23,4104bff8 <__divdf3+0x77c>
4104bdac:	94bfff84 	addi	r18,r18,-2
4104bdb0:	2709883a 	add	r4,r4,fp
4104bdb4:	4004943a 	slli	r2,r8,16
4104bdb8:	25efc83a 	sub	r23,r4,r23
4104bdbc:	1490b03a 	or	r8,r2,r18
4104bdc0:	4008d43a 	srli	r4,r8,16
4104bdc4:	40ffffcc 	andi	r3,r8,65535
4104bdc8:	30c5383a 	mul	r2,r6,r3
4104bdcc:	1a47383a 	mul	r3,r3,r9
4104bdd0:	310d383a 	mul	r6,r6,r4
4104bdd4:	100ad43a 	srli	r5,r2,16
4104bdd8:	4913383a 	mul	r9,r9,r4
4104bddc:	1987883a 	add	r3,r3,r6
4104bde0:	28c7883a 	add	r3,r5,r3
4104bde4:	1980022e 	bgeu	r3,r6,4104bdf0 <__divdf3+0x574>
4104bde8:	01000074 	movhi	r4,1
4104bdec:	4913883a 	add	r9,r9,r4
4104bdf0:	1808d43a 	srli	r4,r3,16
4104bdf4:	1806943a 	slli	r3,r3,16
4104bdf8:	10bfffcc 	andi	r2,r2,65535
4104bdfc:	2253883a 	add	r9,r4,r9
4104be00:	1887883a 	add	r3,r3,r2
4104be04:	ba403836 	bltu	r23,r9,4104bee8 <__divdf3+0x66c>
4104be08:	ba403626 	beq	r23,r9,4104bee4 <__divdf3+0x668>
4104be0c:	42000054 	ori	r8,r8,1
4104be10:	a880ffc4 	addi	r2,r21,1023
4104be14:	00bf570e 	bge	zero,r2,4104bb74 <__alt_data_end+0xfffcd374>
4104be18:	40c001cc 	andi	r3,r8,7
4104be1c:	18000726 	beq	r3,zero,4104be3c <__divdf3+0x5c0>
4104be20:	40c003cc 	andi	r3,r8,15
4104be24:	01000104 	movi	r4,4
4104be28:	19000426 	beq	r3,r4,4104be3c <__divdf3+0x5c0>
4104be2c:	4107883a 	add	r3,r8,r4
4104be30:	1a11803a 	cmpltu	r8,r3,r8
4104be34:	8a23883a 	add	r17,r17,r8
4104be38:	1811883a 	mov	r8,r3
4104be3c:	88c0402c 	andhi	r3,r17,256
4104be40:	18000426 	beq	r3,zero,4104be54 <__divdf3+0x5d8>
4104be44:	00ffc034 	movhi	r3,65280
4104be48:	18ffffc4 	addi	r3,r3,-1
4104be4c:	a8810004 	addi	r2,r21,1024
4104be50:	88e2703a 	and	r17,r17,r3
4104be54:	00c1ff84 	movi	r3,2046
4104be58:	18bee316 	blt	r3,r2,4104b9e8 <__alt_data_end+0xfffcd1e8>
4104be5c:	8824977a 	slli	r18,r17,29
4104be60:	4010d0fa 	srli	r8,r8,3
4104be64:	8822927a 	slli	r17,r17,9
4104be68:	1081ffcc 	andi	r2,r2,2047
4104be6c:	9224b03a 	or	r18,r18,r8
4104be70:	880ad33a 	srli	r5,r17,12
4104be74:	98c0004c 	andi	r3,r19,1
4104be78:	003edf06 	br	4104b9f8 <__alt_data_end+0xfffcd1f8>
4104be7c:	8080022c 	andhi	r2,r16,8
4104be80:	10001226 	beq	r2,zero,4104becc <__divdf3+0x650>
4104be84:	8880022c 	andhi	r2,r17,8
4104be88:	1000101e 	bne	r2,zero,4104becc <__divdf3+0x650>
4104be8c:	00800434 	movhi	r2,16
4104be90:	89400234 	orhi	r5,r17,8
4104be94:	10bfffc4 	addi	r2,r2,-1
4104be98:	b007883a 	mov	r3,r22
4104be9c:	288a703a 	and	r5,r5,r2
4104bea0:	4025883a 	mov	r18,r8
4104bea4:	003f3106 	br	4104bb6c <__alt_data_end+0xfffcd36c>
4104bea8:	008000c4 	movi	r2,3
4104beac:	3880a626 	beq	r7,r2,4104c148 <__divdf3+0x8cc>
4104beb0:	00800044 	movi	r2,1
4104beb4:	3880521e 	bne	r7,r2,4104c000 <__divdf3+0x784>
4104beb8:	b807883a 	mov	r3,r23
4104bebc:	0005883a 	mov	r2,zero
4104bec0:	000b883a 	mov	r5,zero
4104bec4:	0025883a 	mov	r18,zero
4104bec8:	003ecb06 	br	4104b9f8 <__alt_data_end+0xfffcd1f8>
4104becc:	00800434 	movhi	r2,16
4104bed0:	81400234 	orhi	r5,r16,8
4104bed4:	10bfffc4 	addi	r2,r2,-1
4104bed8:	a007883a 	mov	r3,r20
4104bedc:	288a703a 	and	r5,r5,r2
4104bee0:	003f2206 	br	4104bb6c <__alt_data_end+0xfffcd36c>
4104bee4:	183fca26 	beq	r3,zero,4104be10 <__alt_data_end+0xfffcd610>
4104bee8:	e5ef883a 	add	r23,fp,r23
4104beec:	40bfffc4 	addi	r2,r8,-1
4104bef0:	bf00392e 	bgeu	r23,fp,4104bfd8 <__divdf3+0x75c>
4104bef4:	1011883a 	mov	r8,r2
4104bef8:	ba7fc41e 	bne	r23,r9,4104be0c <__alt_data_end+0xfffcd60c>
4104befc:	b0ffc31e 	bne	r22,r3,4104be0c <__alt_data_end+0xfffcd60c>
4104bf00:	003fc306 	br	4104be10 <__alt_data_end+0xfffcd610>
4104bf04:	143ff604 	addi	r16,r2,-40
4104bf08:	9c20983a 	sll	r16,r19,r16
4104bf0c:	0025883a 	mov	r18,zero
4104bf10:	003ee206 	br	4104ba9c <__alt_data_end+0xfffcd29c>
4104bf14:	d9800315 	stw	r6,12(sp)
4104bf18:	d9c00215 	stw	r7,8(sp)
4104bf1c:	104d5d40 	call	4104d5d4 <__clzsi2>
4104bf20:	10800804 	addi	r2,r2,32
4104bf24:	d9c00217 	ldw	r7,8(sp)
4104bf28:	d9800317 	ldw	r6,12(sp)
4104bf2c:	003ed106 	br	4104ba74 <__alt_data_end+0xfffcd274>
4104bf30:	147ff604 	addi	r17,r2,-40
4104bf34:	3462983a 	sll	r17,r6,r17
4104bf38:	0011883a 	mov	r8,zero
4104bf3c:	003ef506 	br	4104bb14 <__alt_data_end+0xfffcd314>
4104bf40:	3009883a 	mov	r4,r6
4104bf44:	d9800315 	stw	r6,12(sp)
4104bf48:	da400115 	stw	r9,4(sp)
4104bf4c:	104d5d40 	call	4104d5d4 <__clzsi2>
4104bf50:	10800804 	addi	r2,r2,32
4104bf54:	da400117 	ldw	r9,4(sp)
4104bf58:	d9800317 	ldw	r6,12(sp)
4104bf5c:	003ee306 	br	4104baec <__alt_data_end+0xfffcd2ec>
4104bf60:	85a1883a 	add	r16,r16,r22
4104bf64:	8585803a 	cmpltu	r2,r16,r22
4104bf68:	1705883a 	add	r2,r2,fp
4104bf6c:	14a5883a 	add	r18,r2,r18
4104bf70:	88bfffc4 	addi	r2,r17,-1
4104bf74:	e4800c2e 	bgeu	fp,r18,4104bfa8 <__divdf3+0x72c>
4104bf78:	90c03e36 	bltu	r18,r3,4104c074 <__divdf3+0x7f8>
4104bf7c:	1c806926 	beq	r3,r18,4104c124 <__divdf3+0x8a8>
4104bf80:	90c7c83a 	sub	r3,r18,r3
4104bf84:	1023883a 	mov	r17,r2
4104bf88:	003f5206 	br	4104bcd4 <__alt_data_end+0xfffcd4d4>
4104bf8c:	923f0436 	bltu	r18,r8,4104bba0 <__alt_data_end+0xfffcd3a0>
4104bf90:	800897fa 	slli	r4,r16,31
4104bf94:	9004d07a 	srli	r2,r18,1
4104bf98:	8006d07a 	srli	r3,r16,1
4104bf9c:	902097fa 	slli	r16,r18,31
4104bfa0:	20a4b03a 	or	r18,r4,r2
4104bfa4:	003f0106 	br	4104bbac <__alt_data_end+0xfffcd3ac>
4104bfa8:	e4bff51e 	bne	fp,r18,4104bf80 <__alt_data_end+0xfffcd780>
4104bfac:	85bff22e 	bgeu	r16,r22,4104bf78 <__alt_data_end+0xfffcd778>
4104bfb0:	e0c7c83a 	sub	r3,fp,r3
4104bfb4:	1023883a 	mov	r17,r2
4104bfb8:	003f4606 	br	4104bcd4 <__alt_data_end+0xfffcd4d4>
4104bfbc:	100f883a 	mov	r7,r2
4104bfc0:	003f2b06 	br	4104bc70 <__alt_data_end+0xfffcd470>
4104bfc4:	180d883a 	mov	r6,r3
4104bfc8:	003f1306 	br	4104bc18 <__alt_data_end+0xfffcd418>
4104bfcc:	813fe436 	bltu	r16,r4,4104bf60 <__alt_data_end+0xfffcd760>
4104bfd0:	0007883a 	mov	r3,zero
4104bfd4:	003f3f06 	br	4104bcd4 <__alt_data_end+0xfffcd4d4>
4104bfd8:	ba402c36 	bltu	r23,r9,4104c08c <__divdf3+0x810>
4104bfdc:	4dc05426 	beq	r9,r23,4104c130 <__divdf3+0x8b4>
4104bfe0:	1011883a 	mov	r8,r2
4104bfe4:	003f8906 	br	4104be0c <__alt_data_end+0xfffcd60c>
4104bfe8:	023fffc4 	movi	r8,-1
4104bfec:	003f8806 	br	4104be10 <__alt_data_end+0xfffcd610>
4104bff0:	1811883a 	mov	r8,r3
4104bff4:	003f5406 	br	4104bd48 <__alt_data_end+0xfffcd548>
4104bff8:	1025883a 	mov	r18,r2
4104bffc:	003f6d06 	br	4104bdb4 <__alt_data_end+0xfffcd5b4>
4104c000:	b827883a 	mov	r19,r23
4104c004:	003f8206 	br	4104be10 <__alt_data_end+0xfffcd610>
4104c008:	010007c4 	movi	r4,31
4104c00c:	20c02616 	blt	r4,r3,4104c0a8 <__divdf3+0x82c>
4104c010:	00800804 	movi	r2,32
4104c014:	10c5c83a 	sub	r2,r2,r3
4104c018:	888a983a 	sll	r5,r17,r2
4104c01c:	40c8d83a 	srl	r4,r8,r3
4104c020:	4084983a 	sll	r2,r8,r2
4104c024:	88e2d83a 	srl	r17,r17,r3
4104c028:	2906b03a 	or	r3,r5,r4
4104c02c:	1004c03a 	cmpne	r2,r2,zero
4104c030:	1886b03a 	or	r3,r3,r2
4104c034:	188001cc 	andi	r2,r3,7
4104c038:	10000726 	beq	r2,zero,4104c058 <__divdf3+0x7dc>
4104c03c:	188003cc 	andi	r2,r3,15
4104c040:	01000104 	movi	r4,4
4104c044:	11000426 	beq	r2,r4,4104c058 <__divdf3+0x7dc>
4104c048:	1805883a 	mov	r2,r3
4104c04c:	10c00104 	addi	r3,r2,4
4104c050:	1885803a 	cmpltu	r2,r3,r2
4104c054:	88a3883a 	add	r17,r17,r2
4104c058:	8880202c 	andhi	r2,r17,128
4104c05c:	10002726 	beq	r2,zero,4104c0fc <__divdf3+0x880>
4104c060:	98c0004c 	andi	r3,r19,1
4104c064:	00800044 	movi	r2,1
4104c068:	000b883a 	mov	r5,zero
4104c06c:	0025883a 	mov	r18,zero
4104c070:	003e6106 	br	4104b9f8 <__alt_data_end+0xfffcd1f8>
4104c074:	85a1883a 	add	r16,r16,r22
4104c078:	8585803a 	cmpltu	r2,r16,r22
4104c07c:	1705883a 	add	r2,r2,fp
4104c080:	14a5883a 	add	r18,r2,r18
4104c084:	8c7fff84 	addi	r17,r17,-2
4104c088:	003f1106 	br	4104bcd0 <__alt_data_end+0xfffcd4d0>
4104c08c:	b589883a 	add	r4,r22,r22
4104c090:	25ad803a 	cmpltu	r22,r4,r22
4104c094:	b739883a 	add	fp,r22,fp
4104c098:	40bfff84 	addi	r2,r8,-2
4104c09c:	bf2f883a 	add	r23,r23,fp
4104c0a0:	202d883a 	mov	r22,r4
4104c0a4:	003f9306 	br	4104bef4 <__alt_data_end+0xfffcd6f4>
4104c0a8:	013ff844 	movi	r4,-31
4104c0ac:	2085c83a 	sub	r2,r4,r2
4104c0b0:	8888d83a 	srl	r4,r17,r2
4104c0b4:	00800804 	movi	r2,32
4104c0b8:	18802126 	beq	r3,r2,4104c140 <__divdf3+0x8c4>
4104c0bc:	00801004 	movi	r2,64
4104c0c0:	10c5c83a 	sub	r2,r2,r3
4104c0c4:	8884983a 	sll	r2,r17,r2
4104c0c8:	1204b03a 	or	r2,r2,r8
4104c0cc:	1004c03a 	cmpne	r2,r2,zero
4104c0d0:	2084b03a 	or	r2,r4,r2
4104c0d4:	144001cc 	andi	r17,r2,7
4104c0d8:	88000d1e 	bne	r17,zero,4104c110 <__divdf3+0x894>
4104c0dc:	000b883a 	mov	r5,zero
4104c0e0:	1024d0fa 	srli	r18,r2,3
4104c0e4:	98c0004c 	andi	r3,r19,1
4104c0e8:	0005883a 	mov	r2,zero
4104c0ec:	9464b03a 	or	r18,r18,r17
4104c0f0:	003e4106 	br	4104b9f8 <__alt_data_end+0xfffcd1f8>
4104c0f4:	1007883a 	mov	r3,r2
4104c0f8:	0023883a 	mov	r17,zero
4104c0fc:	880a927a 	slli	r5,r17,9
4104c100:	1805883a 	mov	r2,r3
4104c104:	8822977a 	slli	r17,r17,29
4104c108:	280ad33a 	srli	r5,r5,12
4104c10c:	003ff406 	br	4104c0e0 <__alt_data_end+0xfffcd8e0>
4104c110:	10c003cc 	andi	r3,r2,15
4104c114:	01000104 	movi	r4,4
4104c118:	193ff626 	beq	r3,r4,4104c0f4 <__alt_data_end+0xfffcd8f4>
4104c11c:	0023883a 	mov	r17,zero
4104c120:	003fca06 	br	4104c04c <__alt_data_end+0xfffcd84c>
4104c124:	813fd336 	bltu	r16,r4,4104c074 <__alt_data_end+0xfffcd874>
4104c128:	1023883a 	mov	r17,r2
4104c12c:	003fa806 	br	4104bfd0 <__alt_data_end+0xfffcd7d0>
4104c130:	b0ffd636 	bltu	r22,r3,4104c08c <__alt_data_end+0xfffcd88c>
4104c134:	1011883a 	mov	r8,r2
4104c138:	b0ff341e 	bne	r22,r3,4104be0c <__alt_data_end+0xfffcd60c>
4104c13c:	003f3406 	br	4104be10 <__alt_data_end+0xfffcd610>
4104c140:	0005883a 	mov	r2,zero
4104c144:	003fe006 	br	4104c0c8 <__alt_data_end+0xfffcd8c8>
4104c148:	00800434 	movhi	r2,16
4104c14c:	89400234 	orhi	r5,r17,8
4104c150:	10bfffc4 	addi	r2,r2,-1
4104c154:	b807883a 	mov	r3,r23
4104c158:	288a703a 	and	r5,r5,r2
4104c15c:	4025883a 	mov	r18,r8
4104c160:	003e8206 	br	4104bb6c <__alt_data_end+0xfffcd36c>

4104c164 <__eqdf2>:
4104c164:	2804d53a 	srli	r2,r5,20
4104c168:	3806d53a 	srli	r3,r7,20
4104c16c:	02000434 	movhi	r8,16
4104c170:	423fffc4 	addi	r8,r8,-1
4104c174:	1081ffcc 	andi	r2,r2,2047
4104c178:	0281ffc4 	movi	r10,2047
4104c17c:	2a12703a 	and	r9,r5,r8
4104c180:	18c1ffcc 	andi	r3,r3,2047
4104c184:	3a10703a 	and	r8,r7,r8
4104c188:	280ad7fa 	srli	r5,r5,31
4104c18c:	380ed7fa 	srli	r7,r7,31
4104c190:	12801026 	beq	r2,r10,4104c1d4 <__eqdf2+0x70>
4104c194:	0281ffc4 	movi	r10,2047
4104c198:	1a800a26 	beq	r3,r10,4104c1c4 <__eqdf2+0x60>
4104c19c:	10c00226 	beq	r2,r3,4104c1a8 <__eqdf2+0x44>
4104c1a0:	00800044 	movi	r2,1
4104c1a4:	f800283a 	ret
4104c1a8:	4a3ffd1e 	bne	r9,r8,4104c1a0 <__alt_data_end+0xfffcd9a0>
4104c1ac:	21bffc1e 	bne	r4,r6,4104c1a0 <__alt_data_end+0xfffcd9a0>
4104c1b0:	29c00c26 	beq	r5,r7,4104c1e4 <__eqdf2+0x80>
4104c1b4:	103ffa1e 	bne	r2,zero,4104c1a0 <__alt_data_end+0xfffcd9a0>
4104c1b8:	2244b03a 	or	r2,r4,r9
4104c1bc:	1004c03a 	cmpne	r2,r2,zero
4104c1c0:	f800283a 	ret
4104c1c4:	3214b03a 	or	r10,r6,r8
4104c1c8:	503ff426 	beq	r10,zero,4104c19c <__alt_data_end+0xfffcd99c>
4104c1cc:	00800044 	movi	r2,1
4104c1d0:	f800283a 	ret
4104c1d4:	2254b03a 	or	r10,r4,r9
4104c1d8:	503fee26 	beq	r10,zero,4104c194 <__alt_data_end+0xfffcd994>
4104c1dc:	00800044 	movi	r2,1
4104c1e0:	f800283a 	ret
4104c1e4:	0005883a 	mov	r2,zero
4104c1e8:	f800283a 	ret

4104c1ec <__gedf2>:
4104c1ec:	2804d53a 	srli	r2,r5,20
4104c1f0:	3806d53a 	srli	r3,r7,20
4104c1f4:	02000434 	movhi	r8,16
4104c1f8:	423fffc4 	addi	r8,r8,-1
4104c1fc:	1081ffcc 	andi	r2,r2,2047
4104c200:	0241ffc4 	movi	r9,2047
4104c204:	2a14703a 	and	r10,r5,r8
4104c208:	18c1ffcc 	andi	r3,r3,2047
4104c20c:	3a10703a 	and	r8,r7,r8
4104c210:	280ad7fa 	srli	r5,r5,31
4104c214:	380ed7fa 	srli	r7,r7,31
4104c218:	12401d26 	beq	r2,r9,4104c290 <__gedf2+0xa4>
4104c21c:	0241ffc4 	movi	r9,2047
4104c220:	1a401226 	beq	r3,r9,4104c26c <__gedf2+0x80>
4104c224:	1000081e 	bne	r2,zero,4104c248 <__gedf2+0x5c>
4104c228:	2296b03a 	or	r11,r4,r10
4104c22c:	5813003a 	cmpeq	r9,r11,zero
4104c230:	1800091e 	bne	r3,zero,4104c258 <__gedf2+0x6c>
4104c234:	3218b03a 	or	r12,r6,r8
4104c238:	6000071e 	bne	r12,zero,4104c258 <__gedf2+0x6c>
4104c23c:	0005883a 	mov	r2,zero
4104c240:	5800101e 	bne	r11,zero,4104c284 <__gedf2+0x98>
4104c244:	f800283a 	ret
4104c248:	18000c1e 	bne	r3,zero,4104c27c <__gedf2+0x90>
4104c24c:	3212b03a 	or	r9,r6,r8
4104c250:	48000c26 	beq	r9,zero,4104c284 <__gedf2+0x98>
4104c254:	0013883a 	mov	r9,zero
4104c258:	39c03fcc 	andi	r7,r7,255
4104c25c:	48000826 	beq	r9,zero,4104c280 <__gedf2+0x94>
4104c260:	38000926 	beq	r7,zero,4104c288 <__gedf2+0x9c>
4104c264:	00800044 	movi	r2,1
4104c268:	f800283a 	ret
4104c26c:	3212b03a 	or	r9,r6,r8
4104c270:	483fec26 	beq	r9,zero,4104c224 <__alt_data_end+0xfffcda24>
4104c274:	00bfff84 	movi	r2,-2
4104c278:	f800283a 	ret
4104c27c:	39c03fcc 	andi	r7,r7,255
4104c280:	29c00626 	beq	r5,r7,4104c29c <__gedf2+0xb0>
4104c284:	283ff726 	beq	r5,zero,4104c264 <__alt_data_end+0xfffcda64>
4104c288:	00bfffc4 	movi	r2,-1
4104c28c:	f800283a 	ret
4104c290:	2292b03a 	or	r9,r4,r10
4104c294:	483fe126 	beq	r9,zero,4104c21c <__alt_data_end+0xfffcda1c>
4104c298:	003ff606 	br	4104c274 <__alt_data_end+0xfffcda74>
4104c29c:	18bff916 	blt	r3,r2,4104c284 <__alt_data_end+0xfffcda84>
4104c2a0:	10c00316 	blt	r2,r3,4104c2b0 <__gedf2+0xc4>
4104c2a4:	42bff736 	bltu	r8,r10,4104c284 <__alt_data_end+0xfffcda84>
4104c2a8:	52000326 	beq	r10,r8,4104c2b8 <__gedf2+0xcc>
4104c2ac:	5200042e 	bgeu	r10,r8,4104c2c0 <__gedf2+0xd4>
4104c2b0:	283fec1e 	bne	r5,zero,4104c264 <__alt_data_end+0xfffcda64>
4104c2b4:	003ff406 	br	4104c288 <__alt_data_end+0xfffcda88>
4104c2b8:	313ff236 	bltu	r6,r4,4104c284 <__alt_data_end+0xfffcda84>
4104c2bc:	21bffc36 	bltu	r4,r6,4104c2b0 <__alt_data_end+0xfffcdab0>
4104c2c0:	0005883a 	mov	r2,zero
4104c2c4:	f800283a 	ret

4104c2c8 <__ledf2>:
4104c2c8:	2804d53a 	srli	r2,r5,20
4104c2cc:	3810d53a 	srli	r8,r7,20
4104c2d0:	00c00434 	movhi	r3,16
4104c2d4:	18ffffc4 	addi	r3,r3,-1
4104c2d8:	1081ffcc 	andi	r2,r2,2047
4104c2dc:	0241ffc4 	movi	r9,2047
4104c2e0:	28d4703a 	and	r10,r5,r3
4104c2e4:	4201ffcc 	andi	r8,r8,2047
4104c2e8:	38c6703a 	and	r3,r7,r3
4104c2ec:	280ad7fa 	srli	r5,r5,31
4104c2f0:	380ed7fa 	srli	r7,r7,31
4104c2f4:	12401f26 	beq	r2,r9,4104c374 <__ledf2+0xac>
4104c2f8:	0241ffc4 	movi	r9,2047
4104c2fc:	42401426 	beq	r8,r9,4104c350 <__ledf2+0x88>
4104c300:	1000091e 	bne	r2,zero,4104c328 <__ledf2+0x60>
4104c304:	2296b03a 	or	r11,r4,r10
4104c308:	5813003a 	cmpeq	r9,r11,zero
4104c30c:	29403fcc 	andi	r5,r5,255
4104c310:	40000a1e 	bne	r8,zero,4104c33c <__ledf2+0x74>
4104c314:	30d8b03a 	or	r12,r6,r3
4104c318:	6000081e 	bne	r12,zero,4104c33c <__ledf2+0x74>
4104c31c:	0005883a 	mov	r2,zero
4104c320:	5800111e 	bne	r11,zero,4104c368 <__ledf2+0xa0>
4104c324:	f800283a 	ret
4104c328:	29403fcc 	andi	r5,r5,255
4104c32c:	40000c1e 	bne	r8,zero,4104c360 <__ledf2+0x98>
4104c330:	30d2b03a 	or	r9,r6,r3
4104c334:	48000c26 	beq	r9,zero,4104c368 <__ledf2+0xa0>
4104c338:	0013883a 	mov	r9,zero
4104c33c:	39c03fcc 	andi	r7,r7,255
4104c340:	48000826 	beq	r9,zero,4104c364 <__ledf2+0x9c>
4104c344:	38001126 	beq	r7,zero,4104c38c <__ledf2+0xc4>
4104c348:	00800044 	movi	r2,1
4104c34c:	f800283a 	ret
4104c350:	30d2b03a 	or	r9,r6,r3
4104c354:	483fea26 	beq	r9,zero,4104c300 <__alt_data_end+0xfffcdb00>
4104c358:	00800084 	movi	r2,2
4104c35c:	f800283a 	ret
4104c360:	39c03fcc 	andi	r7,r7,255
4104c364:	39400726 	beq	r7,r5,4104c384 <__ledf2+0xbc>
4104c368:	2800081e 	bne	r5,zero,4104c38c <__ledf2+0xc4>
4104c36c:	00800044 	movi	r2,1
4104c370:	f800283a 	ret
4104c374:	2292b03a 	or	r9,r4,r10
4104c378:	483fdf26 	beq	r9,zero,4104c2f8 <__alt_data_end+0xfffcdaf8>
4104c37c:	00800084 	movi	r2,2
4104c380:	f800283a 	ret
4104c384:	4080030e 	bge	r8,r2,4104c394 <__ledf2+0xcc>
4104c388:	383fef26 	beq	r7,zero,4104c348 <__alt_data_end+0xfffcdb48>
4104c38c:	00bfffc4 	movi	r2,-1
4104c390:	f800283a 	ret
4104c394:	123feb16 	blt	r2,r8,4104c344 <__alt_data_end+0xfffcdb44>
4104c398:	1abff336 	bltu	r3,r10,4104c368 <__alt_data_end+0xfffcdb68>
4104c39c:	50c00326 	beq	r10,r3,4104c3ac <__ledf2+0xe4>
4104c3a0:	50c0042e 	bgeu	r10,r3,4104c3b4 <__ledf2+0xec>
4104c3a4:	283fe81e 	bne	r5,zero,4104c348 <__alt_data_end+0xfffcdb48>
4104c3a8:	003ff806 	br	4104c38c <__alt_data_end+0xfffcdb8c>
4104c3ac:	313fee36 	bltu	r6,r4,4104c368 <__alt_data_end+0xfffcdb68>
4104c3b0:	21bffc36 	bltu	r4,r6,4104c3a4 <__alt_data_end+0xfffcdba4>
4104c3b4:	0005883a 	mov	r2,zero
4104c3b8:	f800283a 	ret

4104c3bc <__muldf3>:
4104c3bc:	defff304 	addi	sp,sp,-52
4104c3c0:	2804d53a 	srli	r2,r5,20
4104c3c4:	dd800915 	stw	r22,36(sp)
4104c3c8:	282cd7fa 	srli	r22,r5,31
4104c3cc:	dc000315 	stw	r16,12(sp)
4104c3d0:	04000434 	movhi	r16,16
4104c3d4:	dd400815 	stw	r21,32(sp)
4104c3d8:	dc800515 	stw	r18,20(sp)
4104c3dc:	843fffc4 	addi	r16,r16,-1
4104c3e0:	dfc00c15 	stw	ra,48(sp)
4104c3e4:	df000b15 	stw	fp,44(sp)
4104c3e8:	ddc00a15 	stw	r23,40(sp)
4104c3ec:	dd000715 	stw	r20,28(sp)
4104c3f0:	dcc00615 	stw	r19,24(sp)
4104c3f4:	dc400415 	stw	r17,16(sp)
4104c3f8:	1481ffcc 	andi	r18,r2,2047
4104c3fc:	2c20703a 	and	r16,r5,r16
4104c400:	b02b883a 	mov	r21,r22
4104c404:	b2403fcc 	andi	r9,r22,255
4104c408:	90006026 	beq	r18,zero,4104c58c <__muldf3+0x1d0>
4104c40c:	0081ffc4 	movi	r2,2047
4104c410:	2029883a 	mov	r20,r4
4104c414:	90803626 	beq	r18,r2,4104c4f0 <__muldf3+0x134>
4104c418:	80800434 	orhi	r2,r16,16
4104c41c:	100490fa 	slli	r2,r2,3
4104c420:	2020d77a 	srli	r16,r4,29
4104c424:	202890fa 	slli	r20,r4,3
4104c428:	94bf0044 	addi	r18,r18,-1023
4104c42c:	80a0b03a 	or	r16,r16,r2
4104c430:	0027883a 	mov	r19,zero
4104c434:	0039883a 	mov	fp,zero
4104c438:	3804d53a 	srli	r2,r7,20
4104c43c:	382ed7fa 	srli	r23,r7,31
4104c440:	04400434 	movhi	r17,16
4104c444:	8c7fffc4 	addi	r17,r17,-1
4104c448:	1081ffcc 	andi	r2,r2,2047
4104c44c:	3011883a 	mov	r8,r6
4104c450:	3c62703a 	and	r17,r7,r17
4104c454:	ba803fcc 	andi	r10,r23,255
4104c458:	10006d26 	beq	r2,zero,4104c610 <__muldf3+0x254>
4104c45c:	00c1ffc4 	movi	r3,2047
4104c460:	10c06526 	beq	r2,r3,4104c5f8 <__muldf3+0x23c>
4104c464:	88c00434 	orhi	r3,r17,16
4104c468:	180690fa 	slli	r3,r3,3
4104c46c:	3022d77a 	srli	r17,r6,29
4104c470:	301090fa 	slli	r8,r6,3
4104c474:	10bf0044 	addi	r2,r2,-1023
4104c478:	88e2b03a 	or	r17,r17,r3
4104c47c:	000b883a 	mov	r5,zero
4104c480:	9085883a 	add	r2,r18,r2
4104c484:	2cc8b03a 	or	r4,r5,r19
4104c488:	00c003c4 	movi	r3,15
4104c48c:	bdacf03a 	xor	r22,r23,r22
4104c490:	12c00044 	addi	r11,r2,1
4104c494:	19009936 	bltu	r3,r4,4104c6fc <__muldf3+0x340>
4104c498:	200890ba 	slli	r4,r4,2
4104c49c:	00d04174 	movhi	r3,16645
4104c4a0:	18f12c04 	addi	r3,r3,-15184
4104c4a4:	20c9883a 	add	r4,r4,r3
4104c4a8:	20c00017 	ldw	r3,0(r4)
4104c4ac:	1800683a 	jmp	r3
4104c4b0:	4104c6fc 	xorhi	r4,r8,4891
4104c4b4:	4104c510 	cmplti	r4,r8,4884
4104c4b8:	4104c510 	cmplti	r4,r8,4884
4104c4bc:	4104c50c 	andi	r4,r8,4884
4104c4c0:	4104c6d8 	cmpnei	r4,r8,4891
4104c4c4:	4104c6d8 	cmpnei	r4,r8,4891
4104c4c8:	4104c6c0 	call	44104c6c <__alt_data_end+0x308646c>
4104c4cc:	4104c50c 	andi	r4,r8,4884
4104c4d0:	4104c6d8 	cmpnei	r4,r8,4891
4104c4d4:	4104c6c0 	call	44104c6c <__alt_data_end+0x308646c>
4104c4d8:	4104c6d8 	cmpnei	r4,r8,4891
4104c4dc:	4104c50c 	andi	r4,r8,4884
4104c4e0:	4104c6e8 	cmpgeui	r4,r8,4891
4104c4e4:	4104c6e8 	cmpgeui	r4,r8,4891
4104c4e8:	4104c6e8 	cmpgeui	r4,r8,4891
4104c4ec:	4104c904 	addi	r4,r8,4900
4104c4f0:	2404b03a 	or	r2,r4,r16
4104c4f4:	10006f1e 	bne	r2,zero,4104c6b4 <__muldf3+0x2f8>
4104c4f8:	04c00204 	movi	r19,8
4104c4fc:	0021883a 	mov	r16,zero
4104c500:	0029883a 	mov	r20,zero
4104c504:	07000084 	movi	fp,2
4104c508:	003fcb06 	br	4104c438 <__alt_data_end+0xfffcdc38>
4104c50c:	502d883a 	mov	r22,r10
4104c510:	00800084 	movi	r2,2
4104c514:	28805726 	beq	r5,r2,4104c674 <__muldf3+0x2b8>
4104c518:	008000c4 	movi	r2,3
4104c51c:	28816626 	beq	r5,r2,4104cab8 <__muldf3+0x6fc>
4104c520:	00800044 	movi	r2,1
4104c524:	2881411e 	bne	r5,r2,4104ca2c <__muldf3+0x670>
4104c528:	b02b883a 	mov	r21,r22
4104c52c:	0005883a 	mov	r2,zero
4104c530:	000b883a 	mov	r5,zero
4104c534:	0029883a 	mov	r20,zero
4104c538:	1004953a 	slli	r2,r2,20
4104c53c:	a8c03fcc 	andi	r3,r21,255
4104c540:	04400434 	movhi	r17,16
4104c544:	8c7fffc4 	addi	r17,r17,-1
4104c548:	180697fa 	slli	r3,r3,31
4104c54c:	2c4a703a 	and	r5,r5,r17
4104c550:	288ab03a 	or	r5,r5,r2
4104c554:	28c6b03a 	or	r3,r5,r3
4104c558:	a005883a 	mov	r2,r20
4104c55c:	dfc00c17 	ldw	ra,48(sp)
4104c560:	df000b17 	ldw	fp,44(sp)
4104c564:	ddc00a17 	ldw	r23,40(sp)
4104c568:	dd800917 	ldw	r22,36(sp)
4104c56c:	dd400817 	ldw	r21,32(sp)
4104c570:	dd000717 	ldw	r20,28(sp)
4104c574:	dcc00617 	ldw	r19,24(sp)
4104c578:	dc800517 	ldw	r18,20(sp)
4104c57c:	dc400417 	ldw	r17,16(sp)
4104c580:	dc000317 	ldw	r16,12(sp)
4104c584:	dec00d04 	addi	sp,sp,52
4104c588:	f800283a 	ret
4104c58c:	2404b03a 	or	r2,r4,r16
4104c590:	2027883a 	mov	r19,r4
4104c594:	10004226 	beq	r2,zero,4104c6a0 <__muldf3+0x2e4>
4104c598:	8000fc26 	beq	r16,zero,4104c98c <__muldf3+0x5d0>
4104c59c:	8009883a 	mov	r4,r16
4104c5a0:	d9800215 	stw	r6,8(sp)
4104c5a4:	d9c00015 	stw	r7,0(sp)
4104c5a8:	da400115 	stw	r9,4(sp)
4104c5ac:	104d5d40 	call	4104d5d4 <__clzsi2>
4104c5b0:	d9800217 	ldw	r6,8(sp)
4104c5b4:	d9c00017 	ldw	r7,0(sp)
4104c5b8:	da400117 	ldw	r9,4(sp)
4104c5bc:	113ffd44 	addi	r4,r2,-11
4104c5c0:	00c00704 	movi	r3,28
4104c5c4:	1900ed16 	blt	r3,r4,4104c97c <__muldf3+0x5c0>
4104c5c8:	00c00744 	movi	r3,29
4104c5cc:	147ffe04 	addi	r17,r2,-8
4104c5d0:	1907c83a 	sub	r3,r3,r4
4104c5d4:	8460983a 	sll	r16,r16,r17
4104c5d8:	98c6d83a 	srl	r3,r19,r3
4104c5dc:	9c68983a 	sll	r20,r19,r17
4104c5e0:	1c20b03a 	or	r16,r3,r16
4104c5e4:	1080fcc4 	addi	r2,r2,1011
4104c5e8:	00a5c83a 	sub	r18,zero,r2
4104c5ec:	0027883a 	mov	r19,zero
4104c5f0:	0039883a 	mov	fp,zero
4104c5f4:	003f9006 	br	4104c438 <__alt_data_end+0xfffcdc38>
4104c5f8:	3446b03a 	or	r3,r6,r17
4104c5fc:	1800261e 	bne	r3,zero,4104c698 <__muldf3+0x2dc>
4104c600:	0023883a 	mov	r17,zero
4104c604:	0011883a 	mov	r8,zero
4104c608:	01400084 	movi	r5,2
4104c60c:	003f9c06 	br	4104c480 <__alt_data_end+0xfffcdc80>
4104c610:	3446b03a 	or	r3,r6,r17
4104c614:	18001c26 	beq	r3,zero,4104c688 <__muldf3+0x2cc>
4104c618:	8800ce26 	beq	r17,zero,4104c954 <__muldf3+0x598>
4104c61c:	8809883a 	mov	r4,r17
4104c620:	d9800215 	stw	r6,8(sp)
4104c624:	da400115 	stw	r9,4(sp)
4104c628:	da800015 	stw	r10,0(sp)
4104c62c:	104d5d40 	call	4104d5d4 <__clzsi2>
4104c630:	d9800217 	ldw	r6,8(sp)
4104c634:	da400117 	ldw	r9,4(sp)
4104c638:	da800017 	ldw	r10,0(sp)
4104c63c:	113ffd44 	addi	r4,r2,-11
4104c640:	00c00704 	movi	r3,28
4104c644:	1900bf16 	blt	r3,r4,4104c944 <__muldf3+0x588>
4104c648:	00c00744 	movi	r3,29
4104c64c:	123ffe04 	addi	r8,r2,-8
4104c650:	1907c83a 	sub	r3,r3,r4
4104c654:	8a22983a 	sll	r17,r17,r8
4104c658:	30c6d83a 	srl	r3,r6,r3
4104c65c:	3210983a 	sll	r8,r6,r8
4104c660:	1c62b03a 	or	r17,r3,r17
4104c664:	1080fcc4 	addi	r2,r2,1011
4104c668:	0085c83a 	sub	r2,zero,r2
4104c66c:	000b883a 	mov	r5,zero
4104c670:	003f8306 	br	4104c480 <__alt_data_end+0xfffcdc80>
4104c674:	b02b883a 	mov	r21,r22
4104c678:	0081ffc4 	movi	r2,2047
4104c67c:	000b883a 	mov	r5,zero
4104c680:	0029883a 	mov	r20,zero
4104c684:	003fac06 	br	4104c538 <__alt_data_end+0xfffcdd38>
4104c688:	0023883a 	mov	r17,zero
4104c68c:	0011883a 	mov	r8,zero
4104c690:	01400044 	movi	r5,1
4104c694:	003f7a06 	br	4104c480 <__alt_data_end+0xfffcdc80>
4104c698:	014000c4 	movi	r5,3
4104c69c:	003f7806 	br	4104c480 <__alt_data_end+0xfffcdc80>
4104c6a0:	04c00104 	movi	r19,4
4104c6a4:	0021883a 	mov	r16,zero
4104c6a8:	0029883a 	mov	r20,zero
4104c6ac:	07000044 	movi	fp,1
4104c6b0:	003f6106 	br	4104c438 <__alt_data_end+0xfffcdc38>
4104c6b4:	04c00304 	movi	r19,12
4104c6b8:	070000c4 	movi	fp,3
4104c6bc:	003f5e06 	br	4104c438 <__alt_data_end+0xfffcdc38>
4104c6c0:	01400434 	movhi	r5,16
4104c6c4:	002b883a 	mov	r21,zero
4104c6c8:	297fffc4 	addi	r5,r5,-1
4104c6cc:	053fffc4 	movi	r20,-1
4104c6d0:	0081ffc4 	movi	r2,2047
4104c6d4:	003f9806 	br	4104c538 <__alt_data_end+0xfffcdd38>
4104c6d8:	8023883a 	mov	r17,r16
4104c6dc:	a011883a 	mov	r8,r20
4104c6e0:	e00b883a 	mov	r5,fp
4104c6e4:	003f8a06 	br	4104c510 <__alt_data_end+0xfffcdd10>
4104c6e8:	8023883a 	mov	r17,r16
4104c6ec:	a011883a 	mov	r8,r20
4104c6f0:	482d883a 	mov	r22,r9
4104c6f4:	e00b883a 	mov	r5,fp
4104c6f8:	003f8506 	br	4104c510 <__alt_data_end+0xfffcdd10>
4104c6fc:	a00ad43a 	srli	r5,r20,16
4104c700:	401ad43a 	srli	r13,r8,16
4104c704:	a53fffcc 	andi	r20,r20,65535
4104c708:	423fffcc 	andi	r8,r8,65535
4104c70c:	4519383a 	mul	r12,r8,r20
4104c710:	4147383a 	mul	r3,r8,r5
4104c714:	6d09383a 	mul	r4,r13,r20
4104c718:	600cd43a 	srli	r6,r12,16
4104c71c:	2b5d383a 	mul	r14,r5,r13
4104c720:	20c9883a 	add	r4,r4,r3
4104c724:	310d883a 	add	r6,r6,r4
4104c728:	30c0022e 	bgeu	r6,r3,4104c734 <__muldf3+0x378>
4104c72c:	00c00074 	movhi	r3,1
4104c730:	70dd883a 	add	r14,r14,r3
4104c734:	8826d43a 	srli	r19,r17,16
4104c738:	8bffffcc 	andi	r15,r17,65535
4104c73c:	7d23383a 	mul	r17,r15,r20
4104c740:	7949383a 	mul	r4,r15,r5
4104c744:	9d29383a 	mul	r20,r19,r20
4104c748:	8814d43a 	srli	r10,r17,16
4104c74c:	3012943a 	slli	r9,r6,16
4104c750:	a129883a 	add	r20,r20,r4
4104c754:	633fffcc 	andi	r12,r12,65535
4104c758:	5515883a 	add	r10,r10,r20
4104c75c:	3006d43a 	srli	r3,r6,16
4104c760:	4b13883a 	add	r9,r9,r12
4104c764:	2ccb383a 	mul	r5,r5,r19
4104c768:	5100022e 	bgeu	r10,r4,4104c774 <__muldf3+0x3b8>
4104c76c:	01000074 	movhi	r4,1
4104c770:	290b883a 	add	r5,r5,r4
4104c774:	802ad43a 	srli	r21,r16,16
4104c778:	843fffcc 	andi	r16,r16,65535
4104c77c:	440d383a 	mul	r6,r8,r16
4104c780:	4565383a 	mul	r18,r8,r21
4104c784:	8349383a 	mul	r4,r16,r13
4104c788:	500e943a 	slli	r7,r10,16
4104c78c:	3010d43a 	srli	r8,r6,16
4104c790:	5028d43a 	srli	r20,r10,16
4104c794:	2489883a 	add	r4,r4,r18
4104c798:	8abfffcc 	andi	r10,r17,65535
4104c79c:	3a95883a 	add	r10,r7,r10
4104c7a0:	4119883a 	add	r12,r8,r4
4104c7a4:	a169883a 	add	r20,r20,r5
4104c7a8:	1a87883a 	add	r3,r3,r10
4104c7ac:	6d5b383a 	mul	r13,r13,r21
4104c7b0:	6480022e 	bgeu	r12,r18,4104c7bc <__muldf3+0x400>
4104c7b4:	01000074 	movhi	r4,1
4104c7b8:	691b883a 	add	r13,r13,r4
4104c7bc:	7c25383a 	mul	r18,r15,r16
4104c7c0:	7d4b383a 	mul	r5,r15,r21
4104c7c4:	84cf383a 	mul	r7,r16,r19
4104c7c8:	901ed43a 	srli	r15,r18,16
4104c7cc:	6008d43a 	srli	r4,r12,16
4104c7d0:	6010943a 	slli	r8,r12,16
4104c7d4:	394f883a 	add	r7,r7,r5
4104c7d8:	333fffcc 	andi	r12,r6,65535
4104c7dc:	79df883a 	add	r15,r15,r7
4104c7e0:	235b883a 	add	r13,r4,r13
4104c7e4:	9d63383a 	mul	r17,r19,r21
4104c7e8:	4309883a 	add	r4,r8,r12
4104c7ec:	7940022e 	bgeu	r15,r5,4104c7f8 <__muldf3+0x43c>
4104c7f0:	01400074 	movhi	r5,1
4104c7f4:	8963883a 	add	r17,r17,r5
4104c7f8:	780a943a 	slli	r5,r15,16
4104c7fc:	91bfffcc 	andi	r6,r18,65535
4104c800:	70c7883a 	add	r3,r14,r3
4104c804:	298d883a 	add	r6,r5,r6
4104c808:	1a8f803a 	cmpltu	r7,r3,r10
4104c80c:	350b883a 	add	r5,r6,r20
4104c810:	20c7883a 	add	r3,r4,r3
4104c814:	3955883a 	add	r10,r7,r5
4104c818:	1909803a 	cmpltu	r4,r3,r4
4104c81c:	6a91883a 	add	r8,r13,r10
4104c820:	780cd43a 	srli	r6,r15,16
4104c824:	2219883a 	add	r12,r4,r8
4104c828:	2d0b803a 	cmpltu	r5,r5,r20
4104c82c:	51cf803a 	cmpltu	r7,r10,r7
4104c830:	29ceb03a 	or	r7,r5,r7
4104c834:	4351803a 	cmpltu	r8,r8,r13
4104c838:	610b803a 	cmpltu	r5,r12,r4
4104c83c:	4148b03a 	or	r4,r8,r5
4104c840:	398f883a 	add	r7,r7,r6
4104c844:	3909883a 	add	r4,r7,r4
4104c848:	1810927a 	slli	r8,r3,9
4104c84c:	2449883a 	add	r4,r4,r17
4104c850:	2008927a 	slli	r4,r4,9
4104c854:	6022d5fa 	srli	r17,r12,23
4104c858:	1806d5fa 	srli	r3,r3,23
4104c85c:	4252b03a 	or	r9,r8,r9
4104c860:	600a927a 	slli	r5,r12,9
4104c864:	4810c03a 	cmpne	r8,r9,zero
4104c868:	2462b03a 	or	r17,r4,r17
4104c86c:	40c6b03a 	or	r3,r8,r3
4104c870:	8900402c 	andhi	r4,r17,256
4104c874:	1950b03a 	or	r8,r3,r5
4104c878:	20000726 	beq	r4,zero,4104c898 <__muldf3+0x4dc>
4104c87c:	4006d07a 	srli	r3,r8,1
4104c880:	880497fa 	slli	r2,r17,31
4104c884:	4200004c 	andi	r8,r8,1
4104c888:	8822d07a 	srli	r17,r17,1
4104c88c:	1a10b03a 	or	r8,r3,r8
4104c890:	1210b03a 	or	r8,r2,r8
4104c894:	5805883a 	mov	r2,r11
4104c898:	1140ffc4 	addi	r5,r2,1023
4104c89c:	0140440e 	bge	zero,r5,4104c9b0 <__muldf3+0x5f4>
4104c8a0:	40c001cc 	andi	r3,r8,7
4104c8a4:	18000726 	beq	r3,zero,4104c8c4 <__muldf3+0x508>
4104c8a8:	40c003cc 	andi	r3,r8,15
4104c8ac:	01000104 	movi	r4,4
4104c8b0:	19000426 	beq	r3,r4,4104c8c4 <__muldf3+0x508>
4104c8b4:	4107883a 	add	r3,r8,r4
4104c8b8:	1a11803a 	cmpltu	r8,r3,r8
4104c8bc:	8a23883a 	add	r17,r17,r8
4104c8c0:	1811883a 	mov	r8,r3
4104c8c4:	88c0402c 	andhi	r3,r17,256
4104c8c8:	18000426 	beq	r3,zero,4104c8dc <__muldf3+0x520>
4104c8cc:	11410004 	addi	r5,r2,1024
4104c8d0:	00bfc034 	movhi	r2,65280
4104c8d4:	10bfffc4 	addi	r2,r2,-1
4104c8d8:	88a2703a 	and	r17,r17,r2
4104c8dc:	0081ff84 	movi	r2,2046
4104c8e0:	117f6416 	blt	r2,r5,4104c674 <__alt_data_end+0xfffcde74>
4104c8e4:	8828977a 	slli	r20,r17,29
4104c8e8:	4010d0fa 	srli	r8,r8,3
4104c8ec:	8822927a 	slli	r17,r17,9
4104c8f0:	2881ffcc 	andi	r2,r5,2047
4104c8f4:	a228b03a 	or	r20,r20,r8
4104c8f8:	880ad33a 	srli	r5,r17,12
4104c8fc:	b02b883a 	mov	r21,r22
4104c900:	003f0d06 	br	4104c538 <__alt_data_end+0xfffcdd38>
4104c904:	8080022c 	andhi	r2,r16,8
4104c908:	10000926 	beq	r2,zero,4104c930 <__muldf3+0x574>
4104c90c:	8880022c 	andhi	r2,r17,8
4104c910:	1000071e 	bne	r2,zero,4104c930 <__muldf3+0x574>
4104c914:	00800434 	movhi	r2,16
4104c918:	89400234 	orhi	r5,r17,8
4104c91c:	10bfffc4 	addi	r2,r2,-1
4104c920:	b82b883a 	mov	r21,r23
4104c924:	288a703a 	and	r5,r5,r2
4104c928:	4029883a 	mov	r20,r8
4104c92c:	003f6806 	br	4104c6d0 <__alt_data_end+0xfffcded0>
4104c930:	00800434 	movhi	r2,16
4104c934:	81400234 	orhi	r5,r16,8
4104c938:	10bfffc4 	addi	r2,r2,-1
4104c93c:	288a703a 	and	r5,r5,r2
4104c940:	003f6306 	br	4104c6d0 <__alt_data_end+0xfffcded0>
4104c944:	147ff604 	addi	r17,r2,-40
4104c948:	3462983a 	sll	r17,r6,r17
4104c94c:	0011883a 	mov	r8,zero
4104c950:	003f4406 	br	4104c664 <__alt_data_end+0xfffcde64>
4104c954:	3009883a 	mov	r4,r6
4104c958:	d9800215 	stw	r6,8(sp)
4104c95c:	da400115 	stw	r9,4(sp)
4104c960:	da800015 	stw	r10,0(sp)
4104c964:	104d5d40 	call	4104d5d4 <__clzsi2>
4104c968:	10800804 	addi	r2,r2,32
4104c96c:	da800017 	ldw	r10,0(sp)
4104c970:	da400117 	ldw	r9,4(sp)
4104c974:	d9800217 	ldw	r6,8(sp)
4104c978:	003f3006 	br	4104c63c <__alt_data_end+0xfffcde3c>
4104c97c:	143ff604 	addi	r16,r2,-40
4104c980:	9c20983a 	sll	r16,r19,r16
4104c984:	0029883a 	mov	r20,zero
4104c988:	003f1606 	br	4104c5e4 <__alt_data_end+0xfffcdde4>
4104c98c:	d9800215 	stw	r6,8(sp)
4104c990:	d9c00015 	stw	r7,0(sp)
4104c994:	da400115 	stw	r9,4(sp)
4104c998:	104d5d40 	call	4104d5d4 <__clzsi2>
4104c99c:	10800804 	addi	r2,r2,32
4104c9a0:	da400117 	ldw	r9,4(sp)
4104c9a4:	d9c00017 	ldw	r7,0(sp)
4104c9a8:	d9800217 	ldw	r6,8(sp)
4104c9ac:	003f0306 	br	4104c5bc <__alt_data_end+0xfffcddbc>
4104c9b0:	00c00044 	movi	r3,1
4104c9b4:	1947c83a 	sub	r3,r3,r5
4104c9b8:	00800e04 	movi	r2,56
4104c9bc:	10feda16 	blt	r2,r3,4104c528 <__alt_data_end+0xfffcdd28>
4104c9c0:	008007c4 	movi	r2,31
4104c9c4:	10c01b16 	blt	r2,r3,4104ca34 <__muldf3+0x678>
4104c9c8:	00800804 	movi	r2,32
4104c9cc:	10c5c83a 	sub	r2,r2,r3
4104c9d0:	888a983a 	sll	r5,r17,r2
4104c9d4:	40c8d83a 	srl	r4,r8,r3
4104c9d8:	4084983a 	sll	r2,r8,r2
4104c9dc:	88e2d83a 	srl	r17,r17,r3
4104c9e0:	2906b03a 	or	r3,r5,r4
4104c9e4:	1004c03a 	cmpne	r2,r2,zero
4104c9e8:	1886b03a 	or	r3,r3,r2
4104c9ec:	188001cc 	andi	r2,r3,7
4104c9f0:	10000726 	beq	r2,zero,4104ca10 <__muldf3+0x654>
4104c9f4:	188003cc 	andi	r2,r3,15
4104c9f8:	01000104 	movi	r4,4
4104c9fc:	11000426 	beq	r2,r4,4104ca10 <__muldf3+0x654>
4104ca00:	1805883a 	mov	r2,r3
4104ca04:	10c00104 	addi	r3,r2,4
4104ca08:	1885803a 	cmpltu	r2,r3,r2
4104ca0c:	88a3883a 	add	r17,r17,r2
4104ca10:	8880202c 	andhi	r2,r17,128
4104ca14:	10001c26 	beq	r2,zero,4104ca88 <__muldf3+0x6cc>
4104ca18:	b02b883a 	mov	r21,r22
4104ca1c:	00800044 	movi	r2,1
4104ca20:	000b883a 	mov	r5,zero
4104ca24:	0029883a 	mov	r20,zero
4104ca28:	003ec306 	br	4104c538 <__alt_data_end+0xfffcdd38>
4104ca2c:	5805883a 	mov	r2,r11
4104ca30:	003f9906 	br	4104c898 <__alt_data_end+0xfffce098>
4104ca34:	00bff844 	movi	r2,-31
4104ca38:	1145c83a 	sub	r2,r2,r5
4104ca3c:	8888d83a 	srl	r4,r17,r2
4104ca40:	00800804 	movi	r2,32
4104ca44:	18801a26 	beq	r3,r2,4104cab0 <__muldf3+0x6f4>
4104ca48:	00801004 	movi	r2,64
4104ca4c:	10c5c83a 	sub	r2,r2,r3
4104ca50:	8884983a 	sll	r2,r17,r2
4104ca54:	1204b03a 	or	r2,r2,r8
4104ca58:	1004c03a 	cmpne	r2,r2,zero
4104ca5c:	2084b03a 	or	r2,r4,r2
4104ca60:	144001cc 	andi	r17,r2,7
4104ca64:	88000d1e 	bne	r17,zero,4104ca9c <__muldf3+0x6e0>
4104ca68:	000b883a 	mov	r5,zero
4104ca6c:	1028d0fa 	srli	r20,r2,3
4104ca70:	b02b883a 	mov	r21,r22
4104ca74:	0005883a 	mov	r2,zero
4104ca78:	a468b03a 	or	r20,r20,r17
4104ca7c:	003eae06 	br	4104c538 <__alt_data_end+0xfffcdd38>
4104ca80:	1007883a 	mov	r3,r2
4104ca84:	0023883a 	mov	r17,zero
4104ca88:	880a927a 	slli	r5,r17,9
4104ca8c:	1805883a 	mov	r2,r3
4104ca90:	8822977a 	slli	r17,r17,29
4104ca94:	280ad33a 	srli	r5,r5,12
4104ca98:	003ff406 	br	4104ca6c <__alt_data_end+0xfffce26c>
4104ca9c:	10c003cc 	andi	r3,r2,15
4104caa0:	01000104 	movi	r4,4
4104caa4:	193ff626 	beq	r3,r4,4104ca80 <__alt_data_end+0xfffce280>
4104caa8:	0023883a 	mov	r17,zero
4104caac:	003fd506 	br	4104ca04 <__alt_data_end+0xfffce204>
4104cab0:	0005883a 	mov	r2,zero
4104cab4:	003fe706 	br	4104ca54 <__alt_data_end+0xfffce254>
4104cab8:	00800434 	movhi	r2,16
4104cabc:	89400234 	orhi	r5,r17,8
4104cac0:	10bfffc4 	addi	r2,r2,-1
4104cac4:	b02b883a 	mov	r21,r22
4104cac8:	288a703a 	and	r5,r5,r2
4104cacc:	4029883a 	mov	r20,r8
4104cad0:	003eff06 	br	4104c6d0 <__alt_data_end+0xfffcded0>

4104cad4 <__subdf3>:
4104cad4:	02000434 	movhi	r8,16
4104cad8:	423fffc4 	addi	r8,r8,-1
4104cadc:	defffb04 	addi	sp,sp,-20
4104cae0:	2a14703a 	and	r10,r5,r8
4104cae4:	3812d53a 	srli	r9,r7,20
4104cae8:	3a10703a 	and	r8,r7,r8
4104caec:	2006d77a 	srli	r3,r4,29
4104caf0:	3004d77a 	srli	r2,r6,29
4104caf4:	dc000015 	stw	r16,0(sp)
4104caf8:	501490fa 	slli	r10,r10,3
4104cafc:	2820d53a 	srli	r16,r5,20
4104cb00:	401090fa 	slli	r8,r8,3
4104cb04:	dc800215 	stw	r18,8(sp)
4104cb08:	dc400115 	stw	r17,4(sp)
4104cb0c:	dfc00415 	stw	ra,16(sp)
4104cb10:	202290fa 	slli	r17,r4,3
4104cb14:	dcc00315 	stw	r19,12(sp)
4104cb18:	4a41ffcc 	andi	r9,r9,2047
4104cb1c:	0101ffc4 	movi	r4,2047
4104cb20:	2824d7fa 	srli	r18,r5,31
4104cb24:	8401ffcc 	andi	r16,r16,2047
4104cb28:	50c6b03a 	or	r3,r10,r3
4104cb2c:	380ed7fa 	srli	r7,r7,31
4104cb30:	408ab03a 	or	r5,r8,r2
4104cb34:	300c90fa 	slli	r6,r6,3
4104cb38:	49009626 	beq	r9,r4,4104cd94 <__subdf3+0x2c0>
4104cb3c:	39c0005c 	xori	r7,r7,1
4104cb40:	8245c83a 	sub	r2,r16,r9
4104cb44:	3c807426 	beq	r7,r18,4104cd18 <__subdf3+0x244>
4104cb48:	0080af0e 	bge	zero,r2,4104ce08 <__subdf3+0x334>
4104cb4c:	48002a1e 	bne	r9,zero,4104cbf8 <__subdf3+0x124>
4104cb50:	2988b03a 	or	r4,r5,r6
4104cb54:	20009a1e 	bne	r4,zero,4104cdc0 <__subdf3+0x2ec>
4104cb58:	888001cc 	andi	r2,r17,7
4104cb5c:	10000726 	beq	r2,zero,4104cb7c <__subdf3+0xa8>
4104cb60:	888003cc 	andi	r2,r17,15
4104cb64:	01000104 	movi	r4,4
4104cb68:	11000426 	beq	r2,r4,4104cb7c <__subdf3+0xa8>
4104cb6c:	890b883a 	add	r5,r17,r4
4104cb70:	2c63803a 	cmpltu	r17,r5,r17
4104cb74:	1c47883a 	add	r3,r3,r17
4104cb78:	2823883a 	mov	r17,r5
4104cb7c:	1880202c 	andhi	r2,r3,128
4104cb80:	10005926 	beq	r2,zero,4104cce8 <__subdf3+0x214>
4104cb84:	84000044 	addi	r16,r16,1
4104cb88:	0081ffc4 	movi	r2,2047
4104cb8c:	8080be26 	beq	r16,r2,4104ce88 <__subdf3+0x3b4>
4104cb90:	017fe034 	movhi	r5,65408
4104cb94:	297fffc4 	addi	r5,r5,-1
4104cb98:	1946703a 	and	r3,r3,r5
4104cb9c:	1804977a 	slli	r2,r3,29
4104cba0:	1806927a 	slli	r3,r3,9
4104cba4:	8822d0fa 	srli	r17,r17,3
4104cba8:	8401ffcc 	andi	r16,r16,2047
4104cbac:	180ad33a 	srli	r5,r3,12
4104cbb0:	9100004c 	andi	r4,r18,1
4104cbb4:	1444b03a 	or	r2,r2,r17
4104cbb8:	80c1ffcc 	andi	r3,r16,2047
4104cbbc:	1820953a 	slli	r16,r3,20
4104cbc0:	20c03fcc 	andi	r3,r4,255
4104cbc4:	180897fa 	slli	r4,r3,31
4104cbc8:	00c00434 	movhi	r3,16
4104cbcc:	18ffffc4 	addi	r3,r3,-1
4104cbd0:	28c6703a 	and	r3,r5,r3
4104cbd4:	1c06b03a 	or	r3,r3,r16
4104cbd8:	1906b03a 	or	r3,r3,r4
4104cbdc:	dfc00417 	ldw	ra,16(sp)
4104cbe0:	dcc00317 	ldw	r19,12(sp)
4104cbe4:	dc800217 	ldw	r18,8(sp)
4104cbe8:	dc400117 	ldw	r17,4(sp)
4104cbec:	dc000017 	ldw	r16,0(sp)
4104cbf0:	dec00504 	addi	sp,sp,20
4104cbf4:	f800283a 	ret
4104cbf8:	0101ffc4 	movi	r4,2047
4104cbfc:	813fd626 	beq	r16,r4,4104cb58 <__alt_data_end+0xfffce358>
4104cc00:	29402034 	orhi	r5,r5,128
4104cc04:	01000e04 	movi	r4,56
4104cc08:	2080a316 	blt	r4,r2,4104ce98 <__subdf3+0x3c4>
4104cc0c:	010007c4 	movi	r4,31
4104cc10:	2080c616 	blt	r4,r2,4104cf2c <__subdf3+0x458>
4104cc14:	01000804 	movi	r4,32
4104cc18:	2089c83a 	sub	r4,r4,r2
4104cc1c:	2910983a 	sll	r8,r5,r4
4104cc20:	308ed83a 	srl	r7,r6,r2
4104cc24:	3108983a 	sll	r4,r6,r4
4104cc28:	2884d83a 	srl	r2,r5,r2
4104cc2c:	41ccb03a 	or	r6,r8,r7
4104cc30:	2008c03a 	cmpne	r4,r4,zero
4104cc34:	310cb03a 	or	r6,r6,r4
4104cc38:	898dc83a 	sub	r6,r17,r6
4104cc3c:	89a3803a 	cmpltu	r17,r17,r6
4104cc40:	1887c83a 	sub	r3,r3,r2
4104cc44:	1c47c83a 	sub	r3,r3,r17
4104cc48:	3023883a 	mov	r17,r6
4104cc4c:	1880202c 	andhi	r2,r3,128
4104cc50:	10002326 	beq	r2,zero,4104cce0 <__subdf3+0x20c>
4104cc54:	04c02034 	movhi	r19,128
4104cc58:	9cffffc4 	addi	r19,r19,-1
4104cc5c:	1ce6703a 	and	r19,r3,r19
4104cc60:	98007a26 	beq	r19,zero,4104ce4c <__subdf3+0x378>
4104cc64:	9809883a 	mov	r4,r19
4104cc68:	104d5d40 	call	4104d5d4 <__clzsi2>
4104cc6c:	113ffe04 	addi	r4,r2,-8
4104cc70:	00c007c4 	movi	r3,31
4104cc74:	19007b16 	blt	r3,r4,4104ce64 <__subdf3+0x390>
4104cc78:	00800804 	movi	r2,32
4104cc7c:	1105c83a 	sub	r2,r2,r4
4104cc80:	8884d83a 	srl	r2,r17,r2
4104cc84:	9906983a 	sll	r3,r19,r4
4104cc88:	8922983a 	sll	r17,r17,r4
4104cc8c:	10c4b03a 	or	r2,r2,r3
4104cc90:	24007816 	blt	r4,r16,4104ce74 <__subdf3+0x3a0>
4104cc94:	2421c83a 	sub	r16,r4,r16
4104cc98:	80c00044 	addi	r3,r16,1
4104cc9c:	010007c4 	movi	r4,31
4104cca0:	20c09516 	blt	r4,r3,4104cef8 <__subdf3+0x424>
4104cca4:	01400804 	movi	r5,32
4104cca8:	28cbc83a 	sub	r5,r5,r3
4104ccac:	88c8d83a 	srl	r4,r17,r3
4104ccb0:	8962983a 	sll	r17,r17,r5
4104ccb4:	114a983a 	sll	r5,r2,r5
4104ccb8:	10c6d83a 	srl	r3,r2,r3
4104ccbc:	8804c03a 	cmpne	r2,r17,zero
4104ccc0:	290ab03a 	or	r5,r5,r4
4104ccc4:	28a2b03a 	or	r17,r5,r2
4104ccc8:	0021883a 	mov	r16,zero
4104cccc:	003fa206 	br	4104cb58 <__alt_data_end+0xfffce358>
4104ccd0:	2090b03a 	or	r8,r4,r2
4104ccd4:	40018e26 	beq	r8,zero,4104d310 <__subdf3+0x83c>
4104ccd8:	1007883a 	mov	r3,r2
4104ccdc:	2023883a 	mov	r17,r4
4104cce0:	888001cc 	andi	r2,r17,7
4104cce4:	103f9e1e 	bne	r2,zero,4104cb60 <__alt_data_end+0xfffce360>
4104cce8:	1804977a 	slli	r2,r3,29
4104ccec:	8822d0fa 	srli	r17,r17,3
4104ccf0:	1810d0fa 	srli	r8,r3,3
4104ccf4:	9100004c 	andi	r4,r18,1
4104ccf8:	1444b03a 	or	r2,r2,r17
4104ccfc:	00c1ffc4 	movi	r3,2047
4104cd00:	80c02826 	beq	r16,r3,4104cda4 <__subdf3+0x2d0>
4104cd04:	01400434 	movhi	r5,16
4104cd08:	297fffc4 	addi	r5,r5,-1
4104cd0c:	80e0703a 	and	r16,r16,r3
4104cd10:	414a703a 	and	r5,r8,r5
4104cd14:	003fa806 	br	4104cbb8 <__alt_data_end+0xfffce3b8>
4104cd18:	0080630e 	bge	zero,r2,4104cea8 <__subdf3+0x3d4>
4104cd1c:	48003026 	beq	r9,zero,4104cde0 <__subdf3+0x30c>
4104cd20:	0101ffc4 	movi	r4,2047
4104cd24:	813f8c26 	beq	r16,r4,4104cb58 <__alt_data_end+0xfffce358>
4104cd28:	29402034 	orhi	r5,r5,128
4104cd2c:	01000e04 	movi	r4,56
4104cd30:	2080a90e 	bge	r4,r2,4104cfd8 <__subdf3+0x504>
4104cd34:	298cb03a 	or	r6,r5,r6
4104cd38:	3012c03a 	cmpne	r9,r6,zero
4104cd3c:	0005883a 	mov	r2,zero
4104cd40:	4c53883a 	add	r9,r9,r17
4104cd44:	4c63803a 	cmpltu	r17,r9,r17
4104cd48:	10c7883a 	add	r3,r2,r3
4104cd4c:	88c7883a 	add	r3,r17,r3
4104cd50:	4823883a 	mov	r17,r9
4104cd54:	1880202c 	andhi	r2,r3,128
4104cd58:	1000d026 	beq	r2,zero,4104d09c <__subdf3+0x5c8>
4104cd5c:	84000044 	addi	r16,r16,1
4104cd60:	0081ffc4 	movi	r2,2047
4104cd64:	8080fe26 	beq	r16,r2,4104d160 <__subdf3+0x68c>
4104cd68:	00bfe034 	movhi	r2,65408
4104cd6c:	10bfffc4 	addi	r2,r2,-1
4104cd70:	1886703a 	and	r3,r3,r2
4104cd74:	880ad07a 	srli	r5,r17,1
4104cd78:	180497fa 	slli	r2,r3,31
4104cd7c:	8900004c 	andi	r4,r17,1
4104cd80:	2922b03a 	or	r17,r5,r4
4104cd84:	1806d07a 	srli	r3,r3,1
4104cd88:	1462b03a 	or	r17,r2,r17
4104cd8c:	3825883a 	mov	r18,r7
4104cd90:	003f7106 	br	4104cb58 <__alt_data_end+0xfffce358>
4104cd94:	2984b03a 	or	r2,r5,r6
4104cd98:	103f6826 	beq	r2,zero,4104cb3c <__alt_data_end+0xfffce33c>
4104cd9c:	39c03fcc 	andi	r7,r7,255
4104cda0:	003f6706 	br	4104cb40 <__alt_data_end+0xfffce340>
4104cda4:	4086b03a 	or	r3,r8,r2
4104cda8:	18015226 	beq	r3,zero,4104d2f4 <__subdf3+0x820>
4104cdac:	00c00434 	movhi	r3,16
4104cdb0:	41400234 	orhi	r5,r8,8
4104cdb4:	18ffffc4 	addi	r3,r3,-1
4104cdb8:	28ca703a 	and	r5,r5,r3
4104cdbc:	003f7e06 	br	4104cbb8 <__alt_data_end+0xfffce3b8>
4104cdc0:	10bfffc4 	addi	r2,r2,-1
4104cdc4:	1000491e 	bne	r2,zero,4104ceec <__subdf3+0x418>
4104cdc8:	898fc83a 	sub	r7,r17,r6
4104cdcc:	89e3803a 	cmpltu	r17,r17,r7
4104cdd0:	1947c83a 	sub	r3,r3,r5
4104cdd4:	1c47c83a 	sub	r3,r3,r17
4104cdd8:	3823883a 	mov	r17,r7
4104cddc:	003f9b06 	br	4104cc4c <__alt_data_end+0xfffce44c>
4104cde0:	2988b03a 	or	r4,r5,r6
4104cde4:	203f5c26 	beq	r4,zero,4104cb58 <__alt_data_end+0xfffce358>
4104cde8:	10bfffc4 	addi	r2,r2,-1
4104cdec:	1000931e 	bne	r2,zero,4104d03c <__subdf3+0x568>
4104cdf0:	898d883a 	add	r6,r17,r6
4104cdf4:	3463803a 	cmpltu	r17,r6,r17
4104cdf8:	1947883a 	add	r3,r3,r5
4104cdfc:	88c7883a 	add	r3,r17,r3
4104ce00:	3023883a 	mov	r17,r6
4104ce04:	003fd306 	br	4104cd54 <__alt_data_end+0xfffce554>
4104ce08:	1000541e 	bne	r2,zero,4104cf5c <__subdf3+0x488>
4104ce0c:	80800044 	addi	r2,r16,1
4104ce10:	1081ffcc 	andi	r2,r2,2047
4104ce14:	01000044 	movi	r4,1
4104ce18:	2080a20e 	bge	r4,r2,4104d0a4 <__subdf3+0x5d0>
4104ce1c:	8989c83a 	sub	r4,r17,r6
4104ce20:	8905803a 	cmpltu	r2,r17,r4
4104ce24:	1967c83a 	sub	r19,r3,r5
4104ce28:	98a7c83a 	sub	r19,r19,r2
4104ce2c:	9880202c 	andhi	r2,r19,128
4104ce30:	10006326 	beq	r2,zero,4104cfc0 <__subdf3+0x4ec>
4104ce34:	3463c83a 	sub	r17,r6,r17
4104ce38:	28c7c83a 	sub	r3,r5,r3
4104ce3c:	344d803a 	cmpltu	r6,r6,r17
4104ce40:	19a7c83a 	sub	r19,r3,r6
4104ce44:	3825883a 	mov	r18,r7
4104ce48:	983f861e 	bne	r19,zero,4104cc64 <__alt_data_end+0xfffce464>
4104ce4c:	8809883a 	mov	r4,r17
4104ce50:	104d5d40 	call	4104d5d4 <__clzsi2>
4104ce54:	10800804 	addi	r2,r2,32
4104ce58:	113ffe04 	addi	r4,r2,-8
4104ce5c:	00c007c4 	movi	r3,31
4104ce60:	193f850e 	bge	r3,r4,4104cc78 <__alt_data_end+0xfffce478>
4104ce64:	10bff604 	addi	r2,r2,-40
4104ce68:	8884983a 	sll	r2,r17,r2
4104ce6c:	0023883a 	mov	r17,zero
4104ce70:	243f880e 	bge	r4,r16,4104cc94 <__alt_data_end+0xfffce494>
4104ce74:	00ffe034 	movhi	r3,65408
4104ce78:	18ffffc4 	addi	r3,r3,-1
4104ce7c:	8121c83a 	sub	r16,r16,r4
4104ce80:	10c6703a 	and	r3,r2,r3
4104ce84:	003f3406 	br	4104cb58 <__alt_data_end+0xfffce358>
4104ce88:	9100004c 	andi	r4,r18,1
4104ce8c:	000b883a 	mov	r5,zero
4104ce90:	0005883a 	mov	r2,zero
4104ce94:	003f4806 	br	4104cbb8 <__alt_data_end+0xfffce3b8>
4104ce98:	298cb03a 	or	r6,r5,r6
4104ce9c:	300cc03a 	cmpne	r6,r6,zero
4104cea0:	0005883a 	mov	r2,zero
4104cea4:	003f6406 	br	4104cc38 <__alt_data_end+0xfffce438>
4104cea8:	10009a1e 	bne	r2,zero,4104d114 <__subdf3+0x640>
4104ceac:	82400044 	addi	r9,r16,1
4104ceb0:	4881ffcc 	andi	r2,r9,2047
4104ceb4:	02800044 	movi	r10,1
4104ceb8:	5080670e 	bge	r10,r2,4104d058 <__subdf3+0x584>
4104cebc:	0081ffc4 	movi	r2,2047
4104cec0:	4880af26 	beq	r9,r2,4104d180 <__subdf3+0x6ac>
4104cec4:	898d883a 	add	r6,r17,r6
4104cec8:	1945883a 	add	r2,r3,r5
4104cecc:	3447803a 	cmpltu	r3,r6,r17
4104ced0:	1887883a 	add	r3,r3,r2
4104ced4:	182297fa 	slli	r17,r3,31
4104ced8:	300cd07a 	srli	r6,r6,1
4104cedc:	1806d07a 	srli	r3,r3,1
4104cee0:	4821883a 	mov	r16,r9
4104cee4:	89a2b03a 	or	r17,r17,r6
4104cee8:	003f1b06 	br	4104cb58 <__alt_data_end+0xfffce358>
4104ceec:	0101ffc4 	movi	r4,2047
4104cef0:	813f441e 	bne	r16,r4,4104cc04 <__alt_data_end+0xfffce404>
4104cef4:	003f1806 	br	4104cb58 <__alt_data_end+0xfffce358>
4104cef8:	843ff844 	addi	r16,r16,-31
4104cefc:	01400804 	movi	r5,32
4104cf00:	1408d83a 	srl	r4,r2,r16
4104cf04:	19405026 	beq	r3,r5,4104d048 <__subdf3+0x574>
4104cf08:	01401004 	movi	r5,64
4104cf0c:	28c7c83a 	sub	r3,r5,r3
4104cf10:	10c4983a 	sll	r2,r2,r3
4104cf14:	88a2b03a 	or	r17,r17,r2
4104cf18:	8822c03a 	cmpne	r17,r17,zero
4104cf1c:	2462b03a 	or	r17,r4,r17
4104cf20:	0007883a 	mov	r3,zero
4104cf24:	0021883a 	mov	r16,zero
4104cf28:	003f6d06 	br	4104cce0 <__alt_data_end+0xfffce4e0>
4104cf2c:	11fff804 	addi	r7,r2,-32
4104cf30:	01000804 	movi	r4,32
4104cf34:	29ced83a 	srl	r7,r5,r7
4104cf38:	11004526 	beq	r2,r4,4104d050 <__subdf3+0x57c>
4104cf3c:	01001004 	movi	r4,64
4104cf40:	2089c83a 	sub	r4,r4,r2
4104cf44:	2904983a 	sll	r2,r5,r4
4104cf48:	118cb03a 	or	r6,r2,r6
4104cf4c:	300cc03a 	cmpne	r6,r6,zero
4104cf50:	398cb03a 	or	r6,r7,r6
4104cf54:	0005883a 	mov	r2,zero
4104cf58:	003f3706 	br	4104cc38 <__alt_data_end+0xfffce438>
4104cf5c:	80002a26 	beq	r16,zero,4104d008 <__subdf3+0x534>
4104cf60:	0101ffc4 	movi	r4,2047
4104cf64:	49006626 	beq	r9,r4,4104d100 <__subdf3+0x62c>
4104cf68:	0085c83a 	sub	r2,zero,r2
4104cf6c:	18c02034 	orhi	r3,r3,128
4104cf70:	01000e04 	movi	r4,56
4104cf74:	20807e16 	blt	r4,r2,4104d170 <__subdf3+0x69c>
4104cf78:	010007c4 	movi	r4,31
4104cf7c:	2080e716 	blt	r4,r2,4104d31c <__subdf3+0x848>
4104cf80:	01000804 	movi	r4,32
4104cf84:	2089c83a 	sub	r4,r4,r2
4104cf88:	1914983a 	sll	r10,r3,r4
4104cf8c:	8890d83a 	srl	r8,r17,r2
4104cf90:	8908983a 	sll	r4,r17,r4
4104cf94:	1884d83a 	srl	r2,r3,r2
4104cf98:	5222b03a 	or	r17,r10,r8
4104cf9c:	2006c03a 	cmpne	r3,r4,zero
4104cfa0:	88e2b03a 	or	r17,r17,r3
4104cfa4:	3463c83a 	sub	r17,r6,r17
4104cfa8:	2885c83a 	sub	r2,r5,r2
4104cfac:	344d803a 	cmpltu	r6,r6,r17
4104cfb0:	1187c83a 	sub	r3,r2,r6
4104cfb4:	4821883a 	mov	r16,r9
4104cfb8:	3825883a 	mov	r18,r7
4104cfbc:	003f2306 	br	4104cc4c <__alt_data_end+0xfffce44c>
4104cfc0:	24d0b03a 	or	r8,r4,r19
4104cfc4:	40001b1e 	bne	r8,zero,4104d034 <__subdf3+0x560>
4104cfc8:	0005883a 	mov	r2,zero
4104cfcc:	0009883a 	mov	r4,zero
4104cfd0:	0021883a 	mov	r16,zero
4104cfd4:	003f4906 	br	4104ccfc <__alt_data_end+0xfffce4fc>
4104cfd8:	010007c4 	movi	r4,31
4104cfdc:	20803a16 	blt	r4,r2,4104d0c8 <__subdf3+0x5f4>
4104cfe0:	01000804 	movi	r4,32
4104cfe4:	2089c83a 	sub	r4,r4,r2
4104cfe8:	2912983a 	sll	r9,r5,r4
4104cfec:	3090d83a 	srl	r8,r6,r2
4104cff0:	3108983a 	sll	r4,r6,r4
4104cff4:	2884d83a 	srl	r2,r5,r2
4104cff8:	4a12b03a 	or	r9,r9,r8
4104cffc:	2008c03a 	cmpne	r4,r4,zero
4104d000:	4912b03a 	or	r9,r9,r4
4104d004:	003f4e06 	br	4104cd40 <__alt_data_end+0xfffce540>
4104d008:	1c48b03a 	or	r4,r3,r17
4104d00c:	20003c26 	beq	r4,zero,4104d100 <__subdf3+0x62c>
4104d010:	0084303a 	nor	r2,zero,r2
4104d014:	1000381e 	bne	r2,zero,4104d0f8 <__subdf3+0x624>
4104d018:	3463c83a 	sub	r17,r6,r17
4104d01c:	28c5c83a 	sub	r2,r5,r3
4104d020:	344d803a 	cmpltu	r6,r6,r17
4104d024:	1187c83a 	sub	r3,r2,r6
4104d028:	4821883a 	mov	r16,r9
4104d02c:	3825883a 	mov	r18,r7
4104d030:	003f0606 	br	4104cc4c <__alt_data_end+0xfffce44c>
4104d034:	2023883a 	mov	r17,r4
4104d038:	003f0906 	br	4104cc60 <__alt_data_end+0xfffce460>
4104d03c:	0101ffc4 	movi	r4,2047
4104d040:	813f3a1e 	bne	r16,r4,4104cd2c <__alt_data_end+0xfffce52c>
4104d044:	003ec406 	br	4104cb58 <__alt_data_end+0xfffce358>
4104d048:	0005883a 	mov	r2,zero
4104d04c:	003fb106 	br	4104cf14 <__alt_data_end+0xfffce714>
4104d050:	0005883a 	mov	r2,zero
4104d054:	003fbc06 	br	4104cf48 <__alt_data_end+0xfffce748>
4104d058:	1c44b03a 	or	r2,r3,r17
4104d05c:	80008e1e 	bne	r16,zero,4104d298 <__subdf3+0x7c4>
4104d060:	1000c826 	beq	r2,zero,4104d384 <__subdf3+0x8b0>
4104d064:	2984b03a 	or	r2,r5,r6
4104d068:	103ebb26 	beq	r2,zero,4104cb58 <__alt_data_end+0xfffce358>
4104d06c:	8989883a 	add	r4,r17,r6
4104d070:	1945883a 	add	r2,r3,r5
4104d074:	2447803a 	cmpltu	r3,r4,r17
4104d078:	1887883a 	add	r3,r3,r2
4104d07c:	1880202c 	andhi	r2,r3,128
4104d080:	2023883a 	mov	r17,r4
4104d084:	103f1626 	beq	r2,zero,4104cce0 <__alt_data_end+0xfffce4e0>
4104d088:	00bfe034 	movhi	r2,65408
4104d08c:	10bfffc4 	addi	r2,r2,-1
4104d090:	5021883a 	mov	r16,r10
4104d094:	1886703a 	and	r3,r3,r2
4104d098:	003eaf06 	br	4104cb58 <__alt_data_end+0xfffce358>
4104d09c:	3825883a 	mov	r18,r7
4104d0a0:	003f0f06 	br	4104cce0 <__alt_data_end+0xfffce4e0>
4104d0a4:	1c44b03a 	or	r2,r3,r17
4104d0a8:	8000251e 	bne	r16,zero,4104d140 <__subdf3+0x66c>
4104d0ac:	1000661e 	bne	r2,zero,4104d248 <__subdf3+0x774>
4104d0b0:	2990b03a 	or	r8,r5,r6
4104d0b4:	40009626 	beq	r8,zero,4104d310 <__subdf3+0x83c>
4104d0b8:	2807883a 	mov	r3,r5
4104d0bc:	3023883a 	mov	r17,r6
4104d0c0:	3825883a 	mov	r18,r7
4104d0c4:	003ea406 	br	4104cb58 <__alt_data_end+0xfffce358>
4104d0c8:	127ff804 	addi	r9,r2,-32
4104d0cc:	01000804 	movi	r4,32
4104d0d0:	2a52d83a 	srl	r9,r5,r9
4104d0d4:	11008c26 	beq	r2,r4,4104d308 <__subdf3+0x834>
4104d0d8:	01001004 	movi	r4,64
4104d0dc:	2085c83a 	sub	r2,r4,r2
4104d0e0:	2884983a 	sll	r2,r5,r2
4104d0e4:	118cb03a 	or	r6,r2,r6
4104d0e8:	300cc03a 	cmpne	r6,r6,zero
4104d0ec:	4992b03a 	or	r9,r9,r6
4104d0f0:	0005883a 	mov	r2,zero
4104d0f4:	003f1206 	br	4104cd40 <__alt_data_end+0xfffce540>
4104d0f8:	0101ffc4 	movi	r4,2047
4104d0fc:	493f9c1e 	bne	r9,r4,4104cf70 <__alt_data_end+0xfffce770>
4104d100:	2807883a 	mov	r3,r5
4104d104:	3023883a 	mov	r17,r6
4104d108:	4821883a 	mov	r16,r9
4104d10c:	3825883a 	mov	r18,r7
4104d110:	003e9106 	br	4104cb58 <__alt_data_end+0xfffce358>
4104d114:	80001f1e 	bne	r16,zero,4104d194 <__subdf3+0x6c0>
4104d118:	1c48b03a 	or	r4,r3,r17
4104d11c:	20005a26 	beq	r4,zero,4104d288 <__subdf3+0x7b4>
4104d120:	0084303a 	nor	r2,zero,r2
4104d124:	1000561e 	bne	r2,zero,4104d280 <__subdf3+0x7ac>
4104d128:	89a3883a 	add	r17,r17,r6
4104d12c:	1945883a 	add	r2,r3,r5
4104d130:	898d803a 	cmpltu	r6,r17,r6
4104d134:	3087883a 	add	r3,r6,r2
4104d138:	4821883a 	mov	r16,r9
4104d13c:	003f0506 	br	4104cd54 <__alt_data_end+0xfffce554>
4104d140:	10002b1e 	bne	r2,zero,4104d1f0 <__subdf3+0x71c>
4104d144:	2984b03a 	or	r2,r5,r6
4104d148:	10008026 	beq	r2,zero,4104d34c <__subdf3+0x878>
4104d14c:	2807883a 	mov	r3,r5
4104d150:	3023883a 	mov	r17,r6
4104d154:	3825883a 	mov	r18,r7
4104d158:	0401ffc4 	movi	r16,2047
4104d15c:	003e7e06 	br	4104cb58 <__alt_data_end+0xfffce358>
4104d160:	3809883a 	mov	r4,r7
4104d164:	0011883a 	mov	r8,zero
4104d168:	0005883a 	mov	r2,zero
4104d16c:	003ee306 	br	4104ccfc <__alt_data_end+0xfffce4fc>
4104d170:	1c62b03a 	or	r17,r3,r17
4104d174:	8822c03a 	cmpne	r17,r17,zero
4104d178:	0005883a 	mov	r2,zero
4104d17c:	003f8906 	br	4104cfa4 <__alt_data_end+0xfffce7a4>
4104d180:	3809883a 	mov	r4,r7
4104d184:	4821883a 	mov	r16,r9
4104d188:	0011883a 	mov	r8,zero
4104d18c:	0005883a 	mov	r2,zero
4104d190:	003eda06 	br	4104ccfc <__alt_data_end+0xfffce4fc>
4104d194:	0101ffc4 	movi	r4,2047
4104d198:	49003b26 	beq	r9,r4,4104d288 <__subdf3+0x7b4>
4104d19c:	0085c83a 	sub	r2,zero,r2
4104d1a0:	18c02034 	orhi	r3,r3,128
4104d1a4:	01000e04 	movi	r4,56
4104d1a8:	20806e16 	blt	r4,r2,4104d364 <__subdf3+0x890>
4104d1ac:	010007c4 	movi	r4,31
4104d1b0:	20807716 	blt	r4,r2,4104d390 <__subdf3+0x8bc>
4104d1b4:	01000804 	movi	r4,32
4104d1b8:	2089c83a 	sub	r4,r4,r2
4104d1bc:	1914983a 	sll	r10,r3,r4
4104d1c0:	8890d83a 	srl	r8,r17,r2
4104d1c4:	8908983a 	sll	r4,r17,r4
4104d1c8:	1884d83a 	srl	r2,r3,r2
4104d1cc:	5222b03a 	or	r17,r10,r8
4104d1d0:	2006c03a 	cmpne	r3,r4,zero
4104d1d4:	88e2b03a 	or	r17,r17,r3
4104d1d8:	89a3883a 	add	r17,r17,r6
4104d1dc:	1145883a 	add	r2,r2,r5
4104d1e0:	898d803a 	cmpltu	r6,r17,r6
4104d1e4:	3087883a 	add	r3,r6,r2
4104d1e8:	4821883a 	mov	r16,r9
4104d1ec:	003ed906 	br	4104cd54 <__alt_data_end+0xfffce554>
4104d1f0:	2984b03a 	or	r2,r5,r6
4104d1f4:	10004226 	beq	r2,zero,4104d300 <__subdf3+0x82c>
4104d1f8:	1808d0fa 	srli	r4,r3,3
4104d1fc:	8822d0fa 	srli	r17,r17,3
4104d200:	1806977a 	slli	r3,r3,29
4104d204:	2080022c 	andhi	r2,r4,8
4104d208:	1c62b03a 	or	r17,r3,r17
4104d20c:	10000826 	beq	r2,zero,4104d230 <__subdf3+0x75c>
4104d210:	2812d0fa 	srli	r9,r5,3
4104d214:	4880022c 	andhi	r2,r9,8
4104d218:	1000051e 	bne	r2,zero,4104d230 <__subdf3+0x75c>
4104d21c:	300cd0fa 	srli	r6,r6,3
4104d220:	2804977a 	slli	r2,r5,29
4104d224:	4809883a 	mov	r4,r9
4104d228:	3825883a 	mov	r18,r7
4104d22c:	11a2b03a 	or	r17,r2,r6
4104d230:	8806d77a 	srli	r3,r17,29
4104d234:	200890fa 	slli	r4,r4,3
4104d238:	882290fa 	slli	r17,r17,3
4104d23c:	0401ffc4 	movi	r16,2047
4104d240:	1906b03a 	or	r3,r3,r4
4104d244:	003e4406 	br	4104cb58 <__alt_data_end+0xfffce358>
4104d248:	2984b03a 	or	r2,r5,r6
4104d24c:	103e4226 	beq	r2,zero,4104cb58 <__alt_data_end+0xfffce358>
4104d250:	8989c83a 	sub	r4,r17,r6
4104d254:	8911803a 	cmpltu	r8,r17,r4
4104d258:	1945c83a 	sub	r2,r3,r5
4104d25c:	1205c83a 	sub	r2,r2,r8
4104d260:	1200202c 	andhi	r8,r2,128
4104d264:	403e9a26 	beq	r8,zero,4104ccd0 <__alt_data_end+0xfffce4d0>
4104d268:	3463c83a 	sub	r17,r6,r17
4104d26c:	28c5c83a 	sub	r2,r5,r3
4104d270:	344d803a 	cmpltu	r6,r6,r17
4104d274:	1187c83a 	sub	r3,r2,r6
4104d278:	3825883a 	mov	r18,r7
4104d27c:	003e3606 	br	4104cb58 <__alt_data_end+0xfffce358>
4104d280:	0101ffc4 	movi	r4,2047
4104d284:	493fc71e 	bne	r9,r4,4104d1a4 <__alt_data_end+0xfffce9a4>
4104d288:	2807883a 	mov	r3,r5
4104d28c:	3023883a 	mov	r17,r6
4104d290:	4821883a 	mov	r16,r9
4104d294:	003e3006 	br	4104cb58 <__alt_data_end+0xfffce358>
4104d298:	10003626 	beq	r2,zero,4104d374 <__subdf3+0x8a0>
4104d29c:	2984b03a 	or	r2,r5,r6
4104d2a0:	10001726 	beq	r2,zero,4104d300 <__subdf3+0x82c>
4104d2a4:	1808d0fa 	srli	r4,r3,3
4104d2a8:	8822d0fa 	srli	r17,r17,3
4104d2ac:	1806977a 	slli	r3,r3,29
4104d2b0:	2080022c 	andhi	r2,r4,8
4104d2b4:	1c62b03a 	or	r17,r3,r17
4104d2b8:	10000726 	beq	r2,zero,4104d2d8 <__subdf3+0x804>
4104d2bc:	2812d0fa 	srli	r9,r5,3
4104d2c0:	4880022c 	andhi	r2,r9,8
4104d2c4:	1000041e 	bne	r2,zero,4104d2d8 <__subdf3+0x804>
4104d2c8:	300cd0fa 	srli	r6,r6,3
4104d2cc:	2804977a 	slli	r2,r5,29
4104d2d0:	4809883a 	mov	r4,r9
4104d2d4:	11a2b03a 	or	r17,r2,r6
4104d2d8:	8806d77a 	srli	r3,r17,29
4104d2dc:	200890fa 	slli	r4,r4,3
4104d2e0:	882290fa 	slli	r17,r17,3
4104d2e4:	3825883a 	mov	r18,r7
4104d2e8:	1906b03a 	or	r3,r3,r4
4104d2ec:	0401ffc4 	movi	r16,2047
4104d2f0:	003e1906 	br	4104cb58 <__alt_data_end+0xfffce358>
4104d2f4:	000b883a 	mov	r5,zero
4104d2f8:	0005883a 	mov	r2,zero
4104d2fc:	003e2e06 	br	4104cbb8 <__alt_data_end+0xfffce3b8>
4104d300:	0401ffc4 	movi	r16,2047
4104d304:	003e1406 	br	4104cb58 <__alt_data_end+0xfffce358>
4104d308:	0005883a 	mov	r2,zero
4104d30c:	003f7506 	br	4104d0e4 <__alt_data_end+0xfffce8e4>
4104d310:	0005883a 	mov	r2,zero
4104d314:	0009883a 	mov	r4,zero
4104d318:	003e7806 	br	4104ccfc <__alt_data_end+0xfffce4fc>
4104d31c:	123ff804 	addi	r8,r2,-32
4104d320:	01000804 	movi	r4,32
4104d324:	1a10d83a 	srl	r8,r3,r8
4104d328:	11002526 	beq	r2,r4,4104d3c0 <__subdf3+0x8ec>
4104d32c:	01001004 	movi	r4,64
4104d330:	2085c83a 	sub	r2,r4,r2
4104d334:	1884983a 	sll	r2,r3,r2
4104d338:	1444b03a 	or	r2,r2,r17
4104d33c:	1004c03a 	cmpne	r2,r2,zero
4104d340:	40a2b03a 	or	r17,r8,r2
4104d344:	0005883a 	mov	r2,zero
4104d348:	003f1606 	br	4104cfa4 <__alt_data_end+0xfffce7a4>
4104d34c:	02000434 	movhi	r8,16
4104d350:	0009883a 	mov	r4,zero
4104d354:	423fffc4 	addi	r8,r8,-1
4104d358:	00bfffc4 	movi	r2,-1
4104d35c:	0401ffc4 	movi	r16,2047
4104d360:	003e6606 	br	4104ccfc <__alt_data_end+0xfffce4fc>
4104d364:	1c62b03a 	or	r17,r3,r17
4104d368:	8822c03a 	cmpne	r17,r17,zero
4104d36c:	0005883a 	mov	r2,zero
4104d370:	003f9906 	br	4104d1d8 <__alt_data_end+0xfffce9d8>
4104d374:	2807883a 	mov	r3,r5
4104d378:	3023883a 	mov	r17,r6
4104d37c:	0401ffc4 	movi	r16,2047
4104d380:	003df506 	br	4104cb58 <__alt_data_end+0xfffce358>
4104d384:	2807883a 	mov	r3,r5
4104d388:	3023883a 	mov	r17,r6
4104d38c:	003df206 	br	4104cb58 <__alt_data_end+0xfffce358>
4104d390:	123ff804 	addi	r8,r2,-32
4104d394:	01000804 	movi	r4,32
4104d398:	1a10d83a 	srl	r8,r3,r8
4104d39c:	11000a26 	beq	r2,r4,4104d3c8 <__subdf3+0x8f4>
4104d3a0:	01001004 	movi	r4,64
4104d3a4:	2085c83a 	sub	r2,r4,r2
4104d3a8:	1884983a 	sll	r2,r3,r2
4104d3ac:	1444b03a 	or	r2,r2,r17
4104d3b0:	1004c03a 	cmpne	r2,r2,zero
4104d3b4:	40a2b03a 	or	r17,r8,r2
4104d3b8:	0005883a 	mov	r2,zero
4104d3bc:	003f8606 	br	4104d1d8 <__alt_data_end+0xfffce9d8>
4104d3c0:	0005883a 	mov	r2,zero
4104d3c4:	003fdc06 	br	4104d338 <__alt_data_end+0xfffceb38>
4104d3c8:	0005883a 	mov	r2,zero
4104d3cc:	003ff706 	br	4104d3ac <__alt_data_end+0xfffcebac>

4104d3d0 <__fixdfsi>:
4104d3d0:	280cd53a 	srli	r6,r5,20
4104d3d4:	00c00434 	movhi	r3,16
4104d3d8:	18ffffc4 	addi	r3,r3,-1
4104d3dc:	3181ffcc 	andi	r6,r6,2047
4104d3e0:	01c0ff84 	movi	r7,1022
4104d3e4:	28c6703a 	and	r3,r5,r3
4104d3e8:	280ad7fa 	srli	r5,r5,31
4104d3ec:	3980120e 	bge	r7,r6,4104d438 <__fixdfsi+0x68>
4104d3f0:	00810744 	movi	r2,1053
4104d3f4:	11800c16 	blt	r2,r6,4104d428 <__fixdfsi+0x58>
4104d3f8:	00810cc4 	movi	r2,1075
4104d3fc:	1185c83a 	sub	r2,r2,r6
4104d400:	01c007c4 	movi	r7,31
4104d404:	18c00434 	orhi	r3,r3,16
4104d408:	38800d16 	blt	r7,r2,4104d440 <__fixdfsi+0x70>
4104d40c:	31befb44 	addi	r6,r6,-1043
4104d410:	2084d83a 	srl	r2,r4,r2
4104d414:	1986983a 	sll	r3,r3,r6
4104d418:	1884b03a 	or	r2,r3,r2
4104d41c:	28000726 	beq	r5,zero,4104d43c <__fixdfsi+0x6c>
4104d420:	0085c83a 	sub	r2,zero,r2
4104d424:	f800283a 	ret
4104d428:	00a00034 	movhi	r2,32768
4104d42c:	10bfffc4 	addi	r2,r2,-1
4104d430:	2885883a 	add	r2,r5,r2
4104d434:	f800283a 	ret
4104d438:	0005883a 	mov	r2,zero
4104d43c:	f800283a 	ret
4104d440:	008104c4 	movi	r2,1043
4104d444:	1185c83a 	sub	r2,r2,r6
4104d448:	1884d83a 	srl	r2,r3,r2
4104d44c:	003ff306 	br	4104d41c <__alt_data_end+0xfffcec1c>

4104d450 <__floatsidf>:
4104d450:	defffd04 	addi	sp,sp,-12
4104d454:	dfc00215 	stw	ra,8(sp)
4104d458:	dc400115 	stw	r17,4(sp)
4104d45c:	dc000015 	stw	r16,0(sp)
4104d460:	20002b26 	beq	r4,zero,4104d510 <__floatsidf+0xc0>
4104d464:	2023883a 	mov	r17,r4
4104d468:	2020d7fa 	srli	r16,r4,31
4104d46c:	20002d16 	blt	r4,zero,4104d524 <__floatsidf+0xd4>
4104d470:	8809883a 	mov	r4,r17
4104d474:	104d5d40 	call	4104d5d4 <__clzsi2>
4104d478:	01410784 	movi	r5,1054
4104d47c:	288bc83a 	sub	r5,r5,r2
4104d480:	01010cc4 	movi	r4,1075
4104d484:	2149c83a 	sub	r4,r4,r5
4104d488:	00c007c4 	movi	r3,31
4104d48c:	1900160e 	bge	r3,r4,4104d4e8 <__floatsidf+0x98>
4104d490:	00c104c4 	movi	r3,1043
4104d494:	1947c83a 	sub	r3,r3,r5
4104d498:	88c6983a 	sll	r3,r17,r3
4104d49c:	00800434 	movhi	r2,16
4104d4a0:	10bfffc4 	addi	r2,r2,-1
4104d4a4:	1886703a 	and	r3,r3,r2
4104d4a8:	2941ffcc 	andi	r5,r5,2047
4104d4ac:	800d883a 	mov	r6,r16
4104d4b0:	0005883a 	mov	r2,zero
4104d4b4:	280a953a 	slli	r5,r5,20
4104d4b8:	31803fcc 	andi	r6,r6,255
4104d4bc:	01000434 	movhi	r4,16
4104d4c0:	300c97fa 	slli	r6,r6,31
4104d4c4:	213fffc4 	addi	r4,r4,-1
4104d4c8:	1906703a 	and	r3,r3,r4
4104d4cc:	1946b03a 	or	r3,r3,r5
4104d4d0:	1986b03a 	or	r3,r3,r6
4104d4d4:	dfc00217 	ldw	ra,8(sp)
4104d4d8:	dc400117 	ldw	r17,4(sp)
4104d4dc:	dc000017 	ldw	r16,0(sp)
4104d4e0:	dec00304 	addi	sp,sp,12
4104d4e4:	f800283a 	ret
4104d4e8:	00c002c4 	movi	r3,11
4104d4ec:	1887c83a 	sub	r3,r3,r2
4104d4f0:	88c6d83a 	srl	r3,r17,r3
4104d4f4:	8904983a 	sll	r2,r17,r4
4104d4f8:	01000434 	movhi	r4,16
4104d4fc:	213fffc4 	addi	r4,r4,-1
4104d500:	2941ffcc 	andi	r5,r5,2047
4104d504:	1906703a 	and	r3,r3,r4
4104d508:	800d883a 	mov	r6,r16
4104d50c:	003fe906 	br	4104d4b4 <__alt_data_end+0xfffcecb4>
4104d510:	000d883a 	mov	r6,zero
4104d514:	000b883a 	mov	r5,zero
4104d518:	0007883a 	mov	r3,zero
4104d51c:	0005883a 	mov	r2,zero
4104d520:	003fe406 	br	4104d4b4 <__alt_data_end+0xfffcecb4>
4104d524:	0123c83a 	sub	r17,zero,r4
4104d528:	003fd106 	br	4104d470 <__alt_data_end+0xfffcec70>

4104d52c <__floatunsidf>:
4104d52c:	defffe04 	addi	sp,sp,-8
4104d530:	dc000015 	stw	r16,0(sp)
4104d534:	dfc00115 	stw	ra,4(sp)
4104d538:	2021883a 	mov	r16,r4
4104d53c:	20002226 	beq	r4,zero,4104d5c8 <__floatunsidf+0x9c>
4104d540:	104d5d40 	call	4104d5d4 <__clzsi2>
4104d544:	01010784 	movi	r4,1054
4104d548:	2089c83a 	sub	r4,r4,r2
4104d54c:	01810cc4 	movi	r6,1075
4104d550:	310dc83a 	sub	r6,r6,r4
4104d554:	00c007c4 	movi	r3,31
4104d558:	1980120e 	bge	r3,r6,4104d5a4 <__floatunsidf+0x78>
4104d55c:	00c104c4 	movi	r3,1043
4104d560:	1907c83a 	sub	r3,r3,r4
4104d564:	80ca983a 	sll	r5,r16,r3
4104d568:	00800434 	movhi	r2,16
4104d56c:	10bfffc4 	addi	r2,r2,-1
4104d570:	2101ffcc 	andi	r4,r4,2047
4104d574:	0021883a 	mov	r16,zero
4104d578:	288a703a 	and	r5,r5,r2
4104d57c:	2008953a 	slli	r4,r4,20
4104d580:	00c00434 	movhi	r3,16
4104d584:	18ffffc4 	addi	r3,r3,-1
4104d588:	28c6703a 	and	r3,r5,r3
4104d58c:	8005883a 	mov	r2,r16
4104d590:	1906b03a 	or	r3,r3,r4
4104d594:	dfc00117 	ldw	ra,4(sp)
4104d598:	dc000017 	ldw	r16,0(sp)
4104d59c:	dec00204 	addi	sp,sp,8
4104d5a0:	f800283a 	ret
4104d5a4:	00c002c4 	movi	r3,11
4104d5a8:	188bc83a 	sub	r5,r3,r2
4104d5ac:	814ad83a 	srl	r5,r16,r5
4104d5b0:	00c00434 	movhi	r3,16
4104d5b4:	18ffffc4 	addi	r3,r3,-1
4104d5b8:	81a0983a 	sll	r16,r16,r6
4104d5bc:	2101ffcc 	andi	r4,r4,2047
4104d5c0:	28ca703a 	and	r5,r5,r3
4104d5c4:	003fed06 	br	4104d57c <__alt_data_end+0xfffced7c>
4104d5c8:	0009883a 	mov	r4,zero
4104d5cc:	000b883a 	mov	r5,zero
4104d5d0:	003fea06 	br	4104d57c <__alt_data_end+0xfffced7c>

4104d5d4 <__clzsi2>:
4104d5d4:	00bfffd4 	movui	r2,65535
4104d5d8:	11000536 	bltu	r2,r4,4104d5f0 <__clzsi2+0x1c>
4104d5dc:	00803fc4 	movi	r2,255
4104d5e0:	11000f36 	bltu	r2,r4,4104d620 <__clzsi2+0x4c>
4104d5e4:	00800804 	movi	r2,32
4104d5e8:	0007883a 	mov	r3,zero
4104d5ec:	00000506 	br	4104d604 <__clzsi2+0x30>
4104d5f0:	00804034 	movhi	r2,256
4104d5f4:	10bfffc4 	addi	r2,r2,-1
4104d5f8:	11000c2e 	bgeu	r2,r4,4104d62c <__clzsi2+0x58>
4104d5fc:	00800204 	movi	r2,8
4104d600:	00c00604 	movi	r3,24
4104d604:	20c8d83a 	srl	r4,r4,r3
4104d608:	00d04174 	movhi	r3,16645
4104d60c:	18c02604 	addi	r3,r3,152
4104d610:	1909883a 	add	r4,r3,r4
4104d614:	20c00003 	ldbu	r3,0(r4)
4104d618:	10c5c83a 	sub	r2,r2,r3
4104d61c:	f800283a 	ret
4104d620:	00800604 	movi	r2,24
4104d624:	00c00204 	movi	r3,8
4104d628:	003ff606 	br	4104d604 <__alt_data_end+0xfffcee04>
4104d62c:	00800404 	movi	r2,16
4104d630:	1007883a 	mov	r3,r2
4104d634:	003ff306 	br	4104d604 <__alt_data_end+0xfffcee04>

4104d638 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
4104d638:	defffe04 	addi	sp,sp,-8
4104d63c:	dfc00115 	stw	ra,4(sp)
4104d640:	df000015 	stw	fp,0(sp)
4104d644:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
4104d648:	d0a00b17 	ldw	r2,-32724(gp)
4104d64c:	10000326 	beq	r2,zero,4104d65c <alt_get_errno+0x24>
4104d650:	d0a00b17 	ldw	r2,-32724(gp)
4104d654:	103ee83a 	callr	r2
4104d658:	00000106 	br	4104d660 <alt_get_errno+0x28>
4104d65c:	d0a6d104 	addi	r2,gp,-25788
}
4104d660:	e037883a 	mov	sp,fp
4104d664:	dfc00117 	ldw	ra,4(sp)
4104d668:	df000017 	ldw	fp,0(sp)
4104d66c:	dec00204 	addi	sp,sp,8
4104d670:	f800283a 	ret

4104d674 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
4104d674:	defffb04 	addi	sp,sp,-20
4104d678:	dfc00415 	stw	ra,16(sp)
4104d67c:	df000315 	stw	fp,12(sp)
4104d680:	df000304 	addi	fp,sp,12
4104d684:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
4104d688:	e0bfff17 	ldw	r2,-4(fp)
4104d68c:	10000616 	blt	r2,zero,4104d6a8 <close+0x34>
4104d690:	e0bfff17 	ldw	r2,-4(fp)
4104d694:	10c00324 	muli	r3,r2,12
4104d698:	00904174 	movhi	r2,16645
4104d69c:	1082a404 	addi	r2,r2,2704
4104d6a0:	1885883a 	add	r2,r3,r2
4104d6a4:	00000106 	br	4104d6ac <close+0x38>
4104d6a8:	0005883a 	mov	r2,zero
4104d6ac:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
4104d6b0:	e0bffd17 	ldw	r2,-12(fp)
4104d6b4:	10001926 	beq	r2,zero,4104d71c <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
4104d6b8:	e0bffd17 	ldw	r2,-12(fp)
4104d6bc:	10800017 	ldw	r2,0(r2)
4104d6c0:	10800417 	ldw	r2,16(r2)
4104d6c4:	10000626 	beq	r2,zero,4104d6e0 <close+0x6c>
4104d6c8:	e0bffd17 	ldw	r2,-12(fp)
4104d6cc:	10800017 	ldw	r2,0(r2)
4104d6d0:	10800417 	ldw	r2,16(r2)
4104d6d4:	e13ffd17 	ldw	r4,-12(fp)
4104d6d8:	103ee83a 	callr	r2
4104d6dc:	00000106 	br	4104d6e4 <close+0x70>
4104d6e0:	0005883a 	mov	r2,zero
4104d6e4:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
4104d6e8:	e13fff17 	ldw	r4,-4(fp)
4104d6ec:	104dd7c0 	call	4104dd7c <alt_release_fd>
    if (rval < 0)
4104d6f0:	e0bffe17 	ldw	r2,-8(fp)
4104d6f4:	1000070e 	bge	r2,zero,4104d714 <close+0xa0>
    {
      ALT_ERRNO = -rval;
4104d6f8:	104d6380 	call	4104d638 <alt_get_errno>
4104d6fc:	1007883a 	mov	r3,r2
4104d700:	e0bffe17 	ldw	r2,-8(fp)
4104d704:	0085c83a 	sub	r2,zero,r2
4104d708:	18800015 	stw	r2,0(r3)
      return -1;
4104d70c:	00bfffc4 	movi	r2,-1
4104d710:	00000706 	br	4104d730 <close+0xbc>
    }
    return 0;
4104d714:	0005883a 	mov	r2,zero
4104d718:	00000506 	br	4104d730 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
4104d71c:	104d6380 	call	4104d638 <alt_get_errno>
4104d720:	1007883a 	mov	r3,r2
4104d724:	00801444 	movi	r2,81
4104d728:	18800015 	stw	r2,0(r3)
    return -1;
4104d72c:	00bfffc4 	movi	r2,-1
  }
}
4104d730:	e037883a 	mov	sp,fp
4104d734:	dfc00117 	ldw	ra,4(sp)
4104d738:	df000017 	ldw	fp,0(sp)
4104d73c:	dec00204 	addi	sp,sp,8
4104d740:	f800283a 	ret

4104d744 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
4104d744:	defffe04 	addi	sp,sp,-8
4104d748:	df000115 	stw	fp,4(sp)
4104d74c:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
4104d750:	e03fff15 	stw	zero,-4(fp)
4104d754:	00000506 	br	4104d76c <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
4104d758:	e0bfff17 	ldw	r2,-4(fp)
4104d75c:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
4104d760:	e0bfff17 	ldw	r2,-4(fp)
4104d764:	10800804 	addi	r2,r2,32
4104d768:	e0bfff15 	stw	r2,-4(fp)
4104d76c:	e0bfff17 	ldw	r2,-4(fp)
4104d770:	10820030 	cmpltui	r2,r2,2048
4104d774:	103ff81e 	bne	r2,zero,4104d758 <__alt_data_end+0xfffcef58>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
4104d778:	0001883a 	nop
4104d77c:	e037883a 	mov	sp,fp
4104d780:	df000017 	ldw	fp,0(sp)
4104d784:	dec00104 	addi	sp,sp,4
4104d788:	f800283a 	ret

4104d78c <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
4104d78c:	defffc04 	addi	sp,sp,-16
4104d790:	df000315 	stw	fp,12(sp)
4104d794:	df000304 	addi	fp,sp,12
4104d798:	e13ffd15 	stw	r4,-12(fp)
4104d79c:	e17ffe15 	stw	r5,-8(fp)
4104d7a0:	e1bfff15 	stw	r6,-4(fp)
  return len;
4104d7a4:	e0bfff17 	ldw	r2,-4(fp)
}
4104d7a8:	e037883a 	mov	sp,fp
4104d7ac:	df000017 	ldw	fp,0(sp)
4104d7b0:	dec00104 	addi	sp,sp,4
4104d7b4:	f800283a 	ret

4104d7b8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
4104d7b8:	defffe04 	addi	sp,sp,-8
4104d7bc:	dfc00115 	stw	ra,4(sp)
4104d7c0:	df000015 	stw	fp,0(sp)
4104d7c4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
4104d7c8:	d0a00b17 	ldw	r2,-32724(gp)
4104d7cc:	10000326 	beq	r2,zero,4104d7dc <alt_get_errno+0x24>
4104d7d0:	d0a00b17 	ldw	r2,-32724(gp)
4104d7d4:	103ee83a 	callr	r2
4104d7d8:	00000106 	br	4104d7e0 <alt_get_errno+0x28>
4104d7dc:	d0a6d104 	addi	r2,gp,-25788
}
4104d7e0:	e037883a 	mov	sp,fp
4104d7e4:	dfc00117 	ldw	ra,4(sp)
4104d7e8:	df000017 	ldw	fp,0(sp)
4104d7ec:	dec00204 	addi	sp,sp,8
4104d7f0:	f800283a 	ret

4104d7f4 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
4104d7f4:	defffb04 	addi	sp,sp,-20
4104d7f8:	dfc00415 	stw	ra,16(sp)
4104d7fc:	df000315 	stw	fp,12(sp)
4104d800:	df000304 	addi	fp,sp,12
4104d804:	e13ffe15 	stw	r4,-8(fp)
4104d808:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
4104d80c:	e0bffe17 	ldw	r2,-8(fp)
4104d810:	10000616 	blt	r2,zero,4104d82c <fstat+0x38>
4104d814:	e0bffe17 	ldw	r2,-8(fp)
4104d818:	10c00324 	muli	r3,r2,12
4104d81c:	00904174 	movhi	r2,16645
4104d820:	1082a404 	addi	r2,r2,2704
4104d824:	1885883a 	add	r2,r3,r2
4104d828:	00000106 	br	4104d830 <fstat+0x3c>
4104d82c:	0005883a 	mov	r2,zero
4104d830:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
4104d834:	e0bffd17 	ldw	r2,-12(fp)
4104d838:	10001026 	beq	r2,zero,4104d87c <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
4104d83c:	e0bffd17 	ldw	r2,-12(fp)
4104d840:	10800017 	ldw	r2,0(r2)
4104d844:	10800817 	ldw	r2,32(r2)
4104d848:	10000726 	beq	r2,zero,4104d868 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
4104d84c:	e0bffd17 	ldw	r2,-12(fp)
4104d850:	10800017 	ldw	r2,0(r2)
4104d854:	10800817 	ldw	r2,32(r2)
4104d858:	e17fff17 	ldw	r5,-4(fp)
4104d85c:	e13ffd17 	ldw	r4,-12(fp)
4104d860:	103ee83a 	callr	r2
4104d864:	00000a06 	br	4104d890 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
4104d868:	e0bfff17 	ldw	r2,-4(fp)
4104d86c:	00c80004 	movi	r3,8192
4104d870:	10c00115 	stw	r3,4(r2)
      return 0;
4104d874:	0005883a 	mov	r2,zero
4104d878:	00000506 	br	4104d890 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
4104d87c:	104d7b80 	call	4104d7b8 <alt_get_errno>
4104d880:	1007883a 	mov	r3,r2
4104d884:	00801444 	movi	r2,81
4104d888:	18800015 	stw	r2,0(r3)
    return -1;
4104d88c:	00bfffc4 	movi	r2,-1
  }
}
4104d890:	e037883a 	mov	sp,fp
4104d894:	dfc00117 	ldw	ra,4(sp)
4104d898:	df000017 	ldw	fp,0(sp)
4104d89c:	dec00204 	addi	sp,sp,8
4104d8a0:	f800283a 	ret

4104d8a4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
4104d8a4:	defffe04 	addi	sp,sp,-8
4104d8a8:	dfc00115 	stw	ra,4(sp)
4104d8ac:	df000015 	stw	fp,0(sp)
4104d8b0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
4104d8b4:	d0a00b17 	ldw	r2,-32724(gp)
4104d8b8:	10000326 	beq	r2,zero,4104d8c8 <alt_get_errno+0x24>
4104d8bc:	d0a00b17 	ldw	r2,-32724(gp)
4104d8c0:	103ee83a 	callr	r2
4104d8c4:	00000106 	br	4104d8cc <alt_get_errno+0x28>
4104d8c8:	d0a6d104 	addi	r2,gp,-25788
}
4104d8cc:	e037883a 	mov	sp,fp
4104d8d0:	dfc00117 	ldw	ra,4(sp)
4104d8d4:	df000017 	ldw	fp,0(sp)
4104d8d8:	dec00204 	addi	sp,sp,8
4104d8dc:	f800283a 	ret

4104d8e0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
4104d8e0:	deffed04 	addi	sp,sp,-76
4104d8e4:	dfc01215 	stw	ra,72(sp)
4104d8e8:	df001115 	stw	fp,68(sp)
4104d8ec:	df001104 	addi	fp,sp,68
4104d8f0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
4104d8f4:	e0bfff17 	ldw	r2,-4(fp)
4104d8f8:	10000616 	blt	r2,zero,4104d914 <isatty+0x34>
4104d8fc:	e0bfff17 	ldw	r2,-4(fp)
4104d900:	10c00324 	muli	r3,r2,12
4104d904:	00904174 	movhi	r2,16645
4104d908:	1082a404 	addi	r2,r2,2704
4104d90c:	1885883a 	add	r2,r3,r2
4104d910:	00000106 	br	4104d918 <isatty+0x38>
4104d914:	0005883a 	mov	r2,zero
4104d918:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
4104d91c:	e0bfef17 	ldw	r2,-68(fp)
4104d920:	10000e26 	beq	r2,zero,4104d95c <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
4104d924:	e0bfef17 	ldw	r2,-68(fp)
4104d928:	10800017 	ldw	r2,0(r2)
4104d92c:	10800817 	ldw	r2,32(r2)
4104d930:	1000021e 	bne	r2,zero,4104d93c <isatty+0x5c>
    {
      return 1;
4104d934:	00800044 	movi	r2,1
4104d938:	00000d06 	br	4104d970 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
4104d93c:	e0bff004 	addi	r2,fp,-64
4104d940:	100b883a 	mov	r5,r2
4104d944:	e13fff17 	ldw	r4,-4(fp)
4104d948:	104d7f40 	call	4104d7f4 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
4104d94c:	e0bff117 	ldw	r2,-60(fp)
4104d950:	10880020 	cmpeqi	r2,r2,8192
4104d954:	10803fcc 	andi	r2,r2,255
4104d958:	00000506 	br	4104d970 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
4104d95c:	104d8a40 	call	4104d8a4 <alt_get_errno>
4104d960:	1007883a 	mov	r3,r2
4104d964:	00801444 	movi	r2,81
4104d968:	18800015 	stw	r2,0(r3)
    return 0;
4104d96c:	0005883a 	mov	r2,zero
  }
}
4104d970:	e037883a 	mov	sp,fp
4104d974:	dfc00117 	ldw	ra,4(sp)
4104d978:	df000017 	ldw	fp,0(sp)
4104d97c:	dec00204 	addi	sp,sp,8
4104d980:	f800283a 	ret

4104d984 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
4104d984:	defffc04 	addi	sp,sp,-16
4104d988:	df000315 	stw	fp,12(sp)
4104d98c:	df000304 	addi	fp,sp,12
4104d990:	e13ffd15 	stw	r4,-12(fp)
4104d994:	e17ffe15 	stw	r5,-8(fp)
4104d998:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
4104d99c:	e0fffe17 	ldw	r3,-8(fp)
4104d9a0:	e0bffd17 	ldw	r2,-12(fp)
4104d9a4:	18800c26 	beq	r3,r2,4104d9d8 <alt_load_section+0x54>
  {
    while( to != end )
4104d9a8:	00000806 	br	4104d9cc <alt_load_section+0x48>
    {
      *to++ = *from++;
4104d9ac:	e0bffe17 	ldw	r2,-8(fp)
4104d9b0:	10c00104 	addi	r3,r2,4
4104d9b4:	e0fffe15 	stw	r3,-8(fp)
4104d9b8:	e0fffd17 	ldw	r3,-12(fp)
4104d9bc:	19000104 	addi	r4,r3,4
4104d9c0:	e13ffd15 	stw	r4,-12(fp)
4104d9c4:	18c00017 	ldw	r3,0(r3)
4104d9c8:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
4104d9cc:	e0fffe17 	ldw	r3,-8(fp)
4104d9d0:	e0bfff17 	ldw	r2,-4(fp)
4104d9d4:	18bff51e 	bne	r3,r2,4104d9ac <__alt_data_end+0xfffcf1ac>
    {
      *to++ = *from++;
    }
  }
}
4104d9d8:	0001883a 	nop
4104d9dc:	e037883a 	mov	sp,fp
4104d9e0:	df000017 	ldw	fp,0(sp)
4104d9e4:	dec00104 	addi	sp,sp,4
4104d9e8:	f800283a 	ret

4104d9ec <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
4104d9ec:	defffe04 	addi	sp,sp,-8
4104d9f0:	dfc00115 	stw	ra,4(sp)
4104d9f4:	df000015 	stw	fp,0(sp)
4104d9f8:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
4104d9fc:	01904174 	movhi	r6,16645
4104da00:	31872c04 	addi	r6,r6,7344
4104da04:	01504174 	movhi	r5,16645
4104da08:	29407104 	addi	r5,r5,452
4104da0c:	01104174 	movhi	r4,16645
4104da10:	21072c04 	addi	r4,r4,7344
4104da14:	104d9840 	call	4104d984 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
4104da18:	01904134 	movhi	r6,16644
4104da1c:	31807004 	addi	r6,r6,448
4104da20:	01504134 	movhi	r5,16644
4104da24:	29400804 	addi	r5,r5,32
4104da28:	01104134 	movhi	r4,16644
4104da2c:	21000804 	addi	r4,r4,32
4104da30:	104d9840 	call	4104d984 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
4104da34:	01904174 	movhi	r6,16645
4104da38:	31807104 	addi	r6,r6,452
4104da3c:	01504174 	movhi	r5,16645
4104da40:	297f5204 	addi	r5,r5,-696
4104da44:	01104174 	movhi	r4,16645
4104da48:	213f5204 	addi	r4,r4,-696
4104da4c:	104d9840 	call	4104d984 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
4104da50:	104d7440 	call	4104d744 <alt_dcache_flush_all>
  alt_icache_flush_all();
4104da54:	104f05c0 	call	4104f05c <alt_icache_flush_all>
}
4104da58:	0001883a 	nop
4104da5c:	e037883a 	mov	sp,fp
4104da60:	dfc00117 	ldw	ra,4(sp)
4104da64:	df000017 	ldw	fp,0(sp)
4104da68:	dec00204 	addi	sp,sp,8
4104da6c:	f800283a 	ret

4104da70 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
4104da70:	defffe04 	addi	sp,sp,-8
4104da74:	dfc00115 	stw	ra,4(sp)
4104da78:	df000015 	stw	fp,0(sp)
4104da7c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
4104da80:	d0a00b17 	ldw	r2,-32724(gp)
4104da84:	10000326 	beq	r2,zero,4104da94 <alt_get_errno+0x24>
4104da88:	d0a00b17 	ldw	r2,-32724(gp)
4104da8c:	103ee83a 	callr	r2
4104da90:	00000106 	br	4104da98 <alt_get_errno+0x28>
4104da94:	d0a6d104 	addi	r2,gp,-25788
}
4104da98:	e037883a 	mov	sp,fp
4104da9c:	dfc00117 	ldw	ra,4(sp)
4104daa0:	df000017 	ldw	fp,0(sp)
4104daa4:	dec00204 	addi	sp,sp,8
4104daa8:	f800283a 	ret

4104daac <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
4104daac:	defff904 	addi	sp,sp,-28
4104dab0:	dfc00615 	stw	ra,24(sp)
4104dab4:	df000515 	stw	fp,20(sp)
4104dab8:	df000504 	addi	fp,sp,20
4104dabc:	e13ffd15 	stw	r4,-12(fp)
4104dac0:	e17ffe15 	stw	r5,-8(fp)
4104dac4:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
4104dac8:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
4104dacc:	e0bffd17 	ldw	r2,-12(fp)
4104dad0:	10000616 	blt	r2,zero,4104daec <lseek+0x40>
4104dad4:	e0bffd17 	ldw	r2,-12(fp)
4104dad8:	10c00324 	muli	r3,r2,12
4104dadc:	00904174 	movhi	r2,16645
4104dae0:	1082a404 	addi	r2,r2,2704
4104dae4:	1885883a 	add	r2,r3,r2
4104dae8:	00000106 	br	4104daf0 <lseek+0x44>
4104daec:	0005883a 	mov	r2,zero
4104daf0:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
4104daf4:	e0bffc17 	ldw	r2,-16(fp)
4104daf8:	10001026 	beq	r2,zero,4104db3c <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
4104dafc:	e0bffc17 	ldw	r2,-16(fp)
4104db00:	10800017 	ldw	r2,0(r2)
4104db04:	10800717 	ldw	r2,28(r2)
4104db08:	10000926 	beq	r2,zero,4104db30 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
4104db0c:	e0bffc17 	ldw	r2,-16(fp)
4104db10:	10800017 	ldw	r2,0(r2)
4104db14:	10800717 	ldw	r2,28(r2)
4104db18:	e1bfff17 	ldw	r6,-4(fp)
4104db1c:	e17ffe17 	ldw	r5,-8(fp)
4104db20:	e13ffc17 	ldw	r4,-16(fp)
4104db24:	103ee83a 	callr	r2
4104db28:	e0bffb15 	stw	r2,-20(fp)
4104db2c:	00000506 	br	4104db44 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
4104db30:	00bfde84 	movi	r2,-134
4104db34:	e0bffb15 	stw	r2,-20(fp)
4104db38:	00000206 	br	4104db44 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
4104db3c:	00bfebc4 	movi	r2,-81
4104db40:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
4104db44:	e0bffb17 	ldw	r2,-20(fp)
4104db48:	1000070e 	bge	r2,zero,4104db68 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
4104db4c:	104da700 	call	4104da70 <alt_get_errno>
4104db50:	1007883a 	mov	r3,r2
4104db54:	e0bffb17 	ldw	r2,-20(fp)
4104db58:	0085c83a 	sub	r2,zero,r2
4104db5c:	18800015 	stw	r2,0(r3)
    rc = -1;
4104db60:	00bfffc4 	movi	r2,-1
4104db64:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
4104db68:	e0bffb17 	ldw	r2,-20(fp)
}
4104db6c:	e037883a 	mov	sp,fp
4104db70:	dfc00117 	ldw	ra,4(sp)
4104db74:	df000017 	ldw	fp,0(sp)
4104db78:	dec00204 	addi	sp,sp,8
4104db7c:	f800283a 	ret

4104db80 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
4104db80:	defffd04 	addi	sp,sp,-12
4104db84:	dfc00215 	stw	ra,8(sp)
4104db88:	df000115 	stw	fp,4(sp)
4104db8c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
4104db90:	0009883a 	mov	r4,zero
4104db94:	104e19c0 	call	4104e19c <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
4104db98:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
4104db9c:	104e1d40 	call	4104e1d4 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
4104dba0:	01904174 	movhi	r6,16645
4104dba4:	31806904 	addi	r6,r6,420
4104dba8:	01504174 	movhi	r5,16645
4104dbac:	29406904 	addi	r5,r5,420
4104dbb0:	01104174 	movhi	r4,16645
4104dbb4:	21006904 	addi	r4,r4,420
4104dbb8:	104f3f40 	call	4104f3f4 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
4104dbbc:	104ef9c0 	call	4104ef9c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
4104dbc0:	01104174 	movhi	r4,16645
4104dbc4:	213bff04 	addi	r4,r4,-4100
4104dbc8:	104f9b40 	call	4104f9b4 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
4104dbcc:	d0a6d217 	ldw	r2,-25784(gp)
4104dbd0:	d0e6d317 	ldw	r3,-25780(gp)
4104dbd4:	d126d417 	ldw	r4,-25776(gp)
4104dbd8:	200d883a 	mov	r6,r4
4104dbdc:	180b883a 	mov	r5,r3
4104dbe0:	1009883a 	mov	r4,r2
4104dbe4:	104020c0 	call	4104020c <main>
4104dbe8:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
4104dbec:	01000044 	movi	r4,1
4104dbf0:	104d6740 	call	4104d674 <close>
  exit (result);
4104dbf4:	e13fff17 	ldw	r4,-4(fp)
4104dbf8:	104f9c80 	call	4104f9c8 <exit>

4104dbfc <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
4104dbfc:	defffe04 	addi	sp,sp,-8
4104dc00:	df000115 	stw	fp,4(sp)
4104dc04:	df000104 	addi	fp,sp,4
4104dc08:	e13fff15 	stw	r4,-4(fp)
}
4104dc0c:	0001883a 	nop
4104dc10:	e037883a 	mov	sp,fp
4104dc14:	df000017 	ldw	fp,0(sp)
4104dc18:	dec00104 	addi	sp,sp,4
4104dc1c:	f800283a 	ret

4104dc20 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
4104dc20:	defffe04 	addi	sp,sp,-8
4104dc24:	df000115 	stw	fp,4(sp)
4104dc28:	df000104 	addi	fp,sp,4
4104dc2c:	e13fff15 	stw	r4,-4(fp)
}
4104dc30:	0001883a 	nop
4104dc34:	e037883a 	mov	sp,fp
4104dc38:	df000017 	ldw	fp,0(sp)
4104dc3c:	dec00104 	addi	sp,sp,4
4104dc40:	f800283a 	ret

4104dc44 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
4104dc44:	defffe04 	addi	sp,sp,-8
4104dc48:	dfc00115 	stw	ra,4(sp)
4104dc4c:	df000015 	stw	fp,0(sp)
4104dc50:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
4104dc54:	d0a00b17 	ldw	r2,-32724(gp)
4104dc58:	10000326 	beq	r2,zero,4104dc68 <alt_get_errno+0x24>
4104dc5c:	d0a00b17 	ldw	r2,-32724(gp)
4104dc60:	103ee83a 	callr	r2
4104dc64:	00000106 	br	4104dc6c <alt_get_errno+0x28>
4104dc68:	d0a6d104 	addi	r2,gp,-25788
}
4104dc6c:	e037883a 	mov	sp,fp
4104dc70:	dfc00117 	ldw	ra,4(sp)
4104dc74:	df000017 	ldw	fp,0(sp)
4104dc78:	dec00204 	addi	sp,sp,8
4104dc7c:	f800283a 	ret

4104dc80 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
4104dc80:	defff904 	addi	sp,sp,-28
4104dc84:	dfc00615 	stw	ra,24(sp)
4104dc88:	df000515 	stw	fp,20(sp)
4104dc8c:	df000504 	addi	fp,sp,20
4104dc90:	e13ffd15 	stw	r4,-12(fp)
4104dc94:	e17ffe15 	stw	r5,-8(fp)
4104dc98:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
4104dc9c:	e0bffd17 	ldw	r2,-12(fp)
4104dca0:	10000616 	blt	r2,zero,4104dcbc <read+0x3c>
4104dca4:	e0bffd17 	ldw	r2,-12(fp)
4104dca8:	10c00324 	muli	r3,r2,12
4104dcac:	00904174 	movhi	r2,16645
4104dcb0:	1082a404 	addi	r2,r2,2704
4104dcb4:	1885883a 	add	r2,r3,r2
4104dcb8:	00000106 	br	4104dcc0 <read+0x40>
4104dcbc:	0005883a 	mov	r2,zero
4104dcc0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
4104dcc4:	e0bffb17 	ldw	r2,-20(fp)
4104dcc8:	10002226 	beq	r2,zero,4104dd54 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
4104dccc:	e0bffb17 	ldw	r2,-20(fp)
4104dcd0:	10800217 	ldw	r2,8(r2)
4104dcd4:	108000cc 	andi	r2,r2,3
4104dcd8:	10800060 	cmpeqi	r2,r2,1
4104dcdc:	1000181e 	bne	r2,zero,4104dd40 <read+0xc0>
        (fd->dev->read))
4104dce0:	e0bffb17 	ldw	r2,-20(fp)
4104dce4:	10800017 	ldw	r2,0(r2)
4104dce8:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
4104dcec:	10001426 	beq	r2,zero,4104dd40 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
4104dcf0:	e0bffb17 	ldw	r2,-20(fp)
4104dcf4:	10800017 	ldw	r2,0(r2)
4104dcf8:	10800517 	ldw	r2,20(r2)
4104dcfc:	e0ffff17 	ldw	r3,-4(fp)
4104dd00:	180d883a 	mov	r6,r3
4104dd04:	e17ffe17 	ldw	r5,-8(fp)
4104dd08:	e13ffb17 	ldw	r4,-20(fp)
4104dd0c:	103ee83a 	callr	r2
4104dd10:	e0bffc15 	stw	r2,-16(fp)
4104dd14:	e0bffc17 	ldw	r2,-16(fp)
4104dd18:	1000070e 	bge	r2,zero,4104dd38 <read+0xb8>
        {
          ALT_ERRNO = -rval;
4104dd1c:	104dc440 	call	4104dc44 <alt_get_errno>
4104dd20:	1007883a 	mov	r3,r2
4104dd24:	e0bffc17 	ldw	r2,-16(fp)
4104dd28:	0085c83a 	sub	r2,zero,r2
4104dd2c:	18800015 	stw	r2,0(r3)
          return -1;
4104dd30:	00bfffc4 	movi	r2,-1
4104dd34:	00000c06 	br	4104dd68 <read+0xe8>
        }
        return rval;
4104dd38:	e0bffc17 	ldw	r2,-16(fp)
4104dd3c:	00000a06 	br	4104dd68 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
4104dd40:	104dc440 	call	4104dc44 <alt_get_errno>
4104dd44:	1007883a 	mov	r3,r2
4104dd48:	00800344 	movi	r2,13
4104dd4c:	18800015 	stw	r2,0(r3)
4104dd50:	00000406 	br	4104dd64 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
4104dd54:	104dc440 	call	4104dc44 <alt_get_errno>
4104dd58:	1007883a 	mov	r3,r2
4104dd5c:	00801444 	movi	r2,81
4104dd60:	18800015 	stw	r2,0(r3)
  }
  return -1;
4104dd64:	00bfffc4 	movi	r2,-1
}
4104dd68:	e037883a 	mov	sp,fp
4104dd6c:	dfc00117 	ldw	ra,4(sp)
4104dd70:	df000017 	ldw	fp,0(sp)
4104dd74:	dec00204 	addi	sp,sp,8
4104dd78:	f800283a 	ret

4104dd7c <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
4104dd7c:	defffe04 	addi	sp,sp,-8
4104dd80:	df000115 	stw	fp,4(sp)
4104dd84:	df000104 	addi	fp,sp,4
4104dd88:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
4104dd8c:	e0bfff17 	ldw	r2,-4(fp)
4104dd90:	108000d0 	cmplti	r2,r2,3
4104dd94:	10000d1e 	bne	r2,zero,4104ddcc <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
4104dd98:	00904174 	movhi	r2,16645
4104dd9c:	1082a404 	addi	r2,r2,2704
4104dda0:	e0ffff17 	ldw	r3,-4(fp)
4104dda4:	18c00324 	muli	r3,r3,12
4104dda8:	10c5883a 	add	r2,r2,r3
4104ddac:	10800204 	addi	r2,r2,8
4104ddb0:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
4104ddb4:	00904174 	movhi	r2,16645
4104ddb8:	1082a404 	addi	r2,r2,2704
4104ddbc:	e0ffff17 	ldw	r3,-4(fp)
4104ddc0:	18c00324 	muli	r3,r3,12
4104ddc4:	10c5883a 	add	r2,r2,r3
4104ddc8:	10000015 	stw	zero,0(r2)
  }
}
4104ddcc:	0001883a 	nop
4104ddd0:	e037883a 	mov	sp,fp
4104ddd4:	df000017 	ldw	fp,0(sp)
4104ddd8:	dec00104 	addi	sp,sp,4
4104dddc:	f800283a 	ret

4104dde0 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
4104dde0:	defff904 	addi	sp,sp,-28
4104dde4:	df000615 	stw	fp,24(sp)
4104dde8:	df000604 	addi	fp,sp,24
4104ddec:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
4104ddf0:	0005303a 	rdctl	r2,status
4104ddf4:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
4104ddf8:	e0fffe17 	ldw	r3,-8(fp)
4104ddfc:	00bfff84 	movi	r2,-2
4104de00:	1884703a 	and	r2,r3,r2
4104de04:	1001703a 	wrctl	status,r2
  
  return context;
4104de08:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
4104de0c:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
4104de10:	d0a00c17 	ldw	r2,-32720(gp)
4104de14:	10c000c4 	addi	r3,r2,3
4104de18:	00bfff04 	movi	r2,-4
4104de1c:	1884703a 	and	r2,r3,r2
4104de20:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
4104de24:	d0e00c17 	ldw	r3,-32720(gp)
4104de28:	e0bfff17 	ldw	r2,-4(fp)
4104de2c:	1887883a 	add	r3,r3,r2
4104de30:	00904234 	movhi	r2,16648
4104de34:	10ba0004 	addi	r2,r2,-6144
4104de38:	10c0062e 	bgeu	r2,r3,4104de54 <sbrk+0x74>
4104de3c:	e0bffb17 	ldw	r2,-20(fp)
4104de40:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
4104de44:	e0bffa17 	ldw	r2,-24(fp)
4104de48:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
4104de4c:	00bfffc4 	movi	r2,-1
4104de50:	00000b06 	br	4104de80 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
4104de54:	d0a00c17 	ldw	r2,-32720(gp)
4104de58:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
4104de5c:	d0e00c17 	ldw	r3,-32720(gp)
4104de60:	e0bfff17 	ldw	r2,-4(fp)
4104de64:	1885883a 	add	r2,r3,r2
4104de68:	d0a00c15 	stw	r2,-32720(gp)
4104de6c:	e0bffb17 	ldw	r2,-20(fp)
4104de70:	e0bffc15 	stw	r2,-16(fp)
4104de74:	e0bffc17 	ldw	r2,-16(fp)
4104de78:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
4104de7c:	e0bffd17 	ldw	r2,-12(fp)
} 
4104de80:	e037883a 	mov	sp,fp
4104de84:	df000017 	ldw	fp,0(sp)
4104de88:	dec00104 	addi	sp,sp,4
4104de8c:	f800283a 	ret

4104de90 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
4104de90:	defffa04 	addi	sp,sp,-24
4104de94:	df000515 	stw	fp,20(sp)
4104de98:	df000504 	addi	fp,sp,20
4104de9c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
4104dea0:	0005303a 	rdctl	r2,status
4104dea4:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
4104dea8:	e0fffc17 	ldw	r3,-16(fp)
4104deac:	00bfff84 	movi	r2,-2
4104deb0:	1884703a 	and	r2,r3,r2
4104deb4:	1001703a 	wrctl	status,r2
  
  return context;
4104deb8:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
4104debc:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
4104dec0:	e0bfff17 	ldw	r2,-4(fp)
4104dec4:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
4104dec8:	e0bffd17 	ldw	r2,-12(fp)
4104decc:	10800017 	ldw	r2,0(r2)
4104ded0:	e0fffd17 	ldw	r3,-12(fp)
4104ded4:	18c00117 	ldw	r3,4(r3)
4104ded8:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
4104dedc:	e0bffd17 	ldw	r2,-12(fp)
4104dee0:	10800117 	ldw	r2,4(r2)
4104dee4:	e0fffd17 	ldw	r3,-12(fp)
4104dee8:	18c00017 	ldw	r3,0(r3)
4104deec:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
4104def0:	e0bffd17 	ldw	r2,-12(fp)
4104def4:	e0fffd17 	ldw	r3,-12(fp)
4104def8:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
4104defc:	e0bffd17 	ldw	r2,-12(fp)
4104df00:	e0fffd17 	ldw	r3,-12(fp)
4104df04:	10c00015 	stw	r3,0(r2)
4104df08:	e0bffb17 	ldw	r2,-20(fp)
4104df0c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
4104df10:	e0bffe17 	ldw	r2,-8(fp)
4104df14:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
4104df18:	0001883a 	nop
4104df1c:	e037883a 	mov	sp,fp
4104df20:	df000017 	ldw	fp,0(sp)
4104df24:	dec00104 	addi	sp,sp,4
4104df28:	f800283a 	ret

4104df2c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
4104df2c:	defffb04 	addi	sp,sp,-20
4104df30:	dfc00415 	stw	ra,16(sp)
4104df34:	df000315 	stw	fp,12(sp)
4104df38:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
4104df3c:	d0a00d17 	ldw	r2,-32716(gp)
4104df40:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
4104df44:	d0a6d617 	ldw	r2,-25768(gp)
4104df48:	10800044 	addi	r2,r2,1
4104df4c:	d0a6d615 	stw	r2,-25768(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
4104df50:	00002e06 	br	4104e00c <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
4104df54:	e0bffd17 	ldw	r2,-12(fp)
4104df58:	10800017 	ldw	r2,0(r2)
4104df5c:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
4104df60:	e0bffd17 	ldw	r2,-12(fp)
4104df64:	10800403 	ldbu	r2,16(r2)
4104df68:	10803fcc 	andi	r2,r2,255
4104df6c:	10000426 	beq	r2,zero,4104df80 <alt_tick+0x54>
4104df70:	d0a6d617 	ldw	r2,-25768(gp)
4104df74:	1000021e 	bne	r2,zero,4104df80 <alt_tick+0x54>
    {
      alarm->rollover = 0;
4104df78:	e0bffd17 	ldw	r2,-12(fp)
4104df7c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
4104df80:	e0bffd17 	ldw	r2,-12(fp)
4104df84:	10800217 	ldw	r2,8(r2)
4104df88:	d0e6d617 	ldw	r3,-25768(gp)
4104df8c:	18801d36 	bltu	r3,r2,4104e004 <alt_tick+0xd8>
4104df90:	e0bffd17 	ldw	r2,-12(fp)
4104df94:	10800403 	ldbu	r2,16(r2)
4104df98:	10803fcc 	andi	r2,r2,255
4104df9c:	1000191e 	bne	r2,zero,4104e004 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
4104dfa0:	e0bffd17 	ldw	r2,-12(fp)
4104dfa4:	10800317 	ldw	r2,12(r2)
4104dfa8:	e0fffd17 	ldw	r3,-12(fp)
4104dfac:	18c00517 	ldw	r3,20(r3)
4104dfb0:	1809883a 	mov	r4,r3
4104dfb4:	103ee83a 	callr	r2
4104dfb8:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
4104dfbc:	e0bfff17 	ldw	r2,-4(fp)
4104dfc0:	1000031e 	bne	r2,zero,4104dfd0 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
4104dfc4:	e13ffd17 	ldw	r4,-12(fp)
4104dfc8:	104de900 	call	4104de90 <alt_alarm_stop>
4104dfcc:	00000d06 	br	4104e004 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
4104dfd0:	e0bffd17 	ldw	r2,-12(fp)
4104dfd4:	10c00217 	ldw	r3,8(r2)
4104dfd8:	e0bfff17 	ldw	r2,-4(fp)
4104dfdc:	1887883a 	add	r3,r3,r2
4104dfe0:	e0bffd17 	ldw	r2,-12(fp)
4104dfe4:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
4104dfe8:	e0bffd17 	ldw	r2,-12(fp)
4104dfec:	10c00217 	ldw	r3,8(r2)
4104dff0:	d0a6d617 	ldw	r2,-25768(gp)
4104dff4:	1880032e 	bgeu	r3,r2,4104e004 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
4104dff8:	e0bffd17 	ldw	r2,-12(fp)
4104dffc:	00c00044 	movi	r3,1
4104e000:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
4104e004:	e0bffe17 	ldw	r2,-8(fp)
4104e008:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
4104e00c:	e0fffd17 	ldw	r3,-12(fp)
4104e010:	d0a00d04 	addi	r2,gp,-32716
4104e014:	18bfcf1e 	bne	r3,r2,4104df54 <__alt_data_end+0xfffcf754>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
4104e018:	0001883a 	nop
}
4104e01c:	0001883a 	nop
4104e020:	e037883a 	mov	sp,fp
4104e024:	dfc00117 	ldw	ra,4(sp)
4104e028:	df000017 	ldw	fp,0(sp)
4104e02c:	dec00204 	addi	sp,sp,8
4104e030:	f800283a 	ret

4104e034 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
4104e034:	defffe04 	addi	sp,sp,-8
4104e038:	dfc00115 	stw	ra,4(sp)
4104e03c:	df000015 	stw	fp,0(sp)
4104e040:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
4104e044:	d0a00b17 	ldw	r2,-32724(gp)
4104e048:	10000326 	beq	r2,zero,4104e058 <alt_get_errno+0x24>
4104e04c:	d0a00b17 	ldw	r2,-32724(gp)
4104e050:	103ee83a 	callr	r2
4104e054:	00000106 	br	4104e05c <alt_get_errno+0x28>
4104e058:	d0a6d104 	addi	r2,gp,-25788
}
4104e05c:	e037883a 	mov	sp,fp
4104e060:	dfc00117 	ldw	ra,4(sp)
4104e064:	df000017 	ldw	fp,0(sp)
4104e068:	dec00204 	addi	sp,sp,8
4104e06c:	f800283a 	ret

4104e070 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
4104e070:	defff904 	addi	sp,sp,-28
4104e074:	dfc00615 	stw	ra,24(sp)
4104e078:	df000515 	stw	fp,20(sp)
4104e07c:	df000504 	addi	fp,sp,20
4104e080:	e13ffd15 	stw	r4,-12(fp)
4104e084:	e17ffe15 	stw	r5,-8(fp)
4104e088:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
4104e08c:	e0bffd17 	ldw	r2,-12(fp)
4104e090:	10000616 	blt	r2,zero,4104e0ac <write+0x3c>
4104e094:	e0bffd17 	ldw	r2,-12(fp)
4104e098:	10c00324 	muli	r3,r2,12
4104e09c:	00904174 	movhi	r2,16645
4104e0a0:	1082a404 	addi	r2,r2,2704
4104e0a4:	1885883a 	add	r2,r3,r2
4104e0a8:	00000106 	br	4104e0b0 <write+0x40>
4104e0ac:	0005883a 	mov	r2,zero
4104e0b0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
4104e0b4:	e0bffb17 	ldw	r2,-20(fp)
4104e0b8:	10002126 	beq	r2,zero,4104e140 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
4104e0bc:	e0bffb17 	ldw	r2,-20(fp)
4104e0c0:	10800217 	ldw	r2,8(r2)
4104e0c4:	108000cc 	andi	r2,r2,3
4104e0c8:	10001826 	beq	r2,zero,4104e12c <write+0xbc>
4104e0cc:	e0bffb17 	ldw	r2,-20(fp)
4104e0d0:	10800017 	ldw	r2,0(r2)
4104e0d4:	10800617 	ldw	r2,24(r2)
4104e0d8:	10001426 	beq	r2,zero,4104e12c <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
4104e0dc:	e0bffb17 	ldw	r2,-20(fp)
4104e0e0:	10800017 	ldw	r2,0(r2)
4104e0e4:	10800617 	ldw	r2,24(r2)
4104e0e8:	e0ffff17 	ldw	r3,-4(fp)
4104e0ec:	180d883a 	mov	r6,r3
4104e0f0:	e17ffe17 	ldw	r5,-8(fp)
4104e0f4:	e13ffb17 	ldw	r4,-20(fp)
4104e0f8:	103ee83a 	callr	r2
4104e0fc:	e0bffc15 	stw	r2,-16(fp)
4104e100:	e0bffc17 	ldw	r2,-16(fp)
4104e104:	1000070e 	bge	r2,zero,4104e124 <write+0xb4>
      {
        ALT_ERRNO = -rval;
4104e108:	104e0340 	call	4104e034 <alt_get_errno>
4104e10c:	1007883a 	mov	r3,r2
4104e110:	e0bffc17 	ldw	r2,-16(fp)
4104e114:	0085c83a 	sub	r2,zero,r2
4104e118:	18800015 	stw	r2,0(r3)
        return -1;
4104e11c:	00bfffc4 	movi	r2,-1
4104e120:	00000c06 	br	4104e154 <write+0xe4>
      }
      return rval;
4104e124:	e0bffc17 	ldw	r2,-16(fp)
4104e128:	00000a06 	br	4104e154 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
4104e12c:	104e0340 	call	4104e034 <alt_get_errno>
4104e130:	1007883a 	mov	r3,r2
4104e134:	00800344 	movi	r2,13
4104e138:	18800015 	stw	r2,0(r3)
4104e13c:	00000406 	br	4104e150 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
4104e140:	104e0340 	call	4104e034 <alt_get_errno>
4104e144:	1007883a 	mov	r3,r2
4104e148:	00801444 	movi	r2,81
4104e14c:	18800015 	stw	r2,0(r3)
  }
  return -1;
4104e150:	00bfffc4 	movi	r2,-1
}
4104e154:	e037883a 	mov	sp,fp
4104e158:	dfc00117 	ldw	ra,4(sp)
4104e15c:	df000017 	ldw	fp,0(sp)
4104e160:	dec00204 	addi	sp,sp,8
4104e164:	f800283a 	ret

4104e168 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
4104e168:	defffd04 	addi	sp,sp,-12
4104e16c:	dfc00215 	stw	ra,8(sp)
4104e170:	df000115 	stw	fp,4(sp)
4104e174:	df000104 	addi	fp,sp,4
4104e178:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
4104e17c:	d1600804 	addi	r5,gp,-32736
4104e180:	e13fff17 	ldw	r4,-4(fp)
4104e184:	104eef80 	call	4104eef8 <alt_dev_llist_insert>
}
4104e188:	e037883a 	mov	sp,fp
4104e18c:	dfc00117 	ldw	ra,4(sp)
4104e190:	df000017 	ldw	fp,0(sp)
4104e194:	dec00204 	addi	sp,sp,8
4104e198:	f800283a 	ret

4104e19c <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
4104e19c:	defffd04 	addi	sp,sp,-12
4104e1a0:	dfc00215 	stw	ra,8(sp)
4104e1a4:	df000115 	stw	fp,4(sp)
4104e1a8:	df000104 	addi	fp,sp,4
4104e1ac:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_QSYS, nios2_qsys);
4104e1b0:	104f6c40 	call	4104f6c4 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
4104e1b4:	00800044 	movi	r2,1
4104e1b8:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
4104e1bc:	0001883a 	nop
4104e1c0:	e037883a 	mov	sp,fp
4104e1c4:	dfc00117 	ldw	ra,4(sp)
4104e1c8:	df000017 	ldw	fp,0(sp)
4104e1cc:	dec00204 	addi	sp,sp,8
4104e1d0:	f800283a 	ret

4104e1d4 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
4104e1d4:	defffe04 	addi	sp,sp,-8
4104e1d8:	dfc00115 	stw	ra,4(sp)
4104e1dc:	df000015 	stw	fp,0(sp)
4104e1e0:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
4104e1e4:	01c0fa04 	movi	r7,1000
4104e1e8:	000d883a 	mov	r6,zero
4104e1ec:	000b883a 	mov	r5,zero
4104e1f0:	01100034 	movhi	r4,16384
4104e1f4:	104ed140 	call	4104ed14 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
4104e1f8:	01800044 	movi	r6,1
4104e1fc:	000b883a 	mov	r5,zero
4104e200:	01104174 	movhi	r4,16645
4104e204:	21030e04 	addi	r4,r4,3128
4104e208:	104e3980 	call	4104e398 <altera_avalon_jtag_uart_init>
4104e20c:	01104174 	movhi	r4,16645
4104e210:	21030404 	addi	r4,r4,3088
4104e214:	104e1680 	call	4104e168 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS, sysid_qsys);
4104e218:	0001883a 	nop
}
4104e21c:	0001883a 	nop
4104e220:	e037883a 	mov	sp,fp
4104e224:	dfc00117 	ldw	ra,4(sp)
4104e228:	df000017 	ldw	fp,0(sp)
4104e22c:	dec00204 	addi	sp,sp,8
4104e230:	f800283a 	ret

4104e234 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
4104e234:	defffa04 	addi	sp,sp,-24
4104e238:	dfc00515 	stw	ra,20(sp)
4104e23c:	df000415 	stw	fp,16(sp)
4104e240:	df000404 	addi	fp,sp,16
4104e244:	e13ffd15 	stw	r4,-12(fp)
4104e248:	e17ffe15 	stw	r5,-8(fp)
4104e24c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
4104e250:	e0bffd17 	ldw	r2,-12(fp)
4104e254:	10800017 	ldw	r2,0(r2)
4104e258:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
4104e25c:	e0bffc17 	ldw	r2,-16(fp)
4104e260:	10c00a04 	addi	r3,r2,40
4104e264:	e0bffd17 	ldw	r2,-12(fp)
4104e268:	10800217 	ldw	r2,8(r2)
4104e26c:	100f883a 	mov	r7,r2
4104e270:	e1bfff17 	ldw	r6,-4(fp)
4104e274:	e17ffe17 	ldw	r5,-8(fp)
4104e278:	1809883a 	mov	r4,r3
4104e27c:	104e85c0 	call	4104e85c <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
4104e280:	e037883a 	mov	sp,fp
4104e284:	dfc00117 	ldw	ra,4(sp)
4104e288:	df000017 	ldw	fp,0(sp)
4104e28c:	dec00204 	addi	sp,sp,8
4104e290:	f800283a 	ret

4104e294 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
4104e294:	defffa04 	addi	sp,sp,-24
4104e298:	dfc00515 	stw	ra,20(sp)
4104e29c:	df000415 	stw	fp,16(sp)
4104e2a0:	df000404 	addi	fp,sp,16
4104e2a4:	e13ffd15 	stw	r4,-12(fp)
4104e2a8:	e17ffe15 	stw	r5,-8(fp)
4104e2ac:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
4104e2b0:	e0bffd17 	ldw	r2,-12(fp)
4104e2b4:	10800017 	ldw	r2,0(r2)
4104e2b8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
4104e2bc:	e0bffc17 	ldw	r2,-16(fp)
4104e2c0:	10c00a04 	addi	r3,r2,40
4104e2c4:	e0bffd17 	ldw	r2,-12(fp)
4104e2c8:	10800217 	ldw	r2,8(r2)
4104e2cc:	100f883a 	mov	r7,r2
4104e2d0:	e1bfff17 	ldw	r6,-4(fp)
4104e2d4:	e17ffe17 	ldw	r5,-8(fp)
4104e2d8:	1809883a 	mov	r4,r3
4104e2dc:	104ea780 	call	4104ea78 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
4104e2e0:	e037883a 	mov	sp,fp
4104e2e4:	dfc00117 	ldw	ra,4(sp)
4104e2e8:	df000017 	ldw	fp,0(sp)
4104e2ec:	dec00204 	addi	sp,sp,8
4104e2f0:	f800283a 	ret

4104e2f4 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
4104e2f4:	defffc04 	addi	sp,sp,-16
4104e2f8:	dfc00315 	stw	ra,12(sp)
4104e2fc:	df000215 	stw	fp,8(sp)
4104e300:	df000204 	addi	fp,sp,8
4104e304:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
4104e308:	e0bfff17 	ldw	r2,-4(fp)
4104e30c:	10800017 	ldw	r2,0(r2)
4104e310:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
4104e314:	e0bffe17 	ldw	r2,-8(fp)
4104e318:	10c00a04 	addi	r3,r2,40
4104e31c:	e0bfff17 	ldw	r2,-4(fp)
4104e320:	10800217 	ldw	r2,8(r2)
4104e324:	100b883a 	mov	r5,r2
4104e328:	1809883a 	mov	r4,r3
4104e32c:	104e7040 	call	4104e704 <altera_avalon_jtag_uart_close>
}
4104e330:	e037883a 	mov	sp,fp
4104e334:	dfc00117 	ldw	ra,4(sp)
4104e338:	df000017 	ldw	fp,0(sp)
4104e33c:	dec00204 	addi	sp,sp,8
4104e340:	f800283a 	ret

4104e344 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
4104e344:	defffa04 	addi	sp,sp,-24
4104e348:	dfc00515 	stw	ra,20(sp)
4104e34c:	df000415 	stw	fp,16(sp)
4104e350:	df000404 	addi	fp,sp,16
4104e354:	e13ffd15 	stw	r4,-12(fp)
4104e358:	e17ffe15 	stw	r5,-8(fp)
4104e35c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
4104e360:	e0bffd17 	ldw	r2,-12(fp)
4104e364:	10800017 	ldw	r2,0(r2)
4104e368:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
4104e36c:	e0bffc17 	ldw	r2,-16(fp)
4104e370:	10800a04 	addi	r2,r2,40
4104e374:	e1bfff17 	ldw	r6,-4(fp)
4104e378:	e17ffe17 	ldw	r5,-8(fp)
4104e37c:	1009883a 	mov	r4,r2
4104e380:	104e76c0 	call	4104e76c <altera_avalon_jtag_uart_ioctl>
}
4104e384:	e037883a 	mov	sp,fp
4104e388:	dfc00117 	ldw	ra,4(sp)
4104e38c:	df000017 	ldw	fp,0(sp)
4104e390:	dec00204 	addi	sp,sp,8
4104e394:	f800283a 	ret

4104e398 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
4104e398:	defffa04 	addi	sp,sp,-24
4104e39c:	dfc00515 	stw	ra,20(sp)
4104e3a0:	df000415 	stw	fp,16(sp)
4104e3a4:	df000404 	addi	fp,sp,16
4104e3a8:	e13ffd15 	stw	r4,-12(fp)
4104e3ac:	e17ffe15 	stw	r5,-8(fp)
4104e3b0:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
4104e3b4:	e0bffd17 	ldw	r2,-12(fp)
4104e3b8:	00c00044 	movi	r3,1
4104e3bc:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
4104e3c0:	e0bffd17 	ldw	r2,-12(fp)
4104e3c4:	10800017 	ldw	r2,0(r2)
4104e3c8:	10800104 	addi	r2,r2,4
4104e3cc:	1007883a 	mov	r3,r2
4104e3d0:	e0bffd17 	ldw	r2,-12(fp)
4104e3d4:	10800817 	ldw	r2,32(r2)
4104e3d8:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
4104e3dc:	e0bffe17 	ldw	r2,-8(fp)
4104e3e0:	e0ffff17 	ldw	r3,-4(fp)
4104e3e4:	d8000015 	stw	zero,0(sp)
4104e3e8:	e1fffd17 	ldw	r7,-12(fp)
4104e3ec:	01904174 	movhi	r6,16645
4104e3f0:	31b91604 	addi	r6,r6,-7080
4104e3f4:	180b883a 	mov	r5,r3
4104e3f8:	1009883a 	mov	r4,r2
4104e3fc:	104f0900 	call	4104f090 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
4104e400:	e0bffd17 	ldw	r2,-12(fp)
4104e404:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
4104e408:	e0bffd17 	ldw	r2,-12(fp)
4104e40c:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
4104e410:	d0e6d517 	ldw	r3,-25772(gp)
4104e414:	e1fffd17 	ldw	r7,-12(fp)
4104e418:	01904174 	movhi	r6,16645
4104e41c:	31b99904 	addi	r6,r6,-6556
4104e420:	180b883a 	mov	r5,r3
4104e424:	1009883a 	mov	r4,r2
4104e428:	104ed900 	call	4104ed90 <alt_alarm_start>
4104e42c:	1000040e 	bge	r2,zero,4104e440 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
4104e430:	e0fffd17 	ldw	r3,-12(fp)
4104e434:	00a00034 	movhi	r2,32768
4104e438:	10bfffc4 	addi	r2,r2,-1
4104e43c:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
4104e440:	0001883a 	nop
4104e444:	e037883a 	mov	sp,fp
4104e448:	dfc00117 	ldw	ra,4(sp)
4104e44c:	df000017 	ldw	fp,0(sp)
4104e450:	dec00204 	addi	sp,sp,8
4104e454:	f800283a 	ret

4104e458 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
4104e458:	defff804 	addi	sp,sp,-32
4104e45c:	df000715 	stw	fp,28(sp)
4104e460:	df000704 	addi	fp,sp,28
4104e464:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
4104e468:	e0bfff17 	ldw	r2,-4(fp)
4104e46c:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
4104e470:	e0bffb17 	ldw	r2,-20(fp)
4104e474:	10800017 	ldw	r2,0(r2)
4104e478:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
4104e47c:	e0bffc17 	ldw	r2,-16(fp)
4104e480:	10800104 	addi	r2,r2,4
4104e484:	10800037 	ldwio	r2,0(r2)
4104e488:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
4104e48c:	e0bffd17 	ldw	r2,-12(fp)
4104e490:	1080c00c 	andi	r2,r2,768
4104e494:	10006d26 	beq	r2,zero,4104e64c <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
4104e498:	e0bffd17 	ldw	r2,-12(fp)
4104e49c:	1080400c 	andi	r2,r2,256
4104e4a0:	10003526 	beq	r2,zero,4104e578 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
4104e4a4:	00800074 	movhi	r2,1
4104e4a8:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
4104e4ac:	e0bffb17 	ldw	r2,-20(fp)
4104e4b0:	10800a17 	ldw	r2,40(r2)
4104e4b4:	10800044 	addi	r2,r2,1
4104e4b8:	1081ffcc 	andi	r2,r2,2047
4104e4bc:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
4104e4c0:	e0bffb17 	ldw	r2,-20(fp)
4104e4c4:	10c00b17 	ldw	r3,44(r2)
4104e4c8:	e0bffe17 	ldw	r2,-8(fp)
4104e4cc:	18801526 	beq	r3,r2,4104e524 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
4104e4d0:	e0bffc17 	ldw	r2,-16(fp)
4104e4d4:	10800037 	ldwio	r2,0(r2)
4104e4d8:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
4104e4dc:	e0bff917 	ldw	r2,-28(fp)
4104e4e0:	10a0000c 	andi	r2,r2,32768
4104e4e4:	10001126 	beq	r2,zero,4104e52c <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
4104e4e8:	e0bffb17 	ldw	r2,-20(fp)
4104e4ec:	10800a17 	ldw	r2,40(r2)
4104e4f0:	e0fff917 	ldw	r3,-28(fp)
4104e4f4:	1809883a 	mov	r4,r3
4104e4f8:	e0fffb17 	ldw	r3,-20(fp)
4104e4fc:	1885883a 	add	r2,r3,r2
4104e500:	10800e04 	addi	r2,r2,56
4104e504:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
4104e508:	e0bffb17 	ldw	r2,-20(fp)
4104e50c:	10800a17 	ldw	r2,40(r2)
4104e510:	10800044 	addi	r2,r2,1
4104e514:	10c1ffcc 	andi	r3,r2,2047
4104e518:	e0bffb17 	ldw	r2,-20(fp)
4104e51c:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
4104e520:	003fe206 	br	4104e4ac <__alt_data_end+0xfffcfcac>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
4104e524:	0001883a 	nop
4104e528:	00000106 	br	4104e530 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
4104e52c:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
4104e530:	e0bff917 	ldw	r2,-28(fp)
4104e534:	10bfffec 	andhi	r2,r2,65535
4104e538:	10000f26 	beq	r2,zero,4104e578 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
4104e53c:	e0bffb17 	ldw	r2,-20(fp)
4104e540:	10c00817 	ldw	r3,32(r2)
4104e544:	00bfff84 	movi	r2,-2
4104e548:	1886703a 	and	r3,r3,r2
4104e54c:	e0bffb17 	ldw	r2,-20(fp)
4104e550:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
4104e554:	e0bffc17 	ldw	r2,-16(fp)
4104e558:	10800104 	addi	r2,r2,4
4104e55c:	1007883a 	mov	r3,r2
4104e560:	e0bffb17 	ldw	r2,-20(fp)
4104e564:	10800817 	ldw	r2,32(r2)
4104e568:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
4104e56c:	e0bffc17 	ldw	r2,-16(fp)
4104e570:	10800104 	addi	r2,r2,4
4104e574:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
4104e578:	e0bffd17 	ldw	r2,-12(fp)
4104e57c:	1080800c 	andi	r2,r2,512
4104e580:	103fbe26 	beq	r2,zero,4104e47c <__alt_data_end+0xfffcfc7c>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
4104e584:	e0bffd17 	ldw	r2,-12(fp)
4104e588:	1004d43a 	srli	r2,r2,16
4104e58c:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
4104e590:	00001406 	br	4104e5e4 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
4104e594:	e0bffc17 	ldw	r2,-16(fp)
4104e598:	e0fffb17 	ldw	r3,-20(fp)
4104e59c:	18c00d17 	ldw	r3,52(r3)
4104e5a0:	e13ffb17 	ldw	r4,-20(fp)
4104e5a4:	20c7883a 	add	r3,r4,r3
4104e5a8:	18c20e04 	addi	r3,r3,2104
4104e5ac:	18c00003 	ldbu	r3,0(r3)
4104e5b0:	18c03fcc 	andi	r3,r3,255
4104e5b4:	18c0201c 	xori	r3,r3,128
4104e5b8:	18ffe004 	addi	r3,r3,-128
4104e5bc:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
4104e5c0:	e0bffb17 	ldw	r2,-20(fp)
4104e5c4:	10800d17 	ldw	r2,52(r2)
4104e5c8:	10800044 	addi	r2,r2,1
4104e5cc:	10c1ffcc 	andi	r3,r2,2047
4104e5d0:	e0bffb17 	ldw	r2,-20(fp)
4104e5d4:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
4104e5d8:	e0bffa17 	ldw	r2,-24(fp)
4104e5dc:	10bfffc4 	addi	r2,r2,-1
4104e5e0:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
4104e5e4:	e0bffa17 	ldw	r2,-24(fp)
4104e5e8:	10000526 	beq	r2,zero,4104e600 <altera_avalon_jtag_uart_irq+0x1a8>
4104e5ec:	e0bffb17 	ldw	r2,-20(fp)
4104e5f0:	10c00d17 	ldw	r3,52(r2)
4104e5f4:	e0bffb17 	ldw	r2,-20(fp)
4104e5f8:	10800c17 	ldw	r2,48(r2)
4104e5fc:	18bfe51e 	bne	r3,r2,4104e594 <__alt_data_end+0xfffcfd94>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
4104e600:	e0bffa17 	ldw	r2,-24(fp)
4104e604:	103f9d26 	beq	r2,zero,4104e47c <__alt_data_end+0xfffcfc7c>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
4104e608:	e0bffb17 	ldw	r2,-20(fp)
4104e60c:	10c00817 	ldw	r3,32(r2)
4104e610:	00bfff44 	movi	r2,-3
4104e614:	1886703a 	and	r3,r3,r2
4104e618:	e0bffb17 	ldw	r2,-20(fp)
4104e61c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
4104e620:	e0bffb17 	ldw	r2,-20(fp)
4104e624:	10800017 	ldw	r2,0(r2)
4104e628:	10800104 	addi	r2,r2,4
4104e62c:	1007883a 	mov	r3,r2
4104e630:	e0bffb17 	ldw	r2,-20(fp)
4104e634:	10800817 	ldw	r2,32(r2)
4104e638:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
4104e63c:	e0bffc17 	ldw	r2,-16(fp)
4104e640:	10800104 	addi	r2,r2,4
4104e644:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
4104e648:	003f8c06 	br	4104e47c <__alt_data_end+0xfffcfc7c>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
4104e64c:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
4104e650:	0001883a 	nop
4104e654:	e037883a 	mov	sp,fp
4104e658:	df000017 	ldw	fp,0(sp)
4104e65c:	dec00104 	addi	sp,sp,4
4104e660:	f800283a 	ret

4104e664 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
4104e664:	defff804 	addi	sp,sp,-32
4104e668:	df000715 	stw	fp,28(sp)
4104e66c:	df000704 	addi	fp,sp,28
4104e670:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
4104e674:	e0bffb17 	ldw	r2,-20(fp)
4104e678:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
4104e67c:	e0bff917 	ldw	r2,-28(fp)
4104e680:	10800017 	ldw	r2,0(r2)
4104e684:	10800104 	addi	r2,r2,4
4104e688:	10800037 	ldwio	r2,0(r2)
4104e68c:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
4104e690:	e0bffa17 	ldw	r2,-24(fp)
4104e694:	1081000c 	andi	r2,r2,1024
4104e698:	10000b26 	beq	r2,zero,4104e6c8 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
4104e69c:	e0bff917 	ldw	r2,-28(fp)
4104e6a0:	10800017 	ldw	r2,0(r2)
4104e6a4:	10800104 	addi	r2,r2,4
4104e6a8:	1007883a 	mov	r3,r2
4104e6ac:	e0bff917 	ldw	r2,-28(fp)
4104e6b0:	10800817 	ldw	r2,32(r2)
4104e6b4:	10810014 	ori	r2,r2,1024
4104e6b8:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
4104e6bc:	e0bff917 	ldw	r2,-28(fp)
4104e6c0:	10000915 	stw	zero,36(r2)
4104e6c4:	00000a06 	br	4104e6f0 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
4104e6c8:	e0bff917 	ldw	r2,-28(fp)
4104e6cc:	10c00917 	ldw	r3,36(r2)
4104e6d0:	00a00034 	movhi	r2,32768
4104e6d4:	10bfff04 	addi	r2,r2,-4
4104e6d8:	10c00536 	bltu	r2,r3,4104e6f0 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
4104e6dc:	e0bff917 	ldw	r2,-28(fp)
4104e6e0:	10800917 	ldw	r2,36(r2)
4104e6e4:	10c00044 	addi	r3,r2,1
4104e6e8:	e0bff917 	ldw	r2,-28(fp)
4104e6ec:	10c00915 	stw	r3,36(r2)
4104e6f0:	d0a6d517 	ldw	r2,-25772(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
4104e6f4:	e037883a 	mov	sp,fp
4104e6f8:	df000017 	ldw	fp,0(sp)
4104e6fc:	dec00104 	addi	sp,sp,4
4104e700:	f800283a 	ret

4104e704 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
4104e704:	defffd04 	addi	sp,sp,-12
4104e708:	df000215 	stw	fp,8(sp)
4104e70c:	df000204 	addi	fp,sp,8
4104e710:	e13ffe15 	stw	r4,-8(fp)
4104e714:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
4104e718:	00000506 	br	4104e730 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
4104e71c:	e0bfff17 	ldw	r2,-4(fp)
4104e720:	1090000c 	andi	r2,r2,16384
4104e724:	10000226 	beq	r2,zero,4104e730 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
4104e728:	00bffd44 	movi	r2,-11
4104e72c:	00000b06 	br	4104e75c <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
4104e730:	e0bffe17 	ldw	r2,-8(fp)
4104e734:	10c00d17 	ldw	r3,52(r2)
4104e738:	e0bffe17 	ldw	r2,-8(fp)
4104e73c:	10800c17 	ldw	r2,48(r2)
4104e740:	18800526 	beq	r3,r2,4104e758 <altera_avalon_jtag_uart_close+0x54>
4104e744:	e0bffe17 	ldw	r2,-8(fp)
4104e748:	10c00917 	ldw	r3,36(r2)
4104e74c:	e0bffe17 	ldw	r2,-8(fp)
4104e750:	10800117 	ldw	r2,4(r2)
4104e754:	18bff136 	bltu	r3,r2,4104e71c <__alt_data_end+0xfffcff1c>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
4104e758:	0005883a 	mov	r2,zero
}
4104e75c:	e037883a 	mov	sp,fp
4104e760:	df000017 	ldw	fp,0(sp)
4104e764:	dec00104 	addi	sp,sp,4
4104e768:	f800283a 	ret

4104e76c <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
4104e76c:	defffa04 	addi	sp,sp,-24
4104e770:	df000515 	stw	fp,20(sp)
4104e774:	df000504 	addi	fp,sp,20
4104e778:	e13ffd15 	stw	r4,-12(fp)
4104e77c:	e17ffe15 	stw	r5,-8(fp)
4104e780:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
4104e784:	00bff9c4 	movi	r2,-25
4104e788:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
4104e78c:	e0bffe17 	ldw	r2,-8(fp)
4104e790:	10da8060 	cmpeqi	r3,r2,27137
4104e794:	1800031e 	bne	r3,zero,4104e7a4 <altera_avalon_jtag_uart_ioctl+0x38>
4104e798:	109a80a0 	cmpeqi	r2,r2,27138
4104e79c:	1000181e 	bne	r2,zero,4104e800 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
4104e7a0:	00002906 	br	4104e848 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
4104e7a4:	e0bffd17 	ldw	r2,-12(fp)
4104e7a8:	10c00117 	ldw	r3,4(r2)
4104e7ac:	00a00034 	movhi	r2,32768
4104e7b0:	10bfffc4 	addi	r2,r2,-1
4104e7b4:	18802126 	beq	r3,r2,4104e83c <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
4104e7b8:	e0bfff17 	ldw	r2,-4(fp)
4104e7bc:	10800017 	ldw	r2,0(r2)
4104e7c0:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
4104e7c4:	e0bffc17 	ldw	r2,-16(fp)
4104e7c8:	10800090 	cmplti	r2,r2,2
4104e7cc:	1000061e 	bne	r2,zero,4104e7e8 <altera_avalon_jtag_uart_ioctl+0x7c>
4104e7d0:	e0fffc17 	ldw	r3,-16(fp)
4104e7d4:	00a00034 	movhi	r2,32768
4104e7d8:	10bfffc4 	addi	r2,r2,-1
4104e7dc:	18800226 	beq	r3,r2,4104e7e8 <altera_avalon_jtag_uart_ioctl+0x7c>
4104e7e0:	e0bffc17 	ldw	r2,-16(fp)
4104e7e4:	00000206 	br	4104e7f0 <altera_avalon_jtag_uart_ioctl+0x84>
4104e7e8:	00a00034 	movhi	r2,32768
4104e7ec:	10bfff84 	addi	r2,r2,-2
4104e7f0:	e0fffd17 	ldw	r3,-12(fp)
4104e7f4:	18800115 	stw	r2,4(r3)
      rc = 0;
4104e7f8:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
4104e7fc:	00000f06 	br	4104e83c <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
4104e800:	e0bffd17 	ldw	r2,-12(fp)
4104e804:	10c00117 	ldw	r3,4(r2)
4104e808:	00a00034 	movhi	r2,32768
4104e80c:	10bfffc4 	addi	r2,r2,-1
4104e810:	18800c26 	beq	r3,r2,4104e844 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
4104e814:	e0bffd17 	ldw	r2,-12(fp)
4104e818:	10c00917 	ldw	r3,36(r2)
4104e81c:	e0bffd17 	ldw	r2,-12(fp)
4104e820:	10800117 	ldw	r2,4(r2)
4104e824:	1885803a 	cmpltu	r2,r3,r2
4104e828:	10c03fcc 	andi	r3,r2,255
4104e82c:	e0bfff17 	ldw	r2,-4(fp)
4104e830:	10c00015 	stw	r3,0(r2)
      rc = 0;
4104e834:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
4104e838:	00000206 	br	4104e844 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
4104e83c:	0001883a 	nop
4104e840:	00000106 	br	4104e848 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
4104e844:	0001883a 	nop

  default:
    break;
  }

  return rc;
4104e848:	e0bffb17 	ldw	r2,-20(fp)
}
4104e84c:	e037883a 	mov	sp,fp
4104e850:	df000017 	ldw	fp,0(sp)
4104e854:	dec00104 	addi	sp,sp,4
4104e858:	f800283a 	ret

4104e85c <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
4104e85c:	defff304 	addi	sp,sp,-52
4104e860:	dfc00c15 	stw	ra,48(sp)
4104e864:	df000b15 	stw	fp,44(sp)
4104e868:	df000b04 	addi	fp,sp,44
4104e86c:	e13ffc15 	stw	r4,-16(fp)
4104e870:	e17ffd15 	stw	r5,-12(fp)
4104e874:	e1bffe15 	stw	r6,-8(fp)
4104e878:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
4104e87c:	e0bffd17 	ldw	r2,-12(fp)
4104e880:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
4104e884:	00004706 	br	4104e9a4 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
4104e888:	e0bffc17 	ldw	r2,-16(fp)
4104e88c:	10800a17 	ldw	r2,40(r2)
4104e890:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
4104e894:	e0bffc17 	ldw	r2,-16(fp)
4104e898:	10800b17 	ldw	r2,44(r2)
4104e89c:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
4104e8a0:	e0fff717 	ldw	r3,-36(fp)
4104e8a4:	e0bff817 	ldw	r2,-32(fp)
4104e8a8:	18800536 	bltu	r3,r2,4104e8c0 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
4104e8ac:	e0fff717 	ldw	r3,-36(fp)
4104e8b0:	e0bff817 	ldw	r2,-32(fp)
4104e8b4:	1885c83a 	sub	r2,r3,r2
4104e8b8:	e0bff615 	stw	r2,-40(fp)
4104e8bc:	00000406 	br	4104e8d0 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
4104e8c0:	00c20004 	movi	r3,2048
4104e8c4:	e0bff817 	ldw	r2,-32(fp)
4104e8c8:	1885c83a 	sub	r2,r3,r2
4104e8cc:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
4104e8d0:	e0bff617 	ldw	r2,-40(fp)
4104e8d4:	10001e26 	beq	r2,zero,4104e950 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
4104e8d8:	e0fffe17 	ldw	r3,-8(fp)
4104e8dc:	e0bff617 	ldw	r2,-40(fp)
4104e8e0:	1880022e 	bgeu	r3,r2,4104e8ec <altera_avalon_jtag_uart_read+0x90>
        n = space;
4104e8e4:	e0bffe17 	ldw	r2,-8(fp)
4104e8e8:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
4104e8ec:	e0bffc17 	ldw	r2,-16(fp)
4104e8f0:	10c00e04 	addi	r3,r2,56
4104e8f4:	e0bff817 	ldw	r2,-32(fp)
4104e8f8:	1885883a 	add	r2,r3,r2
4104e8fc:	e1bff617 	ldw	r6,-40(fp)
4104e900:	100b883a 	mov	r5,r2
4104e904:	e13ff517 	ldw	r4,-44(fp)
4104e908:	1040ccc0 	call	41040ccc <memcpy>
      ptr   += n;
4104e90c:	e0fff517 	ldw	r3,-44(fp)
4104e910:	e0bff617 	ldw	r2,-40(fp)
4104e914:	1885883a 	add	r2,r3,r2
4104e918:	e0bff515 	stw	r2,-44(fp)
      space -= n;
4104e91c:	e0fffe17 	ldw	r3,-8(fp)
4104e920:	e0bff617 	ldw	r2,-40(fp)
4104e924:	1885c83a 	sub	r2,r3,r2
4104e928:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
4104e92c:	e0fff817 	ldw	r3,-32(fp)
4104e930:	e0bff617 	ldw	r2,-40(fp)
4104e934:	1885883a 	add	r2,r3,r2
4104e938:	10c1ffcc 	andi	r3,r2,2047
4104e93c:	e0bffc17 	ldw	r2,-16(fp)
4104e940:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
4104e944:	e0bffe17 	ldw	r2,-8(fp)
4104e948:	00bfcf16 	blt	zero,r2,4104e888 <__alt_data_end+0xfffd0088>
4104e94c:	00000106 	br	4104e954 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
4104e950:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
4104e954:	e0fff517 	ldw	r3,-44(fp)
4104e958:	e0bffd17 	ldw	r2,-12(fp)
4104e95c:	1880141e 	bne	r3,r2,4104e9b0 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
4104e960:	e0bfff17 	ldw	r2,-4(fp)
4104e964:	1090000c 	andi	r2,r2,16384
4104e968:	1000131e 	bne	r2,zero,4104e9b8 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
4104e96c:	0001883a 	nop
4104e970:	e0bffc17 	ldw	r2,-16(fp)
4104e974:	10c00a17 	ldw	r3,40(r2)
4104e978:	e0bff717 	ldw	r2,-36(fp)
4104e97c:	1880051e 	bne	r3,r2,4104e994 <altera_avalon_jtag_uart_read+0x138>
4104e980:	e0bffc17 	ldw	r2,-16(fp)
4104e984:	10c00917 	ldw	r3,36(r2)
4104e988:	e0bffc17 	ldw	r2,-16(fp)
4104e98c:	10800117 	ldw	r2,4(r2)
4104e990:	18bff736 	bltu	r3,r2,4104e970 <__alt_data_end+0xfffd0170>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
4104e994:	e0bffc17 	ldw	r2,-16(fp)
4104e998:	10c00a17 	ldw	r3,40(r2)
4104e99c:	e0bff717 	ldw	r2,-36(fp)
4104e9a0:	18800726 	beq	r3,r2,4104e9c0 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
4104e9a4:	e0bffe17 	ldw	r2,-8(fp)
4104e9a8:	00bfb716 	blt	zero,r2,4104e888 <__alt_data_end+0xfffd0088>
4104e9ac:	00000506 	br	4104e9c4 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
4104e9b0:	0001883a 	nop
4104e9b4:	00000306 	br	4104e9c4 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
4104e9b8:	0001883a 	nop
4104e9bc:	00000106 	br	4104e9c4 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
4104e9c0:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
4104e9c4:	e0fff517 	ldw	r3,-44(fp)
4104e9c8:	e0bffd17 	ldw	r2,-12(fp)
4104e9cc:	18801826 	beq	r3,r2,4104ea30 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
4104e9d0:	0005303a 	rdctl	r2,status
4104e9d4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
4104e9d8:	e0fffb17 	ldw	r3,-20(fp)
4104e9dc:	00bfff84 	movi	r2,-2
4104e9e0:	1884703a 	and	r2,r3,r2
4104e9e4:	1001703a 	wrctl	status,r2
  
  return context;
4104e9e8:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
4104e9ec:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
4104e9f0:	e0bffc17 	ldw	r2,-16(fp)
4104e9f4:	10800817 	ldw	r2,32(r2)
4104e9f8:	10c00054 	ori	r3,r2,1
4104e9fc:	e0bffc17 	ldw	r2,-16(fp)
4104ea00:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
4104ea04:	e0bffc17 	ldw	r2,-16(fp)
4104ea08:	10800017 	ldw	r2,0(r2)
4104ea0c:	10800104 	addi	r2,r2,4
4104ea10:	1007883a 	mov	r3,r2
4104ea14:	e0bffc17 	ldw	r2,-16(fp)
4104ea18:	10800817 	ldw	r2,32(r2)
4104ea1c:	18800035 	stwio	r2,0(r3)
4104ea20:	e0bffa17 	ldw	r2,-24(fp)
4104ea24:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
4104ea28:	e0bff917 	ldw	r2,-28(fp)
4104ea2c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
4104ea30:	e0fff517 	ldw	r3,-44(fp)
4104ea34:	e0bffd17 	ldw	r2,-12(fp)
4104ea38:	18800426 	beq	r3,r2,4104ea4c <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
4104ea3c:	e0fff517 	ldw	r3,-44(fp)
4104ea40:	e0bffd17 	ldw	r2,-12(fp)
4104ea44:	1885c83a 	sub	r2,r3,r2
4104ea48:	00000606 	br	4104ea64 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
4104ea4c:	e0bfff17 	ldw	r2,-4(fp)
4104ea50:	1090000c 	andi	r2,r2,16384
4104ea54:	10000226 	beq	r2,zero,4104ea60 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
4104ea58:	00bffd44 	movi	r2,-11
4104ea5c:	00000106 	br	4104ea64 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
4104ea60:	00bffec4 	movi	r2,-5
}
4104ea64:	e037883a 	mov	sp,fp
4104ea68:	dfc00117 	ldw	ra,4(sp)
4104ea6c:	df000017 	ldw	fp,0(sp)
4104ea70:	dec00204 	addi	sp,sp,8
4104ea74:	f800283a 	ret

4104ea78 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
4104ea78:	defff304 	addi	sp,sp,-52
4104ea7c:	dfc00c15 	stw	ra,48(sp)
4104ea80:	df000b15 	stw	fp,44(sp)
4104ea84:	df000b04 	addi	fp,sp,44
4104ea88:	e13ffc15 	stw	r4,-16(fp)
4104ea8c:	e17ffd15 	stw	r5,-12(fp)
4104ea90:	e1bffe15 	stw	r6,-8(fp)
4104ea94:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
4104ea98:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
4104ea9c:	e0bffd17 	ldw	r2,-12(fp)
4104eaa0:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
4104eaa4:	00003706 	br	4104eb84 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
4104eaa8:	e0bffc17 	ldw	r2,-16(fp)
4104eaac:	10800c17 	ldw	r2,48(r2)
4104eab0:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
4104eab4:	e0bffc17 	ldw	r2,-16(fp)
4104eab8:	10800d17 	ldw	r2,52(r2)
4104eabc:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
4104eac0:	e0fff917 	ldw	r3,-28(fp)
4104eac4:	e0bff517 	ldw	r2,-44(fp)
4104eac8:	1880062e 	bgeu	r3,r2,4104eae4 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
4104eacc:	e0fff517 	ldw	r3,-44(fp)
4104ead0:	e0bff917 	ldw	r2,-28(fp)
4104ead4:	1885c83a 	sub	r2,r3,r2
4104ead8:	10bfffc4 	addi	r2,r2,-1
4104eadc:	e0bff615 	stw	r2,-40(fp)
4104eae0:	00000b06 	br	4104eb10 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
4104eae4:	e0bff517 	ldw	r2,-44(fp)
4104eae8:	10000526 	beq	r2,zero,4104eb00 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
4104eaec:	00c20004 	movi	r3,2048
4104eaf0:	e0bff917 	ldw	r2,-28(fp)
4104eaf4:	1885c83a 	sub	r2,r3,r2
4104eaf8:	e0bff615 	stw	r2,-40(fp)
4104eafc:	00000406 	br	4104eb10 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
4104eb00:	00c1ffc4 	movi	r3,2047
4104eb04:	e0bff917 	ldw	r2,-28(fp)
4104eb08:	1885c83a 	sub	r2,r3,r2
4104eb0c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
4104eb10:	e0bff617 	ldw	r2,-40(fp)
4104eb14:	10001e26 	beq	r2,zero,4104eb90 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
4104eb18:	e0fffe17 	ldw	r3,-8(fp)
4104eb1c:	e0bff617 	ldw	r2,-40(fp)
4104eb20:	1880022e 	bgeu	r3,r2,4104eb2c <altera_avalon_jtag_uart_write+0xb4>
        n = count;
4104eb24:	e0bffe17 	ldw	r2,-8(fp)
4104eb28:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
4104eb2c:	e0bffc17 	ldw	r2,-16(fp)
4104eb30:	10c20e04 	addi	r3,r2,2104
4104eb34:	e0bff917 	ldw	r2,-28(fp)
4104eb38:	1885883a 	add	r2,r3,r2
4104eb3c:	e1bff617 	ldw	r6,-40(fp)
4104eb40:	e17ffd17 	ldw	r5,-12(fp)
4104eb44:	1009883a 	mov	r4,r2
4104eb48:	1040ccc0 	call	41040ccc <memcpy>
      ptr   += n;
4104eb4c:	e0fffd17 	ldw	r3,-12(fp)
4104eb50:	e0bff617 	ldw	r2,-40(fp)
4104eb54:	1885883a 	add	r2,r3,r2
4104eb58:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
4104eb5c:	e0fffe17 	ldw	r3,-8(fp)
4104eb60:	e0bff617 	ldw	r2,-40(fp)
4104eb64:	1885c83a 	sub	r2,r3,r2
4104eb68:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
4104eb6c:	e0fff917 	ldw	r3,-28(fp)
4104eb70:	e0bff617 	ldw	r2,-40(fp)
4104eb74:	1885883a 	add	r2,r3,r2
4104eb78:	10c1ffcc 	andi	r3,r2,2047
4104eb7c:	e0bffc17 	ldw	r2,-16(fp)
4104eb80:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
4104eb84:	e0bffe17 	ldw	r2,-8(fp)
4104eb88:	00bfc716 	blt	zero,r2,4104eaa8 <__alt_data_end+0xfffd02a8>
4104eb8c:	00000106 	br	4104eb94 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
4104eb90:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
4104eb94:	0005303a 	rdctl	r2,status
4104eb98:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
4104eb9c:	e0fffb17 	ldw	r3,-20(fp)
4104eba0:	00bfff84 	movi	r2,-2
4104eba4:	1884703a 	and	r2,r3,r2
4104eba8:	1001703a 	wrctl	status,r2
  
  return context;
4104ebac:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
4104ebb0:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
4104ebb4:	e0bffc17 	ldw	r2,-16(fp)
4104ebb8:	10800817 	ldw	r2,32(r2)
4104ebbc:	10c00094 	ori	r3,r2,2
4104ebc0:	e0bffc17 	ldw	r2,-16(fp)
4104ebc4:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
4104ebc8:	e0bffc17 	ldw	r2,-16(fp)
4104ebcc:	10800017 	ldw	r2,0(r2)
4104ebd0:	10800104 	addi	r2,r2,4
4104ebd4:	1007883a 	mov	r3,r2
4104ebd8:	e0bffc17 	ldw	r2,-16(fp)
4104ebdc:	10800817 	ldw	r2,32(r2)
4104ebe0:	18800035 	stwio	r2,0(r3)
4104ebe4:	e0bffa17 	ldw	r2,-24(fp)
4104ebe8:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
4104ebec:	e0bff817 	ldw	r2,-32(fp)
4104ebf0:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
4104ebf4:	e0bffe17 	ldw	r2,-8(fp)
4104ebf8:	0080100e 	bge	zero,r2,4104ec3c <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
4104ebfc:	e0bfff17 	ldw	r2,-4(fp)
4104ec00:	1090000c 	andi	r2,r2,16384
4104ec04:	1000101e 	bne	r2,zero,4104ec48 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
4104ec08:	0001883a 	nop
4104ec0c:	e0bffc17 	ldw	r2,-16(fp)
4104ec10:	10c00d17 	ldw	r3,52(r2)
4104ec14:	e0bff517 	ldw	r2,-44(fp)
4104ec18:	1880051e 	bne	r3,r2,4104ec30 <altera_avalon_jtag_uart_write+0x1b8>
4104ec1c:	e0bffc17 	ldw	r2,-16(fp)
4104ec20:	10c00917 	ldw	r3,36(r2)
4104ec24:	e0bffc17 	ldw	r2,-16(fp)
4104ec28:	10800117 	ldw	r2,4(r2)
4104ec2c:	18bff736 	bltu	r3,r2,4104ec0c <__alt_data_end+0xfffd040c>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
4104ec30:	e0bffc17 	ldw	r2,-16(fp)
4104ec34:	10800917 	ldw	r2,36(r2)
4104ec38:	1000051e 	bne	r2,zero,4104ec50 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
4104ec3c:	e0bffe17 	ldw	r2,-8(fp)
4104ec40:	00bfd016 	blt	zero,r2,4104eb84 <__alt_data_end+0xfffd0384>
4104ec44:	00000306 	br	4104ec54 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
4104ec48:	0001883a 	nop
4104ec4c:	00000106 	br	4104ec54 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
4104ec50:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
4104ec54:	e0fffd17 	ldw	r3,-12(fp)
4104ec58:	e0bff717 	ldw	r2,-36(fp)
4104ec5c:	18800426 	beq	r3,r2,4104ec70 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
4104ec60:	e0fffd17 	ldw	r3,-12(fp)
4104ec64:	e0bff717 	ldw	r2,-36(fp)
4104ec68:	1885c83a 	sub	r2,r3,r2
4104ec6c:	00000606 	br	4104ec88 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
4104ec70:	e0bfff17 	ldw	r2,-4(fp)
4104ec74:	1090000c 	andi	r2,r2,16384
4104ec78:	10000226 	beq	r2,zero,4104ec84 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
4104ec7c:	00bffd44 	movi	r2,-11
4104ec80:	00000106 	br	4104ec88 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
4104ec84:	00bffec4 	movi	r2,-5
}
4104ec88:	e037883a 	mov	sp,fp
4104ec8c:	dfc00117 	ldw	ra,4(sp)
4104ec90:	df000017 	ldw	fp,0(sp)
4104ec94:	dec00204 	addi	sp,sp,8
4104ec98:	f800283a 	ret

4104ec9c <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
4104ec9c:	defffa04 	addi	sp,sp,-24
4104eca0:	dfc00515 	stw	ra,20(sp)
4104eca4:	df000415 	stw	fp,16(sp)
4104eca8:	df000404 	addi	fp,sp,16
4104ecac:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
4104ecb0:	0007883a 	mov	r3,zero
4104ecb4:	e0bfff17 	ldw	r2,-4(fp)
4104ecb8:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
4104ecbc:	e0bfff17 	ldw	r2,-4(fp)
4104ecc0:	10800104 	addi	r2,r2,4
4104ecc4:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
4104ecc8:	0005303a 	rdctl	r2,status
4104eccc:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
4104ecd0:	e0fffd17 	ldw	r3,-12(fp)
4104ecd4:	00bfff84 	movi	r2,-2
4104ecd8:	1884703a 	and	r2,r3,r2
4104ecdc:	1001703a 	wrctl	status,r2
  
  return context;
4104ece0:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
4104ece4:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
4104ece8:	104df2c0 	call	4104df2c <alt_tick>
4104ecec:	e0bffc17 	ldw	r2,-16(fp)
4104ecf0:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
4104ecf4:	e0bffe17 	ldw	r2,-8(fp)
4104ecf8:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
4104ecfc:	0001883a 	nop
4104ed00:	e037883a 	mov	sp,fp
4104ed04:	dfc00117 	ldw	ra,4(sp)
4104ed08:	df000017 	ldw	fp,0(sp)
4104ed0c:	dec00204 	addi	sp,sp,8
4104ed10:	f800283a 	ret

4104ed14 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
4104ed14:	defff804 	addi	sp,sp,-32
4104ed18:	dfc00715 	stw	ra,28(sp)
4104ed1c:	df000615 	stw	fp,24(sp)
4104ed20:	df000604 	addi	fp,sp,24
4104ed24:	e13ffc15 	stw	r4,-16(fp)
4104ed28:	e17ffd15 	stw	r5,-12(fp)
4104ed2c:	e1bffe15 	stw	r6,-8(fp)
4104ed30:	e1ffff15 	stw	r7,-4(fp)
4104ed34:	e0bfff17 	ldw	r2,-4(fp)
4104ed38:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
4104ed3c:	d0a6d517 	ldw	r2,-25772(gp)
4104ed40:	1000021e 	bne	r2,zero,4104ed4c <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
4104ed44:	e0bffb17 	ldw	r2,-20(fp)
4104ed48:	d0a6d515 	stw	r2,-25772(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
4104ed4c:	e0bffc17 	ldw	r2,-16(fp)
4104ed50:	10800104 	addi	r2,r2,4
4104ed54:	00c001c4 	movi	r3,7
4104ed58:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
4104ed5c:	d8000015 	stw	zero,0(sp)
4104ed60:	e1fffc17 	ldw	r7,-16(fp)
4104ed64:	01904174 	movhi	r6,16645
4104ed68:	31bb2704 	addi	r6,r6,-4964
4104ed6c:	e17ffe17 	ldw	r5,-8(fp)
4104ed70:	e13ffd17 	ldw	r4,-12(fp)
4104ed74:	104f0900 	call	4104f090 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
4104ed78:	0001883a 	nop
4104ed7c:	e037883a 	mov	sp,fp
4104ed80:	dfc00117 	ldw	ra,4(sp)
4104ed84:	df000017 	ldw	fp,0(sp)
4104ed88:	dec00204 	addi	sp,sp,8
4104ed8c:	f800283a 	ret

4104ed90 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
4104ed90:	defff504 	addi	sp,sp,-44
4104ed94:	df000a15 	stw	fp,40(sp)
4104ed98:	df000a04 	addi	fp,sp,40
4104ed9c:	e13ffc15 	stw	r4,-16(fp)
4104eda0:	e17ffd15 	stw	r5,-12(fp)
4104eda4:	e1bffe15 	stw	r6,-8(fp)
4104eda8:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
4104edac:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
4104edb0:	d0a6d517 	ldw	r2,-25772(gp)
  
  if (alt_ticks_per_second ())
4104edb4:	10003c26 	beq	r2,zero,4104eea8 <alt_alarm_start+0x118>
  {
    if (alarm)
4104edb8:	e0bffc17 	ldw	r2,-16(fp)
4104edbc:	10003826 	beq	r2,zero,4104eea0 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
4104edc0:	e0bffc17 	ldw	r2,-16(fp)
4104edc4:	e0fffe17 	ldw	r3,-8(fp)
4104edc8:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
4104edcc:	e0bffc17 	ldw	r2,-16(fp)
4104edd0:	e0ffff17 	ldw	r3,-4(fp)
4104edd4:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
4104edd8:	0005303a 	rdctl	r2,status
4104eddc:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
4104ede0:	e0fff917 	ldw	r3,-28(fp)
4104ede4:	00bfff84 	movi	r2,-2
4104ede8:	1884703a 	and	r2,r3,r2
4104edec:	1001703a 	wrctl	status,r2
  
  return context;
4104edf0:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
4104edf4:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
4104edf8:	d0a6d617 	ldw	r2,-25768(gp)
      
      current_nticks = alt_nticks();
4104edfc:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
4104ee00:	e0fffd17 	ldw	r3,-12(fp)
4104ee04:	e0bff617 	ldw	r2,-40(fp)
4104ee08:	1885883a 	add	r2,r3,r2
4104ee0c:	10c00044 	addi	r3,r2,1
4104ee10:	e0bffc17 	ldw	r2,-16(fp)
4104ee14:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
4104ee18:	e0bffc17 	ldw	r2,-16(fp)
4104ee1c:	10c00217 	ldw	r3,8(r2)
4104ee20:	e0bff617 	ldw	r2,-40(fp)
4104ee24:	1880042e 	bgeu	r3,r2,4104ee38 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
4104ee28:	e0bffc17 	ldw	r2,-16(fp)
4104ee2c:	00c00044 	movi	r3,1
4104ee30:	10c00405 	stb	r3,16(r2)
4104ee34:	00000206 	br	4104ee40 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
4104ee38:	e0bffc17 	ldw	r2,-16(fp)
4104ee3c:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
4104ee40:	e0bffc17 	ldw	r2,-16(fp)
4104ee44:	d0e00d04 	addi	r3,gp,-32716
4104ee48:	e0fffa15 	stw	r3,-24(fp)
4104ee4c:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
4104ee50:	e0bffb17 	ldw	r2,-20(fp)
4104ee54:	e0fffa17 	ldw	r3,-24(fp)
4104ee58:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
4104ee5c:	e0bffa17 	ldw	r2,-24(fp)
4104ee60:	10c00017 	ldw	r3,0(r2)
4104ee64:	e0bffb17 	ldw	r2,-20(fp)
4104ee68:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
4104ee6c:	e0bffa17 	ldw	r2,-24(fp)
4104ee70:	10800017 	ldw	r2,0(r2)
4104ee74:	e0fffb17 	ldw	r3,-20(fp)
4104ee78:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
4104ee7c:	e0bffa17 	ldw	r2,-24(fp)
4104ee80:	e0fffb17 	ldw	r3,-20(fp)
4104ee84:	10c00015 	stw	r3,0(r2)
4104ee88:	e0bff817 	ldw	r2,-32(fp)
4104ee8c:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
4104ee90:	e0bff717 	ldw	r2,-36(fp)
4104ee94:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
4104ee98:	0005883a 	mov	r2,zero
4104ee9c:	00000306 	br	4104eeac <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
4104eea0:	00bffa84 	movi	r2,-22
4104eea4:	00000106 	br	4104eeac <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
4104eea8:	00bfde84 	movi	r2,-134
  }
}
4104eeac:	e037883a 	mov	sp,fp
4104eeb0:	df000017 	ldw	fp,0(sp)
4104eeb4:	dec00104 	addi	sp,sp,4
4104eeb8:	f800283a 	ret

4104eebc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
4104eebc:	defffe04 	addi	sp,sp,-8
4104eec0:	dfc00115 	stw	ra,4(sp)
4104eec4:	df000015 	stw	fp,0(sp)
4104eec8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
4104eecc:	d0a00b17 	ldw	r2,-32724(gp)
4104eed0:	10000326 	beq	r2,zero,4104eee0 <alt_get_errno+0x24>
4104eed4:	d0a00b17 	ldw	r2,-32724(gp)
4104eed8:	103ee83a 	callr	r2
4104eedc:	00000106 	br	4104eee4 <alt_get_errno+0x28>
4104eee0:	d0a6d104 	addi	r2,gp,-25788
}
4104eee4:	e037883a 	mov	sp,fp
4104eee8:	dfc00117 	ldw	ra,4(sp)
4104eeec:	df000017 	ldw	fp,0(sp)
4104eef0:	dec00204 	addi	sp,sp,8
4104eef4:	f800283a 	ret

4104eef8 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
4104eef8:	defffa04 	addi	sp,sp,-24
4104eefc:	dfc00515 	stw	ra,20(sp)
4104ef00:	df000415 	stw	fp,16(sp)
4104ef04:	df000404 	addi	fp,sp,16
4104ef08:	e13ffe15 	stw	r4,-8(fp)
4104ef0c:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
4104ef10:	e0bffe17 	ldw	r2,-8(fp)
4104ef14:	10000326 	beq	r2,zero,4104ef24 <alt_dev_llist_insert+0x2c>
4104ef18:	e0bffe17 	ldw	r2,-8(fp)
4104ef1c:	10800217 	ldw	r2,8(r2)
4104ef20:	1000061e 	bne	r2,zero,4104ef3c <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
4104ef24:	104eebc0 	call	4104eebc <alt_get_errno>
4104ef28:	1007883a 	mov	r3,r2
4104ef2c:	00800584 	movi	r2,22
4104ef30:	18800015 	stw	r2,0(r3)
    return -EINVAL;
4104ef34:	00bffa84 	movi	r2,-22
4104ef38:	00001306 	br	4104ef88 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
4104ef3c:	e0bffe17 	ldw	r2,-8(fp)
4104ef40:	e0ffff17 	ldw	r3,-4(fp)
4104ef44:	e0fffc15 	stw	r3,-16(fp)
4104ef48:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
4104ef4c:	e0bffd17 	ldw	r2,-12(fp)
4104ef50:	e0fffc17 	ldw	r3,-16(fp)
4104ef54:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
4104ef58:	e0bffc17 	ldw	r2,-16(fp)
4104ef5c:	10c00017 	ldw	r3,0(r2)
4104ef60:	e0bffd17 	ldw	r2,-12(fp)
4104ef64:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
4104ef68:	e0bffc17 	ldw	r2,-16(fp)
4104ef6c:	10800017 	ldw	r2,0(r2)
4104ef70:	e0fffd17 	ldw	r3,-12(fp)
4104ef74:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
4104ef78:	e0bffc17 	ldw	r2,-16(fp)
4104ef7c:	e0fffd17 	ldw	r3,-12(fp)
4104ef80:	10c00015 	stw	r3,0(r2)

  return 0;  
4104ef84:	0005883a 	mov	r2,zero
}
4104ef88:	e037883a 	mov	sp,fp
4104ef8c:	dfc00117 	ldw	ra,4(sp)
4104ef90:	df000017 	ldw	fp,0(sp)
4104ef94:	dec00204 	addi	sp,sp,8
4104ef98:	f800283a 	ret

4104ef9c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
4104ef9c:	defffd04 	addi	sp,sp,-12
4104efa0:	dfc00215 	stw	ra,8(sp)
4104efa4:	df000115 	stw	fp,4(sp)
4104efa8:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
4104efac:	00904174 	movhi	r2,16645
4104efb0:	10bf5104 	addi	r2,r2,-700
4104efb4:	e0bfff15 	stw	r2,-4(fp)
4104efb8:	00000606 	br	4104efd4 <_do_ctors+0x38>
        (*ctor) (); 
4104efbc:	e0bfff17 	ldw	r2,-4(fp)
4104efc0:	10800017 	ldw	r2,0(r2)
4104efc4:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
4104efc8:	e0bfff17 	ldw	r2,-4(fp)
4104efcc:	10bfff04 	addi	r2,r2,-4
4104efd0:	e0bfff15 	stw	r2,-4(fp)
4104efd4:	e0ffff17 	ldw	r3,-4(fp)
4104efd8:	00904174 	movhi	r2,16645
4104efdc:	10bf5204 	addi	r2,r2,-696
4104efe0:	18bff62e 	bgeu	r3,r2,4104efbc <__alt_data_end+0xfffd07bc>
        (*ctor) (); 
}
4104efe4:	0001883a 	nop
4104efe8:	e037883a 	mov	sp,fp
4104efec:	dfc00117 	ldw	ra,4(sp)
4104eff0:	df000017 	ldw	fp,0(sp)
4104eff4:	dec00204 	addi	sp,sp,8
4104eff8:	f800283a 	ret

4104effc <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
4104effc:	defffd04 	addi	sp,sp,-12
4104f000:	dfc00215 	stw	ra,8(sp)
4104f004:	df000115 	stw	fp,4(sp)
4104f008:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
4104f00c:	00904174 	movhi	r2,16645
4104f010:	10bf5104 	addi	r2,r2,-700
4104f014:	e0bfff15 	stw	r2,-4(fp)
4104f018:	00000606 	br	4104f034 <_do_dtors+0x38>
        (*dtor) (); 
4104f01c:	e0bfff17 	ldw	r2,-4(fp)
4104f020:	10800017 	ldw	r2,0(r2)
4104f024:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
4104f028:	e0bfff17 	ldw	r2,-4(fp)
4104f02c:	10bfff04 	addi	r2,r2,-4
4104f030:	e0bfff15 	stw	r2,-4(fp)
4104f034:	e0ffff17 	ldw	r3,-4(fp)
4104f038:	00904174 	movhi	r2,16645
4104f03c:	10bf5204 	addi	r2,r2,-696
4104f040:	18bff62e 	bgeu	r3,r2,4104f01c <__alt_data_end+0xfffd081c>
        (*dtor) (); 
}
4104f044:	0001883a 	nop
4104f048:	e037883a 	mov	sp,fp
4104f04c:	dfc00117 	ldw	ra,4(sp)
4104f050:	df000017 	ldw	fp,0(sp)
4104f054:	dec00204 	addi	sp,sp,8
4104f058:	f800283a 	ret

4104f05c <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
4104f05c:	defffe04 	addi	sp,sp,-8
4104f060:	dfc00115 	stw	ra,4(sp)
4104f064:	df000015 	stw	fp,0(sp)
4104f068:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
4104f06c:	01440004 	movi	r5,4096
4104f070:	0009883a 	mov	r4,zero
4104f074:	104f9240 	call	4104f924 <alt_icache_flush>
#endif
}
4104f078:	0001883a 	nop
4104f07c:	e037883a 	mov	sp,fp
4104f080:	dfc00117 	ldw	ra,4(sp)
4104f084:	df000017 	ldw	fp,0(sp)
4104f088:	dec00204 	addi	sp,sp,8
4104f08c:	f800283a 	ret

4104f090 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
4104f090:	defff904 	addi	sp,sp,-28
4104f094:	dfc00615 	stw	ra,24(sp)
4104f098:	df000515 	stw	fp,20(sp)
4104f09c:	df000504 	addi	fp,sp,20
4104f0a0:	e13ffc15 	stw	r4,-16(fp)
4104f0a4:	e17ffd15 	stw	r5,-12(fp)
4104f0a8:	e1bffe15 	stw	r6,-8(fp)
4104f0ac:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
4104f0b0:	e0800217 	ldw	r2,8(fp)
4104f0b4:	d8800015 	stw	r2,0(sp)
4104f0b8:	e1ffff17 	ldw	r7,-4(fp)
4104f0bc:	e1bffe17 	ldw	r6,-8(fp)
4104f0c0:	e17ffd17 	ldw	r5,-12(fp)
4104f0c4:	e13ffc17 	ldw	r4,-16(fp)
4104f0c8:	104f2400 	call	4104f240 <alt_iic_isr_register>
}  
4104f0cc:	e037883a 	mov	sp,fp
4104f0d0:	dfc00117 	ldw	ra,4(sp)
4104f0d4:	df000017 	ldw	fp,0(sp)
4104f0d8:	dec00204 	addi	sp,sp,8
4104f0dc:	f800283a 	ret

4104f0e0 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
4104f0e0:	defff904 	addi	sp,sp,-28
4104f0e4:	df000615 	stw	fp,24(sp)
4104f0e8:	df000604 	addi	fp,sp,24
4104f0ec:	e13ffe15 	stw	r4,-8(fp)
4104f0f0:	e17fff15 	stw	r5,-4(fp)
4104f0f4:	e0bfff17 	ldw	r2,-4(fp)
4104f0f8:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
4104f0fc:	0005303a 	rdctl	r2,status
4104f100:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
4104f104:	e0fffb17 	ldw	r3,-20(fp)
4104f108:	00bfff84 	movi	r2,-2
4104f10c:	1884703a 	and	r2,r3,r2
4104f110:	1001703a 	wrctl	status,r2
  
  return context;
4104f114:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
4104f118:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
4104f11c:	00c00044 	movi	r3,1
4104f120:	e0bffa17 	ldw	r2,-24(fp)
4104f124:	1884983a 	sll	r2,r3,r2
4104f128:	1007883a 	mov	r3,r2
4104f12c:	d0a6d717 	ldw	r2,-25764(gp)
4104f130:	1884b03a 	or	r2,r3,r2
4104f134:	d0a6d715 	stw	r2,-25764(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
4104f138:	d0a6d717 	ldw	r2,-25764(gp)
4104f13c:	100170fa 	wrctl	ienable,r2
4104f140:	e0bffc17 	ldw	r2,-16(fp)
4104f144:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
4104f148:	e0bffd17 	ldw	r2,-12(fp)
4104f14c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
4104f150:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
4104f154:	0001883a 	nop
}
4104f158:	e037883a 	mov	sp,fp
4104f15c:	df000017 	ldw	fp,0(sp)
4104f160:	dec00104 	addi	sp,sp,4
4104f164:	f800283a 	ret

4104f168 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
4104f168:	defff904 	addi	sp,sp,-28
4104f16c:	df000615 	stw	fp,24(sp)
4104f170:	df000604 	addi	fp,sp,24
4104f174:	e13ffe15 	stw	r4,-8(fp)
4104f178:	e17fff15 	stw	r5,-4(fp)
4104f17c:	e0bfff17 	ldw	r2,-4(fp)
4104f180:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
4104f184:	0005303a 	rdctl	r2,status
4104f188:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
4104f18c:	e0fffb17 	ldw	r3,-20(fp)
4104f190:	00bfff84 	movi	r2,-2
4104f194:	1884703a 	and	r2,r3,r2
4104f198:	1001703a 	wrctl	status,r2
  
  return context;
4104f19c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
4104f1a0:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
4104f1a4:	00c00044 	movi	r3,1
4104f1a8:	e0bffa17 	ldw	r2,-24(fp)
4104f1ac:	1884983a 	sll	r2,r3,r2
4104f1b0:	0084303a 	nor	r2,zero,r2
4104f1b4:	1007883a 	mov	r3,r2
4104f1b8:	d0a6d717 	ldw	r2,-25764(gp)
4104f1bc:	1884703a 	and	r2,r3,r2
4104f1c0:	d0a6d715 	stw	r2,-25764(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
4104f1c4:	d0a6d717 	ldw	r2,-25764(gp)
4104f1c8:	100170fa 	wrctl	ienable,r2
4104f1cc:	e0bffc17 	ldw	r2,-16(fp)
4104f1d0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
4104f1d4:	e0bffd17 	ldw	r2,-12(fp)
4104f1d8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
4104f1dc:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
4104f1e0:	0001883a 	nop
}
4104f1e4:	e037883a 	mov	sp,fp
4104f1e8:	df000017 	ldw	fp,0(sp)
4104f1ec:	dec00104 	addi	sp,sp,4
4104f1f0:	f800283a 	ret

4104f1f4 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
4104f1f4:	defffc04 	addi	sp,sp,-16
4104f1f8:	df000315 	stw	fp,12(sp)
4104f1fc:	df000304 	addi	fp,sp,12
4104f200:	e13ffe15 	stw	r4,-8(fp)
4104f204:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
4104f208:	000530fa 	rdctl	r2,ienable
4104f20c:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
4104f210:	00c00044 	movi	r3,1
4104f214:	e0bfff17 	ldw	r2,-4(fp)
4104f218:	1884983a 	sll	r2,r3,r2
4104f21c:	1007883a 	mov	r3,r2
4104f220:	e0bffd17 	ldw	r2,-12(fp)
4104f224:	1884703a 	and	r2,r3,r2
4104f228:	1004c03a 	cmpne	r2,r2,zero
4104f22c:	10803fcc 	andi	r2,r2,255
}
4104f230:	e037883a 	mov	sp,fp
4104f234:	df000017 	ldw	fp,0(sp)
4104f238:	dec00104 	addi	sp,sp,4
4104f23c:	f800283a 	ret

4104f240 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
4104f240:	defff504 	addi	sp,sp,-44
4104f244:	dfc00a15 	stw	ra,40(sp)
4104f248:	df000915 	stw	fp,36(sp)
4104f24c:	df000904 	addi	fp,sp,36
4104f250:	e13ffc15 	stw	r4,-16(fp)
4104f254:	e17ffd15 	stw	r5,-12(fp)
4104f258:	e1bffe15 	stw	r6,-8(fp)
4104f25c:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
4104f260:	00bffa84 	movi	r2,-22
4104f264:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
4104f268:	e0bffd17 	ldw	r2,-12(fp)
4104f26c:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
4104f270:	e0bff817 	ldw	r2,-32(fp)
4104f274:	10800808 	cmpgei	r2,r2,32
4104f278:	1000271e 	bne	r2,zero,4104f318 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
4104f27c:	0005303a 	rdctl	r2,status
4104f280:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
4104f284:	e0fffb17 	ldw	r3,-20(fp)
4104f288:	00bfff84 	movi	r2,-2
4104f28c:	1884703a 	and	r2,r3,r2
4104f290:	1001703a 	wrctl	status,r2
  
  return context;
4104f294:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
4104f298:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
4104f29c:	00904174 	movhi	r2,16645
4104f2a0:	108dfe04 	addi	r2,r2,14328
4104f2a4:	e0fff817 	ldw	r3,-32(fp)
4104f2a8:	180690fa 	slli	r3,r3,3
4104f2ac:	10c5883a 	add	r2,r2,r3
4104f2b0:	e0fffe17 	ldw	r3,-8(fp)
4104f2b4:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
4104f2b8:	00904174 	movhi	r2,16645
4104f2bc:	108dfe04 	addi	r2,r2,14328
4104f2c0:	e0fff817 	ldw	r3,-32(fp)
4104f2c4:	180690fa 	slli	r3,r3,3
4104f2c8:	10c5883a 	add	r2,r2,r3
4104f2cc:	10800104 	addi	r2,r2,4
4104f2d0:	e0ffff17 	ldw	r3,-4(fp)
4104f2d4:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
4104f2d8:	e0bffe17 	ldw	r2,-8(fp)
4104f2dc:	10000526 	beq	r2,zero,4104f2f4 <alt_iic_isr_register+0xb4>
4104f2e0:	e0bff817 	ldw	r2,-32(fp)
4104f2e4:	100b883a 	mov	r5,r2
4104f2e8:	e13ffc17 	ldw	r4,-16(fp)
4104f2ec:	104f0e00 	call	4104f0e0 <alt_ic_irq_enable>
4104f2f0:	00000406 	br	4104f304 <alt_iic_isr_register+0xc4>
4104f2f4:	e0bff817 	ldw	r2,-32(fp)
4104f2f8:	100b883a 	mov	r5,r2
4104f2fc:	e13ffc17 	ldw	r4,-16(fp)
4104f300:	104f1680 	call	4104f168 <alt_ic_irq_disable>
4104f304:	e0bff715 	stw	r2,-36(fp)
4104f308:	e0bffa17 	ldw	r2,-24(fp)
4104f30c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
4104f310:	e0bff917 	ldw	r2,-28(fp)
4104f314:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
4104f318:	e0bff717 	ldw	r2,-36(fp)
}
4104f31c:	e037883a 	mov	sp,fp
4104f320:	dfc00117 	ldw	ra,4(sp)
4104f324:	df000017 	ldw	fp,0(sp)
4104f328:	dec00204 	addi	sp,sp,8
4104f32c:	f800283a 	ret

4104f330 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
4104f330:	defff904 	addi	sp,sp,-28
4104f334:	dfc00615 	stw	ra,24(sp)
4104f338:	df000515 	stw	fp,20(sp)
4104f33c:	df000504 	addi	fp,sp,20
4104f340:	e13ffc15 	stw	r4,-16(fp)
4104f344:	e17ffd15 	stw	r5,-12(fp)
4104f348:	e1bffe15 	stw	r6,-8(fp)
4104f34c:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
4104f350:	e1bfff17 	ldw	r6,-4(fp)
4104f354:	e17ffe17 	ldw	r5,-8(fp)
4104f358:	e13ffd17 	ldw	r4,-12(fp)
4104f35c:	104f5700 	call	4104f570 <open>
4104f360:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
4104f364:	e0bffb17 	ldw	r2,-20(fp)
4104f368:	10001c16 	blt	r2,zero,4104f3dc <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
4104f36c:	00904174 	movhi	r2,16645
4104f370:	1082a404 	addi	r2,r2,2704
4104f374:	e0fffb17 	ldw	r3,-20(fp)
4104f378:	18c00324 	muli	r3,r3,12
4104f37c:	10c5883a 	add	r2,r2,r3
4104f380:	10c00017 	ldw	r3,0(r2)
4104f384:	e0bffc17 	ldw	r2,-16(fp)
4104f388:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
4104f38c:	00904174 	movhi	r2,16645
4104f390:	1082a404 	addi	r2,r2,2704
4104f394:	e0fffb17 	ldw	r3,-20(fp)
4104f398:	18c00324 	muli	r3,r3,12
4104f39c:	10c5883a 	add	r2,r2,r3
4104f3a0:	10800104 	addi	r2,r2,4
4104f3a4:	10c00017 	ldw	r3,0(r2)
4104f3a8:	e0bffc17 	ldw	r2,-16(fp)
4104f3ac:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
4104f3b0:	00904174 	movhi	r2,16645
4104f3b4:	1082a404 	addi	r2,r2,2704
4104f3b8:	e0fffb17 	ldw	r3,-20(fp)
4104f3bc:	18c00324 	muli	r3,r3,12
4104f3c0:	10c5883a 	add	r2,r2,r3
4104f3c4:	10800204 	addi	r2,r2,8
4104f3c8:	10c00017 	ldw	r3,0(r2)
4104f3cc:	e0bffc17 	ldw	r2,-16(fp)
4104f3d0:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
4104f3d4:	e13ffb17 	ldw	r4,-20(fp)
4104f3d8:	104dd7c0 	call	4104dd7c <alt_release_fd>
  }
} 
4104f3dc:	0001883a 	nop
4104f3e0:	e037883a 	mov	sp,fp
4104f3e4:	dfc00117 	ldw	ra,4(sp)
4104f3e8:	df000017 	ldw	fp,0(sp)
4104f3ec:	dec00204 	addi	sp,sp,8
4104f3f0:	f800283a 	ret

4104f3f4 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
4104f3f4:	defffb04 	addi	sp,sp,-20
4104f3f8:	dfc00415 	stw	ra,16(sp)
4104f3fc:	df000315 	stw	fp,12(sp)
4104f400:	df000304 	addi	fp,sp,12
4104f404:	e13ffd15 	stw	r4,-12(fp)
4104f408:	e17ffe15 	stw	r5,-8(fp)
4104f40c:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
4104f410:	01c07fc4 	movi	r7,511
4104f414:	01800044 	movi	r6,1
4104f418:	e17ffd17 	ldw	r5,-12(fp)
4104f41c:	01104174 	movhi	r4,16645
4104f420:	2102a704 	addi	r4,r4,2716
4104f424:	104f3300 	call	4104f330 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
4104f428:	01c07fc4 	movi	r7,511
4104f42c:	000d883a 	mov	r6,zero
4104f430:	e17ffe17 	ldw	r5,-8(fp)
4104f434:	01104174 	movhi	r4,16645
4104f438:	2102a404 	addi	r4,r4,2704
4104f43c:	104f3300 	call	4104f330 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
4104f440:	01c07fc4 	movi	r7,511
4104f444:	01800044 	movi	r6,1
4104f448:	e17fff17 	ldw	r5,-4(fp)
4104f44c:	01104174 	movhi	r4,16645
4104f450:	2102aa04 	addi	r4,r4,2728
4104f454:	104f3300 	call	4104f330 <alt_open_fd>
}  
4104f458:	0001883a 	nop
4104f45c:	e037883a 	mov	sp,fp
4104f460:	dfc00117 	ldw	ra,4(sp)
4104f464:	df000017 	ldw	fp,0(sp)
4104f468:	dec00204 	addi	sp,sp,8
4104f46c:	f800283a 	ret

4104f470 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
4104f470:	defffe04 	addi	sp,sp,-8
4104f474:	dfc00115 	stw	ra,4(sp)
4104f478:	df000015 	stw	fp,0(sp)
4104f47c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
4104f480:	d0a00b17 	ldw	r2,-32724(gp)
4104f484:	10000326 	beq	r2,zero,4104f494 <alt_get_errno+0x24>
4104f488:	d0a00b17 	ldw	r2,-32724(gp)
4104f48c:	103ee83a 	callr	r2
4104f490:	00000106 	br	4104f498 <alt_get_errno+0x28>
4104f494:	d0a6d104 	addi	r2,gp,-25788
}
4104f498:	e037883a 	mov	sp,fp
4104f49c:	dfc00117 	ldw	ra,4(sp)
4104f4a0:	df000017 	ldw	fp,0(sp)
4104f4a4:	dec00204 	addi	sp,sp,8
4104f4a8:	f800283a 	ret

4104f4ac <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
4104f4ac:	defffd04 	addi	sp,sp,-12
4104f4b0:	df000215 	stw	fp,8(sp)
4104f4b4:	df000204 	addi	fp,sp,8
4104f4b8:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
4104f4bc:	e0bfff17 	ldw	r2,-4(fp)
4104f4c0:	10800217 	ldw	r2,8(r2)
4104f4c4:	10d00034 	orhi	r3,r2,16384
4104f4c8:	e0bfff17 	ldw	r2,-4(fp)
4104f4cc:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
4104f4d0:	e03ffe15 	stw	zero,-8(fp)
4104f4d4:	00001d06 	br	4104f54c <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
4104f4d8:	00904174 	movhi	r2,16645
4104f4dc:	1082a404 	addi	r2,r2,2704
4104f4e0:	e0fffe17 	ldw	r3,-8(fp)
4104f4e4:	18c00324 	muli	r3,r3,12
4104f4e8:	10c5883a 	add	r2,r2,r3
4104f4ec:	10c00017 	ldw	r3,0(r2)
4104f4f0:	e0bfff17 	ldw	r2,-4(fp)
4104f4f4:	10800017 	ldw	r2,0(r2)
4104f4f8:	1880111e 	bne	r3,r2,4104f540 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
4104f4fc:	00904174 	movhi	r2,16645
4104f500:	1082a404 	addi	r2,r2,2704
4104f504:	e0fffe17 	ldw	r3,-8(fp)
4104f508:	18c00324 	muli	r3,r3,12
4104f50c:	10c5883a 	add	r2,r2,r3
4104f510:	10800204 	addi	r2,r2,8
4104f514:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
4104f518:	1000090e 	bge	r2,zero,4104f540 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
4104f51c:	e0bffe17 	ldw	r2,-8(fp)
4104f520:	10c00324 	muli	r3,r2,12
4104f524:	00904174 	movhi	r2,16645
4104f528:	1082a404 	addi	r2,r2,2704
4104f52c:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
4104f530:	e0bfff17 	ldw	r2,-4(fp)
4104f534:	18800226 	beq	r3,r2,4104f540 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
4104f538:	00bffcc4 	movi	r2,-13
4104f53c:	00000806 	br	4104f560 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
4104f540:	e0bffe17 	ldw	r2,-8(fp)
4104f544:	10800044 	addi	r2,r2,1
4104f548:	e0bffe15 	stw	r2,-8(fp)
4104f54c:	d0a00a17 	ldw	r2,-32728(gp)
4104f550:	1007883a 	mov	r3,r2
4104f554:	e0bffe17 	ldw	r2,-8(fp)
4104f558:	18bfdf2e 	bgeu	r3,r2,4104f4d8 <__alt_data_end+0xfffd0cd8>
    }
  }
  
  /* The device is not locked */
 
  return 0;
4104f55c:	0005883a 	mov	r2,zero
}
4104f560:	e037883a 	mov	sp,fp
4104f564:	df000017 	ldw	fp,0(sp)
4104f568:	dec00104 	addi	sp,sp,4
4104f56c:	f800283a 	ret

4104f570 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
4104f570:	defff604 	addi	sp,sp,-40
4104f574:	dfc00915 	stw	ra,36(sp)
4104f578:	df000815 	stw	fp,32(sp)
4104f57c:	df000804 	addi	fp,sp,32
4104f580:	e13ffd15 	stw	r4,-12(fp)
4104f584:	e17ffe15 	stw	r5,-8(fp)
4104f588:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
4104f58c:	00bfffc4 	movi	r2,-1
4104f590:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
4104f594:	00bffb44 	movi	r2,-19
4104f598:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
4104f59c:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
4104f5a0:	d1600804 	addi	r5,gp,-32736
4104f5a4:	e13ffd17 	ldw	r4,-12(fp)
4104f5a8:	104f6e80 	call	4104f6e8 <alt_find_dev>
4104f5ac:	e0bff815 	stw	r2,-32(fp)
4104f5b0:	e0bff817 	ldw	r2,-32(fp)
4104f5b4:	1000051e 	bne	r2,zero,4104f5cc <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
4104f5b8:	e13ffd17 	ldw	r4,-12(fp)
4104f5bc:	104f7780 	call	4104f778 <alt_find_file>
4104f5c0:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
4104f5c4:	00800044 	movi	r2,1
4104f5c8:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
4104f5cc:	e0bff817 	ldw	r2,-32(fp)
4104f5d0:	10002926 	beq	r2,zero,4104f678 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
4104f5d4:	e13ff817 	ldw	r4,-32(fp)
4104f5d8:	104f8800 	call	4104f880 <alt_get_fd>
4104f5dc:	e0bff915 	stw	r2,-28(fp)
4104f5e0:	e0bff917 	ldw	r2,-28(fp)
4104f5e4:	1000030e 	bge	r2,zero,4104f5f4 <open+0x84>
    {
      status = index;
4104f5e8:	e0bff917 	ldw	r2,-28(fp)
4104f5ec:	e0bffa15 	stw	r2,-24(fp)
4104f5f0:	00002306 	br	4104f680 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
4104f5f4:	e0bff917 	ldw	r2,-28(fp)
4104f5f8:	10c00324 	muli	r3,r2,12
4104f5fc:	00904174 	movhi	r2,16645
4104f600:	1082a404 	addi	r2,r2,2704
4104f604:	1885883a 	add	r2,r3,r2
4104f608:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
4104f60c:	e0fffe17 	ldw	r3,-8(fp)
4104f610:	00900034 	movhi	r2,16384
4104f614:	10bfffc4 	addi	r2,r2,-1
4104f618:	1886703a 	and	r3,r3,r2
4104f61c:	e0bffc17 	ldw	r2,-16(fp)
4104f620:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
4104f624:	e0bffb17 	ldw	r2,-20(fp)
4104f628:	1000051e 	bne	r2,zero,4104f640 <open+0xd0>
4104f62c:	e13ffc17 	ldw	r4,-16(fp)
4104f630:	104f4ac0 	call	4104f4ac <alt_file_locked>
4104f634:	e0bffa15 	stw	r2,-24(fp)
4104f638:	e0bffa17 	ldw	r2,-24(fp)
4104f63c:	10001016 	blt	r2,zero,4104f680 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
4104f640:	e0bff817 	ldw	r2,-32(fp)
4104f644:	10800317 	ldw	r2,12(r2)
4104f648:	10000826 	beq	r2,zero,4104f66c <open+0xfc>
4104f64c:	e0bff817 	ldw	r2,-32(fp)
4104f650:	10800317 	ldw	r2,12(r2)
4104f654:	e1ffff17 	ldw	r7,-4(fp)
4104f658:	e1bffe17 	ldw	r6,-8(fp)
4104f65c:	e17ffd17 	ldw	r5,-12(fp)
4104f660:	e13ffc17 	ldw	r4,-16(fp)
4104f664:	103ee83a 	callr	r2
4104f668:	00000106 	br	4104f670 <open+0x100>
4104f66c:	0005883a 	mov	r2,zero
4104f670:	e0bffa15 	stw	r2,-24(fp)
4104f674:	00000206 	br	4104f680 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
4104f678:	00bffb44 	movi	r2,-19
4104f67c:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
4104f680:	e0bffa17 	ldw	r2,-24(fp)
4104f684:	1000090e 	bge	r2,zero,4104f6ac <open+0x13c>
  {
    alt_release_fd (index);  
4104f688:	e13ff917 	ldw	r4,-28(fp)
4104f68c:	104dd7c0 	call	4104dd7c <alt_release_fd>
    ALT_ERRNO = -status;
4104f690:	104f4700 	call	4104f470 <alt_get_errno>
4104f694:	1007883a 	mov	r3,r2
4104f698:	e0bffa17 	ldw	r2,-24(fp)
4104f69c:	0085c83a 	sub	r2,zero,r2
4104f6a0:	18800015 	stw	r2,0(r3)
    return -1;
4104f6a4:	00bfffc4 	movi	r2,-1
4104f6a8:	00000106 	br	4104f6b0 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
4104f6ac:	e0bff917 	ldw	r2,-28(fp)
}
4104f6b0:	e037883a 	mov	sp,fp
4104f6b4:	dfc00117 	ldw	ra,4(sp)
4104f6b8:	df000017 	ldw	fp,0(sp)
4104f6bc:	dec00204 	addi	sp,sp,8
4104f6c0:	f800283a 	ret

4104f6c4 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
4104f6c4:	deffff04 	addi	sp,sp,-4
4104f6c8:	df000015 	stw	fp,0(sp)
4104f6cc:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
4104f6d0:	000170fa 	wrctl	ienable,zero
}
4104f6d4:	0001883a 	nop
4104f6d8:	e037883a 	mov	sp,fp
4104f6dc:	df000017 	ldw	fp,0(sp)
4104f6e0:	dec00104 	addi	sp,sp,4
4104f6e4:	f800283a 	ret

4104f6e8 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
4104f6e8:	defffa04 	addi	sp,sp,-24
4104f6ec:	dfc00515 	stw	ra,20(sp)
4104f6f0:	df000415 	stw	fp,16(sp)
4104f6f4:	df000404 	addi	fp,sp,16
4104f6f8:	e13ffe15 	stw	r4,-8(fp)
4104f6fc:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
4104f700:	e0bfff17 	ldw	r2,-4(fp)
4104f704:	10800017 	ldw	r2,0(r2)
4104f708:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
4104f70c:	e13ffe17 	ldw	r4,-8(fp)
4104f710:	1040fec0 	call	41040fec <strlen>
4104f714:	10800044 	addi	r2,r2,1
4104f718:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
4104f71c:	00000d06 	br	4104f754 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
4104f720:	e0bffc17 	ldw	r2,-16(fp)
4104f724:	10800217 	ldw	r2,8(r2)
4104f728:	e0fffd17 	ldw	r3,-12(fp)
4104f72c:	180d883a 	mov	r6,r3
4104f730:	e17ffe17 	ldw	r5,-8(fp)
4104f734:	1009883a 	mov	r4,r2
4104f738:	104fa000 	call	4104fa00 <memcmp>
4104f73c:	1000021e 	bne	r2,zero,4104f748 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
4104f740:	e0bffc17 	ldw	r2,-16(fp)
4104f744:	00000706 	br	4104f764 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
4104f748:	e0bffc17 	ldw	r2,-16(fp)
4104f74c:	10800017 	ldw	r2,0(r2)
4104f750:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
4104f754:	e0fffc17 	ldw	r3,-16(fp)
4104f758:	e0bfff17 	ldw	r2,-4(fp)
4104f75c:	18bff01e 	bne	r3,r2,4104f720 <__alt_data_end+0xfffd0f20>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
4104f760:	0005883a 	mov	r2,zero
}
4104f764:	e037883a 	mov	sp,fp
4104f768:	dfc00117 	ldw	ra,4(sp)
4104f76c:	df000017 	ldw	fp,0(sp)
4104f770:	dec00204 	addi	sp,sp,8
4104f774:	f800283a 	ret

4104f778 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
4104f778:	defffb04 	addi	sp,sp,-20
4104f77c:	dfc00415 	stw	ra,16(sp)
4104f780:	df000315 	stw	fp,12(sp)
4104f784:	df000304 	addi	fp,sp,12
4104f788:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
4104f78c:	d0a00617 	ldw	r2,-32744(gp)
4104f790:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
4104f794:	00003106 	br	4104f85c <alt_find_file+0xe4>
  {
    len = strlen(next->name);
4104f798:	e0bffd17 	ldw	r2,-12(fp)
4104f79c:	10800217 	ldw	r2,8(r2)
4104f7a0:	1009883a 	mov	r4,r2
4104f7a4:	1040fec0 	call	41040fec <strlen>
4104f7a8:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
4104f7ac:	e0bffd17 	ldw	r2,-12(fp)
4104f7b0:	10c00217 	ldw	r3,8(r2)
4104f7b4:	e0bffe17 	ldw	r2,-8(fp)
4104f7b8:	10bfffc4 	addi	r2,r2,-1
4104f7bc:	1885883a 	add	r2,r3,r2
4104f7c0:	10800003 	ldbu	r2,0(r2)
4104f7c4:	10803fcc 	andi	r2,r2,255
4104f7c8:	1080201c 	xori	r2,r2,128
4104f7cc:	10bfe004 	addi	r2,r2,-128
4104f7d0:	10800bd8 	cmpnei	r2,r2,47
4104f7d4:	1000031e 	bne	r2,zero,4104f7e4 <alt_find_file+0x6c>
    {
      len -= 1;
4104f7d8:	e0bffe17 	ldw	r2,-8(fp)
4104f7dc:	10bfffc4 	addi	r2,r2,-1
4104f7e0:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
4104f7e4:	e0bffe17 	ldw	r2,-8(fp)
4104f7e8:	e0ffff17 	ldw	r3,-4(fp)
4104f7ec:	1885883a 	add	r2,r3,r2
4104f7f0:	10800003 	ldbu	r2,0(r2)
4104f7f4:	10803fcc 	andi	r2,r2,255
4104f7f8:	1080201c 	xori	r2,r2,128
4104f7fc:	10bfe004 	addi	r2,r2,-128
4104f800:	10800be0 	cmpeqi	r2,r2,47
4104f804:	1000081e 	bne	r2,zero,4104f828 <alt_find_file+0xb0>
4104f808:	e0bffe17 	ldw	r2,-8(fp)
4104f80c:	e0ffff17 	ldw	r3,-4(fp)
4104f810:	1885883a 	add	r2,r3,r2
4104f814:	10800003 	ldbu	r2,0(r2)
4104f818:	10803fcc 	andi	r2,r2,255
4104f81c:	1080201c 	xori	r2,r2,128
4104f820:	10bfe004 	addi	r2,r2,-128
4104f824:	10000a1e 	bne	r2,zero,4104f850 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
4104f828:	e0bffd17 	ldw	r2,-12(fp)
4104f82c:	10800217 	ldw	r2,8(r2)
4104f830:	e0fffe17 	ldw	r3,-8(fp)
4104f834:	180d883a 	mov	r6,r3
4104f838:	e17fff17 	ldw	r5,-4(fp)
4104f83c:	1009883a 	mov	r4,r2
4104f840:	104fa000 	call	4104fa00 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
4104f844:	1000021e 	bne	r2,zero,4104f850 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
4104f848:	e0bffd17 	ldw	r2,-12(fp)
4104f84c:	00000706 	br	4104f86c <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
4104f850:	e0bffd17 	ldw	r2,-12(fp)
4104f854:	10800017 	ldw	r2,0(r2)
4104f858:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
4104f85c:	e0fffd17 	ldw	r3,-12(fp)
4104f860:	d0a00604 	addi	r2,gp,-32744
4104f864:	18bfcc1e 	bne	r3,r2,4104f798 <__alt_data_end+0xfffd0f98>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
4104f868:	0005883a 	mov	r2,zero
}
4104f86c:	e037883a 	mov	sp,fp
4104f870:	dfc00117 	ldw	ra,4(sp)
4104f874:	df000017 	ldw	fp,0(sp)
4104f878:	dec00204 	addi	sp,sp,8
4104f87c:	f800283a 	ret

4104f880 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
4104f880:	defffc04 	addi	sp,sp,-16
4104f884:	df000315 	stw	fp,12(sp)
4104f888:	df000304 	addi	fp,sp,12
4104f88c:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
4104f890:	00bffa04 	movi	r2,-24
4104f894:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
4104f898:	e03ffd15 	stw	zero,-12(fp)
4104f89c:	00001906 	br	4104f904 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
4104f8a0:	00904174 	movhi	r2,16645
4104f8a4:	1082a404 	addi	r2,r2,2704
4104f8a8:	e0fffd17 	ldw	r3,-12(fp)
4104f8ac:	18c00324 	muli	r3,r3,12
4104f8b0:	10c5883a 	add	r2,r2,r3
4104f8b4:	10800017 	ldw	r2,0(r2)
4104f8b8:	10000f1e 	bne	r2,zero,4104f8f8 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
4104f8bc:	00904174 	movhi	r2,16645
4104f8c0:	1082a404 	addi	r2,r2,2704
4104f8c4:	e0fffd17 	ldw	r3,-12(fp)
4104f8c8:	18c00324 	muli	r3,r3,12
4104f8cc:	10c5883a 	add	r2,r2,r3
4104f8d0:	e0ffff17 	ldw	r3,-4(fp)
4104f8d4:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
4104f8d8:	d0e00a17 	ldw	r3,-32728(gp)
4104f8dc:	e0bffd17 	ldw	r2,-12(fp)
4104f8e0:	1880020e 	bge	r3,r2,4104f8ec <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
4104f8e4:	e0bffd17 	ldw	r2,-12(fp)
4104f8e8:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
4104f8ec:	e0bffd17 	ldw	r2,-12(fp)
4104f8f0:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
4104f8f4:	00000606 	br	4104f910 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
4104f8f8:	e0bffd17 	ldw	r2,-12(fp)
4104f8fc:	10800044 	addi	r2,r2,1
4104f900:	e0bffd15 	stw	r2,-12(fp)
4104f904:	e0bffd17 	ldw	r2,-12(fp)
4104f908:	10800810 	cmplti	r2,r2,32
4104f90c:	103fe41e 	bne	r2,zero,4104f8a0 <__alt_data_end+0xfffd10a0>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
4104f910:	e0bffe17 	ldw	r2,-8(fp)
}
4104f914:	e037883a 	mov	sp,fp
4104f918:	df000017 	ldw	fp,0(sp)
4104f91c:	dec00104 	addi	sp,sp,4
4104f920:	f800283a 	ret

4104f924 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
4104f924:	defffb04 	addi	sp,sp,-20
4104f928:	df000415 	stw	fp,16(sp)
4104f92c:	df000404 	addi	fp,sp,16
4104f930:	e13ffe15 	stw	r4,-8(fp)
4104f934:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
4104f938:	e0bfff17 	ldw	r2,-4(fp)
4104f93c:	10840070 	cmpltui	r2,r2,4097
4104f940:	1000021e 	bne	r2,zero,4104f94c <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
4104f944:	00840004 	movi	r2,4096
4104f948:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
4104f94c:	e0fffe17 	ldw	r3,-8(fp)
4104f950:	e0bfff17 	ldw	r2,-4(fp)
4104f954:	1885883a 	add	r2,r3,r2
4104f958:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
4104f95c:	e0bffe17 	ldw	r2,-8(fp)
4104f960:	e0bffc15 	stw	r2,-16(fp)
4104f964:	00000506 	br	4104f97c <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
4104f968:	e0bffc17 	ldw	r2,-16(fp)
4104f96c:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
4104f970:	e0bffc17 	ldw	r2,-16(fp)
4104f974:	10800804 	addi	r2,r2,32
4104f978:	e0bffc15 	stw	r2,-16(fp)
4104f97c:	e0fffc17 	ldw	r3,-16(fp)
4104f980:	e0bffd17 	ldw	r2,-12(fp)
4104f984:	18bff836 	bltu	r3,r2,4104f968 <__alt_data_end+0xfffd1168>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
4104f988:	e0bffe17 	ldw	r2,-8(fp)
4104f98c:	108007cc 	andi	r2,r2,31
4104f990:	10000226 	beq	r2,zero,4104f99c <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
4104f994:	e0bffc17 	ldw	r2,-16(fp)
4104f998:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
4104f99c:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
4104f9a0:	0001883a 	nop
4104f9a4:	e037883a 	mov	sp,fp
4104f9a8:	df000017 	ldw	fp,0(sp)
4104f9ac:	dec00104 	addi	sp,sp,4
4104f9b0:	f800283a 	ret

4104f9b4 <atexit>:
4104f9b4:	200b883a 	mov	r5,r4
4104f9b8:	000f883a 	mov	r7,zero
4104f9bc:	000d883a 	mov	r6,zero
4104f9c0:	0009883a 	mov	r4,zero
4104f9c4:	104fa7c1 	jmpi	4104fa7c <__register_exitproc>

4104f9c8 <exit>:
4104f9c8:	defffe04 	addi	sp,sp,-8
4104f9cc:	000b883a 	mov	r5,zero
4104f9d0:	dc000015 	stw	r16,0(sp)
4104f9d4:	dfc00115 	stw	ra,4(sp)
4104f9d8:	2021883a 	mov	r16,r4
4104f9dc:	104fb940 	call	4104fb94 <__call_exitprocs>
4104f9e0:	00904174 	movhi	r2,16645
4104f9e4:	10871c04 	addi	r2,r2,7280
4104f9e8:	11000017 	ldw	r4,0(r2)
4104f9ec:	20800f17 	ldw	r2,60(r4)
4104f9f0:	10000126 	beq	r2,zero,4104f9f8 <exit+0x30>
4104f9f4:	103ee83a 	callr	r2
4104f9f8:	8009883a 	mov	r4,r16
4104f9fc:	104fd140 	call	4104fd14 <_exit>

4104fa00 <memcmp>:
4104fa00:	01c000c4 	movi	r7,3
4104fa04:	3980192e 	bgeu	r7,r6,4104fa6c <memcmp+0x6c>
4104fa08:	2144b03a 	or	r2,r4,r5
4104fa0c:	11c4703a 	and	r2,r2,r7
4104fa10:	10000f26 	beq	r2,zero,4104fa50 <memcmp+0x50>
4104fa14:	20800003 	ldbu	r2,0(r4)
4104fa18:	28c00003 	ldbu	r3,0(r5)
4104fa1c:	10c0151e 	bne	r2,r3,4104fa74 <memcmp+0x74>
4104fa20:	31bfff84 	addi	r6,r6,-2
4104fa24:	01ffffc4 	movi	r7,-1
4104fa28:	00000406 	br	4104fa3c <memcmp+0x3c>
4104fa2c:	20800003 	ldbu	r2,0(r4)
4104fa30:	28c00003 	ldbu	r3,0(r5)
4104fa34:	31bfffc4 	addi	r6,r6,-1
4104fa38:	10c00e1e 	bne	r2,r3,4104fa74 <memcmp+0x74>
4104fa3c:	21000044 	addi	r4,r4,1
4104fa40:	29400044 	addi	r5,r5,1
4104fa44:	31fff91e 	bne	r6,r7,4104fa2c <__alt_data_end+0xfffd122c>
4104fa48:	0005883a 	mov	r2,zero
4104fa4c:	f800283a 	ret
4104fa50:	20c00017 	ldw	r3,0(r4)
4104fa54:	28800017 	ldw	r2,0(r5)
4104fa58:	18bfee1e 	bne	r3,r2,4104fa14 <__alt_data_end+0xfffd1214>
4104fa5c:	31bfff04 	addi	r6,r6,-4
4104fa60:	21000104 	addi	r4,r4,4
4104fa64:	29400104 	addi	r5,r5,4
4104fa68:	39bff936 	bltu	r7,r6,4104fa50 <__alt_data_end+0xfffd1250>
4104fa6c:	303fe91e 	bne	r6,zero,4104fa14 <__alt_data_end+0xfffd1214>
4104fa70:	003ff506 	br	4104fa48 <__alt_data_end+0xfffd1248>
4104fa74:	10c5c83a 	sub	r2,r2,r3
4104fa78:	f800283a 	ret

4104fa7c <__register_exitproc>:
4104fa7c:	defffa04 	addi	sp,sp,-24
4104fa80:	dc000315 	stw	r16,12(sp)
4104fa84:	04104174 	movhi	r16,16645
4104fa88:	84071c04 	addi	r16,r16,7280
4104fa8c:	80c00017 	ldw	r3,0(r16)
4104fa90:	dc400415 	stw	r17,16(sp)
4104fa94:	dfc00515 	stw	ra,20(sp)
4104fa98:	18805217 	ldw	r2,328(r3)
4104fa9c:	2023883a 	mov	r17,r4
4104faa0:	10003726 	beq	r2,zero,4104fb80 <__register_exitproc+0x104>
4104faa4:	10c00117 	ldw	r3,4(r2)
4104faa8:	010007c4 	movi	r4,31
4104faac:	20c00e16 	blt	r4,r3,4104fae8 <__register_exitproc+0x6c>
4104fab0:	1a000044 	addi	r8,r3,1
4104fab4:	8800221e 	bne	r17,zero,4104fb40 <__register_exitproc+0xc4>
4104fab8:	18c00084 	addi	r3,r3,2
4104fabc:	18c7883a 	add	r3,r3,r3
4104fac0:	18c7883a 	add	r3,r3,r3
4104fac4:	12000115 	stw	r8,4(r2)
4104fac8:	10c7883a 	add	r3,r2,r3
4104facc:	19400015 	stw	r5,0(r3)
4104fad0:	0005883a 	mov	r2,zero
4104fad4:	dfc00517 	ldw	ra,20(sp)
4104fad8:	dc400417 	ldw	r17,16(sp)
4104fadc:	dc000317 	ldw	r16,12(sp)
4104fae0:	dec00604 	addi	sp,sp,24
4104fae4:	f800283a 	ret
4104fae8:	00800034 	movhi	r2,0
4104faec:	10800004 	addi	r2,r2,0
4104faf0:	10002626 	beq	r2,zero,4104fb8c <__register_exitproc+0x110>
4104faf4:	01006404 	movi	r4,400
4104faf8:	d9400015 	stw	r5,0(sp)
4104fafc:	d9800115 	stw	r6,4(sp)
4104fb00:	d9c00215 	stw	r7,8(sp)
4104fb04:	00000000 	call	40000000 <__alt_mem_mem_if_ddr3_emif+0x40000000>
4104fb08:	d9400017 	ldw	r5,0(sp)
4104fb0c:	d9800117 	ldw	r6,4(sp)
4104fb10:	d9c00217 	ldw	r7,8(sp)
4104fb14:	10001d26 	beq	r2,zero,4104fb8c <__register_exitproc+0x110>
4104fb18:	81000017 	ldw	r4,0(r16)
4104fb1c:	10000115 	stw	zero,4(r2)
4104fb20:	02000044 	movi	r8,1
4104fb24:	22405217 	ldw	r9,328(r4)
4104fb28:	0007883a 	mov	r3,zero
4104fb2c:	12400015 	stw	r9,0(r2)
4104fb30:	20805215 	stw	r2,328(r4)
4104fb34:	10006215 	stw	zero,392(r2)
4104fb38:	10006315 	stw	zero,396(r2)
4104fb3c:	883fde26 	beq	r17,zero,4104fab8 <__alt_data_end+0xfffd12b8>
4104fb40:	18c9883a 	add	r4,r3,r3
4104fb44:	2109883a 	add	r4,r4,r4
4104fb48:	1109883a 	add	r4,r2,r4
4104fb4c:	21802215 	stw	r6,136(r4)
4104fb50:	01800044 	movi	r6,1
4104fb54:	12406217 	ldw	r9,392(r2)
4104fb58:	30cc983a 	sll	r6,r6,r3
4104fb5c:	4992b03a 	or	r9,r9,r6
4104fb60:	12406215 	stw	r9,392(r2)
4104fb64:	21c04215 	stw	r7,264(r4)
4104fb68:	01000084 	movi	r4,2
4104fb6c:	893fd21e 	bne	r17,r4,4104fab8 <__alt_data_end+0xfffd12b8>
4104fb70:	11006317 	ldw	r4,396(r2)
4104fb74:	218cb03a 	or	r6,r4,r6
4104fb78:	11806315 	stw	r6,396(r2)
4104fb7c:	003fce06 	br	4104fab8 <__alt_data_end+0xfffd12b8>
4104fb80:	18805304 	addi	r2,r3,332
4104fb84:	18805215 	stw	r2,328(r3)
4104fb88:	003fc606 	br	4104faa4 <__alt_data_end+0xfffd12a4>
4104fb8c:	00bfffc4 	movi	r2,-1
4104fb90:	003fd006 	br	4104fad4 <__alt_data_end+0xfffd12d4>

4104fb94 <__call_exitprocs>:
4104fb94:	defff504 	addi	sp,sp,-44
4104fb98:	df000915 	stw	fp,36(sp)
4104fb9c:	dd400615 	stw	r21,24(sp)
4104fba0:	dc800315 	stw	r18,12(sp)
4104fba4:	dfc00a15 	stw	ra,40(sp)
4104fba8:	ddc00815 	stw	r23,32(sp)
4104fbac:	dd800715 	stw	r22,28(sp)
4104fbb0:	dd000515 	stw	r20,20(sp)
4104fbb4:	dcc00415 	stw	r19,16(sp)
4104fbb8:	dc400215 	stw	r17,8(sp)
4104fbbc:	dc000115 	stw	r16,4(sp)
4104fbc0:	d9000015 	stw	r4,0(sp)
4104fbc4:	2839883a 	mov	fp,r5
4104fbc8:	04800044 	movi	r18,1
4104fbcc:	057fffc4 	movi	r21,-1
4104fbd0:	00904174 	movhi	r2,16645
4104fbd4:	10871c04 	addi	r2,r2,7280
4104fbd8:	12000017 	ldw	r8,0(r2)
4104fbdc:	45005217 	ldw	r20,328(r8)
4104fbe0:	44c05204 	addi	r19,r8,328
4104fbe4:	a0001c26 	beq	r20,zero,4104fc58 <__call_exitprocs+0xc4>
4104fbe8:	a0800117 	ldw	r2,4(r20)
4104fbec:	15ffffc4 	addi	r23,r2,-1
4104fbf0:	b8000d16 	blt	r23,zero,4104fc28 <__call_exitprocs+0x94>
4104fbf4:	14000044 	addi	r16,r2,1
4104fbf8:	8421883a 	add	r16,r16,r16
4104fbfc:	8421883a 	add	r16,r16,r16
4104fc00:	84402004 	addi	r17,r16,128
4104fc04:	a463883a 	add	r17,r20,r17
4104fc08:	a421883a 	add	r16,r20,r16
4104fc0c:	e0001e26 	beq	fp,zero,4104fc88 <__call_exitprocs+0xf4>
4104fc10:	80804017 	ldw	r2,256(r16)
4104fc14:	e0801c26 	beq	fp,r2,4104fc88 <__call_exitprocs+0xf4>
4104fc18:	bdffffc4 	addi	r23,r23,-1
4104fc1c:	843fff04 	addi	r16,r16,-4
4104fc20:	8c7fff04 	addi	r17,r17,-4
4104fc24:	bd7ff91e 	bne	r23,r21,4104fc0c <__alt_data_end+0xfffd140c>
4104fc28:	00800034 	movhi	r2,0
4104fc2c:	10800004 	addi	r2,r2,0
4104fc30:	10000926 	beq	r2,zero,4104fc58 <__call_exitprocs+0xc4>
4104fc34:	a0800117 	ldw	r2,4(r20)
4104fc38:	1000301e 	bne	r2,zero,4104fcfc <__call_exitprocs+0x168>
4104fc3c:	a0800017 	ldw	r2,0(r20)
4104fc40:	10003226 	beq	r2,zero,4104fd0c <__call_exitprocs+0x178>
4104fc44:	a009883a 	mov	r4,r20
4104fc48:	98800015 	stw	r2,0(r19)
4104fc4c:	00000000 	call	40000000 <__alt_mem_mem_if_ddr3_emif+0x40000000>
4104fc50:	9d000017 	ldw	r20,0(r19)
4104fc54:	a03fe41e 	bne	r20,zero,4104fbe8 <__alt_data_end+0xfffd13e8>
4104fc58:	dfc00a17 	ldw	ra,40(sp)
4104fc5c:	df000917 	ldw	fp,36(sp)
4104fc60:	ddc00817 	ldw	r23,32(sp)
4104fc64:	dd800717 	ldw	r22,28(sp)
4104fc68:	dd400617 	ldw	r21,24(sp)
4104fc6c:	dd000517 	ldw	r20,20(sp)
4104fc70:	dcc00417 	ldw	r19,16(sp)
4104fc74:	dc800317 	ldw	r18,12(sp)
4104fc78:	dc400217 	ldw	r17,8(sp)
4104fc7c:	dc000117 	ldw	r16,4(sp)
4104fc80:	dec00b04 	addi	sp,sp,44
4104fc84:	f800283a 	ret
4104fc88:	a0800117 	ldw	r2,4(r20)
4104fc8c:	80c00017 	ldw	r3,0(r16)
4104fc90:	10bfffc4 	addi	r2,r2,-1
4104fc94:	15c01426 	beq	r2,r23,4104fce8 <__call_exitprocs+0x154>
4104fc98:	80000015 	stw	zero,0(r16)
4104fc9c:	183fde26 	beq	r3,zero,4104fc18 <__alt_data_end+0xfffd1418>
4104fca0:	95c8983a 	sll	r4,r18,r23
4104fca4:	a0806217 	ldw	r2,392(r20)
4104fca8:	a5800117 	ldw	r22,4(r20)
4104fcac:	2084703a 	and	r2,r4,r2
4104fcb0:	10000b26 	beq	r2,zero,4104fce0 <__call_exitprocs+0x14c>
4104fcb4:	a0806317 	ldw	r2,396(r20)
4104fcb8:	2088703a 	and	r4,r4,r2
4104fcbc:	20000c1e 	bne	r4,zero,4104fcf0 <__call_exitprocs+0x15c>
4104fcc0:	89400017 	ldw	r5,0(r17)
4104fcc4:	d9000017 	ldw	r4,0(sp)
4104fcc8:	183ee83a 	callr	r3
4104fccc:	a0800117 	ldw	r2,4(r20)
4104fcd0:	15bfbf1e 	bne	r2,r22,4104fbd0 <__alt_data_end+0xfffd13d0>
4104fcd4:	98800017 	ldw	r2,0(r19)
4104fcd8:	153fcf26 	beq	r2,r20,4104fc18 <__alt_data_end+0xfffd1418>
4104fcdc:	003fbc06 	br	4104fbd0 <__alt_data_end+0xfffd13d0>
4104fce0:	183ee83a 	callr	r3
4104fce4:	003ff906 	br	4104fccc <__alt_data_end+0xfffd14cc>
4104fce8:	a5c00115 	stw	r23,4(r20)
4104fcec:	003feb06 	br	4104fc9c <__alt_data_end+0xfffd149c>
4104fcf0:	89000017 	ldw	r4,0(r17)
4104fcf4:	183ee83a 	callr	r3
4104fcf8:	003ff406 	br	4104fccc <__alt_data_end+0xfffd14cc>
4104fcfc:	a0800017 	ldw	r2,0(r20)
4104fd00:	a027883a 	mov	r19,r20
4104fd04:	1029883a 	mov	r20,r2
4104fd08:	003fb606 	br	4104fbe4 <__alt_data_end+0xfffd13e4>
4104fd0c:	0005883a 	mov	r2,zero
4104fd10:	003ffb06 	br	4104fd00 <__alt_data_end+0xfffd1500>

4104fd14 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
4104fd14:	defffd04 	addi	sp,sp,-12
4104fd18:	df000215 	stw	fp,8(sp)
4104fd1c:	df000204 	addi	fp,sp,8
4104fd20:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
4104fd24:	0001883a 	nop
4104fd28:	e0bfff17 	ldw	r2,-4(fp)
4104fd2c:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
4104fd30:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
4104fd34:	10000226 	beq	r2,zero,4104fd40 <_exit+0x2c>
    ALT_SIM_FAIL();
4104fd38:	002af070 	cmpltui	zero,zero,43969
4104fd3c:	00000106 	br	4104fd44 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
4104fd40:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
4104fd44:	003fff06 	br	4104fd44 <__alt_data_end+0xfffd1544>

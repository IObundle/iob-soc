
NIOS_DEMO.elf:     file format elf32-littlenios2
NIOS_DEMO.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000401c0

Program Header:
    LOAD off    0x00001000 vaddr 0x00040000 paddr 0x00040000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00040020 paddr 0x00040020 align 2**12
         filesz 0x0001b82c memsz 0x0001b82c flags r-x
    LOAD off    0x0001c84c vaddr 0x0005b84c paddr 0x0005d580 align 2**12
         filesz 0x00001d34 memsz 0x00001d34 flags rw-
    LOAD off    0x0001f2b4 vaddr 0x0005f2b4 paddr 0x0005f2b4 align 2**12
         filesz 0x00000000 memsz 0x0000015c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00040000  00040000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   000001a0  00040020  00040020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0001aa18  000401c0  000401c0  000011c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000c74  0005abd8  0005abd8  0001bbd8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001d34  0005b84c  0005d580  0001c84c  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000015c  0005f2b4  0005f2b4  0001f2b4  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2 00000000  0005f410  0005f410  0001e580  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  0001e580  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 000013b8  00000000  00000000  0001e5a8  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   000327b8  00000000  00000000  0001f960  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000c93e  00000000  00000000  00052118  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00010d73  00000000  00000000  0005ea56  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002dcc  00000000  00000000  0006f7cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00004575  00000000  00000000  00072598  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0002555a  00000000  00000000  00076b0d  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000060  00000000  00000000  0009c068  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00002158  00000000  00000000  0009c0c8  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  000a1ea6  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000a  00000000  00000000  000a1ea9  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  000a1eb3  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  000a1eb4  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   00000009  00000000  00000000  000a1eb5  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    00000009  00000000  00000000  000a1ebe  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   00000009  00000000  00000000  000a1ec7  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 00000007  00000000  00000000  000a1ed0  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 0000004d  00000000  00000000  000a1ed7  2**0
                  CONTENTS, READONLY
 26 .jdi          00003d78  00000000  00000000  000a1f24  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     00080e89  00000000  00000000  000a5c9c  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00040000 l    d  .entry	00000000 .entry
00040020 l    d  .exceptions	00000000 .exceptions
000401c0 l    d  .text	00000000 .text
0005abd8 l    d  .rodata	00000000 .rodata
0005b84c l    d  .rwdata	00000000 .rwdata
0005f2b4 l    d  .bss	00000000 .bss
0005f410 l    d  .onchip_memory2	00000000 .onchip_memory2
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../NIOS_DEMO_bsp//obj/HAL/src/crt0.o
00040208 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_exception_entry.o
00040094 l       .exceptions	00000000 alt_exception_unknown
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 I2C.c
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 si57x_config.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 floatunsisf.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 scanf.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0005b24e l     O .rodata	00000010 zeroes.4404
00047bd0 l     F .text	000000bc __sbprintf
0005b25e l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 vfscanf.c
0005b276 l     O .rodata	00000022 basefix.4359
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 ctype_.c
0005b399 l     O .rodata	00000180 _ctype_b
00000000 l    df *ABS*	00000000 dtoa.c
0004966c l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0004b19c l     F .text	00000008 __fp_unlock
0004b1b0 l     F .text	0000019c __sinit.part.1
0004b34c l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 fread.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0005ba8c l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 iswspace.c
00000000 l    df *ABS*	00000000 locale.c
0005bed0 l     O .rwdata	00000020 lc_ctype_charset
0005beb0 l     O .rwdata	00000020 lc_message_charset
0005bef0 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 mbrtowc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0005b53c l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 refill.c
0004e7d4 l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strtod.c
0004ee40 l     F .text	00000064 sulp
0005b684 l     O .rodata	00000014 fpi.2737
0005b698 l     O .rodata	00000028 tinytens
0005b670 l     O .rodata	00000014 fpinan.2773
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 strtoll_r.c
00000000 l    df *ABS*	00000000 strtoul.c
00000000 l    df *ABS*	00000000 strtoull_r.c
00000000 l    df *ABS*	00000000 vfprintf.c
0005b6c0 l     O .rodata	00000010 zeroes.4389
0005b6d0 l     O .rodata	00000010 blanks.4388
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 vfprintf.c
00053480 l     F .text	000000fc __sprint_r.part.0
0005b6f0 l     O .rodata	00000010 blanks.4348
0005b6e0 l     O .rodata	00000010 zeroes.4349
00054a0c l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
00054fa8 l     F .text	00000100 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
0005b810 l     O .rodata	00000010 blanks.4332
0005b800 l     O .rodata	00000010 zeroes.4333
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 eqsf2.c
00000000 l    df *ABS*	00000000 gesf2.c
00000000 l    df *ABS*	00000000 lesf2.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 alt_close.c
00058340 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0005844c l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
00058478 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
00058564 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
00058644 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
00058730 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
00058904 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0005d570 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
00058b80 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
00058cb4 l     F .text	00000034 alt_dev_reg
0005c4d8 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
00058fa4 l     F .text	0000020c altera_avalon_jtag_uart_irq
000591b0 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
000597e8 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00059ba8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0005a01c l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0005a15c l     F .text	0000003c alt_get_errno
0005a198 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
0004e0f8 g     F .text	00000074 _mprec_log10
000402e4 g     F .text	00000100 I2C_Read
0004e1e4 g     F .text	0000008c __any_on
00055b34 g     F .text	00000054 _isatty_r
0005b548 g     O .rodata	00000028 __mprec_tinytens
00058840 g     F .text	0000007c alt_main
000457e4 g     F .text	000000c0 _puts_r
0005f310 g     O .bss	00000100 alt_irq
00055b88 g     F .text	00000060 _lseek_r
0005d580 g       *ABS*	00000000 __flash_rwdata_start
00058110 g     F .text	00000088 .hidden __eqdf2
0005f410 g       *ABS*	00000000 __alt_heap_start
000457a8 g     F .text	0000003c printf
0005727c g     F .text	0000009c _wcrtomb_r
0004ed00 g     F .text	0000005c __sseek
0004b4ec g     F .text	00000010 __sinit
00057124 g     F .text	00000140 __swbuf_r
0004c244 g     F .text	0000007c _setlocale_r
0004b354 g     F .text	00000068 __sfmoreglue
00053468 g     F .text	00000018 ungetc
000588e0 g     F .text	00000024 __malloc_unlock
0004eea4 g     F .text	000015f8 _strtod_r
0004cff0 g     F .text	0000015c memmove
0004b4d4 g     F .text	00000018 _cleanup
0004d274 g     F .text	000000a8 _Balloc
00043eac g     F .text	000000dc .hidden __gtdf2
0005a554 g     F .text	00000024 altera_nios2_gen2_irq_init
00040abc g     F .text	00000130 i2c_write
00040000 g     F .entry	0000001c __reset
00040020 g       *ABS*	00000000 __flash_exceptions_start
00054f4c g     F .text	0000005c _fstat_r
0005f2cc g     O .bss	00000004 errno
000494b0 g     F .text	0000001c __svfscanf
0004ec7c g     F .text	00000008 __seofread
00055ee8 g     F .text	0000123c ___svfiprintf_internal_r
0005f2d4 g     O .bss	00000004 alt_argv
00065538 g       *ABS*	00000000 _gp
00058b50 g     F .text	00000030 usleep
00040f68 g     F .text	00000050 GUI_QueryUser
0005c358 g     O .rwdata	00000180 alt_fd_list
0005a578 g     F .text	00000090 alt_find_dev
00045630 g     F .text	00000148 memcpy
000558d8 g     F .text	0000025c __hexnan
0004053c g     F .text	000000ac I2C_Receive
0004b1a4 g     F .text	0000000c _cleanup_r
00045110 g     F .text	000000dc .hidden __floatsidf
0005a0e0 g     F .text	0000007c alt_io_redirect
00043f88 g     F .text	000000f4 .hidden __ltdf2
0005abd8 g       *ABS*	00000000 __DTOR_END__
000458a4 g     F .text	00000014 puts
0004cd94 g     F .text	000000d8 mbrtowc
0004e9c4 g     F .text	00000074 __fpclassifyd
000494cc g     F .text	0000004c _vfscanf_r
0004e054 g     F .text	000000a4 __ratio
000549f0 g     F .text	0000001c __vfiprintf_internal
000593a8 g     F .text	0000021c altera_avalon_jtag_uart_read
00045778 g     F .text	00000030 _printf_r
00045574 g     F .text	00000064 .hidden __udivsi3
000585a0 g     F .text	000000a4 isatty
0004c214 g     F .text	00000030 iswspace
0005b598 g     O .rodata	000000c8 __mprec_tens
0004c2c0 g     F .text	0000000c __locale_charset
00058048 g     F .text	000000c8 .hidden __lesf2
00045408 g     F .text	00000074 .hidden __fixunsdfsi
0005a7b4 g     F .text	00000090 alt_icache_flush
000403e4 g     F .text	00000158 I2C_MultipleRead
0005f2c8 g     O .bss	00000004 __malloc_top_pad
0004105c g     F .text	00000104 TEST_Temperature
00050d34 g     F .text	0000001c strtoul
0005d544 g     O .rwdata	00000004 __mb_cur_max
0004c2f0 g     F .text	0000000c _localeconv_r
00050d50 g     F .text	000002d8 _strtoull_r
0004d680 g     F .text	0000003c __i2b
0004bbd0 g     F .text	000004bc __sfvwrite_r
0004ea38 g     F .text	00000054 _sbrk_r
00055be8 g     F .text	00000060 _read_r
0005d568 g     O .rwdata	00000004 alt_max_fd
00054c40 g     F .text	000000f0 _fclose_r
0004b16c g     F .text	00000030 fflush
0005f2c4 g     O .bss	00000004 __malloc_max_sbrked_mem
00040d44 g     F .text	00000190 CLOCK_Test
000406f8 g     F .text	00000138 I2CL_Read
00045294 g     F .text	00000110 .hidden __extendsfdf2
00042d18 g     F .text	000008ac .hidden __adddf3
00057f14 g     F .text	00000078 .hidden __nesf2
0004ddfc g     F .text	0000010c __b2d
000579dc g     F .text	00000538 .hidden __umoddi3
0005876c g     F .text	000000d4 lseek
0005d53c g     O .rwdata	00000004 _global_impure_ptr
0004e270 g     F .text	00000564 _realloc_r
0005f410 g       *ABS*	00000000 __bss_end
00059f2c g     F .text	000000f0 alt_iic_isr_register
0005a44c g     F .text	00000108 alt_tick
0005b700 g     O .rodata	00000100 __hexdig
0005b9d8 g     O .rwdata	000000b4 gszGi57x_ConfigTable
00057464 g     F .text	00000578 .hidden __udivdi3
00054ea8 g     F .text	00000024 _fputwc_r
0005b570 g     O .rodata	00000028 __mprec_bigtens
0004d464 g     F .text	00000104 __s2b
000451ec g     F .text	000000a8 .hidden __floatunsidf
0004db3c g     F .text	00000060 __mcmp
0004b50c g     F .text	00000018 __fp_lock_all
00059ee0 g     F .text	0000004c alt_ic_irq_enabled
0004020c g     F .text	000000d8 I2C_Write
0005a3b0 g     F .text	0000009c alt_alarm_stop
000507ec g     F .text	0000001c strtol
0005f2dc g     O .bss	00000004 alt_irq_active
000400ec g     F .exceptions	000000d4 alt_irq_handler
0005c330 g     O .rwdata	00000028 alt_dev_null
000409b8 g     F .text	0000008c i2c_start
00059b60 g     F .text	00000048 alt_dcache_flush_all
0004d568 g     F .text	00000068 __hi0bits
00045090 g     F .text	00000080 .hidden __fixdfsi
0005049c g     F .text	00000018 strtod
0005d580 g       *ABS*	00000000 __ram_rwdata_end
0005d560 g     O .rwdata	00000008 alt_dev_list
00058bbc g     F .text	000000f8 write
00057f8c g     F .text	000000bc .hidden __gtsf2
0005b84c g       *ABS*	00000000 __ram_rodata_end
000584b4 g     F .text	000000b0 fstat
00043f88 g     F .text	000000f4 .hidden __ledf2
0004d8b4 g     F .text	00000140 __pow5mult
00053594 g     F .text	0000145c ___vfiprintf_internal_r
0005f2bc g     O .bss	00000004 __nlocale_changed
000455d8 g     F .text	00000058 .hidden __umodsi3
000458f4 g     F .text	00000030 _scanf_r
0005f410 g       *ABS*	00000000 end
00058ee4 g     F .text	000000c0 altera_avalon_jtag_uart_init
0005abd8 g       *ABS*	00000000 __CTOR_LIST__
0007e800 g       *ABS*	00000000 __alt_stack_pointer
00059860 g     F .text	0000007c alt_avalon_timer_sc_init
000453a4 g     F .text	00000064 .hidden __clzsi2
000595c4 g     F .text	00000224 altera_avalon_jtag_uart_write
0004b4fc g     F .text	00000004 __sfp_lock_acquire
0004cf0c g     F .text	000000e4 memchr
000459bc g     F .text	000021f8 ___vfprintf_internal_r
0004eb64 g     F .text	00000058 _sprintf_r
0004b8c0 g     F .text	00000310 _free_r
0004c2cc g     F .text	00000010 __locale_mb_cur_max
0005b84c g     O .rwdata	0000018c szFuncList
0005aa24 g     F .text	00000180 __call_exitprocs
0005f2b8 g     O .bss	00000004 __mlocale_changed
0005d548 g     O .rwdata	00000004 __malloc_sbrk_base
000401c0 g     F .text	0000004c _start
0005f2e0 g     O .bss	00000004 _alt_tick_rate
00050808 g     F .text	000002e0 _strtoll_r
000427bc g     F .text	00000070 .hidden __floatundidf
0004d9f4 g     F .text	00000148 __lshift
0005f2e4 g     O .bss	00000004 _alt_nticks
00058940 g     F .text	000000fc read
00058d20 g     F .text	00000060 alt_sys_init
00055d18 g     F .text	000001d0 __ssprint_r
0005a90c g     F .text	00000118 __register_exitproc
00055c48 g     F .text	000000d0 strncmp
0004d6bc g     F .text	000001f8 __multiply
00059250 g     F .text	00000068 altera_avalon_jtag_uart_close
0005b84c g       *ABS*	00000000 __ram_rwdata_start
0005abd8 g       *ABS*	00000000 __ram_rodata_start
0005f2e8 g     O .bss	00000028 __malloc_current_mallinfo
00057f14 g     F .text	00000078 .hidden __eqsf2
0004df08 g     F .text	0000014c __d2b
00041a78 g     F .text	000009d0 SI57x_Config
00058d80 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00050ae8 g     F .text	0000024c _strtoul_r
0005a710 g     F .text	000000a4 alt_get_fd
00040ed4 g     F .text	00000094 GUI_ShowMenu
00059a08 g     F .text	00000158 alt_busy_sleep
00054b28 g     F .text	00000054 _close_r
0005a890 g     F .text	0000007c memcmp
00058e40 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0005f410 g       *ABS*	00000000 __alt_stack_base
00058e90 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00049518 g     F .text	00000154 __swsetup_r
000435c4 g     F .text	000008e8 .hidden __divdf3
0004b3bc g     F .text	00000118 __sfp
0004e16c g     F .text	00000078 __copybits
0005bf28 g     O .rwdata	00000408 __malloc_av_
0004b508 g     F .text	00000004 __sinit_lock_release
00040a44 g     F .text	00000078 i2c_stop
0004407c g     F .text	00000718 .hidden __muldf3
0004ec28 g     F .text	00000054 __sread
0004b768 g     F .text	00000034 fread
0005a608 g     F .text	00000108 alt_find_file
00059be4 g     F .text	000000a4 alt_dev_llist_insert
000588bc g     F .text	00000024 __malloc_lock
00058aa0 g     F .text	000000b0 sbrk
00051028 g     F .text	000021d8 ___svfprintf_internal_r
0004b110 g     F .text	0000005c _fflush_r
00054b7c g     F .text	000000c4 _calloc_r
0005f2b4 g       *ABS*	00000000 __bss_start
0004d14c g     F .text	00000128 memset
00040fb8 g     F .text	000000a4 main
0005f2d8 g     O .bss	00000004 alt_envp
0005f2c0 g     O .bss	00000004 __malloc_max_total_mem
00058de0 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00040bec g     F .text	00000158 i2c_read
00057264 g     F .text	00000018 __swbuf
00058048 g     F .text	000000c8 .hidden __ltsf2
0004b53c g     F .text	0000022c _fread_r
0004ed5c g     F .text	00000008 __sclose
0007e800 g       *ABS*	00000000 __alt_heap_limit
00054d30 g     F .text	00000014 fclose
000505b4 g     F .text	00000238 _strtol_r
00058198 g     F .text	000001a8 .hidden __truncdfsf2
0004986c g     F .text	00001688 _dtoa_r
0004c4dc g     F .text	0000080c _malloc_r
000573d8 g     F .text	00000030 __ascii_wctomb
0005d56c g     O .rwdata	00000004 alt_errno
00053200 g     F .text	000000d4 __submore
0004c08c g     F .text	000000c4 _fwalk
0004ceb0 g     F .text	0000005c _mbtowc_r
0004547c g     F .text	00000084 .hidden __divsi3
0004b79c g     F .text	00000124 _malloc_trim_r
0005abd8 g       *ABS*	00000000 __CTOR_END__
0004282c g     F .text	000003fc .hidden __mulsf3
00042448 g     F .text	000002e4 SI57x_Config_Dump
0004ed64 g     F .text	000000dc strcmp
0005abd8 g       *ABS*	00000000 __flash_rodata_start
0005abd8 g       *ABS*	00000000 __DTOR_LIST__
00058110 g     F .text	00000088 .hidden __nedf2
0004272c g     F .text	00000090 .hidden __fixunsdfdi
00058ce8 g     F .text	00000038 alt_irq_init
00058a3c g     F .text	00000064 alt_release_fd
0004ebbc g     F .text	0000006c sprintf
0005b108 g     O .rodata	00000100 .hidden __clz_tab
0005f2b4 g     O .bss	00000004 _PathLocale
000504b4 g     F .text	00000100 strtof
0005a844 g     F .text	00000014 atexit
00057f8c g     F .text	000000bc .hidden __gesf2
00054ac8 g     F .text	00000060 _write_r
0004c2fc g     F .text	00000018 setlocale
000458b8 g     F .text	0000003c scanf
0004eb5c g     F .text	00000008 nanf
0005d540 g     O .rwdata	00000004 _impure_ptr
0005f2d0 g     O .bss	00000004 alt_argc
0004aef4 g     F .text	0000021c __sflush_r
0004cce8 g     F .text	000000ac _mbrtowc_r
00059ce8 g     F .text	00000060 _do_dtors
0004c2e8 g     F .text	00000008 __locale_cjk_lang
00040830 g     F .text	00000188 I2CL_MultipleRead
0004e7f0 g     F .text	000001d4 __srefill_r
00040020 g       .exceptions	00000000 alt_irq_entry
0004ce6c g     F .text	00000044 __ascii_mbtowc
0004dd98 g     F .text	00000064 __ulp
0004b524 g     F .text	00000018 __fp_unlock_all
0005d558 g     O .rwdata	00000008 alt_fs_list
00040020 g       *ABS*	00000000 __ram_exceptions_start
0004c314 g     F .text	0000000c localeconv
00040000 g       *ABS*	00000000 __alt_mem_onchip_memory2
00059d7c g     F .text	00000050 alt_ic_isr_register
0005d580 g       *ABS*	00000000 _edata
0005f410 g       *ABS*	00000000 _end
00041160 g     F .text	00000340 TEST_CDCM
00054d44 g     F .text	00000164 __fputwc
000401c0 g       *ABS*	00000000 __ram_exceptions_end
00049448 g     F .text	00000068 vfscanf
000592b8 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
00059e54 g     F .text	0000008c alt_ic_irq_disable
0004ec84 g     F .text	0000007c __swrite
0005d54c g     O .rwdata	00000004 __malloc_trim_threshold
0004c2dc g     F .text	0000000c __locale_msgcharset
0005a858 g     F .text	00000038 exit
0004c150 g     F .text	000000c4 _fwalk_reent
00042c28 g     F .text	000000f0 .hidden __floatunsisf
0004db9c g     F .text	000001fc __mdiff
00045500 g     F .text	00000074 .hidden __modsi3
0005d538 g     O .rwdata	00000004 __ctype_ptr__
0007e800 g       *ABS*	00000000 __alt_data_end
00040020 g     F .exceptions	00000000 alt_exception
0004b500 g     F .text	00000004 __sfp_lock_release
0004ea8c g     F .text	000000d0 __sccl
0005b298 g     O .rodata	00000101 _ctype_
0005d550 g     O .rwdata	00000004 __mbtowc
0005aba4 g     F .text	00000034 _exit
000598dc g     F .text	0000012c alt_alarm_start
0004c320 g     F .text	000001bc __smakebuf_r
00045924 g     F .text	00000098 strlen
0005a25c g     F .text	00000154 open
000414a0 g     F .text	000004d4 TEST_Si570
00043eac g     F .text	000000dc .hidden __gedf2
000550a8 g     F .text	00000830 __gethex
0005d554 g     O .rwdata	00000004 __wctomb
0005357c g     F .text	00000018 __sprint_r
00059d48 g     F .text	00000034 alt_icache_flush_all
0005d574 g     O .rwdata	00000004 alt_priority_mask
00059dcc g     F .text	00000088 alt_ic_irq_enable
00047bb4 g     F .text	0000001c __vfprintf_internal
00057408 g     F .text	0000005c _wctomb_r
00044794 g     F .text	000008fc .hidden __subdf3
00041974 g     F .text	00000104 si57x_find_DIV_NI
0004d5d0 g     F .text	000000b0 __lo0bits
00047c8c g     F .text	000017bc __svfscanf_r
0005d578 g     O .rwdata	00000008 alt_alarm_list
000532d4 g     F .text	00000194 _ungetc_r
00059c88 g     F .text	00000060 _do_ctors
000405e8 g     F .text	00000110 I2CL_Write
00057318 g     F .text	000000c0 wcrtomb
0005837c g     F .text	000000d0 close
000586ac g     F .text	00000084 alt_load
00054ecc g     F .text	00000080 fputwc
0004b504 g     F .text	00000004 __sinit_lock_acquire
0004d344 g     F .text	00000120 __multadd
0004d31c g     F .text	00000028 _Bfree



Disassembly of section .entry:

00040000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   40000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   40004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   40008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   4000c:	00bffd16 	blt	zero,r2,40004 <__alt_data_end+0xfffc1804>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   40010:	00400134 	movhi	at,4
    ori r1, r1, %lo(_start)
   40014:	08407014 	ori	at,at,448
    jmp r1
   40018:	0800683a 	jmp	at
   4001c:	00000000 	call	0 <__alt_mem_onchip_memory2-0x40000>

Disassembly of section .exceptions:

00040020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   40020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   40024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   40028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   4002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   40030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   40034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   40038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   4003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   40040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   40044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   40048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   4004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   40050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   40054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   40058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   4005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   40060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   40064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   40068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   4006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   40070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   40074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   40078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   4007c:	10000326 	beq	r2,zero,4008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   40080:	20000226 	beq	r4,zero,4008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   40084:	00400ec0 	call	400ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   40088:	00000306 	br	40098 <alt_exception_unknown+0x4>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   4008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   40090:	e8bfff17 	ldw	r2,-4(ea)

00040094 <alt_exception_unknown>:
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
   40094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   40098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   4009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   400a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   400a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   400a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   400ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   400b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   400b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   400b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   400bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   400c0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   400c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   400c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   400cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   400d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   400d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   400d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   400dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   400e0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   400e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   400e8:	ef80083a 	eret

000400ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   400ec:	defff904 	addi	sp,sp,-28
   400f0:	dfc00615 	stw	ra,24(sp)
   400f4:	df000515 	stw	fp,20(sp)
   400f8:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   400fc:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   40100:	0005313a 	rdctl	r2,ipending
   40104:	e0bffe15 	stw	r2,-8(fp)

  return active;
   40108:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   4010c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   40110:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   40114:	00800044 	movi	r2,1
   40118:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   4011c:	e0fffb17 	ldw	r3,-20(fp)
   40120:	e0bffc17 	ldw	r2,-16(fp)
   40124:	1884703a 	and	r2,r3,r2
   40128:	10001426 	beq	r2,zero,4017c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   4012c:	008001b4 	movhi	r2,6
   40130:	10bcc404 	addi	r2,r2,-3312
   40134:	e0fffd17 	ldw	r3,-12(fp)
   40138:	180690fa 	slli	r3,r3,3
   4013c:	10c5883a 	add	r2,r2,r3
   40140:	10c00017 	ldw	r3,0(r2)
   40144:	008001b4 	movhi	r2,6
   40148:	10bcc404 	addi	r2,r2,-3312
   4014c:	e13ffd17 	ldw	r4,-12(fp)
   40150:	200890fa 	slli	r4,r4,3
   40154:	1105883a 	add	r2,r2,r4
   40158:	10800104 	addi	r2,r2,4
   4015c:	10800017 	ldw	r2,0(r2)
   40160:	1009883a 	mov	r4,r2
   40164:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   40168:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   4016c:	0005313a 	rdctl	r2,ipending
   40170:	e0bfff15 	stw	r2,-4(fp)

  return active;
   40174:	e0bfff17 	ldw	r2,-4(fp)
   40178:	00000706 	br	40198 <alt_irq_handler+0xac>
      }
      mask <<= 1;
   4017c:	e0bffc17 	ldw	r2,-16(fp)
   40180:	1085883a 	add	r2,r2,r2
   40184:	e0bffc15 	stw	r2,-16(fp)
      i++;
   40188:	e0bffd17 	ldw	r2,-12(fp)
   4018c:	10800044 	addi	r2,r2,1
   40190:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   40194:	003fe106 	br	4011c <__alt_data_end+0xfffc191c>

    active = alt_irq_pending ();
   40198:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   4019c:	e0bffb17 	ldw	r2,-20(fp)
   401a0:	103fdb1e 	bne	r2,zero,40110 <__alt_data_end+0xfffc1910>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   401a4:	0001883a 	nop
}
   401a8:	0001883a 	nop
   401ac:	e037883a 	mov	sp,fp
   401b0:	dfc00117 	ldw	ra,4(sp)
   401b4:	df000017 	ldw	fp,0(sp)
   401b8:	dec00204 	addi	sp,sp,8
   401bc:	f800283a 	ret

Disassembly of section .text:

000401c0 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
   401c0:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
   401c4:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
   401c8:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
   401cc:	00bffd16 	blt	zero,r2,401c4 <__alt_data_end+0xfffc19c4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   401d0:	06c001f4 	movhi	sp,7
    ori sp, sp, %lo(__alt_stack_pointer)
   401d4:	defa0014 	ori	sp,sp,59392
    movhi gp, %hi(_gp)
   401d8:	068001b4 	movhi	gp,6
    ori gp, gp, %lo(_gp)
   401dc:	d6954e14 	ori	gp,gp,21816
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   401e0:	00800174 	movhi	r2,5
    ori r2, r2, %lo(__bss_start)
   401e4:	10bcad14 	ori	r2,r2,62132

    movhi r3, %hi(__bss_end)
   401e8:	00c00174 	movhi	r3,5
    ori r3, r3, %lo(__bss_end)
   401ec:	18fd0414 	ori	r3,r3,62480

    beq r2, r3, 1f
   401f0:	10c00326 	beq	r2,r3,40200 <_start+0x40>

0:
    stw zero, (r2)
   401f4:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   401f8:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   401fc:	10fffd36 	bltu	r2,r3,401f4 <__alt_data_end+0xfffc19f4>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   40200:	00586ac0 	call	586ac <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   40204:	00588400 	call	58840 <alt_main>

00040208 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   40208:	003fff06 	br	40208 <__alt_data_end+0xfffc1a08>

0004020c <I2C_Write>:
bool i2c_write(alt_u32 clk_base, alt_u32 data_base, alt_u8 Data);
void i2c_read(alt_u32 clk_base, alt_u32 data_base, alt_u8 *pData, bool bAck);



bool I2C_Write(alt_u32 clk_base, alt_u32 data_base, alt_8 DeviceAddr, alt_u8 ControlAddr, alt_u8 ControlData){
   4020c:	defff804 	addi	sp,sp,-32
   40210:	dfc00715 	stw	ra,28(sp)
   40214:	df000615 	stw	fp,24(sp)
   40218:	df000604 	addi	fp,sp,24
   4021c:	e13ffb15 	stw	r4,-20(fp)
   40220:	e17ffc15 	stw	r5,-16(fp)
   40224:	3009883a 	mov	r4,r6
   40228:	3807883a 	mov	r3,r7
   4022c:	e0800217 	ldw	r2,8(fp)
   40230:	e13ffd05 	stb	r4,-12(fp)
   40234:	e0fffe05 	stb	r3,-8(fp)
   40238:	e0bfff05 	stb	r2,-4(fp)
    bool bSuccess = TRUE;
   4023c:	00800044 	movi	r2,1
   40240:	e0bffa15 	stw	r2,-24(fp)
    //alt_u8 DeviceAddr;
    
    // device id
    //DeviceAddr = HMB_E2_I2C_ID;

    i2c_start(clk_base, data_base);
   40244:	e17ffc17 	ldw	r5,-16(fp)
   40248:	e13ffb17 	ldw	r4,-20(fp)
   4024c:	00409b80 	call	409b8 <i2c_start>
    if (!i2c_write(clk_base, data_base, DeviceAddr)){  // send ID
   40250:	e0bffd03 	ldbu	r2,-12(fp)
   40254:	10803fcc 	andi	r2,r2,255
   40258:	100d883a 	mov	r6,r2
   4025c:	e17ffc17 	ldw	r5,-16(fp)
   40260:	e13ffb17 	ldw	r4,-20(fp)
   40264:	0040abc0 	call	40abc <i2c_write>
   40268:	1000011e 	bne	r2,zero,40270 <I2C_Write+0x64>
        bSuccess = FALSE;
   4026c:	e03ffa15 	stw	zero,-24(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: Address NACK!\n"));
    }
    if (bSuccess && !i2c_write(clk_base, data_base, ControlAddr)){ // send sub-address
   40270:	e0bffa17 	ldw	r2,-24(fp)
   40274:	10000726 	beq	r2,zero,40294 <I2C_Write+0x88>
   40278:	e0bffe03 	ldbu	r2,-8(fp)
   4027c:	100d883a 	mov	r6,r2
   40280:	e17ffc17 	ldw	r5,-16(fp)
   40284:	e13ffb17 	ldw	r4,-20(fp)
   40288:	0040abc0 	call	40abc <i2c_write>
   4028c:	1000011e 	bne	r2,zero,40294 <I2C_Write+0x88>
        bSuccess = FALSE;
   40290:	e03ffa15 	stw	zero,-24(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: SubAddress NACK!\n"));
    }            
    if (bSuccess && !i2c_write(clk_base, data_base, ControlData)){  
   40294:	e0bffa17 	ldw	r2,-24(fp)
   40298:	10000726 	beq	r2,zero,402b8 <I2C_Write+0xac>
   4029c:	e0bfff03 	ldbu	r2,-4(fp)
   402a0:	100d883a 	mov	r6,r2
   402a4:	e17ffc17 	ldw	r5,-16(fp)
   402a8:	e13ffb17 	ldw	r4,-20(fp)
   402ac:	0040abc0 	call	40abc <i2c_write>
   402b0:	1000011e 	bne	r2,zero,402b8 <I2C_Write+0xac>
        bSuccess = FALSE;
   402b4:	e03ffa15 	stw	zero,-24(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: write NACK!\n"));
    }
    i2c_stop(clk_base, data_base);
   402b8:	e17ffc17 	ldw	r5,-16(fp)
   402bc:	e13ffb17 	ldw	r4,-20(fp)
   402c0:	0040a440 	call	40a44 <i2c_stop>
    
    usleep(7*1000); // delay to wait EE2 ready (at least 5 ms delay is required)
   402c4:	0106d604 	movi	r4,7000
   402c8:	0058b500 	call	58b50 <usleep>
    
    return bSuccess;
   402cc:	e0bffa17 	ldw	r2,-24(fp)

    
}
   402d0:	e037883a 	mov	sp,fp
   402d4:	dfc00117 	ldw	ra,4(sp)
   402d8:	df000017 	ldw	fp,0(sp)
   402dc:	dec00204 	addi	sp,sp,8
   402e0:	f800283a 	ret

000402e4 <I2C_Read>:

bool I2C_Read(alt_u32 clk_base, alt_u32 data_base, alt_8 DeviceAddr, alt_u8 ControlAddr, alt_u8 *pControlData){
   402e4:	defff904 	addi	sp,sp,-28
   402e8:	dfc00615 	stw	ra,24(sp)
   402ec:	df000515 	stw	fp,20(sp)
   402f0:	df000504 	addi	fp,sp,20
   402f4:	e13ffc15 	stw	r4,-16(fp)
   402f8:	e17ffd15 	stw	r5,-12(fp)
   402fc:	3007883a 	mov	r3,r6
   40300:	3805883a 	mov	r2,r7
   40304:	e0fffe05 	stb	r3,-8(fp)
   40308:	e0bfff05 	stb	r2,-4(fp)
    bool bSuccess = TRUE;
   4030c:	00800044 	movi	r2,1
   40310:	e0bffb15 	stw	r2,-20(fp)
    //alt_u8 DeviceAddr;
   
    // device id
    //DeviceAddr = HMB_E2_I2C_ID;

    i2c_start(clk_base, data_base);
   40314:	e17ffd17 	ldw	r5,-12(fp)
   40318:	e13ffc17 	ldw	r4,-16(fp)
   4031c:	00409b80 	call	409b8 <i2c_start>
    if (!i2c_write(clk_base, data_base, DeviceAddr)){  // send ID
   40320:	e0bffe03 	ldbu	r2,-8(fp)
   40324:	10803fcc 	andi	r2,r2,255
   40328:	100d883a 	mov	r6,r2
   4032c:	e17ffd17 	ldw	r5,-12(fp)
   40330:	e13ffc17 	ldw	r4,-16(fp)
   40334:	0040abc0 	call	40abc <i2c_write>
   40338:	1000011e 	bne	r2,zero,40340 <I2C_Read+0x5c>
        bSuccess = FALSE;
   4033c:	e03ffb15 	stw	zero,-20(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: Address NACK!\n"));
    }
    if (bSuccess && !i2c_write(clk_base, data_base, ControlAddr)){ // send sub-address
   40340:	e0bffb17 	ldw	r2,-20(fp)
   40344:	10000726 	beq	r2,zero,40364 <I2C_Read+0x80>
   40348:	e0bfff03 	ldbu	r2,-4(fp)
   4034c:	100d883a 	mov	r6,r2
   40350:	e17ffd17 	ldw	r5,-12(fp)
   40354:	e13ffc17 	ldw	r4,-16(fp)
   40358:	0040abc0 	call	40abc <i2c_write>
   4035c:	1000011e 	bne	r2,zero,40364 <I2C_Read+0x80>
        bSuccess = FALSE;
   40360:	e03ffb15 	stw	zero,-20(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: SubAddress NACK!\n"));
    }            
    i2c_start(clk_base, data_base);  // restart
   40364:	e17ffd17 	ldw	r5,-12(fp)
   40368:	e13ffc17 	ldw	r4,-16(fp)
   4036c:	00409b80 	call	409b8 <i2c_start>
    DeviceAddr |= 1; // Read
   40370:	e0bffe03 	ldbu	r2,-8(fp)
   40374:	10800054 	ori	r2,r2,1
   40378:	e0bffe05 	stb	r2,-8(fp)
    if (bSuccess && !i2c_write(clk_base, data_base, DeviceAddr)){  // send id
   4037c:	e0bffb17 	ldw	r2,-20(fp)
   40380:	10000826 	beq	r2,zero,403a4 <I2C_Read+0xc0>
   40384:	e0bffe03 	ldbu	r2,-8(fp)
   40388:	10803fcc 	andi	r2,r2,255
   4038c:	100d883a 	mov	r6,r2
   40390:	e17ffd17 	ldw	r5,-12(fp)
   40394:	e13ffc17 	ldw	r4,-16(fp)
   40398:	0040abc0 	call	40abc <i2c_write>
   4039c:	1000011e 	bne	r2,zero,403a4 <I2C_Read+0xc0>
        bSuccess = FALSE;
   403a0:	e03ffb15 	stw	zero,-20(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: Address+1 NACK!\n"));
    }
    
    if (bSuccess){
   403a4:	e0bffb17 	ldw	r2,-20(fp)
   403a8:	10000526 	beq	r2,zero,403c0 <I2C_Read+0xdc>
        i2c_read(clk_base, data_base, pControlData, FALSE);  // read
   403ac:	000f883a 	mov	r7,zero
   403b0:	e1800217 	ldw	r6,8(fp)
   403b4:	e17ffd17 	ldw	r5,-12(fp)
   403b8:	e13ffc17 	ldw	r4,-16(fp)
   403bc:	0040bec0 	call	40bec <i2c_read>
    }        
    i2c_stop(clk_base, data_base);
   403c0:	e17ffd17 	ldw	r5,-12(fp)
   403c4:	e13ffc17 	ldw	r4,-16(fp)
   403c8:	0040a440 	call	40a44 <i2c_stop>
    
    return bSuccess;
   403cc:	e0bffb17 	ldw	r2,-20(fp)
}
   403d0:	e037883a 	mov	sp,fp
   403d4:	dfc00117 	ldw	ra,4(sp)
   403d8:	df000017 	ldw	fp,0(sp)
   403dc:	dec00204 	addi	sp,sp,8
   403e0:	f800283a 	ret

000403e4 <I2C_MultipleRead>:

bool I2C_MultipleRead(alt_u32 clk_base, alt_u32 data_base, alt_8 DeviceAddr, alt_u8 szData[], alt_u16 len){
   403e4:	defff604 	addi	sp,sp,-40
   403e8:	dfc00915 	stw	ra,36(sp)
   403ec:	df000815 	stw	fp,32(sp)
   403f0:	df000804 	addi	fp,sp,32
   403f4:	e13ffb15 	stw	r4,-20(fp)
   403f8:	e17ffc15 	stw	r5,-16(fp)
   403fc:	3007883a 	mov	r3,r6
   40400:	e1fffe15 	stw	r7,-8(fp)
   40404:	e0800217 	ldw	r2,8(fp)
   40408:	e0fffd05 	stb	r3,-12(fp)
   4040c:	e0bfff0d 	sth	r2,-4(fp)
    int i;
    bool bSuccess = TRUE;
   40410:	00800044 	movi	r2,1
   40414:	e0bff915 	stw	r2,-28(fp)
    //alt_u8 DeviceAddr, 
    alt_u8 ControlAddr = 0;
   40418:	e03ffa05 	stb	zero,-24(fp)
    
   
    // device id
    //DeviceAddr = HMB_E2_I2C_ID;

    i2c_start(clk_base, data_base);
   4041c:	e17ffc17 	ldw	r5,-16(fp)
   40420:	e13ffb17 	ldw	r4,-20(fp)
   40424:	00409b80 	call	409b8 <i2c_start>
    if (!i2c_write(clk_base, data_base, DeviceAddr)){  // send ID
   40428:	e0bffd03 	ldbu	r2,-12(fp)
   4042c:	10803fcc 	andi	r2,r2,255
   40430:	100d883a 	mov	r6,r2
   40434:	e17ffc17 	ldw	r5,-16(fp)
   40438:	e13ffb17 	ldw	r4,-20(fp)
   4043c:	0040abc0 	call	40abc <i2c_write>
   40440:	1000011e 	bne	r2,zero,40448 <I2C_MultipleRead+0x64>
        bSuccess = FALSE;
   40444:	e03ff915 	stw	zero,-28(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: Address NACK!\n"));
    }
    if (bSuccess && !i2c_write(clk_base, data_base, ControlAddr)){ // send sub-address
   40448:	e0bff917 	ldw	r2,-28(fp)
   4044c:	10000726 	beq	r2,zero,4046c <I2C_MultipleRead+0x88>
   40450:	e0bffa03 	ldbu	r2,-24(fp)
   40454:	100d883a 	mov	r6,r2
   40458:	e17ffc17 	ldw	r5,-16(fp)
   4045c:	e13ffb17 	ldw	r4,-20(fp)
   40460:	0040abc0 	call	40abc <i2c_write>
   40464:	1000011e 	bne	r2,zero,4046c <I2C_MultipleRead+0x88>
        bSuccess = FALSE;
   40468:	e03ff915 	stw	zero,-28(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: SubAddress NACK!\n"));
    }    
    if (bSuccess)        
   4046c:	e0bff917 	ldw	r2,-28(fp)
   40470:	10000326 	beq	r2,zero,40480 <I2C_MultipleRead+0x9c>
        i2c_start(clk_base, data_base);  // restart
   40474:	e17ffc17 	ldw	r5,-16(fp)
   40478:	e13ffb17 	ldw	r4,-20(fp)
   4047c:	00409b80 	call	409b8 <i2c_start>
    DeviceAddr |= 1; // Read
   40480:	e0bffd03 	ldbu	r2,-12(fp)
   40484:	10800054 	ori	r2,r2,1
   40488:	e0bffd05 	stb	r2,-12(fp)
    if (bSuccess && !i2c_write(clk_base, data_base, DeviceAddr)){  // send id
   4048c:	e0bff917 	ldw	r2,-28(fp)
   40490:	10000826 	beq	r2,zero,404b4 <I2C_MultipleRead+0xd0>
   40494:	e0bffd03 	ldbu	r2,-12(fp)
   40498:	10803fcc 	andi	r2,r2,255
   4049c:	100d883a 	mov	r6,r2
   404a0:	e17ffc17 	ldw	r5,-16(fp)
   404a4:	e13ffb17 	ldw	r4,-20(fp)
   404a8:	0040abc0 	call	40abc <i2c_write>
   404ac:	1000011e 	bne	r2,zero,404b4 <I2C_MultipleRead+0xd0>
        bSuccess = FALSE;
   404b0:	e03ff915 	stw	zero,-28(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: Address+1 NACK!\n"));
    }
    
    if (bSuccess){
   404b4:	e0bff917 	ldw	r2,-28(fp)
   404b8:	10001726 	beq	r2,zero,40518 <I2C_MultipleRead+0x134>
        for(i=0;i<len && bSuccess;i++){
   404bc:	e03ff815 	stw	zero,-32(fp)
   404c0:	00001006 	br	40504 <I2C_MultipleRead+0x120>
            i2c_read(clk_base, data_base, &szData[i], (i==(len-1))?FALSE:TRUE);  // read
   404c4:	e0bff817 	ldw	r2,-32(fp)
   404c8:	e0fffe17 	ldw	r3,-8(fp)
   404cc:	1889883a 	add	r4,r3,r2
   404d0:	e0bfff0b 	ldhu	r2,-4(fp)
   404d4:	10ffffc4 	addi	r3,r2,-1
   404d8:	e0bff817 	ldw	r2,-32(fp)
   404dc:	1884c03a 	cmpne	r2,r3,r2
   404e0:	10803fcc 	andi	r2,r2,255
   404e4:	100f883a 	mov	r7,r2
   404e8:	200d883a 	mov	r6,r4
   404ec:	e17ffc17 	ldw	r5,-16(fp)
   404f0:	e13ffb17 	ldw	r4,-20(fp)
   404f4:	0040bec0 	call	40bec <i2c_read>
        bSuccess = FALSE;
        I2C_DEBUG(("I2C HMB_E2 Fail: Address+1 NACK!\n"));
    }
    
    if (bSuccess){
        for(i=0;i<len && bSuccess;i++){
   404f8:	e0bff817 	ldw	r2,-32(fp)
   404fc:	10800044 	addi	r2,r2,1
   40500:	e0bff815 	stw	r2,-32(fp)
   40504:	e0bfff0b 	ldhu	r2,-4(fp)
   40508:	e0fff817 	ldw	r3,-32(fp)
   4050c:	1880020e 	bge	r3,r2,40518 <I2C_MultipleRead+0x134>
   40510:	e0bff917 	ldw	r2,-28(fp)
   40514:	103feb1e 	bne	r2,zero,404c4 <__alt_data_end+0xfffc1cc4>
            i2c_read(clk_base, data_base, &szData[i], (i==(len-1))?FALSE:TRUE);  // read
        }            
    }        
    i2c_stop(clk_base, data_base);
   40518:	e17ffc17 	ldw	r5,-16(fp)
   4051c:	e13ffb17 	ldw	r4,-20(fp)
   40520:	0040a440 	call	40a44 <i2c_stop>
    
    return bSuccess;    
   40524:	e0bff917 	ldw	r2,-28(fp)
    
}
   40528:	e037883a 	mov	sp,fp
   4052c:	dfc00117 	ldw	ra,4(sp)
   40530:	df000017 	ldw	fp,0(sp)
   40534:	dec00204 	addi	sp,sp,8
   40538:	f800283a 	ret

0004053c <I2C_Receive>:

bool I2C_Receive(alt_u32 clk_base, alt_u32 data_base, alt_8 DeviceAddr, alt_u8 *pControlData){
   4053c:	defff904 	addi	sp,sp,-28
   40540:	dfc00615 	stw	ra,24(sp)
   40544:	df000515 	stw	fp,20(sp)
   40548:	df000504 	addi	fp,sp,20
   4054c:	e13ffc15 	stw	r4,-16(fp)
   40550:	e17ffd15 	stw	r5,-12(fp)
   40554:	3005883a 	mov	r2,r6
   40558:	e1ffff15 	stw	r7,-4(fp)
   4055c:	e0bffe05 	stb	r2,-8(fp)
    bool bSuccess = TRUE;
   40560:	00800044 	movi	r2,1
   40564:	e0bffb15 	stw	r2,-20(fp)
    
    i2c_start(clk_base, data_base);  // start
   40568:	e17ffd17 	ldw	r5,-12(fp)
   4056c:	e13ffc17 	ldw	r4,-16(fp)
   40570:	00409b80 	call	409b8 <i2c_start>
    
    DeviceAddr |= 1; // Read
   40574:	e0bffe03 	ldbu	r2,-8(fp)
   40578:	10800054 	ori	r2,r2,1
   4057c:	e0bffe05 	stb	r2,-8(fp)
    if (bSuccess && !i2c_write(clk_base, data_base, DeviceAddr)){  // send id
   40580:	e0bffb17 	ldw	r2,-20(fp)
   40584:	10000826 	beq	r2,zero,405a8 <I2C_Receive+0x6c>
   40588:	e0bffe03 	ldbu	r2,-8(fp)
   4058c:	10803fcc 	andi	r2,r2,255
   40590:	100d883a 	mov	r6,r2
   40594:	e17ffd17 	ldw	r5,-12(fp)
   40598:	e13ffc17 	ldw	r4,-16(fp)
   4059c:	0040abc0 	call	40abc <i2c_write>
   405a0:	1000011e 	bne	r2,zero,405a8 <I2C_Receive+0x6c>
        bSuccess = FALSE;
   405a4:	e03ffb15 	stw	zero,-20(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: Address+1 NACK!\n"));
    }
    
    if (bSuccess){
   405a8:	e0bffb17 	ldw	r2,-20(fp)
   405ac:	10000526 	beq	r2,zero,405c4 <I2C_Receive+0x88>
        i2c_read(clk_base, data_base, pControlData, FALSE);  // read
   405b0:	000f883a 	mov	r7,zero
   405b4:	e1bfff17 	ldw	r6,-4(fp)
   405b8:	e17ffd17 	ldw	r5,-12(fp)
   405bc:	e13ffc17 	ldw	r4,-16(fp)
   405c0:	0040bec0 	call	40bec <i2c_read>
    }        
    i2c_stop(clk_base, data_base);
   405c4:	e17ffd17 	ldw	r5,-12(fp)
   405c8:	e13ffc17 	ldw	r4,-16(fp)
   405cc:	0040a440 	call	40a44 <i2c_stop>
    
    return bSuccess;
   405d0:	e0bffb17 	ldw	r2,-20(fp)
}
   405d4:	e037883a 	mov	sp,fp
   405d8:	dfc00117 	ldw	ra,4(sp)
   405dc:	df000017 	ldw	fp,0(sp)
   405e0:	dec00204 	addi	sp,sp,8
   405e4:	f800283a 	ret

000405e8 <I2CL_Write>:

////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// size > 2Kbits
bool I2CL_Write(alt_u32 clk_base, alt_u32 data_base, alt_8 DeviceAddr, alt_u16 ControlAddr, alt_u8 ControlData){
   405e8:	defff704 	addi	sp,sp,-36
   405ec:	dfc00815 	stw	ra,32(sp)
   405f0:	df000715 	stw	fp,28(sp)
   405f4:	df000704 	addi	fp,sp,28
   405f8:	e13ffb15 	stw	r4,-20(fp)
   405fc:	e17ffc15 	stw	r5,-16(fp)
   40600:	3009883a 	mov	r4,r6
   40604:	3807883a 	mov	r3,r7
   40608:	e0800217 	ldw	r2,8(fp)
   4060c:	e13ffd05 	stb	r4,-12(fp)
   40610:	e0fffe0d 	sth	r3,-8(fp)
   40614:	e0bfff05 	stb	r2,-4(fp)
    bool bSuccess = TRUE;
   40618:	00800044 	movi	r2,1
   4061c:	e0bff915 	stw	r2,-28(fp)
    alt_u8 AddrHigh, AddrLow;
    
    AddrHigh = (ControlAddr >> 8) & 0xFF; 
   40620:	e0bffe0b 	ldhu	r2,-8(fp)
   40624:	1004d23a 	srli	r2,r2,8
   40628:	e0bffa05 	stb	r2,-24(fp)
    AddrLow  = ControlAddr & 0xFF; 
   4062c:	e0bffe0b 	ldhu	r2,-8(fp)
   40630:	e0bffa45 	stb	r2,-23(fp)
    
    // device id
    //DeviceAddr = HMB_E2_I2C_ID;

    i2c_start(clk_base, data_base);
   40634:	e17ffc17 	ldw	r5,-16(fp)
   40638:	e13ffb17 	ldw	r4,-20(fp)
   4063c:	00409b80 	call	409b8 <i2c_start>
    if (!i2c_write(clk_base, data_base, DeviceAddr)){  // send ID
   40640:	e0bffd03 	ldbu	r2,-12(fp)
   40644:	10803fcc 	andi	r2,r2,255
   40648:	100d883a 	mov	r6,r2
   4064c:	e17ffc17 	ldw	r5,-16(fp)
   40650:	e13ffb17 	ldw	r4,-20(fp)
   40654:	0040abc0 	call	40abc <i2c_write>
   40658:	1000011e 	bne	r2,zero,40660 <I2CL_Write+0x78>
        bSuccess = FALSE;
   4065c:	e03ff915 	stw	zero,-28(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: Address NACK!\n"));
    }
    if (bSuccess && !i2c_write(clk_base, data_base, AddrHigh)){ // send sub-address
   40660:	e0bff917 	ldw	r2,-28(fp)
   40664:	10000726 	beq	r2,zero,40684 <I2CL_Write+0x9c>
   40668:	e0bffa03 	ldbu	r2,-24(fp)
   4066c:	100d883a 	mov	r6,r2
   40670:	e17ffc17 	ldw	r5,-16(fp)
   40674:	e13ffb17 	ldw	r4,-20(fp)
   40678:	0040abc0 	call	40abc <i2c_write>
   4067c:	1000011e 	bne	r2,zero,40684 <I2CL_Write+0x9c>
        bSuccess = FALSE;
   40680:	e03ff915 	stw	zero,-28(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: SubAddress-high NACK!\n"));
    }            
    if (bSuccess && !i2c_write(clk_base, data_base, AddrLow)){ // send sub-address
   40684:	e0bff917 	ldw	r2,-28(fp)
   40688:	10000726 	beq	r2,zero,406a8 <I2CL_Write+0xc0>
   4068c:	e0bffa43 	ldbu	r2,-23(fp)
   40690:	100d883a 	mov	r6,r2
   40694:	e17ffc17 	ldw	r5,-16(fp)
   40698:	e13ffb17 	ldw	r4,-20(fp)
   4069c:	0040abc0 	call	40abc <i2c_write>
   406a0:	1000011e 	bne	r2,zero,406a8 <I2CL_Write+0xc0>
        bSuccess = FALSE;
   406a4:	e03ff915 	stw	zero,-28(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: SubAddress-low NACK!\n"));
    }            
    if (bSuccess && !i2c_write(clk_base, data_base, ControlData)){  
   406a8:	e0bff917 	ldw	r2,-28(fp)
   406ac:	10000726 	beq	r2,zero,406cc <I2CL_Write+0xe4>
   406b0:	e0bfff03 	ldbu	r2,-4(fp)
   406b4:	100d883a 	mov	r6,r2
   406b8:	e17ffc17 	ldw	r5,-16(fp)
   406bc:	e13ffb17 	ldw	r4,-20(fp)
   406c0:	0040abc0 	call	40abc <i2c_write>
   406c4:	1000011e 	bne	r2,zero,406cc <I2CL_Write+0xe4>
        bSuccess = FALSE;
   406c8:	e03ff915 	stw	zero,-28(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: write NACK!\n"));
    }
    i2c_stop(clk_base, data_base);
   406cc:	e17ffc17 	ldw	r5,-16(fp)
   406d0:	e13ffb17 	ldw	r4,-20(fp)
   406d4:	0040a440 	call	40a44 <i2c_stop>
    
    usleep(7*1000); // delay to wait EE2 ready (at least 5 ms delay is required)
   406d8:	0106d604 	movi	r4,7000
   406dc:	0058b500 	call	58b50 <usleep>
    
    return bSuccess;
   406e0:	e0bff917 	ldw	r2,-28(fp)
    
}
   406e4:	e037883a 	mov	sp,fp
   406e8:	dfc00117 	ldw	ra,4(sp)
   406ec:	df000017 	ldw	fp,0(sp)
   406f0:	dec00204 	addi	sp,sp,8
   406f4:	f800283a 	ret

000406f8 <I2CL_Read>:

bool I2CL_Read(alt_u32 clk_base, alt_u32 data_base, alt_8 DeviceAddr, alt_u16 ControlAddr, alt_u8 *pControlData){
   406f8:	defff804 	addi	sp,sp,-32
   406fc:	dfc00715 	stw	ra,28(sp)
   40700:	df000615 	stw	fp,24(sp)
   40704:	df000604 	addi	fp,sp,24
   40708:	e13ffc15 	stw	r4,-16(fp)
   4070c:	e17ffd15 	stw	r5,-12(fp)
   40710:	3007883a 	mov	r3,r6
   40714:	3805883a 	mov	r2,r7
   40718:	e0fffe05 	stb	r3,-8(fp)
   4071c:	e0bfff0d 	sth	r2,-4(fp)
    bool bSuccess = TRUE;
   40720:	00800044 	movi	r2,1
   40724:	e0bffa15 	stw	r2,-24(fp)
    alt_u8 AddrHigh, AddrLow;
    
    AddrHigh = (ControlAddr >> 8) & 0xFF; 
   40728:	e0bfff0b 	ldhu	r2,-4(fp)
   4072c:	1004d23a 	srli	r2,r2,8
   40730:	e0bffb05 	stb	r2,-20(fp)
    AddrLow  = ControlAddr & 0xFF; 
   40734:	e0bfff0b 	ldhu	r2,-4(fp)
   40738:	e0bffb45 	stb	r2,-19(fp)

    i2c_start(clk_base, data_base);
   4073c:	e17ffd17 	ldw	r5,-12(fp)
   40740:	e13ffc17 	ldw	r4,-16(fp)
   40744:	00409b80 	call	409b8 <i2c_start>
    if (!i2c_write(clk_base, data_base, DeviceAddr)){  // send ID
   40748:	e0bffe03 	ldbu	r2,-8(fp)
   4074c:	10803fcc 	andi	r2,r2,255
   40750:	100d883a 	mov	r6,r2
   40754:	e17ffd17 	ldw	r5,-12(fp)
   40758:	e13ffc17 	ldw	r4,-16(fp)
   4075c:	0040abc0 	call	40abc <i2c_write>
   40760:	1000011e 	bne	r2,zero,40768 <I2CL_Read+0x70>
        bSuccess = FALSE;
   40764:	e03ffa15 	stw	zero,-24(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: Address NACK!\n"));
    }
    if (bSuccess && !i2c_write(clk_base, data_base, AddrHigh)){ // send sub-address
   40768:	e0bffa17 	ldw	r2,-24(fp)
   4076c:	10000726 	beq	r2,zero,4078c <I2CL_Read+0x94>
   40770:	e0bffb03 	ldbu	r2,-20(fp)
   40774:	100d883a 	mov	r6,r2
   40778:	e17ffd17 	ldw	r5,-12(fp)
   4077c:	e13ffc17 	ldw	r4,-16(fp)
   40780:	0040abc0 	call	40abc <i2c_write>
   40784:	1000011e 	bne	r2,zero,4078c <I2CL_Read+0x94>
        bSuccess = FALSE;
   40788:	e03ffa15 	stw	zero,-24(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: SubAddress-high NACK!\n"));
    }            
    if (bSuccess && !i2c_write(clk_base, data_base, AddrLow)){ // send sub-address
   4078c:	e0bffa17 	ldw	r2,-24(fp)
   40790:	10000726 	beq	r2,zero,407b0 <I2CL_Read+0xb8>
   40794:	e0bffb43 	ldbu	r2,-19(fp)
   40798:	100d883a 	mov	r6,r2
   4079c:	e17ffd17 	ldw	r5,-12(fp)
   407a0:	e13ffc17 	ldw	r4,-16(fp)
   407a4:	0040abc0 	call	40abc <i2c_write>
   407a8:	1000011e 	bne	r2,zero,407b0 <I2CL_Read+0xb8>
        bSuccess = FALSE;
   407ac:	e03ffa15 	stw	zero,-24(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: SubAddress-low NACK!\n"));
    }            
    i2c_start(clk_base, data_base);  // restart
   407b0:	e17ffd17 	ldw	r5,-12(fp)
   407b4:	e13ffc17 	ldw	r4,-16(fp)
   407b8:	00409b80 	call	409b8 <i2c_start>
    DeviceAddr |= 1; // Read
   407bc:	e0bffe03 	ldbu	r2,-8(fp)
   407c0:	10800054 	ori	r2,r2,1
   407c4:	e0bffe05 	stb	r2,-8(fp)
    if (bSuccess && !i2c_write(clk_base, data_base, DeviceAddr)){  // send id
   407c8:	e0bffa17 	ldw	r2,-24(fp)
   407cc:	10000826 	beq	r2,zero,407f0 <I2CL_Read+0xf8>
   407d0:	e0bffe03 	ldbu	r2,-8(fp)
   407d4:	10803fcc 	andi	r2,r2,255
   407d8:	100d883a 	mov	r6,r2
   407dc:	e17ffd17 	ldw	r5,-12(fp)
   407e0:	e13ffc17 	ldw	r4,-16(fp)
   407e4:	0040abc0 	call	40abc <i2c_write>
   407e8:	1000011e 	bne	r2,zero,407f0 <I2CL_Read+0xf8>
        bSuccess = FALSE;
   407ec:	e03ffa15 	stw	zero,-24(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: Address+1 NACK!\n"));
    }
    
    if (bSuccess){
   407f0:	e0bffa17 	ldw	r2,-24(fp)
   407f4:	10000526 	beq	r2,zero,4080c <I2CL_Read+0x114>
        i2c_read(clk_base, data_base, pControlData, FALSE);  // read
   407f8:	000f883a 	mov	r7,zero
   407fc:	e1800217 	ldw	r6,8(fp)
   40800:	e17ffd17 	ldw	r5,-12(fp)
   40804:	e13ffc17 	ldw	r4,-16(fp)
   40808:	0040bec0 	call	40bec <i2c_read>
    }        
    i2c_stop(clk_base, data_base);
   4080c:	e17ffd17 	ldw	r5,-12(fp)
   40810:	e13ffc17 	ldw	r4,-16(fp)
   40814:	0040a440 	call	40a44 <i2c_stop>
    
    return bSuccess;    
   40818:	e0bffa17 	ldw	r2,-24(fp)
}
   4081c:	e037883a 	mov	sp,fp
   40820:	dfc00117 	ldw	ra,4(sp)
   40824:	df000017 	ldw	fp,0(sp)
   40828:	dec00204 	addi	sp,sp,8
   4082c:	f800283a 	ret

00040830 <I2CL_MultipleRead>:

// read from address 0
bool I2CL_MultipleRead(alt_u32 clk_base, alt_u32 data_base, alt_8 DeviceAddr, alt_u8 szData[], alt_u16 len){
   40830:	defff604 	addi	sp,sp,-40
   40834:	dfc00915 	stw	ra,36(sp)
   40838:	df000815 	stw	fp,32(sp)
   4083c:	df000804 	addi	fp,sp,32
   40840:	e13ffb15 	stw	r4,-20(fp)
   40844:	e17ffc15 	stw	r5,-16(fp)
   40848:	3007883a 	mov	r3,r6
   4084c:	e1fffe15 	stw	r7,-8(fp)
   40850:	e0800217 	ldw	r2,8(fp)
   40854:	e0fffd05 	stb	r3,-12(fp)
   40858:	e0bfff0d 	sth	r2,-4(fp)
    int i;
    bool bSuccess = TRUE;
   4085c:	00800044 	movi	r2,1
   40860:	e0bff915 	stw	r2,-28(fp)
    alt_u8 ControlAddr = 0;
   40864:	e03ffa05 	stb	zero,-24(fp)
    alt_u8 AddrHigh, AddrLow;
    
    AddrHigh = (ControlAddr >> 8) & 0xFF; 
   40868:	e03ffa45 	stb	zero,-23(fp)
    AddrLow  = ControlAddr & 0xFF;     
   4086c:	e0bffa03 	ldbu	r2,-24(fp)
   40870:	e0bffa85 	stb	r2,-22(fp)
    
   
    // device id
    //DeviceAddr = HMB_E2_I2C_ID;

    i2c_start(clk_base, data_base);
   40874:	e17ffc17 	ldw	r5,-16(fp)
   40878:	e13ffb17 	ldw	r4,-20(fp)
   4087c:	00409b80 	call	409b8 <i2c_start>
    if (!i2c_write(clk_base, data_base, DeviceAddr)){  // send ID
   40880:	e0bffd03 	ldbu	r2,-12(fp)
   40884:	10803fcc 	andi	r2,r2,255
   40888:	100d883a 	mov	r6,r2
   4088c:	e17ffc17 	ldw	r5,-16(fp)
   40890:	e13ffb17 	ldw	r4,-20(fp)
   40894:	0040abc0 	call	40abc <i2c_write>
   40898:	1000011e 	bne	r2,zero,408a0 <I2CL_MultipleRead+0x70>
        bSuccess = FALSE;
   4089c:	e03ff915 	stw	zero,-28(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: Address NACK!\n"));
    }
    if (bSuccess && !i2c_write(clk_base, data_base, AddrHigh)){ // send sub-address
   408a0:	e0bff917 	ldw	r2,-28(fp)
   408a4:	10000726 	beq	r2,zero,408c4 <I2CL_MultipleRead+0x94>
   408a8:	e0bffa43 	ldbu	r2,-23(fp)
   408ac:	100d883a 	mov	r6,r2
   408b0:	e17ffc17 	ldw	r5,-16(fp)
   408b4:	e13ffb17 	ldw	r4,-20(fp)
   408b8:	0040abc0 	call	40abc <i2c_write>
   408bc:	1000011e 	bne	r2,zero,408c4 <I2CL_MultipleRead+0x94>
        bSuccess = FALSE;
   408c0:	e03ff915 	stw	zero,-28(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: SubAddress-high NACK!\n"));
    }    
    if (bSuccess && !i2c_write(clk_base, data_base, AddrLow)){ // send sub-address
   408c4:	e0bff917 	ldw	r2,-28(fp)
   408c8:	10000726 	beq	r2,zero,408e8 <I2CL_MultipleRead+0xb8>
   408cc:	e0bffa83 	ldbu	r2,-22(fp)
   408d0:	100d883a 	mov	r6,r2
   408d4:	e17ffc17 	ldw	r5,-16(fp)
   408d8:	e13ffb17 	ldw	r4,-20(fp)
   408dc:	0040abc0 	call	40abc <i2c_write>
   408e0:	1000011e 	bne	r2,zero,408e8 <I2CL_MultipleRead+0xb8>
        bSuccess = FALSE;
   408e4:	e03ff915 	stw	zero,-28(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: SubAddress-low NACK!\n"));
    }    
    if (bSuccess)        
   408e8:	e0bff917 	ldw	r2,-28(fp)
   408ec:	10000326 	beq	r2,zero,408fc <I2CL_MultipleRead+0xcc>
        i2c_start(clk_base, data_base);  // restart
   408f0:	e17ffc17 	ldw	r5,-16(fp)
   408f4:	e13ffb17 	ldw	r4,-20(fp)
   408f8:	00409b80 	call	409b8 <i2c_start>
    DeviceAddr |= 1; // Read
   408fc:	e0bffd03 	ldbu	r2,-12(fp)
   40900:	10800054 	ori	r2,r2,1
   40904:	e0bffd05 	stb	r2,-12(fp)
    if (bSuccess && !i2c_write(clk_base, data_base, DeviceAddr)){  // send id
   40908:	e0bff917 	ldw	r2,-28(fp)
   4090c:	10000826 	beq	r2,zero,40930 <I2CL_MultipleRead+0x100>
   40910:	e0bffd03 	ldbu	r2,-12(fp)
   40914:	10803fcc 	andi	r2,r2,255
   40918:	100d883a 	mov	r6,r2
   4091c:	e17ffc17 	ldw	r5,-16(fp)
   40920:	e13ffb17 	ldw	r4,-20(fp)
   40924:	0040abc0 	call	40abc <i2c_write>
   40928:	1000011e 	bne	r2,zero,40930 <I2CL_MultipleRead+0x100>
        bSuccess = FALSE;
   4092c:	e03ff915 	stw	zero,-28(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: Address+1 NACK!\n"));
    }
    
    if (bSuccess){
   40930:	e0bff917 	ldw	r2,-28(fp)
   40934:	10001726 	beq	r2,zero,40994 <I2CL_MultipleRead+0x164>
        for(i=0;i<len && bSuccess;i++){
   40938:	e03ff815 	stw	zero,-32(fp)
   4093c:	00001006 	br	40980 <I2CL_MultipleRead+0x150>
            i2c_read(clk_base, data_base, &szData[i], (i==(len-1))?FALSE:TRUE);  // read
   40940:	e0bff817 	ldw	r2,-32(fp)
   40944:	e0fffe17 	ldw	r3,-8(fp)
   40948:	1889883a 	add	r4,r3,r2
   4094c:	e0bfff0b 	ldhu	r2,-4(fp)
   40950:	10ffffc4 	addi	r3,r2,-1
   40954:	e0bff817 	ldw	r2,-32(fp)
   40958:	1884c03a 	cmpne	r2,r3,r2
   4095c:	10803fcc 	andi	r2,r2,255
   40960:	100f883a 	mov	r7,r2
   40964:	200d883a 	mov	r6,r4
   40968:	e17ffc17 	ldw	r5,-16(fp)
   4096c:	e13ffb17 	ldw	r4,-20(fp)
   40970:	0040bec0 	call	40bec <i2c_read>
        bSuccess = FALSE;
        I2C_DEBUG(("I2C HMB_E2 Fail: Address+1 NACK!\n"));
    }
    
    if (bSuccess){
        for(i=0;i<len && bSuccess;i++){
   40974:	e0bff817 	ldw	r2,-32(fp)
   40978:	10800044 	addi	r2,r2,1
   4097c:	e0bff815 	stw	r2,-32(fp)
   40980:	e0bfff0b 	ldhu	r2,-4(fp)
   40984:	e0fff817 	ldw	r3,-32(fp)
   40988:	1880020e 	bge	r3,r2,40994 <I2CL_MultipleRead+0x164>
   4098c:	e0bff917 	ldw	r2,-28(fp)
   40990:	103feb1e 	bne	r2,zero,40940 <__alt_data_end+0xfffc2140>
            i2c_read(clk_base, data_base, &szData[i], (i==(len-1))?FALSE:TRUE);  // read
        }            
    }        
    i2c_stop(clk_base, data_base);
   40994:	e17ffc17 	ldw	r5,-16(fp)
   40998:	e13ffb17 	ldw	r4,-20(fp)
   4099c:	0040a440 	call	40a44 <i2c_stop>
    
    return bSuccess;    
   409a0:	e0bff917 	ldw	r2,-28(fp)
    
} 
   409a4:	e037883a 	mov	sp,fp
   409a8:	dfc00117 	ldw	ra,4(sp)
   409ac:	df000017 	ldw	fp,0(sp)
   409b0:	dec00204 	addi	sp,sp,8
   409b4:	f800283a 	ret

000409b8 <i2c_start>:
///////////// Interncal function (i2cXXX) body //////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////


//SDA 1->0 while SCL=1
void i2c_start(alt_u32 clk_base, alt_u32 data_base){
   409b8:	defffc04 	addi	sp,sp,-16
   409bc:	dfc00315 	stw	ra,12(sp)
   409c0:	df000215 	stw	fp,8(sp)
   409c4:	df000204 	addi	fp,sp,8
   409c8:	e13ffe15 	stw	r4,-8(fp)
   409cc:	e17fff15 	stw	r5,-4(fp)
    
    // make sure it is in normal state
    SDA_DIR_OUT(data_base);  // data output enabled
   409d0:	e0bfff17 	ldw	r2,-4(fp)
   409d4:	10800104 	addi	r2,r2,4
   409d8:	1007883a 	mov	r3,r2
   409dc:	00800044 	movi	r2,1
   409e0:	18800035 	stwio	r2,0(r3)
    
    
    
    // start condition
    SDA_HIGH(data_base); // data high
   409e4:	e0bfff17 	ldw	r2,-4(fp)
   409e8:	00c00044 	movi	r3,1
   409ec:	10c00035 	stwio	r3,0(r2)
    SCL_HIGH(clk_base);
   409f0:	e0bffe17 	ldw	r2,-8(fp)
   409f4:	00c00044 	movi	r3,1
   409f8:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY;
   409fc:	01000044 	movi	r4,1
   40a00:	0058b500 	call	58b50 <usleep>
     
    SDA_LOW(data_base); // data low
   40a04:	e0bfff17 	ldw	r2,-4(fp)
   40a08:	0007883a 	mov	r3,zero
   40a0c:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; 
   40a10:	01000044 	movi	r4,1
   40a14:	0058b500 	call	58b50 <usleep>
    SCL_LOW(clk_base); // clock low
   40a18:	e0bffe17 	ldw	r2,-8(fp)
   40a1c:	0007883a 	mov	r3,zero
   40a20:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY;
   40a24:	01000044 	movi	r4,1
   40a28:	0058b500 	call	58b50 <usleep>
}
   40a2c:	0001883a 	nop
   40a30:	e037883a 	mov	sp,fp
   40a34:	dfc00117 	ldw	ra,4(sp)
   40a38:	df000017 	ldw	fp,0(sp)
   40a3c:	dec00204 	addi	sp,sp,8
   40a40:	f800283a 	ret

00040a44 <i2c_stop>:

// SDA 0->1 while SCL=1
void i2c_stop(alt_u32 clk_base, alt_u32 data_base){
   40a44:	defffc04 	addi	sp,sp,-16
   40a48:	dfc00315 	stw	ra,12(sp)
   40a4c:	df000215 	stw	fp,8(sp)
   40a50:	df000204 	addi	fp,sp,8
   40a54:	e13ffe15 	stw	r4,-8(fp)
   40a58:	e17fff15 	stw	r5,-4(fp)
    // assume SCL = 0
    
    SDA_DIR_OUT(data_base);  // data output enabled
   40a5c:	e0bfff17 	ldw	r2,-4(fp)
   40a60:	10800104 	addi	r2,r2,4
   40a64:	1007883a 	mov	r3,r2
   40a68:	00800044 	movi	r2,1
   40a6c:	18800035 	stwio	r2,0(r3)
    SDA_LOW(data_base); // Data Low
   40a70:	e0bfff17 	ldw	r2,-4(fp)
   40a74:	0007883a 	mov	r3,zero
   40a78:	10c00035 	stwio	r3,0(r2)
    //SCL_DELAY; 
    SCL_HIGH(clk_base);  // clock high
   40a7c:	e0bffe17 	ldw	r2,-8(fp)
   40a80:	00c00044 	movi	r3,1
   40a84:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // clock high long delay
   40a88:	01000044 	movi	r4,1
   40a8c:	0058b500 	call	58b50 <usleep>
    SDA_HIGH(data_base); // data high
   40a90:	e0bfff17 	ldw	r2,-4(fp)
   40a94:	00c00044 	movi	r3,1
   40a98:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // data high delay
   40a9c:	01000044 	movi	r4,1
   40aa0:	0058b500 	call	58b50 <usleep>
    

    
}
   40aa4:	0001883a 	nop
   40aa8:	e037883a 	mov	sp,fp
   40aac:	dfc00117 	ldw	ra,4(sp)
   40ab0:	df000017 	ldw	fp,0(sp)
   40ab4:	dec00204 	addi	sp,sp,8
   40ab8:	f800283a 	ret

00040abc <i2c_write>:

bool i2c_write(alt_u32 clk_base, alt_u32 data_base, alt_u8 Data){ // return true if device response ack
   40abc:	defff804 	addi	sp,sp,-32
   40ac0:	dfc00715 	stw	ra,28(sp)
   40ac4:	df000615 	stw	fp,24(sp)
   40ac8:	df000604 	addi	fp,sp,24
   40acc:	e13ffd15 	stw	r4,-12(fp)
   40ad0:	e17ffe15 	stw	r5,-8(fp)
   40ad4:	3005883a 	mov	r2,r6
   40ad8:	e0bfff05 	stb	r2,-4(fp)
    alt_u8 Mask = 0x80;
   40adc:	00bfe004 	movi	r2,-128
   40ae0:	e0bffa05 	stb	r2,-24(fp)
    bool bAck;
    int i;
    
    // assume, SCL = 0
    
    SDA_DIR_OUT(data_base);  // data write mode
   40ae4:	e0bffe17 	ldw	r2,-8(fp)
   40ae8:	10800104 	addi	r2,r2,4
   40aec:	1007883a 	mov	r3,r2
   40af0:	00800044 	movi	r2,1
   40af4:	18800035 	stwio	r2,0(r3)
    
    for(i=0;i<8;i++){
   40af8:	e03ffb15 	stw	zero,-20(fp)
   40afc:	00001f06 	br	40b7c <i2c_write+0xc0>
        SCL_LOW(clk_base);  // new, make sure data change at clk low
   40b00:	e0bffd17 	ldw	r2,-12(fp)
   40b04:	0007883a 	mov	r3,zero
   40b08:	10c00035 	stwio	r3,0(r2)
        // output data on bus
        if (Data & Mask){ // there is a delay in this command
   40b0c:	e0ffff03 	ldbu	r3,-4(fp)
   40b10:	e0bffa03 	ldbu	r2,-24(fp)
   40b14:	1884703a 	and	r2,r3,r2
   40b18:	10803fcc 	andi	r2,r2,255
   40b1c:	10000426 	beq	r2,zero,40b30 <i2c_write+0x74>
            SDA_HIGH(data_base);
   40b20:	e0bffe17 	ldw	r2,-8(fp)
   40b24:	00c00044 	movi	r3,1
   40b28:	10c00035 	stwio	r3,0(r2)
   40b2c:	00000306 	br	40b3c <i2c_write+0x80>
        }else{    
            SDA_LOW(data_base);
   40b30:	e0bffe17 	ldw	r2,-8(fp)
   40b34:	0007883a 	mov	r3,zero
   40b38:	10c00035 	stwio	r3,0(r2)
        }
        Mask >>= 1; // there is a delay in this command
   40b3c:	e0bffa03 	ldbu	r2,-24(fp)
   40b40:	1004d07a 	srli	r2,r2,1
   40b44:	e0bffa05 	stb	r2,-24(fp)
        // clock high
        SCL_HIGH(clk_base);
   40b48:	e0bffd17 	ldw	r2,-12(fp)
   40b4c:	00c00044 	movi	r3,1
   40b50:	10c00035 	stwio	r3,0(r2)
        SCL_DELAY;
   40b54:	01000044 	movi	r4,1
   40b58:	0058b500 	call	58b50 <usleep>
        SCL_LOW(clk_base);
   40b5c:	e0bffd17 	ldw	r2,-12(fp)
   40b60:	0007883a 	mov	r3,zero
   40b64:	10c00035 	stwio	r3,0(r2)
        SCL_DELAY;
   40b68:	01000044 	movi	r4,1
   40b6c:	0058b500 	call	58b50 <usleep>
    
    // assume, SCL = 0
    
    SDA_DIR_OUT(data_base);  // data write mode
    
    for(i=0;i<8;i++){
   40b70:	e0bffb17 	ldw	r2,-20(fp)
   40b74:	10800044 	addi	r2,r2,1
   40b78:	e0bffb15 	stw	r2,-20(fp)
   40b7c:	e0bffb17 	ldw	r2,-20(fp)
   40b80:	10800210 	cmplti	r2,r2,8
   40b84:	103fde1e 	bne	r2,zero,40b00 <__alt_data_end+0xfffc2300>
        SCL_LOW(clk_base);
        SCL_DELAY;
    }
    
    //===== get ack
    SDA_DIR_IN(data_base);  // data read mode
   40b88:	e0bffe17 	ldw	r2,-8(fp)
   40b8c:	10800104 	addi	r2,r2,4
   40b90:	0007883a 	mov	r3,zero
   40b94:	10c00035 	stwio	r3,0(r2)
    //SCL_DELAY;
    // clock high
    SCL_HIGH(clk_base);  // clock high
   40b98:	e0bffd17 	ldw	r2,-12(fp)
   40b9c:	00c00044 	movi	r3,1
   40ba0:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY;  // clock high delay
   40ba4:	01000044 	movi	r4,1
   40ba8:	0058b500 	call	58b50 <usleep>
    bAck = SDA_READ(data_base)?FALSE:TRUE;  // get ack
   40bac:	e0bffe17 	ldw	r2,-8(fp)
   40bb0:	10800037 	ldwio	r2,0(r2)
   40bb4:	1005003a 	cmpeq	r2,r2,zero
   40bb8:	10803fcc 	andi	r2,r2,255
   40bbc:	e0bffc15 	stw	r2,-16(fp)
    //SCL_DELAY;
    //SDA_DIR_OUT;
    SCL_LOW(clk_base); // clock low         
   40bc0:	e0bffd17 	ldw	r2,-12(fp)
   40bc4:	0007883a 	mov	r3,zero
   40bc8:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // clock low delay
   40bcc:	01000044 	movi	r4,1
   40bd0:	0058b500 	call	58b50 <usleep>
    return bAck;
   40bd4:	e0bffc17 	ldw	r2,-16(fp)
}    
   40bd8:	e037883a 	mov	sp,fp
   40bdc:	dfc00117 	ldw	ra,4(sp)
   40be0:	df000017 	ldw	fp,0(sp)
   40be4:	dec00204 	addi	sp,sp,8
   40be8:	f800283a 	ret

00040bec <i2c_read>:

void i2c_read(alt_u32 clk_base, alt_u32 data_base, alt_u8 *pData, bool bAck){ // return true if device response ack
   40bec:	defff804 	addi	sp,sp,-32
   40bf0:	dfc00715 	stw	ra,28(sp)
   40bf4:	df000615 	stw	fp,24(sp)
   40bf8:	df000604 	addi	fp,sp,24
   40bfc:	e13ffc15 	stw	r4,-16(fp)
   40c00:	e17ffd15 	stw	r5,-12(fp)
   40c04:	e1bffe15 	stw	r6,-8(fp)
   40c08:	e1ffff15 	stw	r7,-4(fp)
    alt_u8 Data=0;
   40c0c:	e03ffa05 	stb	zero,-24(fp)
    int i;
    
    // assume SCL = low
    
    SDA_DIR_IN(data_base);  // set data read mode
   40c10:	e0bffd17 	ldw	r2,-12(fp)
   40c14:	10800104 	addi	r2,r2,4
   40c18:	0007883a 	mov	r3,zero
   40c1c:	10c00035 	stwio	r3,0(r2)
    SCL_LOW(clk_base); // clock low
   40c20:	e0bffc17 	ldw	r2,-16(fp)
   40c24:	0007883a 	mov	r3,zero
   40c28:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // clock low delay
   40c2c:	01000044 	movi	r4,1
   40c30:	0058b500 	call	58b50 <usleep>

    for(i=0;i<8;i++){
   40c34:	e03ffb15 	stw	zero,-20(fp)
   40c38:	00001606 	br	40c94 <i2c_read+0xa8>
        Data <<= 1;
   40c3c:	e0bffa03 	ldbu	r2,-24(fp)
   40c40:	1085883a 	add	r2,r2,r2
   40c44:	e0bffa05 	stb	r2,-24(fp)
        SCL_HIGH(clk_base);  // clock high
   40c48:	e0bffc17 	ldw	r2,-16(fp)
   40c4c:	00c00044 	movi	r3,1
   40c50:	10c00035 	stwio	r3,0(r2)
        SCL_DELAY;
   40c54:	01000044 	movi	r4,1
   40c58:	0058b500 	call	58b50 <usleep>
        if (SDA_READ(data_base))  // read data   
   40c5c:	e0bffd17 	ldw	r2,-12(fp)
   40c60:	10800037 	ldwio	r2,0(r2)
   40c64:	10000326 	beq	r2,zero,40c74 <i2c_read+0x88>
            Data |= 0x01;
   40c68:	e0bffa03 	ldbu	r2,-24(fp)
   40c6c:	10800054 	ori	r2,r2,1
   40c70:	e0bffa05 	stb	r2,-24(fp)
        SCL_LOW(clk_base);  // clock log  
   40c74:	e0bffc17 	ldw	r2,-16(fp)
   40c78:	0007883a 	mov	r3,zero
   40c7c:	10c00035 	stwio	r3,0(r2)
        SCL_DELAY;
   40c80:	01000044 	movi	r4,1
   40c84:	0058b500 	call	58b50 <usleep>
    
    SDA_DIR_IN(data_base);  // set data read mode
    SCL_LOW(clk_base); // clock low
    SCL_DELAY; // clock low delay

    for(i=0;i<8;i++){
   40c88:	e0bffb17 	ldw	r2,-20(fp)
   40c8c:	10800044 	addi	r2,r2,1
   40c90:	e0bffb15 	stw	r2,-20(fp)
   40c94:	e0bffb17 	ldw	r2,-20(fp)
   40c98:	10800210 	cmplti	r2,r2,8
   40c9c:	103fe71e 	bne	r2,zero,40c3c <__alt_data_end+0xfffc243c>
        SCL_LOW(clk_base);  // clock log  
        SCL_DELAY;
    }
    
    // send ACK
    SCL_LOW(clk_base);  // new, make sure data change at clk low
   40ca0:	e0bffc17 	ldw	r2,-16(fp)
   40ca4:	0007883a 	mov	r3,zero
   40ca8:	10c00035 	stwio	r3,0(r2)
    SDA_DIR_OUT(data_base);  // set data write mode
   40cac:	e0bffd17 	ldw	r2,-12(fp)
   40cb0:	10800104 	addi	r2,r2,4
   40cb4:	1007883a 	mov	r3,r2
   40cb8:	00800044 	movi	r2,1
   40cbc:	18800035 	stwio	r2,0(r3)
    if (bAck)
   40cc0:	e0bfff17 	ldw	r2,-4(fp)
   40cc4:	10000426 	beq	r2,zero,40cd8 <i2c_read+0xec>
        SDA_LOW(data_base);
   40cc8:	e0bffd17 	ldw	r2,-12(fp)
   40ccc:	0007883a 	mov	r3,zero
   40cd0:	10c00035 	stwio	r3,0(r2)
   40cd4:	00000306 	br	40ce4 <i2c_read+0xf8>
    else
        SDA_HIGH(data_base);
   40cd8:	e0bffd17 	ldw	r2,-12(fp)
   40cdc:	00c00044 	movi	r3,1
   40ce0:	10c00035 	stwio	r3,0(r2)
    SCL_HIGH(clk_base); // clock high
   40ce4:	e0bffc17 	ldw	r2,-16(fp)
   40ce8:	00c00044 	movi	r3,1
   40cec:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // clock high  delay
   40cf0:	01000044 	movi	r4,1
   40cf4:	0058b500 	call	58b50 <usleep>
    SCL_LOW(clk_base); // clock low
   40cf8:	e0bffc17 	ldw	r2,-16(fp)
   40cfc:	0007883a 	mov	r3,zero
   40d00:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // clock low delay
   40d04:	01000044 	movi	r4,1
   40d08:	0058b500 	call	58b50 <usleep>
    SDA_LOW(data_base);  // data low
   40d0c:	e0bffd17 	ldw	r2,-12(fp)
   40d10:	0007883a 	mov	r3,zero
   40d14:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // data low delay
   40d18:	01000044 	movi	r4,1
   40d1c:	0058b500 	call	58b50 <usleep>
//    SDA_DIR_IN;  // set data read mode
    
    *pData = Data;
   40d20:	e0bffe17 	ldw	r2,-8(fp)
   40d24:	e0fffa03 	ldbu	r3,-24(fp)
   40d28:	10c00005 	stb	r3,0(r2)
}
   40d2c:	0001883a 	nop
   40d30:	e037883a 	mov	sp,fp
   40d34:	dfc00117 	ldw	ra,4(sp)
   40d38:	df000017 	ldw	fp,0(sp)
   40d3c:	dec00204 	addi	sp,sp,8
   40d40:	f800283a 	ret

00040d44 <CLOCK_Test>:
#include "terasic_includes.h"
#include "clock.h"

bool CLOCK_Test(alt_u32 BaseAddr, alt_u32 TargetCnt, alt_u32 *pclk1, alt_u32 *pclk2){
   40d44:	defff404 	addi	sp,sp,-48
   40d48:	dfc00b15 	stw	ra,44(sp)
   40d4c:	df000a15 	stw	fp,40(sp)
   40d50:	df000a04 	addi	fp,sp,40
   40d54:	e13ffc15 	stw	r4,-16(fp)
   40d58:	e17ffd15 	stw	r5,-12(fp)
   40d5c:	e1bffe15 	stw	r6,-8(fp)
   40d60:	e1ffff15 	stw	r7,-4(fp)
    bool bSuccess = TRUE;
   40d64:	00800044 	movi	r2,1
   40d68:	e0bff615 	stw	r2,-40(fp)
    const alt_u16 reg_start = 0;
   40d6c:	e03ff90d 	sth	zero,-28(fp)
    const alt_u16 reg_clk1 = 1;
   40d70:	00800044 	movi	r2,1
   40d74:	e0bff98d 	sth	r2,-26(fp)
    const alt_u16 reg_clk2 = 2;
   40d78:	00800084 	movi	r2,2
   40d7c:	e0bffa0d 	sth	r2,-24(fp)
    alt_u32 Status=1;
   40d80:	00800044 	movi	r2,1
   40d84:	e0bff715 	stw	r2,-36(fp)
    const alt_u32 RunFlag;
    int cnt=0;
   40d88:	e03ff815 	stw	zero,-32(fp)
    // start
    IOWR(BaseAddr,reg_start, 0x0000);  // stop
   40d8c:	e0bff90b 	ldhu	r2,-28(fp)
   40d90:	1085883a 	add	r2,r2,r2
   40d94:	1085883a 	add	r2,r2,r2
   40d98:	1007883a 	mov	r3,r2
   40d9c:	e0bffc17 	ldw	r2,-16(fp)
   40da0:	1885883a 	add	r2,r3,r2
   40da4:	0007883a 	mov	r3,zero
   40da8:	10c00035 	stwio	r3,0(r2)
    //IOWR(BaseAddr,reg_start, 0x03FF);  // start
    IOWR(BaseAddr,reg_start, TargetCnt);  // start
   40dac:	e0bff90b 	ldhu	r2,-28(fp)
   40db0:	1085883a 	add	r2,r2,r2
   40db4:	1085883a 	add	r2,r2,r2
   40db8:	1007883a 	mov	r3,r2
   40dbc:	e0bffc17 	ldw	r2,-16(fp)
   40dc0:	1885883a 	add	r2,r3,r2
   40dc4:	1007883a 	mov	r3,r2
   40dc8:	e0bffd17 	ldw	r2,-12(fp)
   40dcc:	18800035 	stwio	r2,0(r3)
    usleep(100*1000);
   40dd0:	010000b4 	movhi	r4,2
   40dd4:	2121a804 	addi	r4,r4,-31072
   40dd8:	0058b500 	call	58b50 <usleep>
    // wait finish
    while((Status & RunFlag) && cnt++ < 1000){
   40ddc:	00000806 	br	40e00 <CLOCK_Test+0xbc>
        Status = IORD(BaseAddr, reg_start);
   40de0:	e0bff90b 	ldhu	r2,-28(fp)
   40de4:	1085883a 	add	r2,r2,r2
   40de8:	1085883a 	add	r2,r2,r2
   40dec:	1007883a 	mov	r3,r2
   40df0:	e0bffc17 	ldw	r2,-16(fp)
   40df4:	1885883a 	add	r2,r3,r2
   40df8:	10800037 	ldwio	r2,0(r2)
   40dfc:	e0bff715 	stw	r2,-36(fp)
    IOWR(BaseAddr,reg_start, 0x0000);  // stop
    //IOWR(BaseAddr,reg_start, 0x03FF);  // start
    IOWR(BaseAddr,reg_start, TargetCnt);  // start
    usleep(100*1000);
    // wait finish
    while((Status & RunFlag) && cnt++ < 1000){
   40e00:	e0fff717 	ldw	r3,-36(fp)
   40e04:	e0bffb17 	ldw	r2,-20(fp)
   40e08:	1884703a 	and	r2,r3,r2
   40e0c:	10000526 	beq	r2,zero,40e24 <CLOCK_Test+0xe0>
   40e10:	e0bff817 	ldw	r2,-32(fp)
   40e14:	10c00044 	addi	r3,r2,1
   40e18:	e0fff815 	stw	r3,-32(fp)
   40e1c:	1080fa10 	cmplti	r2,r2,1000
   40e20:	103fef1e 	bne	r2,zero,40de0 <__alt_data_end+0xfffc25e0>
        Status = IORD(BaseAddr, reg_start);
    }    
    // check result
    if ((Status & RunFlag) == 0){     
   40e24:	e0fff717 	ldw	r3,-36(fp)
   40e28:	e0bffb17 	ldw	r2,-20(fp)
   40e2c:	1884703a 	and	r2,r3,r2
   40e30:	1000151e 	bne	r2,zero,40e88 <CLOCK_Test+0x144>
        *pclk1 = IORD(BaseAddr, reg_clk1);
   40e34:	e0bff98b 	ldhu	r2,-26(fp)
   40e38:	1085883a 	add	r2,r2,r2
   40e3c:	1085883a 	add	r2,r2,r2
   40e40:	1007883a 	mov	r3,r2
   40e44:	e0bffc17 	ldw	r2,-16(fp)
   40e48:	1885883a 	add	r2,r3,r2
   40e4c:	10800037 	ldwio	r2,0(r2)
   40e50:	1007883a 	mov	r3,r2
   40e54:	e0bffe17 	ldw	r2,-8(fp)
   40e58:	10c00015 	stw	r3,0(r2)
        *pclk2 = IORD(BaseAddr, reg_clk2);
   40e5c:	e0bffa0b 	ldhu	r2,-24(fp)
   40e60:	1085883a 	add	r2,r2,r2
   40e64:	1085883a 	add	r2,r2,r2
   40e68:	1007883a 	mov	r3,r2
   40e6c:	e0bffc17 	ldw	r2,-16(fp)
   40e70:	1885883a 	add	r2,r3,r2
   40e74:	10800037 	ldwio	r2,0(r2)
   40e78:	1007883a 	mov	r3,r2
   40e7c:	e0bfff17 	ldw	r2,-4(fp)
   40e80:	10c00015 	stw	r3,0(r2)
   40e84:	00000506 	br	40e9c <CLOCK_Test+0x158>
    }else{
        *pclk1 = 0;
   40e88:	e0bffe17 	ldw	r2,-8(fp)
   40e8c:	10000015 	stw	zero,0(r2)
        *pclk2 = 0;
   40e90:	e0bfff17 	ldw	r2,-4(fp)
   40e94:	10000015 	stw	zero,0(r2)
        bSuccess = FALSE;
   40e98:	e03ff615 	stw	zero,-40(fp)
    }        
    IOWR(BaseAddr,reg_start, 0x0000);  // stop
   40e9c:	e0bff90b 	ldhu	r2,-28(fp)
   40ea0:	1085883a 	add	r2,r2,r2
   40ea4:	1085883a 	add	r2,r2,r2
   40ea8:	1007883a 	mov	r3,r2
   40eac:	e0bffc17 	ldw	r2,-16(fp)
   40eb0:	1885883a 	add	r2,r3,r2
   40eb4:	0007883a 	mov	r3,zero
   40eb8:	10c00035 	stwio	r3,0(r2)
    return bSuccess;
   40ebc:	e0bff617 	ldw	r2,-40(fp)
}
   40ec0:	e037883a 	mov	sp,fp
   40ec4:	dfc00117 	ldw	ra,4(sp)
   40ec8:	df000017 	ldw	fp,0(sp)
   40ecc:	dec00204 	addi	sp,sp,8
   40ed0:	f800283a 	ret

00040ed4 <GUI_ShowMenu>:
    {TEST_CDCM, "CDCM61004"}, // ok
    {TEST_Si570, "Si570"} // ok
};


void GUI_ShowMenu(void){
   40ed4:	defffc04 	addi	sp,sp,-16
   40ed8:	dfc00315 	stw	ra,12(sp)
   40edc:	df000215 	stw	fp,8(sp)
   40ee0:	df000204 	addi	fp,sp,8
    int nNum,i;
    
    nNum = sizeof(szFuncList)/sizeof(szFuncList[0]);
   40ee4:	008000c4 	movi	r2,3
   40ee8:	e0bfff15 	stw	r2,-4(fp)
    printf("======= Stratix V Demo Program =======\r\n");
   40eec:	010001b4 	movhi	r4,6
   40ef0:	212af604 	addi	r4,r4,-21544
   40ef4:	00458a40 	call	458a4 <puts>
    for(i=0;i<nNum;i++){
   40ef8:	e03ffe15 	stw	zero,-8(fp)
   40efc:	00000e06 	br	40f38 <GUI_ShowMenu+0x64>
        printf("[%d] %s\r\n", i, szFuncList[i].szName);
   40f00:	e0bffe17 	ldw	r2,-8(fp)
   40f04:	10802124 	muli	r2,r2,132
   40f08:	10c00104 	addi	r3,r2,4
   40f0c:	008001b4 	movhi	r2,6
   40f10:	10ae1304 	addi	r2,r2,-18356
   40f14:	1885883a 	add	r2,r3,r2
   40f18:	100d883a 	mov	r6,r2
   40f1c:	e17ffe17 	ldw	r5,-8(fp)
   40f20:	010001b4 	movhi	r4,6
   40f24:	212b0004 	addi	r4,r4,-21504
   40f28:	00457a80 	call	457a8 <printf>
void GUI_ShowMenu(void){
    int nNum,i;
    
    nNum = sizeof(szFuncList)/sizeof(szFuncList[0]);
    printf("======= Stratix V Demo Program =======\r\n");
    for(i=0;i<nNum;i++){
   40f2c:	e0bffe17 	ldw	r2,-8(fp)
   40f30:	10800044 	addi	r2,r2,1
   40f34:	e0bffe15 	stw	r2,-8(fp)
   40f38:	e0fffe17 	ldw	r3,-8(fp)
   40f3c:	e0bfff17 	ldw	r2,-4(fp)
   40f40:	18bfef16 	blt	r3,r2,40f00 <__alt_data_end+0xfffc2700>
        printf("[%d] %s\r\n", i, szFuncList[i].szName);
    }
    printf("Input your chioce:");
   40f44:	010001b4 	movhi	r4,6
   40f48:	212b0304 	addi	r4,r4,-21492
   40f4c:	00457a80 	call	457a8 <printf>
}
   40f50:	0001883a 	nop
   40f54:	e037883a 	mov	sp,fp
   40f58:	dfc00117 	ldw	ra,4(sp)
   40f5c:	df000017 	ldw	fp,0(sp)
   40f60:	dec00204 	addi	sp,sp,8
   40f64:	f800283a 	ret

00040f68 <GUI_QueryUser>:

int GUI_QueryUser(void){
   40f68:	defffd04 	addi	sp,sp,-12
   40f6c:	dfc00215 	stw	ra,8(sp)
   40f70:	df000115 	stw	fp,4(sp)
   40f74:	df000104 	addi	fp,sp,4
    int nChoice = 0;
   40f78:	e03fff15 	stw	zero,-4(fp)
    scanf("%d", &nChoice);
   40f7c:	e17fff04 	addi	r5,fp,-4
   40f80:	010001b4 	movhi	r4,6
   40f84:	212b0804 	addi	r4,r4,-21472
   40f88:	00458b80 	call	458b8 <scanf>
    printf("%d\r\n", nChoice);
   40f8c:	e0bfff17 	ldw	r2,-4(fp)
   40f90:	100b883a 	mov	r5,r2
   40f94:	010001b4 	movhi	r4,6
   40f98:	212b0904 	addi	r4,r4,-21468
   40f9c:	00457a80 	call	457a8 <printf>
    return nChoice;
   40fa0:	e0bfff17 	ldw	r2,-4(fp)
}
   40fa4:	e037883a 	mov	sp,fp
   40fa8:	dfc00117 	ldw	ra,4(sp)
   40fac:	df000017 	ldw	fp,0(sp)
   40fb0:	dec00204 	addi	sp,sp,8
   40fb4:	f800283a 	ret

00040fb8 <main>:

//===============================================================
int main(void){
   40fb8:	defffb04 	addi	sp,sp,-20
   40fbc:	dfc00415 	stw	ra,16(sp)
   40fc0:	df000315 	stw	fp,12(sp)
   40fc4:	df000304 	addi	fp,sp,12
    int nChoice;
    int nNum;
    bool bPass;
    
    nNum = sizeof(szFuncList)/sizeof(szFuncList[0]);
   40fc8:	008000c4 	movi	r2,3
   40fcc:	e0bffd15 	stw	r2,-12(fp)
    while(1){
    	GUI_ShowMenu();
   40fd0:	0040ed40 	call	40ed4 <GUI_ShowMenu>
        nChoice = GUI_QueryUser();
   40fd4:	0040f680 	call	40f68 <GUI_QueryUser>
   40fd8:	e0bffe15 	stw	r2,-8(fp)
        if (nChoice >= 0 && nChoice < nNum){
   40fdc:	e0bffe17 	ldw	r2,-8(fp)
   40fe0:	103ffb16 	blt	r2,zero,40fd0 <__alt_data_end+0xfffc27d0>
   40fe4:	e0fffe17 	ldw	r3,-8(fp)
   40fe8:	e0bffd17 	ldw	r2,-12(fp)
   40fec:	18bff80e 	bge	r3,r2,40fd0 <__alt_data_end+0xfffc27d0>
            bPass = szFuncList[nChoice].func();
   40ff0:	008001b4 	movhi	r2,6
   40ff4:	10ae1304 	addi	r2,r2,-18356
   40ff8:	e0fffe17 	ldw	r3,-8(fp)
   40ffc:	18c02124 	muli	r3,r3,132
   41000:	10c5883a 	add	r2,r2,r3
   41004:	10800017 	ldw	r2,0(r2)
   41008:	103ee83a 	callr	r2
   4100c:	e0bfff15 	stw	r2,-4(fp)
            printf("%s Test:%s\r\n", szFuncList[nChoice].szName, bPass?"PASS":"NG");
   41010:	e0bffe17 	ldw	r2,-8(fp)
   41014:	10802124 	muli	r2,r2,132
   41018:	10c00104 	addi	r3,r2,4
   4101c:	008001b4 	movhi	r2,6
   41020:	10ae1304 	addi	r2,r2,-18356
   41024:	1887883a 	add	r3,r3,r2
   41028:	e0bfff17 	ldw	r2,-4(fp)
   4102c:	10000326 	beq	r2,zero,4103c <main+0x84>
   41030:	008001b4 	movhi	r2,6
   41034:	10ab0b04 	addi	r2,r2,-21460
   41038:	00000206 	br	41044 <main+0x8c>
   4103c:	008001b4 	movhi	r2,6
   41040:	10ab0d04 	addi	r2,r2,-21452
   41044:	100d883a 	mov	r6,r2
   41048:	180b883a 	mov	r5,r3
   4104c:	010001b4 	movhi	r4,6
   41050:	212b0e04 	addi	r4,r4,-21448
   41054:	00457a80 	call	457a8 <printf>
        }            
    }     
   41058:	003fdd06 	br	40fd0 <__alt_data_end+0xfffc27d0>

0004105c <TEST_Temperature>:
    
}


bool TEST_Temperature(void){
   4105c:	defffb04 	addi	sp,sp,-20
   41060:	dfc00415 	stw	ra,16(sp)
   41064:	df000315 	stw	fp,12(sp)
   41068:	df000304 	addi	fp,sp,12
    bool bPass = FALSE;
   4106c:	e03ffe15 	stw	zero,-8(fp)
    const alt_u8 DeviceAddr = 0x30;
   41070:	00800c04 	movi	r2,48
   41074:	e0bfff05 	stb	r2,-4(fp)
    alt_u8 LocalTemp, RemoteTemp;

    bPass = I2C_Read(TEMP_SCL_BASE, TEMP_SDA_BASE, DeviceAddr, 0x00, &LocalTemp);
   41078:	e0bfff03 	ldbu	r2,-4(fp)
   4107c:	10c03fcc 	andi	r3,r2,255
   41080:	18c0201c 	xori	r3,r3,128
   41084:	18ffe004 	addi	r3,r3,-128
   41088:	e0bfff44 	addi	r2,fp,-3
   4108c:	d8800015 	stw	r2,0(sp)
   41090:	000f883a 	mov	r7,zero
   41094:	180d883a 	mov	r6,r3
   41098:	01400234 	movhi	r5,8
   4109c:	29441004 	addi	r5,r5,4160
   410a0:	01000234 	movhi	r4,8
   410a4:	21044004 	addi	r4,r4,4352
   410a8:	00402e40 	call	402e4 <I2C_Read>
   410ac:	e0bffe15 	stw	r2,-8(fp)
    if (bPass)
   410b0:	e0bffe17 	ldw	r2,-8(fp)
   410b4:	10000e26 	beq	r2,zero,410f0 <TEST_Temperature+0x94>
        bPass = I2C_Read(TEMP_SCL_BASE, TEMP_SDA_BASE, DeviceAddr, 0x01, &RemoteTemp);
   410b8:	e0bfff03 	ldbu	r2,-4(fp)
   410bc:	10c03fcc 	andi	r3,r2,255
   410c0:	18c0201c 	xori	r3,r3,128
   410c4:	18ffe004 	addi	r3,r3,-128
   410c8:	e0bfff84 	addi	r2,fp,-2
   410cc:	d8800015 	stw	r2,0(sp)
   410d0:	01c00044 	movi	r7,1
   410d4:	180d883a 	mov	r6,r3
   410d8:	01400234 	movhi	r5,8
   410dc:	29441004 	addi	r5,r5,4160
   410e0:	01000234 	movhi	r4,8
   410e4:	21044004 	addi	r4,r4,4352
   410e8:	00402e40 	call	402e4 <I2C_Read>
   410ec:	e0bffe15 	stw	r2,-8(fp)

    if (bPass){
   410f0:	e0bffe17 	ldw	r2,-8(fp)
   410f4:	10001126 	beq	r2,zero,4113c <TEST_Temperature+0xe0>
        printf("Local Temperature:%d\r\n", (char)LocalTemp);
   410f8:	e0bfff43 	ldbu	r2,-3(fp)
   410fc:	10803fcc 	andi	r2,r2,255
   41100:	1080201c 	xori	r2,r2,128
   41104:	10bfe004 	addi	r2,r2,-128
   41108:	100b883a 	mov	r5,r2
   4110c:	010001b4 	movhi	r4,6
   41110:	212b1204 	addi	r4,r4,-21432
   41114:	00457a80 	call	457a8 <printf>
        printf("Remote Temperature:%d\r\n", (char)RemoteTemp);
   41118:	e0bfff83 	ldbu	r2,-2(fp)
   4111c:	10803fcc 	andi	r2,r2,255
   41120:	1080201c 	xori	r2,r2,128
   41124:	10bfe004 	addi	r2,r2,-128
   41128:	100b883a 	mov	r5,r2
   4112c:	010001b4 	movhi	r4,6
   41130:	212b1804 	addi	r4,r4,-21408
   41134:	00457a80 	call	457a8 <printf>
   41138:	00000306 	br	41148 <TEST_Temperature+0xec>
    }else{
        printf("Failed to read temperature\r\n");
   4113c:	010001b4 	movhi	r4,6
   41140:	212b1e04 	addi	r4,r4,-21384
   41144:	00458a40 	call	458a4 <puts>
    }        
    return bPass;
   41148:	e0bffe17 	ldw	r2,-8(fp)
}
   4114c:	e037883a 	mov	sp,fp
   41150:	dfc00117 	ldw	ra,4(sp)
   41154:	df000017 	ldw	fp,0(sp)
   41158:	dec00204 	addi	sp,sp,8
   4115c:	f800283a 	ret

00041160 <TEST_CDCM>:




//===============================================================
bool TEST_CDCM(void){
   41160:	deffda04 	addi	sp,sp,-152
   41164:	dfc02515 	stw	ra,148(sp)
   41168:	df002415 	stw	fp,144(sp)
   4116c:	dc402315 	stw	r17,140(sp)
   41170:	dc002215 	stw	r16,136(sp)
   41174:	df002404 	addi	fp,sp,144
		alt_u8 CLK_SETTING;
		float FREQUENCY;
	}CDCM_CONFIG;

	// input is 25 MHZ
	CDCM_CONFIG szConfig[] = {
   41178:	008001b4 	movhi	r2,6
   4117c:	10ab5f04 	addi	r2,r2,-21124
   41180:	e0ffe504 	addi	r3,fp,-108
   41184:	1009883a 	mov	r4,r2
   41188:	00801604 	movi	r2,88
   4118c:	100d883a 	mov	r6,r2
   41190:	200b883a 	mov	r5,r4
   41194:	1809883a 	mov	r4,r3
   41198:	00456300 	call	45630 <memcpy>
		{10, 250.0},//1010
		{11, 312.5},//1011
		{12, 625.0}//1100
	};

	bool bPass = TRUE, bSuccess;
   4119c:	00800044 	movi	r2,1
   411a0:	e0bfdc15 	stw	r2,-144(fp)
	int nNum, i, c;
	const int nTargetCnt = 1000;
   411a4:	0080fa04 	movi	r2,1000
   411a8:	e0bfdd15 	stw	r2,-140(fp)
	const int nTol = 3;
   411ac:	008000c4 	movi	r2,3
   411b0:	e0bfde15 	stw	r2,-136(fp)
	alt_u32 sfp1g_ref_clk_ctrl, sata_ref_clk_ctrl, total_ref_clk_ctrl;
	



	nNum = sizeof(szConfig)/sizeof(szConfig[0]);
   411b4:	008002c4 	movi	r2,11
   411b8:	e0bfdf15 	stw	r2,-132(fp)
	
	// show menu
	for(i=0;i<nNum;i++){
   411bc:	e03ffb15 	stw	zero,-20(fp)
   411c0:	00001406 	br	41214 <TEST_CDCM+0xb4>
		printf("%d: %.3f MHz\r\n",i, szConfig[i].FREQUENCY);
   411c4:	e43ffb17 	ldw	r16,-20(fp)
   411c8:	e0bffb17 	ldw	r2,-20(fp)
   411cc:	100490fa 	slli	r2,r2,3
   411d0:	e0ffdc04 	addi	r3,fp,-144
   411d4:	1885883a 	add	r2,r3,r2
   411d8:	10800a04 	addi	r2,r2,40
   411dc:	10c00017 	ldw	r3,0(r2)
   411e0:	1809883a 	mov	r4,r3
   411e4:	00452940 	call	45294 <__extendsfdf2>
   411e8:	1009883a 	mov	r4,r2
   411ec:	180b883a 	mov	r5,r3
   411f0:	200d883a 	mov	r6,r4
   411f4:	280f883a 	mov	r7,r5
   411f8:	800b883a 	mov	r5,r16
   411fc:	010001b4 	movhi	r4,6
   41200:	212b2504 	addi	r4,r4,-21356
   41204:	00457a80 	call	457a8 <printf>


	nNum = sizeof(szConfig)/sizeof(szConfig[0]);
	
	// show menu
	for(i=0;i<nNum;i++){
   41208:	e0bffb17 	ldw	r2,-20(fp)
   4120c:	10800044 	addi	r2,r2,1
   41210:	e0bffb15 	stw	r2,-20(fp)
   41214:	e0fffb17 	ldw	r3,-20(fp)
   41218:	e0bfdf17 	ldw	r2,-132(fp)
   4121c:	18bfe916 	blt	r3,r2,411c4 <__alt_data_end+0xfffc29c4>
		printf("%d: %.3f MHz\r\n",i, szConfig[i].FREQUENCY);
	}
	printf("Other:exit\r\n");
   41220:	010001b4 	movhi	r4,6
   41224:	212b2904 	addi	r4,r4,-21340
   41228:	00458a40 	call	458a4 <puts>
	printf("please select:");
   4122c:	010001b4 	movhi	r4,6
   41230:	212b2c04 	addi	r4,r4,-21328
   41234:	00457a80 	call	457a8 <printf>
	scanf("%d",&i);
   41238:	e0bffb04 	addi	r2,fp,-20
   4123c:	100b883a 	mov	r5,r2
   41240:	010001b4 	movhi	r4,6
   41244:	212b0804 	addi	r4,r4,-21472
   41248:	00458b80 	call	458b8 <scanf>

	if (i>=nNum)
   4124c:	e0fffb17 	ldw	r3,-20(fp)
   41250:	e0bfdf17 	ldw	r2,-132(fp)
   41254:	18800216 	blt	r3,r2,41260 <TEST_CDCM+0x100>
		return FALSE;
   41258:	0005883a 	mov	r2,zero
   4125c:	00008906 	br	41484 <TEST_CDCM+0x324>



	printf("===== CDCM61004 Programming =====\r\n");
   41260:	010001b4 	movhi	r4,6
   41264:	212b3004 	addi	r4,r4,-21312
   41268:	00458a40 	call	458a4 <puts>

		printf("%.3f MHz Test Result:\r\n", szConfig[i].FREQUENCY);
   4126c:	e0bffb17 	ldw	r2,-20(fp)
   41270:	100490fa 	slli	r2,r2,3
   41274:	e0ffdc04 	addi	r3,fp,-144
   41278:	1885883a 	add	r2,r3,r2
   4127c:	10800a04 	addi	r2,r2,40
   41280:	10c00017 	ldw	r3,0(r2)
   41284:	1809883a 	mov	r4,r3
   41288:	00452940 	call	45294 <__extendsfdf2>
   4128c:	100d883a 	mov	r6,r2
   41290:	180f883a 	mov	r7,r3
   41294:	300b883a 	mov	r5,r6
   41298:	380d883a 	mov	r6,r7
   4129c:	010001b4 	movhi	r4,6
   412a0:	212b3904 	addi	r4,r4,-21276
   412a4:	00457a80 	call	457a8 <printf>
		/////////////////
		// programming

		//{clk3_set_wr, clk2_set_wr, clk1_set_wr} <= s_writedata[11:0];
		sfp1g_ref_clk_ctrl = 1; // disable
   412a8:	00800044 	movi	r2,1
   412ac:	e0bfe015 	stw	r2,-128(fp)
		sata_ref_clk_ctrl = szConfig[i].CLK_SETTING;
   412b0:	e0bffb17 	ldw	r2,-20(fp)
   412b4:	100490fa 	slli	r2,r2,3
   412b8:	e0ffdc04 	addi	r3,fp,-144
   412bc:	1885883a 	add	r2,r3,r2
   412c0:	10800904 	addi	r2,r2,36
   412c4:	10800003 	ldbu	r2,0(r2)
   412c8:	10803fcc 	andi	r2,r2,255
   412cc:	e0bfe115 	stw	r2,-124(fp)
		total_ref_clk_ctrl = (sata_ref_clk_ctrl << 4) | sfp1g_ref_clk_ctrl;
   412d0:	e0bfe117 	ldw	r2,-124(fp)
   412d4:	1006913a 	slli	r3,r2,4
   412d8:	e0bfe017 	ldw	r2,-128(fp)
   412dc:	1884b03a 	or	r2,r3,r2
   412e0:	e0bfe215 	stw	r2,-120(fp)
		IOWR(CDCM_BASE, 0x00, total_ref_clk_ctrl );
   412e4:	e0bfe217 	ldw	r2,-120(fp)
   412e8:	0007883a 	mov	r3,zero
   412ec:	18800035 	stwio	r2,0(r3)

		// wait stable
		usleep(300*1000);
   412f0:	01000174 	movhi	r4,5
   412f4:	2124f804 	addi	r4,r4,-27680
   412f8:	0058b500 	call	58b50 <usleep>

		/////////////////
		// measure
		bSuccess =  CLOCK_Test(REF_CLOCK_SATA_COUNT_BASE, nTargetCnt, &clk1, &clk2);
   412fc:	e0bfdd17 	ldw	r2,-140(fp)
   41300:	e13ffd04 	addi	r4,fp,-12
   41304:	e0fffc04 	addi	r3,fp,-16
   41308:	200f883a 	mov	r7,r4
   4130c:	180d883a 	mov	r6,r3
   41310:	100b883a 	mov	r5,r2
   41314:	01000234 	movhi	r4,8
   41318:	21045404 	addi	r4,r4,4432
   4131c:	0040d440 	call	40d44 <CLOCK_Test>
   41320:	e0bfe315 	stw	r2,-116(fp)
		if (!bSuccess){
   41324:	e0bfe317 	ldw	r2,-116(fp)
   41328:	1000071e 	bne	r2,zero,41348 <TEST_CDCM+0x1e8>
			bPass = FALSE;
   4132c:	e03fdc15 	stw	zero,-144(fp)
			printf("  %s ref clock test NG\r\n", "SATA");
   41330:	014001b4 	movhi	r5,6
   41334:	296b3f04 	addi	r5,r5,-21252
   41338:	010001b4 	movhi	r4,6
   4133c:	212b4104 	addi	r4,r4,-21244
   41340:	00457a80 	call	457a8 <printf>
   41344:	00004e06 	br	41480 <TEST_CDCM+0x320>
		}else{
			ScaledClk2 = (int)((float) clk2 * 50.0 / szConfig[i].FREQUENCY);
   41348:	e0bffd17 	ldw	r2,-12(fp)
   4134c:	1009883a 	mov	r4,r2
   41350:	0042c280 	call	42c28 <__floatunsisf>
   41354:	1007883a 	mov	r3,r2
   41358:	1809883a 	mov	r4,r3
   4135c:	00452940 	call	45294 <__extendsfdf2>
   41360:	1011883a 	mov	r8,r2
   41364:	1813883a 	mov	r9,r3
   41368:	000d883a 	mov	r6,zero
   4136c:	01d01274 	movhi	r7,16457
   41370:	4009883a 	mov	r4,r8
   41374:	480b883a 	mov	r5,r9
   41378:	004407c0 	call	4407c <__muldf3>
   4137c:	1009883a 	mov	r4,r2
   41380:	180b883a 	mov	r5,r3
   41384:	2021883a 	mov	r16,r4
   41388:	2823883a 	mov	r17,r5
   4138c:	e0bffb17 	ldw	r2,-20(fp)
   41390:	100490fa 	slli	r2,r2,3
   41394:	e0ffdc04 	addi	r3,fp,-144
   41398:	1885883a 	add	r2,r3,r2
   4139c:	10800a04 	addi	r2,r2,40
   413a0:	10c00017 	ldw	r3,0(r2)
   413a4:	1809883a 	mov	r4,r3
   413a8:	00452940 	call	45294 <__extendsfdf2>
   413ac:	1009883a 	mov	r4,r2
   413b0:	180b883a 	mov	r5,r3
   413b4:	200d883a 	mov	r6,r4
   413b8:	280f883a 	mov	r7,r5
   413bc:	8009883a 	mov	r4,r16
   413c0:	880b883a 	mov	r5,r17
   413c4:	00435c40 	call	435c4 <__divdf3>
   413c8:	1009883a 	mov	r4,r2
   413cc:	180b883a 	mov	r5,r3
   413d0:	2005883a 	mov	r2,r4
   413d4:	2807883a 	mov	r3,r5
   413d8:	1009883a 	mov	r4,r2
   413dc:	180b883a 	mov	r5,r3
   413e0:	00450900 	call	45090 <__fixdfsi>
   413e4:	e0bfe415 	stw	r2,-112(fp)
			if (abs(nTargetCnt-clk1)<nTol && abs(clk1-ScaledClk2)<nTol){
   413e8:	e0ffdd17 	ldw	r3,-140(fp)
   413ec:	e0bffc17 	ldw	r2,-16(fp)
   413f0:	1885c83a 	sub	r2,r3,r2
   413f4:	1000010e 	bge	r2,zero,413fc <TEST_CDCM+0x29c>
   413f8:	0085c83a 	sub	r2,zero,r2
   413fc:	1007883a 	mov	r3,r2
   41400:	e0bfde17 	ldw	r2,-136(fp)
   41404:	1880130e 	bge	r3,r2,41454 <TEST_CDCM+0x2f4>
   41408:	e0fffc17 	ldw	r3,-16(fp)
   4140c:	e0bfe417 	ldw	r2,-112(fp)
   41410:	1885c83a 	sub	r2,r3,r2
   41414:	1000010e 	bge	r2,zero,4141c <TEST_CDCM+0x2bc>
   41418:	0085c83a 	sub	r2,zero,r2
   4141c:	1007883a 	mov	r3,r2
   41420:	e0bfde17 	ldw	r2,-136(fp)
   41424:	18800b0e 	bge	r3,r2,41454 <TEST_CDCM+0x2f4>
				printf("  %s ref clock test PASS (clk1=%d, clk2=%d)\r\n", "SATA", (int)clk1, (int)clk2);
   41428:	e0bffc17 	ldw	r2,-16(fp)
   4142c:	1007883a 	mov	r3,r2
   41430:	e0bffd17 	ldw	r2,-12(fp)
   41434:	100f883a 	mov	r7,r2
   41438:	180d883a 	mov	r6,r3
   4143c:	014001b4 	movhi	r5,6
   41440:	296b3f04 	addi	r5,r5,-21252
   41444:	010001b4 	movhi	r4,6
   41448:	212b4804 	addi	r4,r4,-21216
   4144c:	00457a80 	call	457a8 <printf>
   41450:	00000b06 	br	41480 <TEST_CDCM+0x320>
			}else{
				printf("  %s ref clock test NG (clk1=%d, clk2=%d)\r\n", "SATA", (int)clk1, (int)clk2);
   41454:	e0bffc17 	ldw	r2,-16(fp)
   41458:	1007883a 	mov	r3,r2
   4145c:	e0bffd17 	ldw	r2,-12(fp)
   41460:	100f883a 	mov	r7,r2
   41464:	180d883a 	mov	r6,r3
   41468:	014001b4 	movhi	r5,6
   4146c:	296b3f04 	addi	r5,r5,-21252
   41470:	010001b4 	movhi	r4,6
   41474:	212b5404 	addi	r4,r4,-21168
   41478:	00457a80 	call	457a8 <printf>
				bPass = FALSE;
   4147c:	e03fdc15 	stw	zero,-144(fp)
			}
		}



    return bPass;
   41480:	e0bfdc17 	ldw	r2,-144(fp)

}
   41484:	e6fffe04 	addi	sp,fp,-8
   41488:	dfc00317 	ldw	ra,12(sp)
   4148c:	df000217 	ldw	fp,8(sp)
   41490:	dc400117 	ldw	r17,4(sp)
   41494:	dc000017 	ldw	r16,0(sp)
   41498:	dec00404 	addi	sp,sp,16
   4149c:	f800283a 	ret

000414a0 <TEST_Si570>:


//===============================================================

bool TEST_Si570(void){
   414a0:	deffe104 	addi	sp,sp,-124
   414a4:	dfc01e15 	stw	ra,120(sp)
   414a8:	df001d15 	stw	fp,116(sp)
   414ac:	dcc01c15 	stw	r19,112(sp)
   414b0:	dc801b15 	stw	r18,108(sp)
   414b4:	dc401a15 	stw	r17,104(sp)
   414b8:	dc001915 	stw	r16,100(sp)
   414bc:	df001d04 	addi	fp,sp,116
		int FreqID;
		float FREQUENCY;
	}Si57x_CONFIG;


	Si57x_CONFIG szConfig[] = {
   414c0:	e03fec15 	stw	zero,-80(fp)
   414c4:	0090b234 	movhi	r2,17096
   414c8:	e0bfed15 	stw	r2,-76(fp)
   414cc:	00800044 	movi	r2,1
   414d0:	e0bfee15 	stw	r2,-72(fp)
   414d4:	0090beb4 	movhi	r2,17146
   414d8:	e0bfef15 	stw	r2,-68(fp)
   414dc:	00800084 	movi	r2,2
   414e0:	e0bff015 	stw	r2,-64(fp)
   414e4:	0090c734 	movhi	r2,17180
   414e8:	10900004 	addi	r2,r2,16384
   414ec:	e0bff115 	stw	r2,-60(fp)
   414f0:	008000c4 	movi	r2,3
   414f4:	e0bff215 	stw	r2,-56(fp)
   414f8:	0090deb4 	movhi	r2,17274
   414fc:	e0bff315 	stw	r2,-52(fp)
   41500:	00800104 	movi	r2,4
   41504:	e0bff415 	stw	r2,-48(fp)
   41508:	0090e734 	movhi	r2,17308
   4150c:	10900004 	addi	r2,r2,16384
   41510:	e0bff515 	stw	r2,-44(fp)
   41514:	00800144 	movi	r2,5
   41518:	e0bff615 	stw	r2,-40(fp)
   4151c:	0090e874 	movhi	r2,17313
   41520:	10888004 	addi	r2,r2,8704
   41524:	e0bff715 	stw	r2,-36(fp)
   41528:	00800204 	movi	r2,8
   4152c:	e0bff815 	stw	r2,-32(fp)
   41530:	00910874 	movhi	r2,17441
   41534:	10888004 	addi	r2,r2,8704
   41538:	e0bff915 	stw	r2,-28(fp)
		{SI57x_312M5, 312.5},
		{SI57x_322M265625, 322.265625},
		{SI57x_644M53125, 644.53125}
	};

	const alt_u8 DeviceAddr = 0x00;
   4153c:	e03fe705 	stb	zero,-100(fp)
	bool bPass;
	alt_u32 clk1, clk2,ScaledClk2;
	const int nTargetCnt=1000;
   41540:	0080fa04 	movi	r2,1000
   41544:	e0bfe815 	stw	r2,-96(fp)
	const int nTol = 3;  //tolerance
   41548:	008000c4 	movi	r2,3
   4154c:	e0bfe915 	stw	r2,-92(fp)
	int i, nNum;
	nNum = sizeof(szConfig)/sizeof(szConfig[0]);
   41550:	008001c4 	movi	r2,7
   41554:	e0bfea15 	stw	r2,-88(fp)


	// show menu
	printf("===== Si570 Programming =====\r\n");
   41558:	010001b4 	movhi	r4,6
   4155c:	212b7504 	addi	r4,r4,-21036
   41560:	00458a40 	call	458a4 <puts>
	for(i=0;i<nNum;i++){
   41564:	e03fe615 	stw	zero,-104(fp)
   41568:	00001306 	br	415b8 <TEST_Si570+0x118>
		printf("[%d] %.6f MHz\r\n",i, szConfig[i].FREQUENCY);
   4156c:	e0bfe617 	ldw	r2,-104(fp)
   41570:	100490fa 	slli	r2,r2,3
   41574:	e0ffe504 	addi	r3,fp,-108
   41578:	1885883a 	add	r2,r3,r2
   4157c:	10800804 	addi	r2,r2,32
   41580:	10c00017 	ldw	r3,0(r2)
   41584:	1809883a 	mov	r4,r3
   41588:	00452940 	call	45294 <__extendsfdf2>
   4158c:	1009883a 	mov	r4,r2
   41590:	180b883a 	mov	r5,r3
   41594:	200d883a 	mov	r6,r4
   41598:	280f883a 	mov	r7,r5
   4159c:	e17fe617 	ldw	r5,-104(fp)
   415a0:	010001b4 	movhi	r4,6
   415a4:	212b7d04 	addi	r4,r4,-21004
   415a8:	00457a80 	call	457a8 <printf>
	nNum = sizeof(szConfig)/sizeof(szConfig[0]);


	// show menu
	printf("===== Si570 Programming =====\r\n");
	for(i=0;i<nNum;i++){
   415ac:	e0bfe617 	ldw	r2,-104(fp)
   415b0:	10800044 	addi	r2,r2,1
   415b4:	e0bfe615 	stw	r2,-104(fp)
   415b8:	e0ffe617 	ldw	r3,-104(fp)
   415bc:	e0bfea17 	ldw	r2,-88(fp)
   415c0:	18bfea16 	blt	r3,r2,4156c <__alt_data_end+0xfffc2d6c>
		printf("[%d] %.6f MHz\r\n",i, szConfig[i].FREQUENCY);
	}
	printf("[%d] Dump Register\r\n", nNum);
   415c4:	e17fea17 	ldw	r5,-88(fp)
   415c8:	010001b4 	movhi	r4,6
   415cc:	212b8104 	addi	r4,r4,-20988
   415d0:	00457a80 	call	457a8 <printf>
	printf("[Other] exit\r\n");
   415d4:	010001b4 	movhi	r4,6
   415d8:	212b8704 	addi	r4,r4,-20964
   415dc:	00458a40 	call	458a4 <puts>
	printf("please select:");
   415e0:	010001b4 	movhi	r4,6
   415e4:	212b2c04 	addi	r4,r4,-21328
   415e8:	00457a80 	call	457a8 <printf>
	i = GUI_QueryUser();
   415ec:	0040f680 	call	40f68 <GUI_QueryUser>
   415f0:	e0bfe615 	stw	r2,-104(fp)

	if (i> nNum)
   415f4:	e0bfe617 	ldw	r2,-104(fp)
   415f8:	e0ffea17 	ldw	r3,-88(fp)
   415fc:	1880020e 	bge	r3,r2,41608 <TEST_Si570+0x168>
		return FALSE;
   41600:	0005883a 	mov	r2,zero
   41604:	0000d206 	br	41950 <TEST_Si570+0x4b0>

	if (i == nNum){  // dump register
   41608:	e0ffe617 	ldw	r3,-104(fp)
   4160c:	e0bfea17 	ldw	r2,-88(fp)
   41610:	18800a1e 	bne	r3,r2,4163c <TEST_Si570+0x19c>

		bPass = SI57x_Config_Dump(CLK_I2C_SCL_BASE, CLK_I2C_SDA_BASE, DeviceAddr);
   41614:	e0bfe703 	ldbu	r2,-100(fp)
   41618:	100d883a 	mov	r6,r2
   4161c:	01400234 	movhi	r5,8
   41620:	29444c04 	addi	r5,r5,4400
   41624:	01000234 	movhi	r4,8
   41628:	21045004 	addi	r4,r4,4416
   4162c:	00424480 	call	42448 <SI57x_Config_Dump>
   41630:	e0bfe515 	stw	r2,-108(fp)
		return bPass;
   41634:	e0bfe517 	ldw	r2,-108(fp)
   41638:	0000c506 	br	41950 <TEST_Si570+0x4b0>
	}

	// testing...


	bPass = SI57x_Config(szConfig[i].FreqID, CLK_I2C_SCL_BASE, CLK_I2C_SDA_BASE, DeviceAddr);
   4163c:	e0bfe617 	ldw	r2,-104(fp)
   41640:	100490fa 	slli	r2,r2,3
   41644:	e0ffe504 	addi	r3,fp,-108
   41648:	1885883a 	add	r2,r3,r2
   4164c:	10800704 	addi	r2,r2,28
   41650:	10800017 	ldw	r2,0(r2)
   41654:	1007883a 	mov	r3,r2
   41658:	e0bfe703 	ldbu	r2,-100(fp)
   4165c:	100f883a 	mov	r7,r2
   41660:	01800234 	movhi	r6,8
   41664:	31844c04 	addi	r6,r6,4400
   41668:	01400234 	movhi	r5,8
   4166c:	29445004 	addi	r5,r5,4416
   41670:	1809883a 	mov	r4,r3
   41674:	0041a780 	call	41a78 <SI57x_Config>
   41678:	e0bfe515 	stw	r2,-108(fp)


	if (bPass){
   4167c:	e0bfe517 	ldw	r2,-108(fp)
   41680:	1000b226 	beq	r2,zero,4194c <TEST_Si570+0x4ac>
			// wait
			//usleep(200*1000);

			// measure
			bPass =  CLOCK_Test(REF_CLOCK_10G_COUNT_BASE, nTargetCnt, &clk1, &clk2);
   41684:	e0bfe817 	ldw	r2,-96(fp)
   41688:	e13ffb04 	addi	r4,fp,-20
   4168c:	e0fffa04 	addi	r3,fp,-24
   41690:	200f883a 	mov	r7,r4
   41694:	180d883a 	mov	r6,r3
   41698:	100b883a 	mov	r5,r2
   4169c:	01000234 	movhi	r4,8
   416a0:	21045c04 	addi	r4,r4,4464
   416a4:	0040d440 	call	40d44 <CLOCK_Test>
   416a8:	e0bfe515 	stw	r2,-108(fp)
			if (bPass){
   416ac:	e0bfe517 	ldw	r2,-108(fp)
   416b0:	1000a326 	beq	r2,zero,41940 <TEST_Si570+0x4a0>
				ScaledClk2 = (int)((float) clk2 * 50.0 / szConfig[i].FREQUENCY);
   416b4:	e0bffb17 	ldw	r2,-20(fp)
   416b8:	1009883a 	mov	r4,r2
   416bc:	0042c280 	call	42c28 <__floatunsisf>
   416c0:	1007883a 	mov	r3,r2
   416c4:	1809883a 	mov	r4,r3
   416c8:	00452940 	call	45294 <__extendsfdf2>
   416cc:	1011883a 	mov	r8,r2
   416d0:	1813883a 	mov	r9,r3
   416d4:	000d883a 	mov	r6,zero
   416d8:	01d01274 	movhi	r7,16457
   416dc:	4009883a 	mov	r4,r8
   416e0:	480b883a 	mov	r5,r9
   416e4:	004407c0 	call	4407c <__muldf3>
   416e8:	1009883a 	mov	r4,r2
   416ec:	180b883a 	mov	r5,r3
   416f0:	2021883a 	mov	r16,r4
   416f4:	2823883a 	mov	r17,r5
   416f8:	e0bfe617 	ldw	r2,-104(fp)
   416fc:	100490fa 	slli	r2,r2,3
   41700:	e0ffe504 	addi	r3,fp,-108
   41704:	1885883a 	add	r2,r3,r2
   41708:	10800804 	addi	r2,r2,32
   4170c:	10c00017 	ldw	r3,0(r2)
   41710:	1809883a 	mov	r4,r3
   41714:	00452940 	call	45294 <__extendsfdf2>
   41718:	1009883a 	mov	r4,r2
   4171c:	180b883a 	mov	r5,r3
   41720:	200d883a 	mov	r6,r4
   41724:	280f883a 	mov	r7,r5
   41728:	8009883a 	mov	r4,r16
   4172c:	880b883a 	mov	r5,r17
   41730:	00435c40 	call	435c4 <__divdf3>
   41734:	1009883a 	mov	r4,r2
   41738:	180b883a 	mov	r5,r3
   4173c:	2005883a 	mov	r2,r4
   41740:	2807883a 	mov	r3,r5
   41744:	1009883a 	mov	r4,r2
   41748:	180b883a 	mov	r5,r3
   4174c:	00450900 	call	45090 <__fixdfsi>
   41750:	e0bfeb15 	stw	r2,-84(fp)
				if (abs(nTargetCnt-clk1)<=nTol && abs(clk1-ScaledClk2)<=nTol){
   41754:	e0ffe817 	ldw	r3,-96(fp)
   41758:	e0bffa17 	ldw	r2,-24(fp)
   4175c:	1885c83a 	sub	r2,r3,r2
   41760:	1000010e 	bge	r2,zero,41768 <TEST_Si570+0x2c8>
   41764:	0085c83a 	sub	r2,zero,r2
   41768:	1007883a 	mov	r3,r2
   4176c:	e0bfe917 	ldw	r2,-92(fp)
   41770:	10c03d16 	blt	r2,r3,41868 <TEST_Si570+0x3c8>
   41774:	e0fffa17 	ldw	r3,-24(fp)
   41778:	e0bfeb17 	ldw	r2,-84(fp)
   4177c:	1885c83a 	sub	r2,r3,r2
   41780:	1000010e 	bge	r2,zero,41788 <TEST_Si570+0x2e8>
   41784:	0085c83a 	sub	r2,zero,r2
   41788:	1007883a 	mov	r3,r2
   4178c:	e0bfe917 	ldw	r2,-92(fp)
   41790:	10c03516 	blt	r2,r3,41868 <TEST_Si570+0x3c8>
					printf("Si570/%.6fMHz clock test PASS (clk1=%d, clk2=%d, expected clk2=%d)\r\n",  szConfig[i].FREQUENCY, (int)clk1, (int)clk2, (int)((float)clk1*szConfig[i].FREQUENCY/50.0));
   41794:	e0bfe617 	ldw	r2,-104(fp)
   41798:	100490fa 	slli	r2,r2,3
   4179c:	e0ffe504 	addi	r3,fp,-108
   417a0:	1885883a 	add	r2,r3,r2
   417a4:	10800804 	addi	r2,r2,32
   417a8:	10c00017 	ldw	r3,0(r2)
   417ac:	1809883a 	mov	r4,r3
   417b0:	00452940 	call	45294 <__extendsfdf2>
   417b4:	1021883a 	mov	r16,r2
   417b8:	1823883a 	mov	r17,r3
   417bc:	e0bffa17 	ldw	r2,-24(fp)
   417c0:	1027883a 	mov	r19,r2
   417c4:	e0bffb17 	ldw	r2,-20(fp)
   417c8:	1025883a 	mov	r18,r2
   417cc:	e0bffa17 	ldw	r2,-24(fp)
   417d0:	1009883a 	mov	r4,r2
   417d4:	0042c280 	call	42c28 <__floatunsisf>
   417d8:	1009883a 	mov	r4,r2
   417dc:	e0bfe617 	ldw	r2,-104(fp)
   417e0:	100490fa 	slli	r2,r2,3
   417e4:	e0ffe504 	addi	r3,fp,-108
   417e8:	1885883a 	add	r2,r3,r2
   417ec:	10800804 	addi	r2,r2,32
   417f0:	10c00017 	ldw	r3,0(r2)
   417f4:	180b883a 	mov	r5,r3
   417f8:	004282c0 	call	4282c <__mulsf3>
   417fc:	1007883a 	mov	r3,r2
   41800:	1805883a 	mov	r2,r3
   41804:	1009883a 	mov	r4,r2
   41808:	00452940 	call	45294 <__extendsfdf2>
   4180c:	1011883a 	mov	r8,r2
   41810:	1813883a 	mov	r9,r3
   41814:	000d883a 	mov	r6,zero
   41818:	01d01274 	movhi	r7,16457
   4181c:	4009883a 	mov	r4,r8
   41820:	480b883a 	mov	r5,r9
   41824:	00435c40 	call	435c4 <__divdf3>
   41828:	1009883a 	mov	r4,r2
   4182c:	180b883a 	mov	r5,r3
   41830:	2005883a 	mov	r2,r4
   41834:	2807883a 	mov	r3,r5
   41838:	1009883a 	mov	r4,r2
   4183c:	180b883a 	mov	r5,r3
   41840:	00450900 	call	45090 <__fixdfsi>
   41844:	d8800115 	stw	r2,4(sp)
   41848:	dc800015 	stw	r18,0(sp)
   4184c:	980f883a 	mov	r7,r19
   41850:	800b883a 	mov	r5,r16
   41854:	880d883a 	mov	r6,r17
   41858:	010001b4 	movhi	r4,6
   4185c:	212b8b04 	addi	r4,r4,-20948
   41860:	00457a80 	call	457a8 <printf>
   41864:	00003906 	br	4194c <TEST_Si570+0x4ac>
				}else{
					printf("Si570/%.6fMHz clock test NG (clk1=%d, clk2=%d, expected clk2=%d)\r\n",  szConfig[i].FREQUENCY, (int)clk1, (int)clk2, (int)((float)clk1*szConfig[i].FREQUENCY/50.0));
   41868:	e0bfe617 	ldw	r2,-104(fp)
   4186c:	100490fa 	slli	r2,r2,3
   41870:	e0ffe504 	addi	r3,fp,-108
   41874:	1885883a 	add	r2,r3,r2
   41878:	10800804 	addi	r2,r2,32
   4187c:	10c00017 	ldw	r3,0(r2)
   41880:	1809883a 	mov	r4,r3
   41884:	00452940 	call	45294 <__extendsfdf2>
   41888:	1021883a 	mov	r16,r2
   4188c:	1823883a 	mov	r17,r3
   41890:	e0bffa17 	ldw	r2,-24(fp)
   41894:	1027883a 	mov	r19,r2
   41898:	e0bffb17 	ldw	r2,-20(fp)
   4189c:	1025883a 	mov	r18,r2
   418a0:	e0bffa17 	ldw	r2,-24(fp)
   418a4:	1009883a 	mov	r4,r2
   418a8:	0042c280 	call	42c28 <__floatunsisf>
   418ac:	1009883a 	mov	r4,r2
   418b0:	e0bfe617 	ldw	r2,-104(fp)
   418b4:	100490fa 	slli	r2,r2,3
   418b8:	e0ffe504 	addi	r3,fp,-108
   418bc:	1885883a 	add	r2,r3,r2
   418c0:	10800804 	addi	r2,r2,32
   418c4:	10c00017 	ldw	r3,0(r2)
   418c8:	180b883a 	mov	r5,r3
   418cc:	004282c0 	call	4282c <__mulsf3>
   418d0:	1007883a 	mov	r3,r2
   418d4:	1805883a 	mov	r2,r3
   418d8:	1009883a 	mov	r4,r2
   418dc:	00452940 	call	45294 <__extendsfdf2>
   418e0:	1011883a 	mov	r8,r2
   418e4:	1813883a 	mov	r9,r3
   418e8:	000d883a 	mov	r6,zero
   418ec:	01d01274 	movhi	r7,16457
   418f0:	4009883a 	mov	r4,r8
   418f4:	480b883a 	mov	r5,r9
   418f8:	00435c40 	call	435c4 <__divdf3>
   418fc:	1009883a 	mov	r4,r2
   41900:	180b883a 	mov	r5,r3
   41904:	2005883a 	mov	r2,r4
   41908:	2807883a 	mov	r3,r5
   4190c:	1009883a 	mov	r4,r2
   41910:	180b883a 	mov	r5,r3
   41914:	00450900 	call	45090 <__fixdfsi>
   41918:	d8800115 	stw	r2,4(sp)
   4191c:	dc800015 	stw	r18,0(sp)
   41920:	980f883a 	mov	r7,r19
   41924:	800b883a 	mov	r5,r16
   41928:	880d883a 	mov	r6,r17
   4192c:	010001b4 	movhi	r4,6
   41930:	212b9d04 	addi	r4,r4,-20876
   41934:	00457a80 	call	457a8 <printf>
					bPass = FALSE;
   41938:	e03fe515 	stw	zero,-108(fp)
   4193c:	00000306 	br	4194c <TEST_Si570+0x4ac>
				}
			}else{
				printf("Failed to perform CLOCK_Test\r\n");
   41940:	010001b4 	movhi	r4,6
   41944:	212bae04 	addi	r4,r4,-20808
   41948:	00458a40 	call	458a4 <puts>
			}
	}



	return bPass;
   4194c:	e0bfe517 	ldw	r2,-108(fp)

}
   41950:	e6fffc04 	addi	sp,fp,-16
   41954:	dfc00517 	ldw	ra,20(sp)
   41958:	df000417 	ldw	fp,16(sp)
   4195c:	dcc00317 	ldw	r19,12(sp)
   41960:	dc800217 	ldw	r18,8(sp)
   41964:	dc400117 	ldw	r17,4(sp)
   41968:	dc000017 	ldw	r16,0(sp)
   4196c:	dec00604 	addi	sp,sp,24
   41970:	f800283a 	ret

00041974 <si57x_find_DIV_NI>:
		{SI57x_500M, 		5, 2, 500.0},
		{SI57x_625M, 		4, 2, 625.0},
		{SI57x_644M53125, 	4, 2, 644.53125},
};

bool si57x_find_DIV_NI(SI57x_FREQ_ID FreqID, alt_u32 *pnHS_DIV, alt_u32 *pnN1, double *pfFreq){
   41974:	defff904 	addi	sp,sp,-28
   41978:	df000615 	stw	fp,24(sp)
   4197c:	df000604 	addi	fp,sp,24
   41980:	e13ffc15 	stw	r4,-16(fp)
   41984:	e17ffd15 	stw	r5,-12(fp)
   41988:	e1bffe15 	stw	r6,-8(fp)
   4198c:	e1ffff15 	stw	r7,-4(fp)
	bool bFind = FALSE;
   41990:	e03ffa15 	stw	zero,-24(fp)
	int i;

	for(i=0;i<sizeof(gszGi57x_ConfigTable)/sizeof(gszGi57x_ConfigTable[0]) && !bFind;i++){
   41994:	e03ffb15 	stw	zero,-20(fp)
   41998:	00002d06 	br	41a50 <si57x_find_DIV_NI+0xdc>
		if (gszGi57x_ConfigTable[i].FreqID == FreqID){
   4199c:	008001b4 	movhi	r2,6
   419a0:	10ae7604 	addi	r2,r2,-17960
   419a4:	e0fffb17 	ldw	r3,-20(fp)
   419a8:	18c00524 	muli	r3,r3,20
   419ac:	10c5883a 	add	r2,r2,r3
   419b0:	10800017 	ldw	r2,0(r2)
   419b4:	1007883a 	mov	r3,r2
   419b8:	e0bffc17 	ldw	r2,-16(fp)
   419bc:	1880211e 	bne	r3,r2,41a44 <si57x_find_DIV_NI+0xd0>
			bFind = TRUE;
   419c0:	00800044 	movi	r2,1
   419c4:	e0bffa15 	stw	r2,-24(fp)
			*pnHS_DIV = gszGi57x_ConfigTable[i].HS_DIV;
   419c8:	008001b4 	movhi	r2,6
   419cc:	10ae7604 	addi	r2,r2,-17960
   419d0:	e0fffb17 	ldw	r3,-20(fp)
   419d4:	18c00524 	muli	r3,r3,20
   419d8:	10c5883a 	add	r2,r2,r3
   419dc:	10800104 	addi	r2,r2,4
   419e0:	10800017 	ldw	r2,0(r2)
   419e4:	1007883a 	mov	r3,r2
   419e8:	e0bffd17 	ldw	r2,-12(fp)
   419ec:	10c00015 	stw	r3,0(r2)
			*pnN1 = gszGi57x_ConfigTable[i].N1;
   419f0:	008001b4 	movhi	r2,6
   419f4:	10ae7604 	addi	r2,r2,-17960
   419f8:	e0fffb17 	ldw	r3,-20(fp)
   419fc:	18c00524 	muli	r3,r3,20
   41a00:	10c5883a 	add	r2,r2,r3
   41a04:	10800204 	addi	r2,r2,8
   41a08:	10800017 	ldw	r2,0(r2)
   41a0c:	1007883a 	mov	r3,r2
   41a10:	e0bffe17 	ldw	r2,-8(fp)
   41a14:	10c00015 	stw	r3,0(r2)
			*pfFreq = gszGi57x_ConfigTable[i].FREQUENCY;
   41a18:	008001b4 	movhi	r2,6
   41a1c:	10ae7604 	addi	r2,r2,-17960
   41a20:	e0fffb17 	ldw	r3,-20(fp)
   41a24:	18c00524 	muli	r3,r3,20
   41a28:	10c5883a 	add	r2,r2,r3
   41a2c:	11000304 	addi	r4,r2,12
   41a30:	20800017 	ldw	r2,0(r4)
   41a34:	20c00117 	ldw	r3,4(r4)
   41a38:	e13fff17 	ldw	r4,-4(fp)
   41a3c:	20800015 	stw	r2,0(r4)
   41a40:	20c00115 	stw	r3,4(r4)

bool si57x_find_DIV_NI(SI57x_FREQ_ID FreqID, alt_u32 *pnHS_DIV, alt_u32 *pnN1, double *pfFreq){
	bool bFind = FALSE;
	int i;

	for(i=0;i<sizeof(gszGi57x_ConfigTable)/sizeof(gszGi57x_ConfigTable[0]) && !bFind;i++){
   41a44:	e0bffb17 	ldw	r2,-20(fp)
   41a48:	10800044 	addi	r2,r2,1
   41a4c:	e0bffb15 	stw	r2,-20(fp)
   41a50:	e0bffb17 	ldw	r2,-20(fp)
   41a54:	10800268 	cmpgeui	r2,r2,9
   41a58:	1000021e 	bne	r2,zero,41a64 <si57x_find_DIV_NI+0xf0>
   41a5c:	e0bffa17 	ldw	r2,-24(fp)
   41a60:	103fce26 	beq	r2,zero,4199c <__alt_data_end+0xfffc319c>
			*pnN1 = gszGi57x_ConfigTable[i].N1;
			*pfFreq = gszGi57x_ConfigTable[i].FREQUENCY;
		}
	} // for

	return bFind;
   41a64:	e0bffa17 	ldw	r2,-24(fp)

}
   41a68:	e037883a 	mov	sp,fp
   41a6c:	df000017 	ldw	fp,0(sp)
   41a70:	dec00104 	addi	sp,sp,4
   41a74:	f800283a 	ret

00041a78 <SI57x_Config>:



bool SI57x_Config(SI57x_FREQ_ID FreqID, alt_u32 SI57x_I2C_SCLK_BASE, alt_u32 SI57x_I2C_SDAT_BASE, int SI57x_DeviceAddr){
   41a78:	deffbe04 	addi	sp,sp,-264
   41a7c:	dfc04115 	stw	ra,260(sp)
   41a80:	df004015 	stw	fp,256(sp)
   41a84:	ddc03f15 	stw	r23,252(sp)
   41a88:	dd803e15 	stw	r22,248(sp)
   41a8c:	dd403d15 	stw	r21,244(sp)
   41a90:	dd003c15 	stw	r20,240(sp)
   41a94:	dcc03b15 	stw	r19,236(sp)
   41a98:	dc803a15 	stw	r18,232(sp)
   41a9c:	dc403915 	stw	r17,228(sp)
   41aa0:	dc003815 	stw	r16,224(sp)
   41aa4:	df004004 	addi	fp,sp,256
   41aa8:	e13fe015 	stw	r4,-128(fp)
   41aac:	e17fe115 	stw	r5,-124(fp)
   41ab0:	e1bfe215 	stw	r6,-120(fp)
   41ab4:	e1ffe315 	stw	r7,-116(fp)
	bool bSuccess;
	const alt_u8 CommandReg = 135;
   41ab8:	00bfe1c4 	movi	r2,-121
   41abc:	e0bfc805 	stb	r2,-224(fp)
	const alt_u8 FreezeDCOReg = 137;
   41ac0:	00bfe244 	movi	r2,-119
   41ac4:	e0bfc845 	stb	r2,-223(fp)
	alt_u32 REFEQ_HI, REFEQ_LOW;
	alt_u64 REFEQ;
	alt_u8 Command;
	int n;
	// startup
	double startup_fFreq = 100.0, startup_fREFEQ;
   41ac8:	e03fc915 	stw	zero,-220(fp)
   41acc:	00901674 	movhi	r2,16473
   41ad0:	e0bfca15 	stw	r2,-216(fp)
	alt_u8 startup_HS_DIV, startup_N1;
	alt_u64 startup_REFEQ;

	bSuccess = si57x_find_DIV_NI(FreqID, &HS_DIV, &N1, &fFreq);
   41ad4:	e13fdb04 	addi	r4,fp,-148
   41ad8:	e0ffde04 	addi	r3,fp,-136
   41adc:	e0bfdd04 	addi	r2,fp,-140
   41ae0:	200f883a 	mov	r7,r4
   41ae4:	180d883a 	mov	r6,r3
   41ae8:	100b883a 	mov	r5,r2
   41aec:	e13fe017 	ldw	r4,-128(fp)
   41af0:	00419740 	call	41974 <si57x_find_DIV_NI>
   41af4:	e0bfc315 	stw	r2,-244(fp)
	if (!bSuccess){
   41af8:	e0bfc317 	ldw	r2,-244(fp)
   41afc:	1000061e 	bne	r2,zero,41b18 <SI57x_Config+0xa0>
		printf("This not my preset freq id (%d)\r\n", FreqID);
   41b00:	e17fe017 	ldw	r5,-128(fp)
   41b04:	010001b4 	movhi	r4,6
   41b08:	212bb604 	addi	r4,r4,-20776
   41b0c:	00457a80 	call	457a8 <printf>
		return FALSE;
   41b10:	0005883a 	mov	r2,zero
   41b14:	00023f06 	br	42414 <SI57x_Config+0x99c>

	//////////////////////////////////////////
	// 1) Read start-up frequency configuration

	// reset
	bSuccess = I2C_Read(SI57x_I2C_SCLK_BASE, SI57x_I2C_SDAT_BASE, SI57x_DeviceAddr, CommandReg, &Command);
   41b18:	e0bfe317 	ldw	r2,-116(fp)
   41b1c:	11003fcc 	andi	r4,r2,255
   41b20:	2100201c 	xori	r4,r4,128
   41b24:	213fe004 	addi	r4,r4,-128
   41b28:	e0ffc803 	ldbu	r3,-224(fp)
   41b2c:	e0bfdf04 	addi	r2,fp,-132
   41b30:	d8800015 	stw	r2,0(sp)
   41b34:	180f883a 	mov	r7,r3
   41b38:	200d883a 	mov	r6,r4
   41b3c:	e17fe217 	ldw	r5,-120(fp)
   41b40:	e13fe117 	ldw	r4,-124(fp)
   41b44:	00402e40 	call	402e4 <I2C_Read>
   41b48:	e0bfc315 	stw	r2,-244(fp)
	if (!bSuccess){
   41b4c:	e0bfc317 	ldw	r2,-244(fp)
   41b50:	1000061e 	bne	r2,zero,41b6c <SI57x_Config+0xf4>
		printf("Failed to perform I2C read, reg-%d\r\n", CommandReg);
   41b54:	e0bfc803 	ldbu	r2,-224(fp)
   41b58:	100b883a 	mov	r5,r2
   41b5c:	010001b4 	movhi	r4,6
   41b60:	212bbf04 	addi	r4,r4,-20740
   41b64:	00457a80 	call	457a8 <printf>
   41b68:	00014a06 	br	42094 <SI57x_Config+0x61c>
	}else{
		Command |= 0x80; // assert reset
   41b6c:	e0ffdf03 	ldbu	r3,-132(fp)
   41b70:	00bfe004 	movi	r2,-128
   41b74:	1884b03a 	or	r2,r3,r2
   41b78:	e0bfdf05 	stb	r2,-132(fp)
		bSuccess = I2C_Write(SI57x_I2C_SCLK_BASE, SI57x_I2C_SDAT_BASE, SI57x_DeviceAddr, CommandReg, Command);
   41b7c:	e0bfe317 	ldw	r2,-116(fp)
   41b80:	11003fcc 	andi	r4,r2,255
   41b84:	2100201c 	xori	r4,r4,128
   41b88:	213fe004 	addi	r4,r4,-128
   41b8c:	e0ffc803 	ldbu	r3,-224(fp)
   41b90:	e0bfdf03 	ldbu	r2,-132(fp)
   41b94:	10803fcc 	andi	r2,r2,255
   41b98:	d8800015 	stw	r2,0(sp)
   41b9c:	180f883a 	mov	r7,r3
   41ba0:	200d883a 	mov	r6,r4
   41ba4:	e17fe217 	ldw	r5,-120(fp)
   41ba8:	e13fe117 	ldw	r4,-124(fp)
   41bac:	004020c0 	call	4020c <I2C_Write>
   41bb0:	e0bfc315 	stw	r2,-244(fp)
		bSuccess = TRUE; // force it to success because it always return false due to i2c state machine is interrupt
   41bb4:	00800044 	movi	r2,1
   41bb8:	e0bfc315 	stw	r2,-244(fp)
		if (!bSuccess){
		}
		if (!bSuccess){
   41bbc:	e0bfc317 	ldw	r2,-244(fp)
   41bc0:	1000041e 	bne	r2,zero,41bd4 <SI57x_Config+0x15c>
			printf("failed to reset\r\n");
   41bc4:	010001b4 	movhi	r4,6
   41bc8:	212bc904 	addi	r4,r4,-20700
   41bcc:	00458a40 	call	458a4 <puts>
   41bd0:	00013006 	br	42094 <SI57x_Config+0x61c>
		}else{
			//Asserting RST_REG will interrupt the I2C state machine.
			// richard note. wait i2c machine ready
			usleep(10*1000); // wait 10 ms
   41bd4:	0109c404 	movi	r4,10000
   41bd8:	0058b500 	call	58b50 <usleep>

			// read startup reg value
			for(n=7;n<=12 && bSuccess;n++){
   41bdc:	008001c4 	movi	r2,7
   41be0:	e0bfc715 	stw	r2,-228(fp)
   41be4:	00001306 	br	41c34 <SI57x_Config+0x1bc>
				bSuccess = I2C_Read(SI57x_I2C_SCLK_BASE, SI57x_I2C_SDAT_BASE, SI57x_DeviceAddr, n, &szReg[n]);
   41be8:	e0bfe317 	ldw	r2,-116(fp)
   41bec:	11403fcc 	andi	r5,r2,255
   41bf0:	2940201c 	xori	r5,r5,128
   41bf4:	297fe004 	addi	r5,r5,-128
   41bf8:	e0bfc717 	ldw	r2,-228(fp)
   41bfc:	11003fcc 	andi	r4,r2,255
   41c00:	e0ffd704 	addi	r3,fp,-164
   41c04:	e0bfc717 	ldw	r2,-228(fp)
   41c08:	1885883a 	add	r2,r3,r2
   41c0c:	d8800015 	stw	r2,0(sp)
   41c10:	200f883a 	mov	r7,r4
   41c14:	280d883a 	mov	r6,r5
   41c18:	e17fe217 	ldw	r5,-120(fp)
   41c1c:	e13fe117 	ldw	r4,-124(fp)
   41c20:	00402e40 	call	402e4 <I2C_Read>
   41c24:	e0bfc315 	stw	r2,-244(fp)
			//Asserting RST_REG will interrupt the I2C state machine.
			// richard note. wait i2c machine ready
			usleep(10*1000); // wait 10 ms

			// read startup reg value
			for(n=7;n<=12 && bSuccess;n++){
   41c28:	e0bfc717 	ldw	r2,-228(fp)
   41c2c:	10800044 	addi	r2,r2,1
   41c30:	e0bfc715 	stw	r2,-228(fp)
   41c34:	e0bfc717 	ldw	r2,-228(fp)
   41c38:	10800348 	cmpgei	r2,r2,13
   41c3c:	1000021e 	bne	r2,zero,41c48 <SI57x_Config+0x1d0>
   41c40:	e0bfc317 	ldw	r2,-244(fp)
   41c44:	103fe81e 	bne	r2,zero,41be8 <__alt_data_end+0xfffc33e8>
				bSuccess = I2C_Read(SI57x_I2C_SCLK_BASE, SI57x_I2C_SDAT_BASE, SI57x_DeviceAddr, n, &szReg[n]);
			}

			if (!bSuccess){
   41c48:	e0bfc317 	ldw	r2,-244(fp)
   41c4c:	1000041e 	bne	r2,zero,41c60 <SI57x_Config+0x1e8>
				printf("failed to read startup register value\r\n");
   41c50:	010001b4 	movhi	r4,6
   41c54:	212bce04 	addi	r4,r4,-20680
   41c58:	00458a40 	call	458a4 <puts>
   41c5c:	00010d06 	br	42094 <SI57x_Config+0x61c>
			}else{
				startup_HS_DIV = (szReg[7] >> 5) & 0x07;
   41c60:	e0bfd8c3 	ldbu	r2,-157(fp)
   41c64:	10803fcc 	andi	r2,r2,255
   41c68:	1004d17a 	srli	r2,r2,5
   41c6c:	e0bfcb05 	stb	r2,-212(fp)
				startup_HS_DIV += 4;
   41c70:	e0bfcb03 	ldbu	r2,-212(fp)
   41c74:	10800104 	addi	r2,r2,4
   41c78:	e0bfcb05 	stb	r2,-212(fp)

				startup_N1 = ((szReg[7] & 0x1F) << 2) | ((szReg[8] >> 6) & 0x03);
   41c7c:	e0bfd8c3 	ldbu	r2,-157(fp)
   41c80:	10803fcc 	andi	r2,r2,255
   41c84:	108007cc 	andi	r2,r2,31
   41c88:	1085883a 	add	r2,r2,r2
   41c8c:	1085883a 	add	r2,r2,r2
   41c90:	1007883a 	mov	r3,r2
   41c94:	e0bfd903 	ldbu	r2,-156(fp)
   41c98:	10803fcc 	andi	r2,r2,255
   41c9c:	1004d1ba 	srli	r2,r2,6
   41ca0:	1884b03a 	or	r2,r3,r2
   41ca4:	e0bfcb45 	stb	r2,-211(fp)
				startup_N1 += 1;
   41ca8:	e0bfcb43 	ldbu	r2,-211(fp)
   41cac:	10800044 	addi	r2,r2,1
   41cb0:	e0bfcb45 	stb	r2,-211(fp)

				startup_REFEQ = (alt_u64)szReg[12] | ((alt_u64)szReg[11] << 8) | ((alt_u64)szReg[10] << 16)  | ((alt_u64)szReg[9] << 24) |  (((alt_u64)szReg[8] & 0x3F) << 32);
   41cb4:	e0bfda03 	ldbu	r2,-152(fp)
   41cb8:	10803fcc 	andi	r2,r2,255
   41cbc:	e0bfe415 	stw	r2,-112(fp)
   41cc0:	e03fe515 	stw	zero,-108(fp)
   41cc4:	e0bfd9c3 	ldbu	r2,-153(fp)
   41cc8:	10803fcc 	andi	r2,r2,255
   41ccc:	e0bfe615 	stw	r2,-104(fp)
   41cd0:	e03fe715 	stw	zero,-100(fp)
   41cd4:	e0ffe617 	ldw	r3,-104(fp)
   41cd8:	1804d63a 	srli	r2,r3,24
   41cdc:	e0ffe717 	ldw	r3,-100(fp)
   41ce0:	182a923a 	slli	r21,r3,8
   41ce4:	156ab03a 	or	r21,r2,r21
   41ce8:	e0bfe617 	ldw	r2,-104(fp)
   41cec:	1028923a 	slli	r20,r2,8
   41cf0:	e0ffe417 	ldw	r3,-112(fp)
   41cf4:	1d06b03a 	or	r3,r3,r20
   41cf8:	e0ffe815 	stw	r3,-96(fp)
   41cfc:	e0bfe517 	ldw	r2,-108(fp)
   41d00:	1544b03a 	or	r2,r2,r21
   41d04:	e0bfe915 	stw	r2,-92(fp)
   41d08:	e0bfd983 	ldbu	r2,-154(fp)
   41d0c:	10803fcc 	andi	r2,r2,255
   41d10:	e0bfea15 	stw	r2,-88(fp)
   41d14:	e03feb15 	stw	zero,-84(fp)
   41d18:	e0ffea17 	ldw	r3,-88(fp)
   41d1c:	1804d43a 	srli	r2,r3,16
   41d20:	e0ffeb17 	ldw	r3,-84(fp)
   41d24:	1826943a 	slli	r19,r3,16
   41d28:	14e6b03a 	or	r19,r2,r19
   41d2c:	e0bfea17 	ldw	r2,-88(fp)
   41d30:	1024943a 	slli	r18,r2,16
   41d34:	e0ffe817 	ldw	r3,-96(fp)
   41d38:	1c86b03a 	or	r3,r3,r18
   41d3c:	e0ffec15 	stw	r3,-80(fp)
   41d40:	e0bfe917 	ldw	r2,-92(fp)
   41d44:	14c4b03a 	or	r2,r2,r19
   41d48:	e0bfed15 	stw	r2,-76(fp)
   41d4c:	e0bfd943 	ldbu	r2,-155(fp)
   41d50:	10803fcc 	andi	r2,r2,255
   41d54:	e0bfee15 	stw	r2,-72(fp)
   41d58:	e03fef15 	stw	zero,-68(fp)
   41d5c:	e0ffee17 	ldw	r3,-72(fp)
   41d60:	1804d23a 	srli	r2,r3,8
   41d64:	e0ffef17 	ldw	r3,-68(fp)
   41d68:	1822963a 	slli	r17,r3,24
   41d6c:	1462b03a 	or	r17,r2,r17
   41d70:	e0bfee17 	ldw	r2,-72(fp)
   41d74:	1020963a 	slli	r16,r2,24
   41d78:	e0ffec17 	ldw	r3,-80(fp)
   41d7c:	1c2cb03a 	or	r22,r3,r16
   41d80:	e0bfed17 	ldw	r2,-76(fp)
   41d84:	146eb03a 	or	r23,r2,r17
   41d88:	e0bfd903 	ldbu	r2,-156(fp)
   41d8c:	10803fcc 	andi	r2,r2,255
   41d90:	e0bff015 	stw	r2,-64(fp)
   41d94:	e03ff115 	stw	zero,-60(fp)
   41d98:	e0fff017 	ldw	r3,-64(fp)
   41d9c:	18c00fcc 	andi	r3,r3,63
   41da0:	e0fff215 	stw	r3,-56(fp)
   41da4:	e0bff117 	ldw	r2,-60(fp)
   41da8:	1004703a 	and	r2,r2,zero
   41dac:	e0bff315 	stw	r2,-52(fp)
   41db0:	e0fff217 	ldw	r3,-56(fp)
   41db4:	1806983a 	sll	r3,r3,zero
   41db8:	e0fff515 	stw	r3,-44(fp)
   41dbc:	e03ff415 	stw	zero,-48(fp)
   41dc0:	e0fff417 	ldw	r3,-48(fp)
   41dc4:	b0c4b03a 	or	r2,r22,r3
   41dc8:	e0bfcc15 	stw	r2,-208(fp)
   41dcc:	e0fff517 	ldw	r3,-44(fp)
   41dd0:	b8c4b03a 	or	r2,r23,r3
   41dd4:	e0bfcd15 	stw	r2,-204(fp)
				startup_fREFEQ = startup_REFEQ / (double)(0x01LL << 28);
   41dd8:	e13fcc17 	ldw	r4,-208(fp)
   41ddc:	e17fcd17 	ldw	r5,-204(fp)
   41de0:	00427bc0 	call	427bc <__floatundidf>
   41de4:	1011883a 	mov	r8,r2
   41de8:	1813883a 	mov	r9,r3
   41dec:	000d883a 	mov	r6,zero
   41df0:	01d06c34 	movhi	r7,16816
   41df4:	4009883a 	mov	r4,r8
   41df8:	480b883a 	mov	r5,r9
   41dfc:	00435c40 	call	435c4 <__divdf3>
   41e00:	1009883a 	mov	r4,r2
   41e04:	180b883a 	mov	r5,r3
   41e08:	e13fce15 	stw	r4,-200(fp)
   41e0c:	e17fcf15 	stw	r5,-196(fp)

				printf("startup:\r\nHS_DIV=%d,\r\nN1=%d,\r\nREFEQ=%llxh\r\nfREFEQ=%f\r\n", startup_HS_DIV, startup_N1, startup_REFEQ, startup_fREFEQ);
   41e10:	e0ffcb03 	ldbu	r3,-212(fp)
   41e14:	e13fcb43 	ldbu	r4,-211(fp)
   41e18:	e0bfce17 	ldw	r2,-200(fp)
   41e1c:	d8800115 	stw	r2,4(sp)
   41e20:	e0bfcf17 	ldw	r2,-196(fp)
   41e24:	d8800215 	stw	r2,8(sp)
   41e28:	e0bfcd17 	ldw	r2,-204(fp)
   41e2c:	d8800015 	stw	r2,0(sp)
   41e30:	e1ffcc17 	ldw	r7,-208(fp)
   41e34:	200d883a 	mov	r6,r4
   41e38:	180b883a 	mov	r5,r3
   41e3c:	010001b4 	movhi	r4,6
   41e40:	212bd804 	addi	r4,r4,-20640
   41e44:	00457a80 	call	457a8 <printf>

				//////////////////////////////////////////////////////////////////////
				// 2) Calculate the actual nominal crystal frequency where f0 is the start-up output frequency
				fxtal = (double)(startup_fFreq *  startup_HS_DIV * startup_N1) / startup_fREFEQ ; // ( f0 x HS_DIV x N1 ) / RFREQ
   41e48:	e0bfcb03 	ldbu	r2,-212(fp)
   41e4c:	1009883a 	mov	r4,r2
   41e50:	00451100 	call	45110 <__floatsidf>
   41e54:	1011883a 	mov	r8,r2
   41e58:	1813883a 	mov	r9,r3
   41e5c:	e1bfc917 	ldw	r6,-220(fp)
   41e60:	e1ffca17 	ldw	r7,-216(fp)
   41e64:	4009883a 	mov	r4,r8
   41e68:	480b883a 	mov	r5,r9
   41e6c:	004407c0 	call	4407c <__muldf3>
   41e70:	1009883a 	mov	r4,r2
   41e74:	180b883a 	mov	r5,r3
   41e78:	2021883a 	mov	r16,r4
   41e7c:	2823883a 	mov	r17,r5
   41e80:	e0bfcb43 	ldbu	r2,-211(fp)
   41e84:	1009883a 	mov	r4,r2
   41e88:	00451100 	call	45110 <__floatsidf>
   41e8c:	1009883a 	mov	r4,r2
   41e90:	180b883a 	mov	r5,r3
   41e94:	200d883a 	mov	r6,r4
   41e98:	280f883a 	mov	r7,r5
   41e9c:	8009883a 	mov	r4,r16
   41ea0:	880b883a 	mov	r5,r17
   41ea4:	004407c0 	call	4407c <__muldf3>
   41ea8:	1009883a 	mov	r4,r2
   41eac:	180b883a 	mov	r5,r3
   41eb0:	2005883a 	mov	r2,r4
   41eb4:	2807883a 	mov	r3,r5
   41eb8:	e1bfce17 	ldw	r6,-200(fp)
   41ebc:	e1ffcf17 	ldw	r7,-196(fp)
   41ec0:	1009883a 	mov	r4,r2
   41ec4:	180b883a 	mov	r5,r3
   41ec8:	00435c40 	call	435c4 <__divdf3>
   41ecc:	1009883a 	mov	r4,r2
   41ed0:	180b883a 	mov	r5,r3
   41ed4:	e13fd015 	stw	r4,-192(fp)
   41ed8:	e17fd115 	stw	r5,-188(fp)
				printf("fxtal:%f MHz\r\n", fxtal);
   41edc:	e17fd017 	ldw	r5,-192(fp)
   41ee0:	e1bfd117 	ldw	r6,-188(fp)
   41ee4:	010001b4 	movhi	r4,6
   41ee8:	212be604 	addi	r4,r4,-20584
   41eec:	00457a80 	call	457a8 <printf>

				//3) Choose the new output frequency (f1).
				//      Output Frequency (f1) = 625.000000000 MHz
				// --> bSuccess = si57x_find_DIV_NI(FreqID, &HS_DIV, &N1, &fFreq);
				printf("Output Frequency (f1) =%f MHz\r\n", fFreq);
   41ef0:	e0bfdb17 	ldw	r2,-148(fp)
   41ef4:	e0ffdc17 	ldw	r3,-144(fp)
   41ef8:	100b883a 	mov	r5,r2
   41efc:	180d883a 	mov	r6,r3
   41f00:	010001b4 	movhi	r4,6
   41f04:	212bea04 	addi	r4,r4,-20568
   41f08:	00457a80 	call	457a8 <printf>

				//4) Choose the output dividers for the new frequency configuration (HS_DIV and N1) by ensuring the DCO oscillation frequency (fdco) is between 4.85 GHz and 5.67 GHz where fdco = f1 x HS_DIV x N1. See the Divider Combinations tab for more options.
				fdco = fFreq * HS_DIV * N1;  //MHz
   41f0c:	e0bfdd17 	ldw	r2,-140(fp)
   41f10:	1009883a 	mov	r4,r2
   41f14:	00451ec0 	call	451ec <__floatunsidf>
   41f18:	1011883a 	mov	r8,r2
   41f1c:	1813883a 	mov	r9,r3
   41f20:	e0bfdb17 	ldw	r2,-148(fp)
   41f24:	e0ffdc17 	ldw	r3,-144(fp)
   41f28:	100d883a 	mov	r6,r2
   41f2c:	180f883a 	mov	r7,r3
   41f30:	4009883a 	mov	r4,r8
   41f34:	480b883a 	mov	r5,r9
   41f38:	004407c0 	call	4407c <__muldf3>
   41f3c:	1009883a 	mov	r4,r2
   41f40:	180b883a 	mov	r5,r3
   41f44:	2021883a 	mov	r16,r4
   41f48:	2823883a 	mov	r17,r5
   41f4c:	e0bfde17 	ldw	r2,-136(fp)
   41f50:	1009883a 	mov	r4,r2
   41f54:	00451ec0 	call	451ec <__floatunsidf>
   41f58:	1009883a 	mov	r4,r2
   41f5c:	180b883a 	mov	r5,r3
   41f60:	200d883a 	mov	r6,r4
   41f64:	280f883a 	mov	r7,r5
   41f68:	8009883a 	mov	r4,r16
   41f6c:	880b883a 	mov	r5,r17
   41f70:	004407c0 	call	4407c <__muldf3>
   41f74:	1009883a 	mov	r4,r2
   41f78:	180b883a 	mov	r5,r3
   41f7c:	e13fd215 	stw	r4,-184(fp)
   41f80:	e17fd315 	stw	r5,-180(fp)
				if (fdco < 4.85*1000.0){
   41f84:	000d883a 	mov	r6,zero
   41f88:	01d02cf4 	movhi	r7,16563
   41f8c:	39fc8004 	addi	r7,r7,-3584
   41f90:	e13fd217 	ldw	r4,-184(fp)
   41f94:	e17fd317 	ldw	r5,-180(fp)
   41f98:	0043f880 	call	43f88 <__ledf2>
   41f9c:	1000070e 	bge	r2,zero,41fbc <SI57x_Config+0x544>
					printf("fail: fdco(%f) < 4.8G\r\n", fdco);
   41fa0:	e17fd217 	ldw	r5,-184(fp)
   41fa4:	e1bfd317 	ldw	r6,-180(fp)
   41fa8:	010001b4 	movhi	r4,6
   41fac:	212bf204 	addi	r4,r4,-20536
   41fb0:	00457a80 	call	457a8 <printf>
					bSuccess = FALSE;
   41fb4:	e03fc315 	stw	zero,-244(fp)
   41fb8:	00001d06 	br	42030 <SI57x_Config+0x5b8>
				}else if (fdco > 5.67*1000.0){
   41fbc:	000d883a 	mov	r6,zero
   41fc0:	01d02db4 	movhi	r7,16566
   41fc4:	39c98004 	addi	r7,r7,9728
   41fc8:	e13fd217 	ldw	r4,-184(fp)
   41fcc:	e17fd317 	ldw	r5,-180(fp)
   41fd0:	0043eac0 	call	43eac <__gedf2>
   41fd4:	0080070e 	bge	zero,r2,41ff4 <SI57x_Config+0x57c>
					printf("fail: fdco(%f) > 5.67G\r\n", fdco);
   41fd8:	e17fd217 	ldw	r5,-184(fp)
   41fdc:	e1bfd317 	ldw	r6,-180(fp)
   41fe0:	010001b4 	movhi	r4,6
   41fe4:	212bf804 	addi	r4,r4,-20512
   41fe8:	00457a80 	call	457a8 <printf>
					bSuccess = FALSE;
   41fec:	e03fc315 	stw	zero,-244(fp)
   41ff0:	00000f06 	br	42030 <SI57x_Config+0x5b8>
				}else{
					printf("fdco:%f GHz\r\n", fdco/1000.0);
   41ff4:	000d883a 	mov	r6,zero
   41ff8:	01d023f4 	movhi	r7,16527
   41ffc:	39d00004 	addi	r7,r7,16384
   42000:	e13fd217 	ldw	r4,-184(fp)
   42004:	e17fd317 	ldw	r5,-180(fp)
   42008:	00435c40 	call	435c4 <__divdf3>
   4200c:	1009883a 	mov	r4,r2
   42010:	180b883a 	mov	r5,r3
   42014:	2005883a 	mov	r2,r4
   42018:	2807883a 	mov	r3,r5
   4201c:	100b883a 	mov	r5,r2
   42020:	180d883a 	mov	r6,r3
   42024:	010001b4 	movhi	r4,6
   42028:	212bff04 	addi	r4,r4,-20484
   4202c:	00457a80 	call	457a8 <printf>
				}


				// 5) Calculate the new crystal frequency multiplication ratio (RFREQ) as RFREQ = fdco / fxtal
				REFEQ = (alt_u64)(fdco/fxtal * (double)(0x01LL << 28));
   42030:	e1bfd017 	ldw	r6,-192(fp)
   42034:	e1ffd117 	ldw	r7,-188(fp)
   42038:	e13fd217 	ldw	r4,-184(fp)
   4203c:	e17fd317 	ldw	r5,-180(fp)
   42040:	00435c40 	call	435c4 <__divdf3>
   42044:	1009883a 	mov	r4,r2
   42048:	180b883a 	mov	r5,r3
   4204c:	2005883a 	mov	r2,r4
   42050:	2807883a 	mov	r3,r5
   42054:	000d883a 	mov	r6,zero
   42058:	01d06c34 	movhi	r7,16816
   4205c:	1009883a 	mov	r4,r2
   42060:	180b883a 	mov	r5,r3
   42064:	004407c0 	call	4407c <__muldf3>
   42068:	1009883a 	mov	r4,r2
   4206c:	180b883a 	mov	r5,r3
   42070:	2005883a 	mov	r2,r4
   42074:	2807883a 	mov	r3,r5
   42078:	1009883a 	mov	r4,r2
   4207c:	180b883a 	mov	r5,r3
   42080:	004272c0 	call	4272c <__fixunsdfdi>
   42084:	1009883a 	mov	r4,r2
   42088:	180b883a 	mov	r5,r3
   4208c:	e13fc515 	stw	r4,-236(fp)
   42090:	e17fc615 	stw	r5,-232(fp)
		}
	}


	// calculate new REFEQ & configre
	if (bSuccess){
   42094:	e0bfc317 	ldw	r2,-244(fp)
   42098:	1000dd26 	beq	r2,zero,42410 <SI57x_Config+0x998>
		REFEQ_HI = (REFEQ >> 32) & 0xFFFFFFFF;
   4209c:	e0bfc617 	ldw	r2,-232(fp)
   420a0:	1004d83a 	srl	r2,r2,zero
   420a4:	e0bff615 	stw	r2,-40(fp)
   420a8:	e03ff715 	stw	zero,-36(fp)
   420ac:	e0bff617 	ldw	r2,-40(fp)
   420b0:	e0bfd415 	stw	r2,-176(fp)
		REFEQ_LOW = REFEQ & 0xFFFFFFFF;
   420b4:	e0bfc517 	ldw	r2,-236(fp)
   420b8:	e0bfd515 	stw	r2,-172(fp)

		printf("HS_DIV=%xh, N1=%xh, REFEQ:%x-%xh\r\n", HS_DIV, N1, REFEQ_HI, REFEQ_LOW );
   420bc:	e0ffdd17 	ldw	r3,-140(fp)
   420c0:	e13fde17 	ldw	r4,-136(fp)
   420c4:	e0bfd517 	ldw	r2,-172(fp)
   420c8:	d8800015 	stw	r2,0(sp)
   420cc:	e1ffd417 	ldw	r7,-176(fp)
   420d0:	200d883a 	mov	r6,r4
   420d4:	180b883a 	mov	r5,r3
   420d8:	010001b4 	movhi	r4,6
   420dc:	212c0304 	addi	r4,r4,-20468
   420e0:	00457a80 	call	457a8 <printf>

		switch(HS_DIV){
   420e4:	e0bfdd17 	ldw	r2,-140(fp)
   420e8:	10bfff04 	addi	r2,r2,-4
   420ec:	10c00228 	cmpgeui	r3,r2,8
   420f0:	18001f1e 	bne	r3,zero,42170 <SI57x_Config+0x6f8>
   420f4:	100690ba 	slli	r3,r2,2
   420f8:	00800134 	movhi	r2,4
   420fc:	10884304 	addi	r2,r2,8460
   42100:	1885883a 	add	r2,r3,r2
   42104:	10800017 	ldw	r2,0(r2)
   42108:	1000683a 	jmp	r2
   4210c:	0004212c 	andhi	zero,zero,4228
   42110:	00042134 	movhi	zero,4228
   42114:	00042140 	call	4214 <__alt_mem_onchip_memory2-0x3bdec>
   42118:	0004214c 	andi	zero,zero,4229
   4211c:	00042170 	cmpltui	zero,zero,4229
   42120:	00042158 	cmpnei	zero,zero,4229
   42124:	00042170 	cmpltui	zero,zero,4229
   42128:	00042164 	muli	zero,zero,4229
			case 4: HS_DIV_REG_VALUE = 0; break;
   4212c:	e03fc415 	stw	zero,-240(fp)
   42130:	00000f06 	br	42170 <SI57x_Config+0x6f8>
			case 5: HS_DIV_REG_VALUE = 1; break;
   42134:	00800044 	movi	r2,1
   42138:	e0bfc415 	stw	r2,-240(fp)
   4213c:	00000c06 	br	42170 <SI57x_Config+0x6f8>
			case 6: HS_DIV_REG_VALUE = 2; break;
   42140:	00800084 	movi	r2,2
   42144:	e0bfc415 	stw	r2,-240(fp)
   42148:	00000906 	br	42170 <SI57x_Config+0x6f8>
			case 7: HS_DIV_REG_VALUE = 3; break;
   4214c:	008000c4 	movi	r2,3
   42150:	e0bfc415 	stw	r2,-240(fp)
   42154:	00000606 	br	42170 <SI57x_Config+0x6f8>
			case 9: HS_DIV_REG_VALUE = 5; break;
   42158:	00800144 	movi	r2,5
   4215c:	e0bfc415 	stw	r2,-240(fp)
   42160:	00000306 	br	42170 <SI57x_Config+0x6f8>
			case 11: HS_DIV_REG_VALUE = 7; break;
   42164:	008001c4 	movi	r2,7
   42168:	e0bfc415 	stw	r2,-240(fp)
   4216c:	0001883a 	nop
		}
		N1_REG_VALUE = N1-1;
   42170:	e0bfde17 	ldw	r2,-136(fp)
   42174:	10bfffc4 	addi	r2,r2,-1
   42178:	e0bfd615 	stw	r2,-168(fp)

		// build register content
		szReg[7]  = ((HS_DIV_REG_VALUE << 5) & 0xE0) | ((N1_REG_VALUE >> 2) & 0x1f);
   4217c:	e0bfc417 	ldw	r2,-240(fp)
   42180:	1004917a 	slli	r2,r2,5
   42184:	1007883a 	mov	r3,r2
   42188:	e0bfd617 	ldw	r2,-168(fp)
   4218c:	1004d0ba 	srli	r2,r2,2
   42190:	108007cc 	andi	r2,r2,31
   42194:	1884b03a 	or	r2,r3,r2
   42198:	e0bfd8c5 	stb	r2,-157(fp)
		szReg[8]  = ((REFEQ_HI) & 0x3f) | ((N1_REG_VALUE << 6) & 0xc0);
   4219c:	e0bfd417 	ldw	r2,-176(fp)
   421a0:	10800fcc 	andi	r2,r2,63
   421a4:	1007883a 	mov	r3,r2
   421a8:	e0bfd617 	ldw	r2,-168(fp)
   421ac:	100491ba 	slli	r2,r2,6
   421b0:	1884b03a 	or	r2,r3,r2
   421b4:	e0bfd905 	stb	r2,-156(fp)
		szReg[9]  = (REFEQ_LOW >> 24) & 0xff;
   421b8:	e0bfd517 	ldw	r2,-172(fp)
   421bc:	1004d63a 	srli	r2,r2,24
   421c0:	e0bfd945 	stb	r2,-155(fp)
		szReg[10] = (REFEQ_LOW >> 16) & 0xff;
   421c4:	e0bfd517 	ldw	r2,-172(fp)
   421c8:	1004d43a 	srli	r2,r2,16
   421cc:	e0bfd985 	stb	r2,-154(fp)
		szReg[11] = (REFEQ_LOW >>  8) & 0xff;
   421d0:	e0bfd517 	ldw	r2,-172(fp)
   421d4:	1004d23a 	srli	r2,r2,8
   421d8:	e0bfd9c5 	stb	r2,-153(fp)
		szReg[12] = (REFEQ_LOW >>  0) & 0xff;
   421dc:	e0bfd517 	ldw	r2,-172(fp)
   421e0:	e0bfda05 	stb	r2,-152(fp)


		// 6) Freeze the DCO by setting Freeze DCO = 1 (bit 4 of register 137).
		bSuccess = I2C_Write(SI57x_I2C_SCLK_BASE, SI57x_I2C_SDAT_BASE, SI57x_DeviceAddr, FreezeDCOReg, 0x10);
   421e4:	e0bfe317 	ldw	r2,-116(fp)
   421e8:	10c03fcc 	andi	r3,r2,255
   421ec:	18c0201c 	xori	r3,r3,128
   421f0:	18ffe004 	addi	r3,r3,-128
   421f4:	e13fc843 	ldbu	r4,-223(fp)
   421f8:	00800404 	movi	r2,16
   421fc:	d8800015 	stw	r2,0(sp)
   42200:	200f883a 	mov	r7,r4
   42204:	180d883a 	mov	r6,r3
   42208:	e17fe217 	ldw	r5,-120(fp)
   4220c:	e13fe117 	ldw	r4,-124(fp)
   42210:	004020c0 	call	4020c <I2C_Write>
   42214:	e0bfc315 	stw	r2,-244(fp)
		if (!bSuccess)
   42218:	e0bfc317 	ldw	r2,-244(fp)
   4221c:	1000031e 	bne	r2,zero,4222c <SI57x_Config+0x7b4>
			printf("failed to freeze DCO\r\n");
   42220:	010001b4 	movhi	r4,6
   42224:	212c0c04 	addi	r4,r4,-20432
   42228:	00458a40 	call	458a4 <puts>

		// 7) Write the new frequency configuration (RFREQ, HS_DIV, and N1)
		for(n=7;n<=12 && bSuccess;n++){
   4222c:	008001c4 	movi	r2,7
   42230:	e0bfc715 	stw	r2,-228(fp)
   42234:	00002106 	br	422bc <SI57x_Config+0x844>
			//printf("reg[%d] write:%02xh\r\n", n, szReg[n]);
			bSuccess = I2C_Write(SI57x_I2C_SCLK_BASE, SI57x_I2C_SDAT_BASE, SI57x_DeviceAddr, n, szReg[n]);
   42238:	e0bfe317 	ldw	r2,-116(fp)
   4223c:	11003fcc 	andi	r4,r2,255
   42240:	2100201c 	xori	r4,r4,128
   42244:	213fe004 	addi	r4,r4,-128
   42248:	e0bfc717 	ldw	r2,-228(fp)
   4224c:	11403fcc 	andi	r5,r2,255
   42250:	e0ffd704 	addi	r3,fp,-164
   42254:	e0bfc717 	ldw	r2,-228(fp)
   42258:	1885883a 	add	r2,r3,r2
   4225c:	10800003 	ldbu	r2,0(r2)
   42260:	10803fcc 	andi	r2,r2,255
   42264:	d8800015 	stw	r2,0(sp)
   42268:	280f883a 	mov	r7,r5
   4226c:	200d883a 	mov	r6,r4
   42270:	e17fe217 	ldw	r5,-120(fp)
   42274:	e13fe117 	ldw	r4,-124(fp)
   42278:	004020c0 	call	4020c <I2C_Write>
   4227c:	e0bfc315 	stw	r2,-244(fp)
			if (!bSuccess)
   42280:	e0bfc317 	ldw	r2,-244(fp)
   42284:	10000a1e 	bne	r2,zero,422b0 <SI57x_Config+0x838>
				printf("Failed to perform I2C write, reg-%d with value %02x\r\n", n, szReg[n]);
   42288:	e0ffd704 	addi	r3,fp,-164
   4228c:	e0bfc717 	ldw	r2,-228(fp)
   42290:	1885883a 	add	r2,r3,r2
   42294:	10800003 	ldbu	r2,0(r2)
   42298:	10803fcc 	andi	r2,r2,255
   4229c:	100d883a 	mov	r6,r2
   422a0:	e17fc717 	ldw	r5,-228(fp)
   422a4:	010001b4 	movhi	r4,6
   422a8:	212c1204 	addi	r4,r4,-20408
   422ac:	00457a80 	call	457a8 <printf>
		bSuccess = I2C_Write(SI57x_I2C_SCLK_BASE, SI57x_I2C_SDAT_BASE, SI57x_DeviceAddr, FreezeDCOReg, 0x10);
		if (!bSuccess)
			printf("failed to freeze DCO\r\n");

		// 7) Write the new frequency configuration (RFREQ, HS_DIV, and N1)
		for(n=7;n<=12 && bSuccess;n++){
   422b0:	e0bfc717 	ldw	r2,-228(fp)
   422b4:	10800044 	addi	r2,r2,1
   422b8:	e0bfc715 	stw	r2,-228(fp)
   422bc:	e0bfc717 	ldw	r2,-228(fp)
   422c0:	10800348 	cmpgei	r2,r2,13
   422c4:	1000021e 	bne	r2,zero,422d0 <SI57x_Config+0x858>
   422c8:	e0bfc317 	ldw	r2,-244(fp)
   422cc:	103fda1e 	bne	r2,zero,42238 <__alt_data_end+0xfffc3a38>
			if (!bSuccess)
				printf("Failed to perform I2C write, reg-%d with value %02x\r\n", n, szReg[n]);
		}

		// 8) Unfreeze the DCO by setting Freeze DCO = 0 and assert the NewFreq bit (bit 6 of register 135) within 10 ms.
		if (bSuccess){
   422d0:	e0bfc317 	ldw	r2,-244(fp)
   422d4:	10004e26 	beq	r2,zero,42410 <SI57x_Config+0x998>
			// remember current content of Command Register (register 135)
			bSuccess = I2C_Read(SI57x_I2C_SCLK_BASE, SI57x_I2C_SDAT_BASE, SI57x_DeviceAddr, CommandReg, &Command);
   422d8:	e0bfe317 	ldw	r2,-116(fp)
   422dc:	10c03fcc 	andi	r3,r2,255
   422e0:	18c0201c 	xori	r3,r3,128
   422e4:	18ffe004 	addi	r3,r3,-128
   422e8:	e13fc803 	ldbu	r4,-224(fp)
   422ec:	e0bfdf04 	addi	r2,fp,-132
   422f0:	d8800015 	stw	r2,0(sp)
   422f4:	200f883a 	mov	r7,r4
   422f8:	180d883a 	mov	r6,r3
   422fc:	e17fe217 	ldw	r5,-120(fp)
   42300:	e13fe117 	ldw	r4,-124(fp)
   42304:	00402e40 	call	402e4 <I2C_Read>
   42308:	e0bfc315 	stw	r2,-244(fp)
			if (!bSuccess)
   4230c:	e0bfc317 	ldw	r2,-244(fp)
   42310:	1000051e 	bne	r2,zero,42328 <SI57x_Config+0x8b0>
				printf("Failed to perform I2C read, reg-%d\r\n", CommandReg);
   42314:	e0bfc803 	ldbu	r2,-224(fp)
   42318:	100b883a 	mov	r5,r2
   4231c:	010001b4 	movhi	r4,6
   42320:	212bbf04 	addi	r4,r4,-20740
   42324:	00457a80 	call	457a8 <printf>

			// Unfreeze the DCO by setting Freeze DCO = 0
			bSuccess = I2C_Write(SI57x_I2C_SCLK_BASE, SI57x_I2C_SDAT_BASE, SI57x_DeviceAddr, FreezeDCOReg, 0x00);
   42328:	e0bfe317 	ldw	r2,-116(fp)
   4232c:	10803fcc 	andi	r2,r2,255
   42330:	1080201c 	xori	r2,r2,128
   42334:	10bfe004 	addi	r2,r2,-128
   42338:	e0ffc843 	ldbu	r3,-223(fp)
   4233c:	d8000015 	stw	zero,0(sp)
   42340:	180f883a 	mov	r7,r3
   42344:	100d883a 	mov	r6,r2
   42348:	e17fe217 	ldw	r5,-120(fp)
   4234c:	e13fe117 	ldw	r4,-124(fp)
   42350:	004020c0 	call	4020c <I2C_Write>
   42354:	e0bfc315 	stw	r2,-244(fp)
			if (!bSuccess)
   42358:	e0bfc317 	ldw	r2,-244(fp)
   4235c:	1000031e 	bne	r2,zero,4236c <SI57x_Config+0x8f4>
				printf("failed to unfreeze DCO\r\n");
   42360:	010001b4 	movhi	r4,6
   42364:	212c2004 	addi	r4,r4,-20352
   42368:	00458a40 	call	458a4 <puts>

			// assert the NewFreq bit (bit 6 of register 135)
			if (bSuccess){
   4236c:	e0bfc317 	ldw	r2,-244(fp)
   42370:	10002726 	beq	r2,zero,42410 <SI57x_Config+0x998>
				Command |= 0x40;
   42374:	e0bfdf03 	ldbu	r2,-132(fp)
   42378:	10801014 	ori	r2,r2,64
   4237c:	e0bfdf05 	stb	r2,-132(fp)
				bSuccess = I2C_Write(SI57x_I2C_SCLK_BASE, SI57x_I2C_SDAT_BASE, SI57x_DeviceAddr, CommandReg, Command);
   42380:	e0bfe317 	ldw	r2,-116(fp)
   42384:	10c03fcc 	andi	r3,r2,255
   42388:	18c0201c 	xori	r3,r3,128
   4238c:	18ffe004 	addi	r3,r3,-128
   42390:	e13fc803 	ldbu	r4,-224(fp)
   42394:	e0bfdf03 	ldbu	r2,-132(fp)
   42398:	10803fcc 	andi	r2,r2,255
   4239c:	d8800015 	stw	r2,0(sp)
   423a0:	200f883a 	mov	r7,r4
   423a4:	180d883a 	mov	r6,r3
   423a8:	e17fe217 	ldw	r5,-120(fp)
   423ac:	e13fe117 	ldw	r4,-124(fp)
   423b0:	004020c0 	call	4020c <I2C_Write>
   423b4:	e0bfc315 	stw	r2,-244(fp)
				if (!bSuccess){
   423b8:	e0bfc317 	ldw	r2,-244(fp)
   423bc:	1000091e 	bne	r2,zero,423e4 <SI57x_Config+0x96c>
					printf("Failed to perform I2C write, reg-%d with value %02x\r\n", CommandReg, Command);
   423c0:	e0bfc803 	ldbu	r2,-224(fp)
   423c4:	e0ffdf03 	ldbu	r3,-132(fp)
   423c8:	18c03fcc 	andi	r3,r3,255
   423cc:	180d883a 	mov	r6,r3
   423d0:	100b883a 	mov	r5,r2
   423d4:	010001b4 	movhi	r4,6
   423d8:	212c1204 	addi	r4,r4,-20408
   423dc:	00457a80 	call	457a8 <printf>
   423e0:	00000b06 	br	42410 <SI57x_Config+0x998>
				}else{
					printf("Reg-135, Reset?Freeze/Memory Control:%xh\r\n", Command);
   423e4:	e0bfdf03 	ldbu	r2,-132(fp)
   423e8:	10803fcc 	andi	r2,r2,255
   423ec:	100b883a 	mov	r5,r2
   423f0:	010001b4 	movhi	r4,6
   423f4:	212c2604 	addi	r4,r4,-20328
   423f8:	00457a80 	call	457a8 <printf>
					usleep(10*1000); // wait 10 ms to clock stable
   423fc:	0109c404 	movi	r4,10000
   42400:	0058b500 	call	58b50 <usleep>
					printf("Done\r\n");
   42404:	010001b4 	movhi	r4,6
   42408:	212c3104 	addi	r4,r4,-20284
   4240c:	00458a40 	call	458a4 <puts>

	// re-config


	//
	return bSuccess;
   42410:	e0bfc317 	ldw	r2,-244(fp)

}
   42414:	e6fff804 	addi	sp,fp,-32
   42418:	dfc00917 	ldw	ra,36(sp)
   4241c:	df000817 	ldw	fp,32(sp)
   42420:	ddc00717 	ldw	r23,28(sp)
   42424:	dd800617 	ldw	r22,24(sp)
   42428:	dd400517 	ldw	r21,20(sp)
   4242c:	dd000417 	ldw	r20,16(sp)
   42430:	dcc00317 	ldw	r19,12(sp)
   42434:	dc800217 	ldw	r18,8(sp)
   42438:	dc400117 	ldw	r17,4(sp)
   4243c:	dc000017 	ldw	r16,0(sp)
   42440:	dec00a04 	addi	sp,sp,40
   42444:	f800283a 	ret

00042448 <SI57x_Config_Dump>:


bool SI57x_Config_Dump(alt_u32 SI57x_I2C_SCLK_BASE, alt_u32 SI57x_I2C_SDAT_BASE, int SI57x_DeviceAddr){
   42448:	deffd704 	addi	sp,sp,-164
   4244c:	dfc02815 	stw	ra,160(sp)
   42450:	df002715 	stw	fp,156(sp)
   42454:	ddc02615 	stw	r23,152(sp)
   42458:	dd802515 	stw	r22,148(sp)
   4245c:	dd402415 	stw	r21,144(sp)
   42460:	dd002315 	stw	r20,140(sp)
   42464:	dcc02215 	stw	r19,136(sp)
   42468:	dc802115 	stw	r18,132(sp)
   4246c:	dc402015 	stw	r17,128(sp)
   42470:	dc001f15 	stw	r16,124(sp)
   42474:	df002704 	addi	fp,sp,156
   42478:	e13fe315 	stw	r4,-116(fp)
   4247c:	e17fe415 	stw	r5,-112(fp)
   42480:	e1bfe515 	stw	r6,-108(fp)
	alt_u8 startup_HS_DIV, startup_N1;
	alt_u64 startup_REFEQ;


			// read startup reg value
			for(n=7;n<=12 && bSuccess;n++){
   42484:	008001c4 	movi	r2,7
   42488:	e0bfdb15 	stw	r2,-148(fp)
   4248c:	00001306 	br	424dc <SI57x_Config_Dump+0x94>
				bSuccess = I2C_Read(SI57x_I2C_SCLK_BASE, SI57x_I2C_SDAT_BASE, SI57x_DeviceAddr, n, &szReg[n]);
   42490:	e0bfe517 	ldw	r2,-108(fp)
   42494:	11403fcc 	andi	r5,r2,255
   42498:	2940201c 	xori	r5,r5,128
   4249c:	297fe004 	addi	r5,r5,-128
   424a0:	e0bfdb17 	ldw	r2,-148(fp)
   424a4:	11003fcc 	andi	r4,r2,255
   424a8:	e0ffdf04 	addi	r3,fp,-132
   424ac:	e0bfdb17 	ldw	r2,-148(fp)
   424b0:	1885883a 	add	r2,r3,r2
   424b4:	d8800015 	stw	r2,0(sp)
   424b8:	200f883a 	mov	r7,r4
   424bc:	280d883a 	mov	r6,r5
   424c0:	e17fe417 	ldw	r5,-112(fp)
   424c4:	e13fe317 	ldw	r4,-116(fp)
   424c8:	00402e40 	call	402e4 <I2C_Read>
   424cc:	e0bfda15 	stw	r2,-152(fp)
	alt_u8 startup_HS_DIV, startup_N1;
	alt_u64 startup_REFEQ;


			// read startup reg value
			for(n=7;n<=12 && bSuccess;n++){
   424d0:	e0bfdb17 	ldw	r2,-148(fp)
   424d4:	10800044 	addi	r2,r2,1
   424d8:	e0bfdb15 	stw	r2,-148(fp)
   424dc:	e0bfdb17 	ldw	r2,-148(fp)
   424e0:	10800348 	cmpgei	r2,r2,13
   424e4:	1000021e 	bne	r2,zero,424f0 <SI57x_Config_Dump+0xa8>
   424e8:	e0bfda17 	ldw	r2,-152(fp)
   424ec:	103fe81e 	bne	r2,zero,42490 <__alt_data_end+0xfffc3c90>
				bSuccess = I2C_Read(SI57x_I2C_SCLK_BASE, SI57x_I2C_SDAT_BASE, SI57x_DeviceAddr, n, &szReg[n]);
			}

			if (!bSuccess){
   424f0:	e0bfda17 	ldw	r2,-152(fp)
   424f4:	1000041e 	bne	r2,zero,42508 <SI57x_Config_Dump+0xc0>
				printf("failed to read startup register value\r\n");
   424f8:	010001b4 	movhi	r4,6
   424fc:	212bce04 	addi	r4,r4,-20680
   42500:	00458a40 	call	458a4 <puts>
   42504:	00007b06 	br	426f4 <SI57x_Config_Dump+0x2ac>
			}else{
				startup_HS_DIV = (szReg[7] >> 5) & 0x07;
   42508:	e0bfe0c3 	ldbu	r2,-125(fp)
   4250c:	10803fcc 	andi	r2,r2,255
   42510:	1004d17a 	srli	r2,r2,5
   42514:	e0bfdc05 	stb	r2,-144(fp)
				startup_HS_DIV += 4;
   42518:	e0bfdc03 	ldbu	r2,-144(fp)
   4251c:	10800104 	addi	r2,r2,4
   42520:	e0bfdc05 	stb	r2,-144(fp)

				startup_N1 = ((szReg[7] & 0x1F) << 2) | ((szReg[8] >> 6) & 0x03);
   42524:	e0bfe0c3 	ldbu	r2,-125(fp)
   42528:	10803fcc 	andi	r2,r2,255
   4252c:	108007cc 	andi	r2,r2,31
   42530:	1085883a 	add	r2,r2,r2
   42534:	1085883a 	add	r2,r2,r2
   42538:	1007883a 	mov	r3,r2
   4253c:	e0bfe103 	ldbu	r2,-124(fp)
   42540:	10803fcc 	andi	r2,r2,255
   42544:	1004d1ba 	srli	r2,r2,6
   42548:	1884b03a 	or	r2,r3,r2
   4254c:	e0bfdc45 	stb	r2,-143(fp)
				startup_N1 += 1;
   42550:	e0bfdc43 	ldbu	r2,-143(fp)
   42554:	10800044 	addi	r2,r2,1
   42558:	e0bfdc45 	stb	r2,-143(fp)

				startup_REFEQ = (alt_u64)szReg[12] | ((alt_u64)szReg[11] << 8) | ((alt_u64)szReg[10] << 16)  | ((alt_u64)szReg[9] << 24) |  (((alt_u64)szReg[8] & 0x3F) << 32);
   4255c:	e0bfe203 	ldbu	r2,-120(fp)
   42560:	10803fcc 	andi	r2,r2,255
   42564:	e0bfe615 	stw	r2,-104(fp)
   42568:	e03fe715 	stw	zero,-100(fp)
   4256c:	e0bfe1c3 	ldbu	r2,-121(fp)
   42570:	10803fcc 	andi	r2,r2,255
   42574:	e0bfe815 	stw	r2,-96(fp)
   42578:	e03fe915 	stw	zero,-92(fp)
   4257c:	e0ffe817 	ldw	r3,-96(fp)
   42580:	1804d63a 	srli	r2,r3,24
   42584:	e0ffe917 	ldw	r3,-92(fp)
   42588:	182a923a 	slli	r21,r3,8
   4258c:	156ab03a 	or	r21,r2,r21
   42590:	e0bfe817 	ldw	r2,-96(fp)
   42594:	1028923a 	slli	r20,r2,8
   42598:	e0ffe617 	ldw	r3,-104(fp)
   4259c:	1d06b03a 	or	r3,r3,r20
   425a0:	e0ffea15 	stw	r3,-88(fp)
   425a4:	e0bfe717 	ldw	r2,-100(fp)
   425a8:	1544b03a 	or	r2,r2,r21
   425ac:	e0bfeb15 	stw	r2,-84(fp)
   425b0:	e0bfe183 	ldbu	r2,-122(fp)
   425b4:	10803fcc 	andi	r2,r2,255
   425b8:	e0bfec15 	stw	r2,-80(fp)
   425bc:	e03fed15 	stw	zero,-76(fp)
   425c0:	e0ffec17 	ldw	r3,-80(fp)
   425c4:	1804d43a 	srli	r2,r3,16
   425c8:	e0ffed17 	ldw	r3,-76(fp)
   425cc:	1826943a 	slli	r19,r3,16
   425d0:	14e6b03a 	or	r19,r2,r19
   425d4:	e0bfec17 	ldw	r2,-80(fp)
   425d8:	1024943a 	slli	r18,r2,16
   425dc:	e0ffea17 	ldw	r3,-88(fp)
   425e0:	1c86b03a 	or	r3,r3,r18
   425e4:	e0ffee15 	stw	r3,-72(fp)
   425e8:	e0bfeb17 	ldw	r2,-84(fp)
   425ec:	14c4b03a 	or	r2,r2,r19
   425f0:	e0bfef15 	stw	r2,-68(fp)
   425f4:	e0bfe143 	ldbu	r2,-123(fp)
   425f8:	10803fcc 	andi	r2,r2,255
   425fc:	e0bff015 	stw	r2,-64(fp)
   42600:	e03ff115 	stw	zero,-60(fp)
   42604:	e0fff017 	ldw	r3,-64(fp)
   42608:	1804d23a 	srli	r2,r3,8
   4260c:	e0fff117 	ldw	r3,-60(fp)
   42610:	1822963a 	slli	r17,r3,24
   42614:	1462b03a 	or	r17,r2,r17
   42618:	e0bff017 	ldw	r2,-64(fp)
   4261c:	1020963a 	slli	r16,r2,24
   42620:	e0ffee17 	ldw	r3,-72(fp)
   42624:	1c2cb03a 	or	r22,r3,r16
   42628:	e0bfef17 	ldw	r2,-68(fp)
   4262c:	146eb03a 	or	r23,r2,r17
   42630:	e0bfe103 	ldbu	r2,-124(fp)
   42634:	10803fcc 	andi	r2,r2,255
   42638:	e0bff215 	stw	r2,-56(fp)
   4263c:	e03ff315 	stw	zero,-52(fp)
   42640:	e0fff217 	ldw	r3,-56(fp)
   42644:	18c00fcc 	andi	r3,r3,63
   42648:	e0fff415 	stw	r3,-48(fp)
   4264c:	e0bff317 	ldw	r2,-52(fp)
   42650:	1004703a 	and	r2,r2,zero
   42654:	e0bff515 	stw	r2,-44(fp)
   42658:	e0fff417 	ldw	r3,-48(fp)
   4265c:	1806983a 	sll	r3,r3,zero
   42660:	e0fff715 	stw	r3,-36(fp)
   42664:	e03ff615 	stw	zero,-40(fp)
   42668:	e0fff617 	ldw	r3,-40(fp)
   4266c:	b0c4b03a 	or	r2,r22,r3
   42670:	e0bfdd15 	stw	r2,-140(fp)
   42674:	e0fff717 	ldw	r3,-36(fp)
   42678:	b8c4b03a 	or	r2,r23,r3
   4267c:	e0bfde15 	stw	r2,-136(fp)

				printf("startup:\r\nHS_DIV=%d,\r\nN1=%d,\r\nREFEQ=%llxh\r\n", startup_HS_DIV, startup_N1, startup_REFEQ);
   42680:	e0ffdc03 	ldbu	r3,-144(fp)
   42684:	e13fdc43 	ldbu	r4,-143(fp)
   42688:	e0bfde17 	ldw	r2,-136(fp)
   4268c:	d8800015 	stw	r2,0(sp)
   42690:	e1ffdd17 	ldw	r7,-140(fp)
   42694:	200d883a 	mov	r6,r4
   42698:	180b883a 	mov	r5,r3
   4269c:	010001b4 	movhi	r4,6
   426a0:	212c3304 	addi	r4,r4,-20276
   426a4:	00457a80 	call	457a8 <printf>

				for(n=7;n<=12;n++){
   426a8:	008001c4 	movi	r2,7
   426ac:	e0bfdb15 	stw	r2,-148(fp)
   426b0:	00000d06 	br	426e8 <SI57x_Config_Dump+0x2a0>
					printf("reg[%d]=%02xh\r\n", n, szReg[n]);
   426b4:	e0ffdf04 	addi	r3,fp,-132
   426b8:	e0bfdb17 	ldw	r2,-148(fp)
   426bc:	1885883a 	add	r2,r3,r2
   426c0:	10800003 	ldbu	r2,0(r2)
   426c4:	10803fcc 	andi	r2,r2,255
   426c8:	100d883a 	mov	r6,r2
   426cc:	e17fdb17 	ldw	r5,-148(fp)
   426d0:	010001b4 	movhi	r4,6
   426d4:	212c3e04 	addi	r4,r4,-20232
   426d8:	00457a80 	call	457a8 <printf>

				startup_REFEQ = (alt_u64)szReg[12] | ((alt_u64)szReg[11] << 8) | ((alt_u64)szReg[10] << 16)  | ((alt_u64)szReg[9] << 24) |  (((alt_u64)szReg[8] & 0x3F) << 32);

				printf("startup:\r\nHS_DIV=%d,\r\nN1=%d,\r\nREFEQ=%llxh\r\n", startup_HS_DIV, startup_N1, startup_REFEQ);

				for(n=7;n<=12;n++){
   426dc:	e0bfdb17 	ldw	r2,-148(fp)
   426e0:	10800044 	addi	r2,r2,1
   426e4:	e0bfdb15 	stw	r2,-148(fp)
   426e8:	e0bfdb17 	ldw	r2,-148(fp)
   426ec:	10800350 	cmplti	r2,r2,13
   426f0:	103ff01e 	bne	r2,zero,426b4 <__alt_data_end+0xfffc3eb4>
			}




	return bSuccess;
   426f4:	e0bfda17 	ldw	r2,-152(fp)


}
   426f8:	e6fff804 	addi	sp,fp,-32
   426fc:	dfc00917 	ldw	ra,36(sp)
   42700:	df000817 	ldw	fp,32(sp)
   42704:	ddc00717 	ldw	r23,28(sp)
   42708:	dd800617 	ldw	r22,24(sp)
   4270c:	dd400517 	ldw	r21,20(sp)
   42710:	dd000417 	ldw	r20,16(sp)
   42714:	dcc00317 	ldw	r19,12(sp)
   42718:	dc800217 	ldw	r18,8(sp)
   4271c:	dc400117 	ldw	r17,4(sp)
   42720:	dc000017 	ldw	r16,0(sp)
   42724:	dec00a04 	addi	sp,sp,40
   42728:	f800283a 	ret

0004272c <__fixunsdfdi>:
   4272c:	defffc04 	addi	sp,sp,-16
   42730:	000d883a 	mov	r6,zero
   42734:	01cf7c34 	movhi	r7,15856
   42738:	dfc00315 	stw	ra,12(sp)
   4273c:	dc800215 	stw	r18,8(sp)
   42740:	dc400115 	stw	r17,4(sp)
   42744:	2025883a 	mov	r18,r4
   42748:	2823883a 	mov	r17,r5
   4274c:	dc000015 	stw	r16,0(sp)
   42750:	004407c0 	call	4407c <__muldf3>
   42754:	180b883a 	mov	r5,r3
   42758:	1009883a 	mov	r4,r2
   4275c:	00454080 	call	45408 <__fixunsdfsi>
   42760:	1009883a 	mov	r4,r2
   42764:	1021883a 	mov	r16,r2
   42768:	00451ec0 	call	451ec <__floatunsidf>
   4276c:	000d883a 	mov	r6,zero
   42770:	01d07c34 	movhi	r7,16880
   42774:	1009883a 	mov	r4,r2
   42778:	180b883a 	mov	r5,r3
   4277c:	004407c0 	call	4407c <__muldf3>
   42780:	100d883a 	mov	r6,r2
   42784:	180f883a 	mov	r7,r3
   42788:	9009883a 	mov	r4,r18
   4278c:	880b883a 	mov	r5,r17
   42790:	00447940 	call	44794 <__subdf3>
   42794:	180b883a 	mov	r5,r3
   42798:	1009883a 	mov	r4,r2
   4279c:	00454080 	call	45408 <__fixunsdfsi>
   427a0:	8007883a 	mov	r3,r16
   427a4:	dfc00317 	ldw	ra,12(sp)
   427a8:	dc800217 	ldw	r18,8(sp)
   427ac:	dc400117 	ldw	r17,4(sp)
   427b0:	dc000017 	ldw	r16,0(sp)
   427b4:	dec00404 	addi	sp,sp,16
   427b8:	f800283a 	ret

000427bc <__floatundidf>:
   427bc:	defffc04 	addi	sp,sp,-16
   427c0:	dc800215 	stw	r18,8(sp)
   427c4:	2025883a 	mov	r18,r4
   427c8:	2809883a 	mov	r4,r5
   427cc:	dfc00315 	stw	ra,12(sp)
   427d0:	dc400115 	stw	r17,4(sp)
   427d4:	dc000015 	stw	r16,0(sp)
   427d8:	00451ec0 	call	451ec <__floatunsidf>
   427dc:	000d883a 	mov	r6,zero
   427e0:	01d07c34 	movhi	r7,16880
   427e4:	180b883a 	mov	r5,r3
   427e8:	1009883a 	mov	r4,r2
   427ec:	004407c0 	call	4407c <__muldf3>
   427f0:	9009883a 	mov	r4,r18
   427f4:	1023883a 	mov	r17,r2
   427f8:	1821883a 	mov	r16,r3
   427fc:	00451ec0 	call	451ec <__floatunsidf>
   42800:	880d883a 	mov	r6,r17
   42804:	800f883a 	mov	r7,r16
   42808:	1009883a 	mov	r4,r2
   4280c:	180b883a 	mov	r5,r3
   42810:	0042d180 	call	42d18 <__adddf3>
   42814:	dfc00317 	ldw	ra,12(sp)
   42818:	dc800217 	ldw	r18,8(sp)
   4281c:	dc400117 	ldw	r17,4(sp)
   42820:	dc000017 	ldw	r16,0(sp)
   42824:	dec00404 	addi	sp,sp,16
   42828:	f800283a 	ret

0004282c <__mulsf3>:
   4282c:	defff504 	addi	sp,sp,-44
   42830:	dc000115 	stw	r16,4(sp)
   42834:	2020d5fa 	srli	r16,r4,23
   42838:	dd400615 	stw	r21,24(sp)
   4283c:	202ad7fa 	srli	r21,r4,31
   42840:	dc800315 	stw	r18,12(sp)
   42844:	04802034 	movhi	r18,128
   42848:	df000915 	stw	fp,36(sp)
   4284c:	dd000515 	stw	r20,20(sp)
   42850:	94bfffc4 	addi	r18,r18,-1
   42854:	dfc00a15 	stw	ra,40(sp)
   42858:	ddc00815 	stw	r23,32(sp)
   4285c:	dd800715 	stw	r22,28(sp)
   42860:	dcc00415 	stw	r19,16(sp)
   42864:	dc400215 	stw	r17,8(sp)
   42868:	84003fcc 	andi	r16,r16,255
   4286c:	9124703a 	and	r18,r18,r4
   42870:	a829883a 	mov	r20,r21
   42874:	af003fcc 	andi	fp,r21,255
   42878:	80005426 	beq	r16,zero,429cc <__mulsf3+0x1a0>
   4287c:	00803fc4 	movi	r2,255
   42880:	80802f26 	beq	r16,r2,42940 <__mulsf3+0x114>
   42884:	91002034 	orhi	r4,r18,128
   42888:	202490fa 	slli	r18,r4,3
   4288c:	843fe044 	addi	r16,r16,-127
   42890:	0023883a 	mov	r17,zero
   42894:	002f883a 	mov	r23,zero
   42898:	2804d5fa 	srli	r2,r5,23
   4289c:	282cd7fa 	srli	r22,r5,31
   428a0:	01002034 	movhi	r4,128
   428a4:	213fffc4 	addi	r4,r4,-1
   428a8:	10803fcc 	andi	r2,r2,255
   428ac:	2166703a 	and	r19,r4,r5
   428b0:	b1803fcc 	andi	r6,r22,255
   428b4:	10004c26 	beq	r2,zero,429e8 <__mulsf3+0x1bc>
   428b8:	00c03fc4 	movi	r3,255
   428bc:	10c04726 	beq	r2,r3,429dc <__mulsf3+0x1b0>
   428c0:	99002034 	orhi	r4,r19,128
   428c4:	202690fa 	slli	r19,r4,3
   428c8:	10bfe044 	addi	r2,r2,-127
   428cc:	0007883a 	mov	r3,zero
   428d0:	80a1883a 	add	r16,r16,r2
   428d4:	010003c4 	movi	r4,15
   428d8:	1c44b03a 	or	r2,r3,r17
   428dc:	b56af03a 	xor	r21,r22,r21
   428e0:	81c00044 	addi	r7,r16,1
   428e4:	20806b36 	bltu	r4,r2,42a94 <__mulsf3+0x268>
   428e8:	100490ba 	slli	r2,r2,2
   428ec:	01000134 	movhi	r4,4
   428f0:	210a4004 	addi	r4,r4,10496
   428f4:	1105883a 	add	r2,r2,r4
   428f8:	10800017 	ldw	r2,0(r2)
   428fc:	1000683a 	jmp	r2
   42900:	00042a94 	movui	zero,4266
   42904:	00042954 	movui	zero,4261
   42908:	00042954 	movui	zero,4261
   4290c:	00042950 	cmplti	zero,zero,4261
   42910:	00042a78 	rdprs	zero,zero,4265
   42914:	00042a78 	rdprs	zero,zero,4265
   42918:	00042a64 	muli	zero,zero,4265
   4291c:	00042950 	cmplti	zero,zero,4261
   42920:	00042a78 	rdprs	zero,zero,4265
   42924:	00042a64 	muli	zero,zero,4265
   42928:	00042a78 	rdprs	zero,zero,4265
   4292c:	00042950 	cmplti	zero,zero,4261
   42930:	00042a84 	movi	zero,4266
   42934:	00042a84 	movi	zero,4266
   42938:	00042a84 	movi	zero,4266
   4293c:	00042b60 	cmpeqi	zero,zero,4269
   42940:	90003b1e 	bne	r18,zero,42a30 <__mulsf3+0x204>
   42944:	04400204 	movi	r17,8
   42948:	05c00084 	movi	r23,2
   4294c:	003fd206 	br	42898 <__alt_data_end+0xfffc4098>
   42950:	302b883a 	mov	r21,r6
   42954:	00800084 	movi	r2,2
   42958:	18802626 	beq	r3,r2,429f4 <__mulsf3+0x1c8>
   4295c:	008000c4 	movi	r2,3
   42960:	1880ab26 	beq	r3,r2,42c10 <__mulsf3+0x3e4>
   42964:	00800044 	movi	r2,1
   42968:	1880a21e 	bne	r3,r2,42bf4 <__mulsf3+0x3c8>
   4296c:	a829883a 	mov	r20,r21
   42970:	0007883a 	mov	r3,zero
   42974:	0009883a 	mov	r4,zero
   42978:	18803fcc 	andi	r2,r3,255
   4297c:	100695fa 	slli	r3,r2,23
   42980:	a0803fcc 	andi	r2,r20,255
   42984:	100a97fa 	slli	r5,r2,31
   42988:	00802034 	movhi	r2,128
   4298c:	10bfffc4 	addi	r2,r2,-1
   42990:	2084703a 	and	r2,r4,r2
   42994:	10c4b03a 	or	r2,r2,r3
   42998:	1144b03a 	or	r2,r2,r5
   4299c:	dfc00a17 	ldw	ra,40(sp)
   429a0:	df000917 	ldw	fp,36(sp)
   429a4:	ddc00817 	ldw	r23,32(sp)
   429a8:	dd800717 	ldw	r22,28(sp)
   429ac:	dd400617 	ldw	r21,24(sp)
   429b0:	dd000517 	ldw	r20,20(sp)
   429b4:	dcc00417 	ldw	r19,16(sp)
   429b8:	dc800317 	ldw	r18,12(sp)
   429bc:	dc400217 	ldw	r17,8(sp)
   429c0:	dc000117 	ldw	r16,4(sp)
   429c4:	dec00b04 	addi	sp,sp,44
   429c8:	f800283a 	ret
   429cc:	90000d1e 	bne	r18,zero,42a04 <__mulsf3+0x1d8>
   429d0:	04400104 	movi	r17,4
   429d4:	05c00044 	movi	r23,1
   429d8:	003faf06 	br	42898 <__alt_data_end+0xfffc4098>
   429dc:	9806c03a 	cmpne	r3,r19,zero
   429e0:	18c00084 	addi	r3,r3,2
   429e4:	003fba06 	br	428d0 <__alt_data_end+0xfffc40d0>
   429e8:	9800141e 	bne	r19,zero,42a3c <__mulsf3+0x210>
   429ec:	00c00044 	movi	r3,1
   429f0:	003fb706 	br	428d0 <__alt_data_end+0xfffc40d0>
   429f4:	a829883a 	mov	r20,r21
   429f8:	00ffffc4 	movi	r3,-1
   429fc:	0009883a 	mov	r4,zero
   42a00:	003fdd06 	br	42978 <__alt_data_end+0xfffc4178>
   42a04:	9009883a 	mov	r4,r18
   42a08:	d9400015 	stw	r5,0(sp)
   42a0c:	00453a40 	call	453a4 <__clzsi2>
   42a10:	10fffec4 	addi	r3,r2,-5
   42a14:	10801d84 	addi	r2,r2,118
   42a18:	90e4983a 	sll	r18,r18,r3
   42a1c:	00a1c83a 	sub	r16,zero,r2
   42a20:	0023883a 	mov	r17,zero
   42a24:	002f883a 	mov	r23,zero
   42a28:	d9400017 	ldw	r5,0(sp)
   42a2c:	003f9a06 	br	42898 <__alt_data_end+0xfffc4098>
   42a30:	04400304 	movi	r17,12
   42a34:	05c000c4 	movi	r23,3
   42a38:	003f9706 	br	42898 <__alt_data_end+0xfffc4098>
   42a3c:	9809883a 	mov	r4,r19
   42a40:	d9800015 	stw	r6,0(sp)
   42a44:	00453a40 	call	453a4 <__clzsi2>
   42a48:	10fffec4 	addi	r3,r2,-5
   42a4c:	10801d84 	addi	r2,r2,118
   42a50:	98e6983a 	sll	r19,r19,r3
   42a54:	0085c83a 	sub	r2,zero,r2
   42a58:	0007883a 	mov	r3,zero
   42a5c:	d9800017 	ldw	r6,0(sp)
   42a60:	003f9b06 	br	428d0 <__alt_data_end+0xfffc40d0>
   42a64:	01002034 	movhi	r4,128
   42a68:	0029883a 	mov	r20,zero
   42a6c:	213fffc4 	addi	r4,r4,-1
   42a70:	00ffffc4 	movi	r3,-1
   42a74:	003fc006 	br	42978 <__alt_data_end+0xfffc4178>
   42a78:	9027883a 	mov	r19,r18
   42a7c:	b807883a 	mov	r3,r23
   42a80:	003fb406 	br	42954 <__alt_data_end+0xfffc4154>
   42a84:	9027883a 	mov	r19,r18
   42a88:	e02b883a 	mov	r21,fp
   42a8c:	b807883a 	mov	r3,r23
   42a90:	003fb006 	br	42954 <__alt_data_end+0xfffc4154>
   42a94:	9004d43a 	srli	r2,r18,16
   42a98:	9810d43a 	srli	r8,r19,16
   42a9c:	94bfffcc 	andi	r18,r18,65535
   42aa0:	993fffcc 	andi	r4,r19,65535
   42aa4:	910d383a 	mul	r6,r18,r4
   42aa8:	20a7383a 	mul	r19,r4,r2
   42aac:	9225383a 	mul	r18,r18,r8
   42ab0:	3006d43a 	srli	r3,r6,16
   42ab4:	1211383a 	mul	r8,r2,r8
   42ab8:	94e5883a 	add	r18,r18,r19
   42abc:	1c87883a 	add	r3,r3,r18
   42ac0:	1cc0022e 	bgeu	r3,r19,42acc <__mulsf3+0x2a0>
   42ac4:	00800074 	movhi	r2,1
   42ac8:	4091883a 	add	r8,r8,r2
   42acc:	1804943a 	slli	r2,r3,16
   42ad0:	31bfffcc 	andi	r6,r6,65535
   42ad4:	1806d43a 	srli	r3,r3,16
   42ad8:	1185883a 	add	r2,r2,r6
   42adc:	102691ba 	slli	r19,r2,6
   42ae0:	1a07883a 	add	r3,r3,r8
   42ae4:	1004d6ba 	srli	r2,r2,26
   42ae8:	180891ba 	slli	r4,r3,6
   42aec:	9826c03a 	cmpne	r19,r19,zero
   42af0:	9884b03a 	or	r2,r19,r2
   42af4:	1126b03a 	or	r19,r2,r4
   42af8:	9882002c 	andhi	r2,r19,2048
   42afc:	10000426 	beq	r2,zero,42b10 <__mulsf3+0x2e4>
   42b00:	9804d07a 	srli	r2,r19,1
   42b04:	9900004c 	andi	r4,r19,1
   42b08:	3821883a 	mov	r16,r7
   42b0c:	1126b03a 	or	r19,r2,r4
   42b10:	80c01fc4 	addi	r3,r16,127
   42b14:	00c0210e 	bge	zero,r3,42b9c <__mulsf3+0x370>
   42b18:	988001cc 	andi	r2,r19,7
   42b1c:	10000426 	beq	r2,zero,42b30 <__mulsf3+0x304>
   42b20:	988003cc 	andi	r2,r19,15
   42b24:	01000104 	movi	r4,4
   42b28:	11000126 	beq	r2,r4,42b30 <__mulsf3+0x304>
   42b2c:	9927883a 	add	r19,r19,r4
   42b30:	9882002c 	andhi	r2,r19,2048
   42b34:	10000426 	beq	r2,zero,42b48 <__mulsf3+0x31c>
   42b38:	00be0034 	movhi	r2,63488
   42b3c:	10bfffc4 	addi	r2,r2,-1
   42b40:	80c02004 	addi	r3,r16,128
   42b44:	98a6703a 	and	r19,r19,r2
   42b48:	00803f84 	movi	r2,254
   42b4c:	10ffa916 	blt	r2,r3,429f4 <__alt_data_end+0xfffc41f4>
   42b50:	980891ba 	slli	r4,r19,6
   42b54:	a829883a 	mov	r20,r21
   42b58:	2008d27a 	srli	r4,r4,9
   42b5c:	003f8606 	br	42978 <__alt_data_end+0xfffc4178>
   42b60:	9080102c 	andhi	r2,r18,64
   42b64:	10000826 	beq	r2,zero,42b88 <__mulsf3+0x35c>
   42b68:	9880102c 	andhi	r2,r19,64
   42b6c:	1000061e 	bne	r2,zero,42b88 <__mulsf3+0x35c>
   42b70:	00802034 	movhi	r2,128
   42b74:	99001034 	orhi	r4,r19,64
   42b78:	10bfffc4 	addi	r2,r2,-1
   42b7c:	b029883a 	mov	r20,r22
   42b80:	2088703a 	and	r4,r4,r2
   42b84:	003fba06 	br	42a70 <__alt_data_end+0xfffc4270>
   42b88:	00802034 	movhi	r2,128
   42b8c:	91001034 	orhi	r4,r18,64
   42b90:	10bfffc4 	addi	r2,r2,-1
   42b94:	2088703a 	and	r4,r4,r2
   42b98:	003fb506 	br	42a70 <__alt_data_end+0xfffc4270>
   42b9c:	00800044 	movi	r2,1
   42ba0:	10c7c83a 	sub	r3,r2,r3
   42ba4:	008006c4 	movi	r2,27
   42ba8:	10ff7016 	blt	r2,r3,4296c <__alt_data_end+0xfffc416c>
   42bac:	00800804 	movi	r2,32
   42bb0:	10c5c83a 	sub	r2,r2,r3
   42bb4:	9884983a 	sll	r2,r19,r2
   42bb8:	98c6d83a 	srl	r3,r19,r3
   42bbc:	1004c03a 	cmpne	r2,r2,zero
   42bc0:	1884b03a 	or	r2,r3,r2
   42bc4:	10c001cc 	andi	r3,r2,7
   42bc8:	18000426 	beq	r3,zero,42bdc <__mulsf3+0x3b0>
   42bcc:	10c003cc 	andi	r3,r2,15
   42bd0:	01000104 	movi	r4,4
   42bd4:	19000126 	beq	r3,r4,42bdc <__mulsf3+0x3b0>
   42bd8:	1105883a 	add	r2,r2,r4
   42bdc:	10c1002c 	andhi	r3,r2,1024
   42be0:	18000626 	beq	r3,zero,42bfc <__mulsf3+0x3d0>
   42be4:	a829883a 	mov	r20,r21
   42be8:	00c00044 	movi	r3,1
   42bec:	0009883a 	mov	r4,zero
   42bf0:	003f6106 	br	42978 <__alt_data_end+0xfffc4178>
   42bf4:	3821883a 	mov	r16,r7
   42bf8:	003fc506 	br	42b10 <__alt_data_end+0xfffc4310>
   42bfc:	100491ba 	slli	r2,r2,6
   42c00:	a829883a 	mov	r20,r21
   42c04:	0007883a 	mov	r3,zero
   42c08:	1008d27a 	srli	r4,r2,9
   42c0c:	003f5a06 	br	42978 <__alt_data_end+0xfffc4178>
   42c10:	00802034 	movhi	r2,128
   42c14:	99001034 	orhi	r4,r19,64
   42c18:	10bfffc4 	addi	r2,r2,-1
   42c1c:	a829883a 	mov	r20,r21
   42c20:	2088703a 	and	r4,r4,r2
   42c24:	003f9206 	br	42a70 <__alt_data_end+0xfffc4270>

00042c28 <__floatunsisf>:
   42c28:	defffe04 	addi	sp,sp,-8
   42c2c:	dfc00115 	stw	ra,4(sp)
   42c30:	dc000015 	stw	r16,0(sp)
   42c34:	20002c26 	beq	r4,zero,42ce8 <__floatunsisf+0xc0>
   42c38:	2021883a 	mov	r16,r4
   42c3c:	00453a40 	call	453a4 <__clzsi2>
   42c40:	00c02784 	movi	r3,158
   42c44:	1887c83a 	sub	r3,r3,r2
   42c48:	01002584 	movi	r4,150
   42c4c:	20c00f16 	blt	r4,r3,42c8c <__floatunsisf+0x64>
   42c50:	20c9c83a 	sub	r4,r4,r3
   42c54:	8108983a 	sll	r4,r16,r4
   42c58:	00802034 	movhi	r2,128
   42c5c:	10bfffc4 	addi	r2,r2,-1
   42c60:	2088703a 	and	r4,r4,r2
   42c64:	18803fcc 	andi	r2,r3,255
   42c68:	100695fa 	slli	r3,r2,23
   42c6c:	00802034 	movhi	r2,128
   42c70:	10bfffc4 	addi	r2,r2,-1
   42c74:	2084703a 	and	r2,r4,r2
   42c78:	10c4b03a 	or	r2,r2,r3
   42c7c:	dfc00117 	ldw	ra,4(sp)
   42c80:	dc000017 	ldw	r16,0(sp)
   42c84:	dec00204 	addi	sp,sp,8
   42c88:	f800283a 	ret
   42c8c:	01002644 	movi	r4,153
   42c90:	20c01816 	blt	r4,r3,42cf4 <__floatunsisf+0xcc>
   42c94:	20c9c83a 	sub	r4,r4,r3
   42c98:	8108983a 	sll	r4,r16,r4
   42c9c:	017f0034 	movhi	r5,64512
   42ca0:	297fffc4 	addi	r5,r5,-1
   42ca4:	218001cc 	andi	r6,r4,7
   42ca8:	214a703a 	and	r5,r4,r5
   42cac:	30000426 	beq	r6,zero,42cc0 <__floatunsisf+0x98>
   42cb0:	210003cc 	andi	r4,r4,15
   42cb4:	01800104 	movi	r6,4
   42cb8:	21800126 	beq	r4,r6,42cc0 <__floatunsisf+0x98>
   42cbc:	298b883a 	add	r5,r5,r6
   42cc0:	2901002c 	andhi	r4,r5,1024
   42cc4:	20000526 	beq	r4,zero,42cdc <__floatunsisf+0xb4>
   42cc8:	00c027c4 	movi	r3,159
   42ccc:	1887c83a 	sub	r3,r3,r2
   42cd0:	00bf0034 	movhi	r2,64512
   42cd4:	10bfffc4 	addi	r2,r2,-1
   42cd8:	288a703a 	and	r5,r5,r2
   42cdc:	280891ba 	slli	r4,r5,6
   42ce0:	2008d27a 	srli	r4,r4,9
   42ce4:	003fdf06 	br	42c64 <__alt_data_end+0xfffc4464>
   42ce8:	0007883a 	mov	r3,zero
   42cec:	0009883a 	mov	r4,zero
   42cf0:	003fdc06 	br	42c64 <__alt_data_end+0xfffc4464>
   42cf4:	01402e44 	movi	r5,185
   42cf8:	28cbc83a 	sub	r5,r5,r3
   42cfc:	01000144 	movi	r4,5
   42d00:	2089c83a 	sub	r4,r4,r2
   42d04:	814a983a 	sll	r5,r16,r5
   42d08:	8108d83a 	srl	r4,r16,r4
   42d0c:	2820c03a 	cmpne	r16,r5,zero
   42d10:	2408b03a 	or	r4,r4,r16
   42d14:	003fe106 	br	42c9c <__alt_data_end+0xfffc449c>

00042d18 <__adddf3>:
   42d18:	02c00434 	movhi	r11,16
   42d1c:	5affffc4 	addi	r11,r11,-1
   42d20:	2806d7fa 	srli	r3,r5,31
   42d24:	2ad4703a 	and	r10,r5,r11
   42d28:	3ad2703a 	and	r9,r7,r11
   42d2c:	3804d53a 	srli	r2,r7,20
   42d30:	3018d77a 	srli	r12,r6,29
   42d34:	280ad53a 	srli	r5,r5,20
   42d38:	501490fa 	slli	r10,r10,3
   42d3c:	2010d77a 	srli	r8,r4,29
   42d40:	481290fa 	slli	r9,r9,3
   42d44:	380ed7fa 	srli	r7,r7,31
   42d48:	defffb04 	addi	sp,sp,-20
   42d4c:	dc800215 	stw	r18,8(sp)
   42d50:	dc400115 	stw	r17,4(sp)
   42d54:	dc000015 	stw	r16,0(sp)
   42d58:	dfc00415 	stw	ra,16(sp)
   42d5c:	dcc00315 	stw	r19,12(sp)
   42d60:	1c803fcc 	andi	r18,r3,255
   42d64:	2c01ffcc 	andi	r16,r5,2047
   42d68:	5210b03a 	or	r8,r10,r8
   42d6c:	202290fa 	slli	r17,r4,3
   42d70:	1081ffcc 	andi	r2,r2,2047
   42d74:	4b12b03a 	or	r9,r9,r12
   42d78:	300c90fa 	slli	r6,r6,3
   42d7c:	91c07526 	beq	r18,r7,42f54 <__adddf3+0x23c>
   42d80:	8087c83a 	sub	r3,r16,r2
   42d84:	00c0ab0e 	bge	zero,r3,43034 <__adddf3+0x31c>
   42d88:	10002a1e 	bne	r2,zero,42e34 <__adddf3+0x11c>
   42d8c:	4984b03a 	or	r2,r9,r6
   42d90:	1000961e 	bne	r2,zero,42fec <__adddf3+0x2d4>
   42d94:	888001cc 	andi	r2,r17,7
   42d98:	10000726 	beq	r2,zero,42db8 <__adddf3+0xa0>
   42d9c:	888003cc 	andi	r2,r17,15
   42da0:	00c00104 	movi	r3,4
   42da4:	10c00426 	beq	r2,r3,42db8 <__adddf3+0xa0>
   42da8:	88c7883a 	add	r3,r17,r3
   42dac:	1c63803a 	cmpltu	r17,r3,r17
   42db0:	4451883a 	add	r8,r8,r17
   42db4:	1823883a 	mov	r17,r3
   42db8:	4080202c 	andhi	r2,r8,128
   42dbc:	10005926 	beq	r2,zero,42f24 <__adddf3+0x20c>
   42dc0:	84000044 	addi	r16,r16,1
   42dc4:	0081ffc4 	movi	r2,2047
   42dc8:	8080ba26 	beq	r16,r2,430b4 <__adddf3+0x39c>
   42dcc:	00bfe034 	movhi	r2,65408
   42dd0:	10bfffc4 	addi	r2,r2,-1
   42dd4:	4090703a 	and	r8,r8,r2
   42dd8:	4004977a 	slli	r2,r8,29
   42ddc:	4010927a 	slli	r8,r8,9
   42de0:	8822d0fa 	srli	r17,r17,3
   42de4:	8401ffcc 	andi	r16,r16,2047
   42de8:	4010d33a 	srli	r8,r8,12
   42dec:	9007883a 	mov	r3,r18
   42df0:	1444b03a 	or	r2,r2,r17
   42df4:	8401ffcc 	andi	r16,r16,2047
   42df8:	8020953a 	slli	r16,r16,20
   42dfc:	18c03fcc 	andi	r3,r3,255
   42e00:	01000434 	movhi	r4,16
   42e04:	213fffc4 	addi	r4,r4,-1
   42e08:	180697fa 	slli	r3,r3,31
   42e0c:	4110703a 	and	r8,r8,r4
   42e10:	4410b03a 	or	r8,r8,r16
   42e14:	40c6b03a 	or	r3,r8,r3
   42e18:	dfc00417 	ldw	ra,16(sp)
   42e1c:	dcc00317 	ldw	r19,12(sp)
   42e20:	dc800217 	ldw	r18,8(sp)
   42e24:	dc400117 	ldw	r17,4(sp)
   42e28:	dc000017 	ldw	r16,0(sp)
   42e2c:	dec00504 	addi	sp,sp,20
   42e30:	f800283a 	ret
   42e34:	0081ffc4 	movi	r2,2047
   42e38:	80bfd626 	beq	r16,r2,42d94 <__alt_data_end+0xfffc4594>
   42e3c:	4a402034 	orhi	r9,r9,128
   42e40:	00800e04 	movi	r2,56
   42e44:	10c09f16 	blt	r2,r3,430c4 <__adddf3+0x3ac>
   42e48:	008007c4 	movi	r2,31
   42e4c:	10c0c216 	blt	r2,r3,43158 <__adddf3+0x440>
   42e50:	00800804 	movi	r2,32
   42e54:	10c5c83a 	sub	r2,r2,r3
   42e58:	488a983a 	sll	r5,r9,r2
   42e5c:	30c8d83a 	srl	r4,r6,r3
   42e60:	3084983a 	sll	r2,r6,r2
   42e64:	48c6d83a 	srl	r3,r9,r3
   42e68:	290cb03a 	or	r6,r5,r4
   42e6c:	1004c03a 	cmpne	r2,r2,zero
   42e70:	308cb03a 	or	r6,r6,r2
   42e74:	898dc83a 	sub	r6,r17,r6
   42e78:	89a3803a 	cmpltu	r17,r17,r6
   42e7c:	40d1c83a 	sub	r8,r8,r3
   42e80:	4451c83a 	sub	r8,r8,r17
   42e84:	3023883a 	mov	r17,r6
   42e88:	4080202c 	andhi	r2,r8,128
   42e8c:	10002326 	beq	r2,zero,42f1c <__adddf3+0x204>
   42e90:	04c02034 	movhi	r19,128
   42e94:	9cffffc4 	addi	r19,r19,-1
   42e98:	44e6703a 	and	r19,r8,r19
   42e9c:	98007626 	beq	r19,zero,43078 <__adddf3+0x360>
   42ea0:	9809883a 	mov	r4,r19
   42ea4:	00453a40 	call	453a4 <__clzsi2>
   42ea8:	10fffe04 	addi	r3,r2,-8
   42eac:	010007c4 	movi	r4,31
   42eb0:	20c07716 	blt	r4,r3,43090 <__adddf3+0x378>
   42eb4:	00800804 	movi	r2,32
   42eb8:	10c5c83a 	sub	r2,r2,r3
   42ebc:	8884d83a 	srl	r2,r17,r2
   42ec0:	98d0983a 	sll	r8,r19,r3
   42ec4:	88e2983a 	sll	r17,r17,r3
   42ec8:	1204b03a 	or	r2,r2,r8
   42ecc:	1c007416 	blt	r3,r16,430a0 <__adddf3+0x388>
   42ed0:	1c21c83a 	sub	r16,r3,r16
   42ed4:	82000044 	addi	r8,r16,1
   42ed8:	00c007c4 	movi	r3,31
   42edc:	1a009116 	blt	r3,r8,43124 <__adddf3+0x40c>
   42ee0:	00c00804 	movi	r3,32
   42ee4:	1a07c83a 	sub	r3,r3,r8
   42ee8:	8a08d83a 	srl	r4,r17,r8
   42eec:	88e2983a 	sll	r17,r17,r3
   42ef0:	10c6983a 	sll	r3,r2,r3
   42ef4:	1210d83a 	srl	r8,r2,r8
   42ef8:	8804c03a 	cmpne	r2,r17,zero
   42efc:	1906b03a 	or	r3,r3,r4
   42f00:	18a2b03a 	or	r17,r3,r2
   42f04:	0021883a 	mov	r16,zero
   42f08:	003fa206 	br	42d94 <__alt_data_end+0xfffc4594>
   42f0c:	1890b03a 	or	r8,r3,r2
   42f10:	40017d26 	beq	r8,zero,43508 <__adddf3+0x7f0>
   42f14:	1011883a 	mov	r8,r2
   42f18:	1823883a 	mov	r17,r3
   42f1c:	888001cc 	andi	r2,r17,7
   42f20:	103f9e1e 	bne	r2,zero,42d9c <__alt_data_end+0xfffc459c>
   42f24:	4004977a 	slli	r2,r8,29
   42f28:	8822d0fa 	srli	r17,r17,3
   42f2c:	4010d0fa 	srli	r8,r8,3
   42f30:	9007883a 	mov	r3,r18
   42f34:	1444b03a 	or	r2,r2,r17
   42f38:	0101ffc4 	movi	r4,2047
   42f3c:	81002426 	beq	r16,r4,42fd0 <__adddf3+0x2b8>
   42f40:	8120703a 	and	r16,r16,r4
   42f44:	01000434 	movhi	r4,16
   42f48:	213fffc4 	addi	r4,r4,-1
   42f4c:	4110703a 	and	r8,r8,r4
   42f50:	003fa806 	br	42df4 <__alt_data_end+0xfffc45f4>
   42f54:	8089c83a 	sub	r4,r16,r2
   42f58:	01005e0e 	bge	zero,r4,430d4 <__adddf3+0x3bc>
   42f5c:	10002b26 	beq	r2,zero,4300c <__adddf3+0x2f4>
   42f60:	0081ffc4 	movi	r2,2047
   42f64:	80bf8b26 	beq	r16,r2,42d94 <__alt_data_end+0xfffc4594>
   42f68:	4a402034 	orhi	r9,r9,128
   42f6c:	00800e04 	movi	r2,56
   42f70:	1100a40e 	bge	r2,r4,43204 <__adddf3+0x4ec>
   42f74:	498cb03a 	or	r6,r9,r6
   42f78:	300ac03a 	cmpne	r5,r6,zero
   42f7c:	0013883a 	mov	r9,zero
   42f80:	2c4b883a 	add	r5,r5,r17
   42f84:	2c63803a 	cmpltu	r17,r5,r17
   42f88:	4a11883a 	add	r8,r9,r8
   42f8c:	8a11883a 	add	r8,r17,r8
   42f90:	2823883a 	mov	r17,r5
   42f94:	4080202c 	andhi	r2,r8,128
   42f98:	103fe026 	beq	r2,zero,42f1c <__alt_data_end+0xfffc471c>
   42f9c:	84000044 	addi	r16,r16,1
   42fa0:	0081ffc4 	movi	r2,2047
   42fa4:	8080d226 	beq	r16,r2,432f0 <__adddf3+0x5d8>
   42fa8:	00bfe034 	movhi	r2,65408
   42fac:	10bfffc4 	addi	r2,r2,-1
   42fb0:	4090703a 	and	r8,r8,r2
   42fb4:	880ad07a 	srli	r5,r17,1
   42fb8:	400897fa 	slli	r4,r8,31
   42fbc:	88c0004c 	andi	r3,r17,1
   42fc0:	28e2b03a 	or	r17,r5,r3
   42fc4:	4010d07a 	srli	r8,r8,1
   42fc8:	2462b03a 	or	r17,r4,r17
   42fcc:	003f7106 	br	42d94 <__alt_data_end+0xfffc4594>
   42fd0:	4088b03a 	or	r4,r8,r2
   42fd4:	20014526 	beq	r4,zero,434ec <__adddf3+0x7d4>
   42fd8:	01000434 	movhi	r4,16
   42fdc:	42000234 	orhi	r8,r8,8
   42fe0:	213fffc4 	addi	r4,r4,-1
   42fe4:	4110703a 	and	r8,r8,r4
   42fe8:	003f8206 	br	42df4 <__alt_data_end+0xfffc45f4>
   42fec:	18ffffc4 	addi	r3,r3,-1
   42ff0:	1800491e 	bne	r3,zero,43118 <__adddf3+0x400>
   42ff4:	898bc83a 	sub	r5,r17,r6
   42ff8:	8963803a 	cmpltu	r17,r17,r5
   42ffc:	4251c83a 	sub	r8,r8,r9
   43000:	4451c83a 	sub	r8,r8,r17
   43004:	2823883a 	mov	r17,r5
   43008:	003f9f06 	br	42e88 <__alt_data_end+0xfffc4688>
   4300c:	4984b03a 	or	r2,r9,r6
   43010:	103f6026 	beq	r2,zero,42d94 <__alt_data_end+0xfffc4594>
   43014:	213fffc4 	addi	r4,r4,-1
   43018:	2000931e 	bne	r4,zero,43268 <__adddf3+0x550>
   4301c:	898d883a 	add	r6,r17,r6
   43020:	3463803a 	cmpltu	r17,r6,r17
   43024:	4251883a 	add	r8,r8,r9
   43028:	8a11883a 	add	r8,r17,r8
   4302c:	3023883a 	mov	r17,r6
   43030:	003fd806 	br	42f94 <__alt_data_end+0xfffc4794>
   43034:	1800541e 	bne	r3,zero,43188 <__adddf3+0x470>
   43038:	80800044 	addi	r2,r16,1
   4303c:	1081ffcc 	andi	r2,r2,2047
   43040:	00c00044 	movi	r3,1
   43044:	1880a00e 	bge	r3,r2,432c8 <__adddf3+0x5b0>
   43048:	8989c83a 	sub	r4,r17,r6
   4304c:	8905803a 	cmpltu	r2,r17,r4
   43050:	4267c83a 	sub	r19,r8,r9
   43054:	98a7c83a 	sub	r19,r19,r2
   43058:	9880202c 	andhi	r2,r19,128
   4305c:	10006326 	beq	r2,zero,431ec <__adddf3+0x4d4>
   43060:	3463c83a 	sub	r17,r6,r17
   43064:	4a07c83a 	sub	r3,r9,r8
   43068:	344d803a 	cmpltu	r6,r6,r17
   4306c:	19a7c83a 	sub	r19,r3,r6
   43070:	3825883a 	mov	r18,r7
   43074:	983f8a1e 	bne	r19,zero,42ea0 <__alt_data_end+0xfffc46a0>
   43078:	8809883a 	mov	r4,r17
   4307c:	00453a40 	call	453a4 <__clzsi2>
   43080:	10800804 	addi	r2,r2,32
   43084:	10fffe04 	addi	r3,r2,-8
   43088:	010007c4 	movi	r4,31
   4308c:	20ff890e 	bge	r4,r3,42eb4 <__alt_data_end+0xfffc46b4>
   43090:	10bff604 	addi	r2,r2,-40
   43094:	8884983a 	sll	r2,r17,r2
   43098:	0023883a 	mov	r17,zero
   4309c:	1c3f8c0e 	bge	r3,r16,42ed0 <__alt_data_end+0xfffc46d0>
   430a0:	023fe034 	movhi	r8,65408
   430a4:	423fffc4 	addi	r8,r8,-1
   430a8:	80e1c83a 	sub	r16,r16,r3
   430ac:	1210703a 	and	r8,r2,r8
   430b0:	003f3806 	br	42d94 <__alt_data_end+0xfffc4594>
   430b4:	9007883a 	mov	r3,r18
   430b8:	0011883a 	mov	r8,zero
   430bc:	0005883a 	mov	r2,zero
   430c0:	003f4c06 	br	42df4 <__alt_data_end+0xfffc45f4>
   430c4:	498cb03a 	or	r6,r9,r6
   430c8:	300cc03a 	cmpne	r6,r6,zero
   430cc:	0007883a 	mov	r3,zero
   430d0:	003f6806 	br	42e74 <__alt_data_end+0xfffc4674>
   430d4:	20009c1e 	bne	r4,zero,43348 <__adddf3+0x630>
   430d8:	80800044 	addi	r2,r16,1
   430dc:	1141ffcc 	andi	r5,r2,2047
   430e0:	01000044 	movi	r4,1
   430e4:	2140670e 	bge	r4,r5,43284 <__adddf3+0x56c>
   430e8:	0101ffc4 	movi	r4,2047
   430ec:	11007f26 	beq	r2,r4,432ec <__adddf3+0x5d4>
   430f0:	898d883a 	add	r6,r17,r6
   430f4:	4247883a 	add	r3,r8,r9
   430f8:	3451803a 	cmpltu	r8,r6,r17
   430fc:	40d1883a 	add	r8,r8,r3
   43100:	402297fa 	slli	r17,r8,31
   43104:	300cd07a 	srli	r6,r6,1
   43108:	4010d07a 	srli	r8,r8,1
   4310c:	1021883a 	mov	r16,r2
   43110:	89a2b03a 	or	r17,r17,r6
   43114:	003f1f06 	br	42d94 <__alt_data_end+0xfffc4594>
   43118:	0081ffc4 	movi	r2,2047
   4311c:	80bf481e 	bne	r16,r2,42e40 <__alt_data_end+0xfffc4640>
   43120:	003f1c06 	br	42d94 <__alt_data_end+0xfffc4594>
   43124:	843ff844 	addi	r16,r16,-31
   43128:	01000804 	movi	r4,32
   4312c:	1406d83a 	srl	r3,r2,r16
   43130:	41005026 	beq	r8,r4,43274 <__adddf3+0x55c>
   43134:	01001004 	movi	r4,64
   43138:	2211c83a 	sub	r8,r4,r8
   4313c:	1204983a 	sll	r2,r2,r8
   43140:	88a2b03a 	or	r17,r17,r2
   43144:	8822c03a 	cmpne	r17,r17,zero
   43148:	1c62b03a 	or	r17,r3,r17
   4314c:	0011883a 	mov	r8,zero
   43150:	0021883a 	mov	r16,zero
   43154:	003f7106 	br	42f1c <__alt_data_end+0xfffc471c>
   43158:	193ff804 	addi	r4,r3,-32
   4315c:	00800804 	movi	r2,32
   43160:	4908d83a 	srl	r4,r9,r4
   43164:	18804526 	beq	r3,r2,4327c <__adddf3+0x564>
   43168:	00801004 	movi	r2,64
   4316c:	10c5c83a 	sub	r2,r2,r3
   43170:	4886983a 	sll	r3,r9,r2
   43174:	198cb03a 	or	r6,r3,r6
   43178:	300cc03a 	cmpne	r6,r6,zero
   4317c:	218cb03a 	or	r6,r4,r6
   43180:	0007883a 	mov	r3,zero
   43184:	003f3b06 	br	42e74 <__alt_data_end+0xfffc4674>
   43188:	80002a26 	beq	r16,zero,43234 <__adddf3+0x51c>
   4318c:	0101ffc4 	movi	r4,2047
   43190:	11006826 	beq	r2,r4,43334 <__adddf3+0x61c>
   43194:	00c7c83a 	sub	r3,zero,r3
   43198:	42002034 	orhi	r8,r8,128
   4319c:	01000e04 	movi	r4,56
   431a0:	20c07c16 	blt	r4,r3,43394 <__adddf3+0x67c>
   431a4:	010007c4 	movi	r4,31
   431a8:	20c0da16 	blt	r4,r3,43514 <__adddf3+0x7fc>
   431ac:	01000804 	movi	r4,32
   431b0:	20c9c83a 	sub	r4,r4,r3
   431b4:	4114983a 	sll	r10,r8,r4
   431b8:	88cad83a 	srl	r5,r17,r3
   431bc:	8908983a 	sll	r4,r17,r4
   431c0:	40c6d83a 	srl	r3,r8,r3
   431c4:	5162b03a 	or	r17,r10,r5
   431c8:	2008c03a 	cmpne	r4,r4,zero
   431cc:	8922b03a 	or	r17,r17,r4
   431d0:	3463c83a 	sub	r17,r6,r17
   431d4:	48c7c83a 	sub	r3,r9,r3
   431d8:	344d803a 	cmpltu	r6,r6,r17
   431dc:	1991c83a 	sub	r8,r3,r6
   431e0:	1021883a 	mov	r16,r2
   431e4:	3825883a 	mov	r18,r7
   431e8:	003f2706 	br	42e88 <__alt_data_end+0xfffc4688>
   431ec:	24d0b03a 	or	r8,r4,r19
   431f0:	40001b1e 	bne	r8,zero,43260 <__adddf3+0x548>
   431f4:	0005883a 	mov	r2,zero
   431f8:	0007883a 	mov	r3,zero
   431fc:	0021883a 	mov	r16,zero
   43200:	003f4d06 	br	42f38 <__alt_data_end+0xfffc4738>
   43204:	008007c4 	movi	r2,31
   43208:	11003c16 	blt	r2,r4,432fc <__adddf3+0x5e4>
   4320c:	00800804 	movi	r2,32
   43210:	1105c83a 	sub	r2,r2,r4
   43214:	488e983a 	sll	r7,r9,r2
   43218:	310ad83a 	srl	r5,r6,r4
   4321c:	3084983a 	sll	r2,r6,r2
   43220:	4912d83a 	srl	r9,r9,r4
   43224:	394ab03a 	or	r5,r7,r5
   43228:	1004c03a 	cmpne	r2,r2,zero
   4322c:	288ab03a 	or	r5,r5,r2
   43230:	003f5306 	br	42f80 <__alt_data_end+0xfffc4780>
   43234:	4448b03a 	or	r4,r8,r17
   43238:	20003e26 	beq	r4,zero,43334 <__adddf3+0x61c>
   4323c:	00c6303a 	nor	r3,zero,r3
   43240:	18003a1e 	bne	r3,zero,4332c <__adddf3+0x614>
   43244:	3463c83a 	sub	r17,r6,r17
   43248:	4a07c83a 	sub	r3,r9,r8
   4324c:	344d803a 	cmpltu	r6,r6,r17
   43250:	1991c83a 	sub	r8,r3,r6
   43254:	1021883a 	mov	r16,r2
   43258:	3825883a 	mov	r18,r7
   4325c:	003f0a06 	br	42e88 <__alt_data_end+0xfffc4688>
   43260:	2023883a 	mov	r17,r4
   43264:	003f0d06 	br	42e9c <__alt_data_end+0xfffc469c>
   43268:	0081ffc4 	movi	r2,2047
   4326c:	80bf3f1e 	bne	r16,r2,42f6c <__alt_data_end+0xfffc476c>
   43270:	003ec806 	br	42d94 <__alt_data_end+0xfffc4594>
   43274:	0005883a 	mov	r2,zero
   43278:	003fb106 	br	43140 <__alt_data_end+0xfffc4940>
   4327c:	0007883a 	mov	r3,zero
   43280:	003fbc06 	br	43174 <__alt_data_end+0xfffc4974>
   43284:	4444b03a 	or	r2,r8,r17
   43288:	8000871e 	bne	r16,zero,434a8 <__adddf3+0x790>
   4328c:	1000ba26 	beq	r2,zero,43578 <__adddf3+0x860>
   43290:	4984b03a 	or	r2,r9,r6
   43294:	103ebf26 	beq	r2,zero,42d94 <__alt_data_end+0xfffc4594>
   43298:	8985883a 	add	r2,r17,r6
   4329c:	4247883a 	add	r3,r8,r9
   432a0:	1451803a 	cmpltu	r8,r2,r17
   432a4:	40d1883a 	add	r8,r8,r3
   432a8:	40c0202c 	andhi	r3,r8,128
   432ac:	1023883a 	mov	r17,r2
   432b0:	183f1a26 	beq	r3,zero,42f1c <__alt_data_end+0xfffc471c>
   432b4:	00bfe034 	movhi	r2,65408
   432b8:	10bfffc4 	addi	r2,r2,-1
   432bc:	2021883a 	mov	r16,r4
   432c0:	4090703a 	and	r8,r8,r2
   432c4:	003eb306 	br	42d94 <__alt_data_end+0xfffc4594>
   432c8:	4444b03a 	or	r2,r8,r17
   432cc:	8000291e 	bne	r16,zero,43374 <__adddf3+0x65c>
   432d0:	10004b1e 	bne	r2,zero,43400 <__adddf3+0x6e8>
   432d4:	4990b03a 	or	r8,r9,r6
   432d8:	40008b26 	beq	r8,zero,43508 <__adddf3+0x7f0>
   432dc:	4811883a 	mov	r8,r9
   432e0:	3023883a 	mov	r17,r6
   432e4:	3825883a 	mov	r18,r7
   432e8:	003eaa06 	br	42d94 <__alt_data_end+0xfffc4594>
   432ec:	1021883a 	mov	r16,r2
   432f0:	0011883a 	mov	r8,zero
   432f4:	0005883a 	mov	r2,zero
   432f8:	003f0f06 	br	42f38 <__alt_data_end+0xfffc4738>
   432fc:	217ff804 	addi	r5,r4,-32
   43300:	00800804 	movi	r2,32
   43304:	494ad83a 	srl	r5,r9,r5
   43308:	20807d26 	beq	r4,r2,43500 <__adddf3+0x7e8>
   4330c:	00801004 	movi	r2,64
   43310:	1109c83a 	sub	r4,r2,r4
   43314:	4912983a 	sll	r9,r9,r4
   43318:	498cb03a 	or	r6,r9,r6
   4331c:	300cc03a 	cmpne	r6,r6,zero
   43320:	298ab03a 	or	r5,r5,r6
   43324:	0013883a 	mov	r9,zero
   43328:	003f1506 	br	42f80 <__alt_data_end+0xfffc4780>
   4332c:	0101ffc4 	movi	r4,2047
   43330:	113f9a1e 	bne	r2,r4,4319c <__alt_data_end+0xfffc499c>
   43334:	4811883a 	mov	r8,r9
   43338:	3023883a 	mov	r17,r6
   4333c:	1021883a 	mov	r16,r2
   43340:	3825883a 	mov	r18,r7
   43344:	003e9306 	br	42d94 <__alt_data_end+0xfffc4594>
   43348:	8000161e 	bne	r16,zero,433a4 <__adddf3+0x68c>
   4334c:	444ab03a 	or	r5,r8,r17
   43350:	28005126 	beq	r5,zero,43498 <__adddf3+0x780>
   43354:	0108303a 	nor	r4,zero,r4
   43358:	20004d1e 	bne	r4,zero,43490 <__adddf3+0x778>
   4335c:	89a3883a 	add	r17,r17,r6
   43360:	4253883a 	add	r9,r8,r9
   43364:	898d803a 	cmpltu	r6,r17,r6
   43368:	3251883a 	add	r8,r6,r9
   4336c:	1021883a 	mov	r16,r2
   43370:	003f0806 	br	42f94 <__alt_data_end+0xfffc4794>
   43374:	1000301e 	bne	r2,zero,43438 <__adddf3+0x720>
   43378:	4984b03a 	or	r2,r9,r6
   4337c:	10007126 	beq	r2,zero,43544 <__adddf3+0x82c>
   43380:	4811883a 	mov	r8,r9
   43384:	3023883a 	mov	r17,r6
   43388:	3825883a 	mov	r18,r7
   4338c:	0401ffc4 	movi	r16,2047
   43390:	003e8006 	br	42d94 <__alt_data_end+0xfffc4594>
   43394:	4462b03a 	or	r17,r8,r17
   43398:	8822c03a 	cmpne	r17,r17,zero
   4339c:	0007883a 	mov	r3,zero
   433a0:	003f8b06 	br	431d0 <__alt_data_end+0xfffc49d0>
   433a4:	0141ffc4 	movi	r5,2047
   433a8:	11403b26 	beq	r2,r5,43498 <__adddf3+0x780>
   433ac:	0109c83a 	sub	r4,zero,r4
   433b0:	42002034 	orhi	r8,r8,128
   433b4:	01400e04 	movi	r5,56
   433b8:	29006716 	blt	r5,r4,43558 <__adddf3+0x840>
   433bc:	014007c4 	movi	r5,31
   433c0:	29007016 	blt	r5,r4,43584 <__adddf3+0x86c>
   433c4:	01400804 	movi	r5,32
   433c8:	290bc83a 	sub	r5,r5,r4
   433cc:	4154983a 	sll	r10,r8,r5
   433d0:	890ed83a 	srl	r7,r17,r4
   433d4:	894a983a 	sll	r5,r17,r5
   433d8:	4108d83a 	srl	r4,r8,r4
   433dc:	51e2b03a 	or	r17,r10,r7
   433e0:	280ac03a 	cmpne	r5,r5,zero
   433e4:	8962b03a 	or	r17,r17,r5
   433e8:	89a3883a 	add	r17,r17,r6
   433ec:	2253883a 	add	r9,r4,r9
   433f0:	898d803a 	cmpltu	r6,r17,r6
   433f4:	3251883a 	add	r8,r6,r9
   433f8:	1021883a 	mov	r16,r2
   433fc:	003ee506 	br	42f94 <__alt_data_end+0xfffc4794>
   43400:	4984b03a 	or	r2,r9,r6
   43404:	103e6326 	beq	r2,zero,42d94 <__alt_data_end+0xfffc4594>
   43408:	8987c83a 	sub	r3,r17,r6
   4340c:	88c9803a 	cmpltu	r4,r17,r3
   43410:	4245c83a 	sub	r2,r8,r9
   43414:	1105c83a 	sub	r2,r2,r4
   43418:	1100202c 	andhi	r4,r2,128
   4341c:	203ebb26 	beq	r4,zero,42f0c <__alt_data_end+0xfffc470c>
   43420:	3463c83a 	sub	r17,r6,r17
   43424:	4a07c83a 	sub	r3,r9,r8
   43428:	344d803a 	cmpltu	r6,r6,r17
   4342c:	1991c83a 	sub	r8,r3,r6
   43430:	3825883a 	mov	r18,r7
   43434:	003e5706 	br	42d94 <__alt_data_end+0xfffc4594>
   43438:	4984b03a 	or	r2,r9,r6
   4343c:	10002e26 	beq	r2,zero,434f8 <__adddf3+0x7e0>
   43440:	4004d0fa 	srli	r2,r8,3
   43444:	8822d0fa 	srli	r17,r17,3
   43448:	4010977a 	slli	r8,r8,29
   4344c:	10c0022c 	andhi	r3,r2,8
   43450:	4462b03a 	or	r17,r8,r17
   43454:	18000826 	beq	r3,zero,43478 <__adddf3+0x760>
   43458:	4808d0fa 	srli	r4,r9,3
   4345c:	20c0022c 	andhi	r3,r4,8
   43460:	1800051e 	bne	r3,zero,43478 <__adddf3+0x760>
   43464:	300cd0fa 	srli	r6,r6,3
   43468:	4806977a 	slli	r3,r9,29
   4346c:	2005883a 	mov	r2,r4
   43470:	3825883a 	mov	r18,r7
   43474:	19a2b03a 	or	r17,r3,r6
   43478:	8810d77a 	srli	r8,r17,29
   4347c:	100490fa 	slli	r2,r2,3
   43480:	882290fa 	slli	r17,r17,3
   43484:	0401ffc4 	movi	r16,2047
   43488:	4090b03a 	or	r8,r8,r2
   4348c:	003e4106 	br	42d94 <__alt_data_end+0xfffc4594>
   43490:	0141ffc4 	movi	r5,2047
   43494:	117fc71e 	bne	r2,r5,433b4 <__alt_data_end+0xfffc4bb4>
   43498:	4811883a 	mov	r8,r9
   4349c:	3023883a 	mov	r17,r6
   434a0:	1021883a 	mov	r16,r2
   434a4:	003e3b06 	br	42d94 <__alt_data_end+0xfffc4594>
   434a8:	10002f26 	beq	r2,zero,43568 <__adddf3+0x850>
   434ac:	4984b03a 	or	r2,r9,r6
   434b0:	10001126 	beq	r2,zero,434f8 <__adddf3+0x7e0>
   434b4:	4004d0fa 	srli	r2,r8,3
   434b8:	8822d0fa 	srli	r17,r17,3
   434bc:	4010977a 	slli	r8,r8,29
   434c0:	10c0022c 	andhi	r3,r2,8
   434c4:	4462b03a 	or	r17,r8,r17
   434c8:	183feb26 	beq	r3,zero,43478 <__alt_data_end+0xfffc4c78>
   434cc:	4808d0fa 	srli	r4,r9,3
   434d0:	20c0022c 	andhi	r3,r4,8
   434d4:	183fe81e 	bne	r3,zero,43478 <__alt_data_end+0xfffc4c78>
   434d8:	300cd0fa 	srli	r6,r6,3
   434dc:	4806977a 	slli	r3,r9,29
   434e0:	2005883a 	mov	r2,r4
   434e4:	19a2b03a 	or	r17,r3,r6
   434e8:	003fe306 	br	43478 <__alt_data_end+0xfffc4c78>
   434ec:	0011883a 	mov	r8,zero
   434f0:	0005883a 	mov	r2,zero
   434f4:	003e3f06 	br	42df4 <__alt_data_end+0xfffc45f4>
   434f8:	0401ffc4 	movi	r16,2047
   434fc:	003e2506 	br	42d94 <__alt_data_end+0xfffc4594>
   43500:	0013883a 	mov	r9,zero
   43504:	003f8406 	br	43318 <__alt_data_end+0xfffc4b18>
   43508:	0005883a 	mov	r2,zero
   4350c:	0007883a 	mov	r3,zero
   43510:	003e8906 	br	42f38 <__alt_data_end+0xfffc4738>
   43514:	197ff804 	addi	r5,r3,-32
   43518:	01000804 	movi	r4,32
   4351c:	414ad83a 	srl	r5,r8,r5
   43520:	19002426 	beq	r3,r4,435b4 <__adddf3+0x89c>
   43524:	01001004 	movi	r4,64
   43528:	20c7c83a 	sub	r3,r4,r3
   4352c:	40c6983a 	sll	r3,r8,r3
   43530:	1c46b03a 	or	r3,r3,r17
   43534:	1806c03a 	cmpne	r3,r3,zero
   43538:	28e2b03a 	or	r17,r5,r3
   4353c:	0007883a 	mov	r3,zero
   43540:	003f2306 	br	431d0 <__alt_data_end+0xfffc49d0>
   43544:	0007883a 	mov	r3,zero
   43548:	5811883a 	mov	r8,r11
   4354c:	00bfffc4 	movi	r2,-1
   43550:	0401ffc4 	movi	r16,2047
   43554:	003e7806 	br	42f38 <__alt_data_end+0xfffc4738>
   43558:	4462b03a 	or	r17,r8,r17
   4355c:	8822c03a 	cmpne	r17,r17,zero
   43560:	0009883a 	mov	r4,zero
   43564:	003fa006 	br	433e8 <__alt_data_end+0xfffc4be8>
   43568:	4811883a 	mov	r8,r9
   4356c:	3023883a 	mov	r17,r6
   43570:	0401ffc4 	movi	r16,2047
   43574:	003e0706 	br	42d94 <__alt_data_end+0xfffc4594>
   43578:	4811883a 	mov	r8,r9
   4357c:	3023883a 	mov	r17,r6
   43580:	003e0406 	br	42d94 <__alt_data_end+0xfffc4594>
   43584:	21fff804 	addi	r7,r4,-32
   43588:	01400804 	movi	r5,32
   4358c:	41ced83a 	srl	r7,r8,r7
   43590:	21400a26 	beq	r4,r5,435bc <__adddf3+0x8a4>
   43594:	01401004 	movi	r5,64
   43598:	2909c83a 	sub	r4,r5,r4
   4359c:	4108983a 	sll	r4,r8,r4
   435a0:	2448b03a 	or	r4,r4,r17
   435a4:	2008c03a 	cmpne	r4,r4,zero
   435a8:	3922b03a 	or	r17,r7,r4
   435ac:	0009883a 	mov	r4,zero
   435b0:	003f8d06 	br	433e8 <__alt_data_end+0xfffc4be8>
   435b4:	0007883a 	mov	r3,zero
   435b8:	003fdd06 	br	43530 <__alt_data_end+0xfffc4d30>
   435bc:	0009883a 	mov	r4,zero
   435c0:	003ff706 	br	435a0 <__alt_data_end+0xfffc4da0>

000435c4 <__divdf3>:
   435c4:	defff204 	addi	sp,sp,-56
   435c8:	dd400915 	stw	r21,36(sp)
   435cc:	282ad53a 	srli	r21,r5,20
   435d0:	dd000815 	stw	r20,32(sp)
   435d4:	2828d7fa 	srli	r20,r5,31
   435d8:	dc000415 	stw	r16,16(sp)
   435dc:	04000434 	movhi	r16,16
   435e0:	df000c15 	stw	fp,48(sp)
   435e4:	843fffc4 	addi	r16,r16,-1
   435e8:	dfc00d15 	stw	ra,52(sp)
   435ec:	ddc00b15 	stw	r23,44(sp)
   435f0:	dd800a15 	stw	r22,40(sp)
   435f4:	dcc00715 	stw	r19,28(sp)
   435f8:	dc800615 	stw	r18,24(sp)
   435fc:	dc400515 	stw	r17,20(sp)
   43600:	ad41ffcc 	andi	r21,r21,2047
   43604:	2c20703a 	and	r16,r5,r16
   43608:	a7003fcc 	andi	fp,r20,255
   4360c:	a8006126 	beq	r21,zero,43794 <__divdf3+0x1d0>
   43610:	0081ffc4 	movi	r2,2047
   43614:	2025883a 	mov	r18,r4
   43618:	a8803726 	beq	r21,r2,436f8 <__divdf3+0x134>
   4361c:	80800434 	orhi	r2,r16,16
   43620:	100490fa 	slli	r2,r2,3
   43624:	2020d77a 	srli	r16,r4,29
   43628:	202490fa 	slli	r18,r4,3
   4362c:	ad7f0044 	addi	r21,r21,-1023
   43630:	80a0b03a 	or	r16,r16,r2
   43634:	0027883a 	mov	r19,zero
   43638:	0013883a 	mov	r9,zero
   4363c:	3804d53a 	srli	r2,r7,20
   43640:	382cd7fa 	srli	r22,r7,31
   43644:	04400434 	movhi	r17,16
   43648:	8c7fffc4 	addi	r17,r17,-1
   4364c:	1081ffcc 	andi	r2,r2,2047
   43650:	3011883a 	mov	r8,r6
   43654:	3c62703a 	and	r17,r7,r17
   43658:	b5c03fcc 	andi	r23,r22,255
   4365c:	10006c26 	beq	r2,zero,43810 <__divdf3+0x24c>
   43660:	00c1ffc4 	movi	r3,2047
   43664:	10c06426 	beq	r2,r3,437f8 <__divdf3+0x234>
   43668:	88c00434 	orhi	r3,r17,16
   4366c:	180690fa 	slli	r3,r3,3
   43670:	3022d77a 	srli	r17,r6,29
   43674:	301090fa 	slli	r8,r6,3
   43678:	10bf0044 	addi	r2,r2,-1023
   4367c:	88e2b03a 	or	r17,r17,r3
   43680:	000f883a 	mov	r7,zero
   43684:	a58cf03a 	xor	r6,r20,r22
   43688:	3cc8b03a 	or	r4,r7,r19
   4368c:	a8abc83a 	sub	r21,r21,r2
   43690:	008003c4 	movi	r2,15
   43694:	3007883a 	mov	r3,r6
   43698:	34c03fcc 	andi	r19,r6,255
   4369c:	11009036 	bltu	r2,r4,438e0 <__divdf3+0x31c>
   436a0:	200890ba 	slli	r4,r4,2
   436a4:	00800134 	movhi	r2,4
   436a8:	108dae04 	addi	r2,r2,14008
   436ac:	2089883a 	add	r4,r4,r2
   436b0:	20800017 	ldw	r2,0(r4)
   436b4:	1000683a 	jmp	r2
   436b8:	000438e0 	cmpeqi	zero,zero,4323
   436bc:	00043730 	cmpltui	zero,zero,4316
   436c0:	000438d0 	cmplti	zero,zero,4323
   436c4:	00043724 	muli	zero,zero,4316
   436c8:	000438d0 	cmplti	zero,zero,4323
   436cc:	000438a4 	muli	zero,zero,4322
   436d0:	000438d0 	cmplti	zero,zero,4323
   436d4:	00043724 	muli	zero,zero,4316
   436d8:	00043730 	cmpltui	zero,zero,4316
   436dc:	00043730 	cmpltui	zero,zero,4316
   436e0:	000438a4 	muli	zero,zero,4322
   436e4:	00043724 	muli	zero,zero,4316
   436e8:	00043714 	movui	zero,4316
   436ec:	00043714 	movui	zero,4316
   436f0:	00043714 	movui	zero,4316
   436f4:	00043bc4 	movi	zero,4335
   436f8:	2404b03a 	or	r2,r4,r16
   436fc:	1000661e 	bne	r2,zero,43898 <__divdf3+0x2d4>
   43700:	04c00204 	movi	r19,8
   43704:	0021883a 	mov	r16,zero
   43708:	0025883a 	mov	r18,zero
   4370c:	02400084 	movi	r9,2
   43710:	003fca06 	br	4363c <__alt_data_end+0xfffc4e3c>
   43714:	8023883a 	mov	r17,r16
   43718:	9011883a 	mov	r8,r18
   4371c:	e02f883a 	mov	r23,fp
   43720:	480f883a 	mov	r7,r9
   43724:	00800084 	movi	r2,2
   43728:	3881311e 	bne	r7,r2,43bf0 <__divdf3+0x62c>
   4372c:	b827883a 	mov	r19,r23
   43730:	98c0004c 	andi	r3,r19,1
   43734:	0081ffc4 	movi	r2,2047
   43738:	000b883a 	mov	r5,zero
   4373c:	0025883a 	mov	r18,zero
   43740:	1004953a 	slli	r2,r2,20
   43744:	18c03fcc 	andi	r3,r3,255
   43748:	04400434 	movhi	r17,16
   4374c:	8c7fffc4 	addi	r17,r17,-1
   43750:	180697fa 	slli	r3,r3,31
   43754:	2c4a703a 	and	r5,r5,r17
   43758:	288ab03a 	or	r5,r5,r2
   4375c:	28c6b03a 	or	r3,r5,r3
   43760:	9005883a 	mov	r2,r18
   43764:	dfc00d17 	ldw	ra,52(sp)
   43768:	df000c17 	ldw	fp,48(sp)
   4376c:	ddc00b17 	ldw	r23,44(sp)
   43770:	dd800a17 	ldw	r22,40(sp)
   43774:	dd400917 	ldw	r21,36(sp)
   43778:	dd000817 	ldw	r20,32(sp)
   4377c:	dcc00717 	ldw	r19,28(sp)
   43780:	dc800617 	ldw	r18,24(sp)
   43784:	dc400517 	ldw	r17,20(sp)
   43788:	dc000417 	ldw	r16,16(sp)
   4378c:	dec00e04 	addi	sp,sp,56
   43790:	f800283a 	ret
   43794:	2404b03a 	or	r2,r4,r16
   43798:	2027883a 	mov	r19,r4
   4379c:	10003926 	beq	r2,zero,43884 <__divdf3+0x2c0>
   437a0:	80012e26 	beq	r16,zero,43c5c <__divdf3+0x698>
   437a4:	8009883a 	mov	r4,r16
   437a8:	d9800315 	stw	r6,12(sp)
   437ac:	d9c00215 	stw	r7,8(sp)
   437b0:	00453a40 	call	453a4 <__clzsi2>
   437b4:	d9800317 	ldw	r6,12(sp)
   437b8:	d9c00217 	ldw	r7,8(sp)
   437bc:	113ffd44 	addi	r4,r2,-11
   437c0:	00c00704 	movi	r3,28
   437c4:	19012116 	blt	r3,r4,43c4c <__divdf3+0x688>
   437c8:	00c00744 	movi	r3,29
   437cc:	147ffe04 	addi	r17,r2,-8
   437d0:	1907c83a 	sub	r3,r3,r4
   437d4:	8460983a 	sll	r16,r16,r17
   437d8:	98c6d83a 	srl	r3,r19,r3
   437dc:	9c64983a 	sll	r18,r19,r17
   437e0:	1c20b03a 	or	r16,r3,r16
   437e4:	1080fcc4 	addi	r2,r2,1011
   437e8:	00abc83a 	sub	r21,zero,r2
   437ec:	0027883a 	mov	r19,zero
   437f0:	0013883a 	mov	r9,zero
   437f4:	003f9106 	br	4363c <__alt_data_end+0xfffc4e3c>
   437f8:	3446b03a 	or	r3,r6,r17
   437fc:	18001f1e 	bne	r3,zero,4387c <__divdf3+0x2b8>
   43800:	0023883a 	mov	r17,zero
   43804:	0011883a 	mov	r8,zero
   43808:	01c00084 	movi	r7,2
   4380c:	003f9d06 	br	43684 <__alt_data_end+0xfffc4e84>
   43810:	3446b03a 	or	r3,r6,r17
   43814:	18001526 	beq	r3,zero,4386c <__divdf3+0x2a8>
   43818:	88011b26 	beq	r17,zero,43c88 <__divdf3+0x6c4>
   4381c:	8809883a 	mov	r4,r17
   43820:	d9800315 	stw	r6,12(sp)
   43824:	da400115 	stw	r9,4(sp)
   43828:	00453a40 	call	453a4 <__clzsi2>
   4382c:	d9800317 	ldw	r6,12(sp)
   43830:	da400117 	ldw	r9,4(sp)
   43834:	113ffd44 	addi	r4,r2,-11
   43838:	00c00704 	movi	r3,28
   4383c:	19010e16 	blt	r3,r4,43c78 <__divdf3+0x6b4>
   43840:	00c00744 	movi	r3,29
   43844:	123ffe04 	addi	r8,r2,-8
   43848:	1907c83a 	sub	r3,r3,r4
   4384c:	8a22983a 	sll	r17,r17,r8
   43850:	30c6d83a 	srl	r3,r6,r3
   43854:	3210983a 	sll	r8,r6,r8
   43858:	1c62b03a 	or	r17,r3,r17
   4385c:	1080fcc4 	addi	r2,r2,1011
   43860:	0085c83a 	sub	r2,zero,r2
   43864:	000f883a 	mov	r7,zero
   43868:	003f8606 	br	43684 <__alt_data_end+0xfffc4e84>
   4386c:	0023883a 	mov	r17,zero
   43870:	0011883a 	mov	r8,zero
   43874:	01c00044 	movi	r7,1
   43878:	003f8206 	br	43684 <__alt_data_end+0xfffc4e84>
   4387c:	01c000c4 	movi	r7,3
   43880:	003f8006 	br	43684 <__alt_data_end+0xfffc4e84>
   43884:	04c00104 	movi	r19,4
   43888:	0021883a 	mov	r16,zero
   4388c:	0025883a 	mov	r18,zero
   43890:	02400044 	movi	r9,1
   43894:	003f6906 	br	4363c <__alt_data_end+0xfffc4e3c>
   43898:	04c00304 	movi	r19,12
   4389c:	024000c4 	movi	r9,3
   438a0:	003f6606 	br	4363c <__alt_data_end+0xfffc4e3c>
   438a4:	01400434 	movhi	r5,16
   438a8:	0007883a 	mov	r3,zero
   438ac:	297fffc4 	addi	r5,r5,-1
   438b0:	04bfffc4 	movi	r18,-1
   438b4:	0081ffc4 	movi	r2,2047
   438b8:	003fa106 	br	43740 <__alt_data_end+0xfffc4f40>
   438bc:	00c00044 	movi	r3,1
   438c0:	1887c83a 	sub	r3,r3,r2
   438c4:	01000e04 	movi	r4,56
   438c8:	20c1210e 	bge	r4,r3,43d50 <__divdf3+0x78c>
   438cc:	98c0004c 	andi	r3,r19,1
   438d0:	0005883a 	mov	r2,zero
   438d4:	000b883a 	mov	r5,zero
   438d8:	0025883a 	mov	r18,zero
   438dc:	003f9806 	br	43740 <__alt_data_end+0xfffc4f40>
   438e0:	8c00fd36 	bltu	r17,r16,43cd8 <__divdf3+0x714>
   438e4:	8440fb26 	beq	r16,r17,43cd4 <__divdf3+0x710>
   438e8:	8007883a 	mov	r3,r16
   438ec:	ad7fffc4 	addi	r21,r21,-1
   438f0:	0021883a 	mov	r16,zero
   438f4:	4004d63a 	srli	r2,r8,24
   438f8:	8822923a 	slli	r17,r17,8
   438fc:	1809883a 	mov	r4,r3
   43900:	402c923a 	slli	r22,r8,8
   43904:	88b8b03a 	or	fp,r17,r2
   43908:	e028d43a 	srli	r20,fp,16
   4390c:	d8c00015 	stw	r3,0(sp)
   43910:	e5ffffcc 	andi	r23,fp,65535
   43914:	a00b883a 	mov	r5,r20
   43918:	00455740 	call	45574 <__udivsi3>
   4391c:	d8c00017 	ldw	r3,0(sp)
   43920:	a00b883a 	mov	r5,r20
   43924:	d8800315 	stw	r2,12(sp)
   43928:	1809883a 	mov	r4,r3
   4392c:	00455d80 	call	455d8 <__umodsi3>
   43930:	d9800317 	ldw	r6,12(sp)
   43934:	1006943a 	slli	r3,r2,16
   43938:	9004d43a 	srli	r2,r18,16
   4393c:	b9a3383a 	mul	r17,r23,r6
   43940:	10c4b03a 	or	r2,r2,r3
   43944:	1440062e 	bgeu	r2,r17,43960 <__divdf3+0x39c>
   43948:	1705883a 	add	r2,r2,fp
   4394c:	30ffffc4 	addi	r3,r6,-1
   43950:	1700ee36 	bltu	r2,fp,43d0c <__divdf3+0x748>
   43954:	1440ed2e 	bgeu	r2,r17,43d0c <__divdf3+0x748>
   43958:	31bfff84 	addi	r6,r6,-2
   4395c:	1705883a 	add	r2,r2,fp
   43960:	1463c83a 	sub	r17,r2,r17
   43964:	a00b883a 	mov	r5,r20
   43968:	8809883a 	mov	r4,r17
   4396c:	d9800315 	stw	r6,12(sp)
   43970:	00455740 	call	45574 <__udivsi3>
   43974:	a00b883a 	mov	r5,r20
   43978:	8809883a 	mov	r4,r17
   4397c:	d8800215 	stw	r2,8(sp)
   43980:	00455d80 	call	455d8 <__umodsi3>
   43984:	d9c00217 	ldw	r7,8(sp)
   43988:	1004943a 	slli	r2,r2,16
   4398c:	94bfffcc 	andi	r18,r18,65535
   43990:	b9d1383a 	mul	r8,r23,r7
   43994:	90a4b03a 	or	r18,r18,r2
   43998:	d9800317 	ldw	r6,12(sp)
   4399c:	9200062e 	bgeu	r18,r8,439b8 <__divdf3+0x3f4>
   439a0:	9725883a 	add	r18,r18,fp
   439a4:	38bfffc4 	addi	r2,r7,-1
   439a8:	9700d636 	bltu	r18,fp,43d04 <__divdf3+0x740>
   439ac:	9200d52e 	bgeu	r18,r8,43d04 <__divdf3+0x740>
   439b0:	39ffff84 	addi	r7,r7,-2
   439b4:	9725883a 	add	r18,r18,fp
   439b8:	3004943a 	slli	r2,r6,16
   439bc:	b012d43a 	srli	r9,r22,16
   439c0:	b1bfffcc 	andi	r6,r22,65535
   439c4:	11e2b03a 	or	r17,r2,r7
   439c8:	8806d43a 	srli	r3,r17,16
   439cc:	893fffcc 	andi	r4,r17,65535
   439d0:	218b383a 	mul	r5,r4,r6
   439d4:	30c5383a 	mul	r2,r6,r3
   439d8:	2249383a 	mul	r4,r4,r9
   439dc:	280ed43a 	srli	r7,r5,16
   439e0:	9225c83a 	sub	r18,r18,r8
   439e4:	2089883a 	add	r4,r4,r2
   439e8:	3909883a 	add	r4,r7,r4
   439ec:	1a47383a 	mul	r3,r3,r9
   439f0:	2080022e 	bgeu	r4,r2,439fc <__divdf3+0x438>
   439f4:	00800074 	movhi	r2,1
   439f8:	1887883a 	add	r3,r3,r2
   439fc:	2004d43a 	srli	r2,r4,16
   43a00:	2008943a 	slli	r4,r4,16
   43a04:	297fffcc 	andi	r5,r5,65535
   43a08:	10c7883a 	add	r3,r2,r3
   43a0c:	2149883a 	add	r4,r4,r5
   43a10:	90c0a536 	bltu	r18,r3,43ca8 <__divdf3+0x6e4>
   43a14:	90c0bf26 	beq	r18,r3,43d14 <__divdf3+0x750>
   43a18:	90c7c83a 	sub	r3,r18,r3
   43a1c:	810fc83a 	sub	r7,r16,r4
   43a20:	81e5803a 	cmpltu	r18,r16,r7
   43a24:	1ca5c83a 	sub	r18,r3,r18
   43a28:	e480c126 	beq	fp,r18,43d30 <__divdf3+0x76c>
   43a2c:	a00b883a 	mov	r5,r20
   43a30:	9009883a 	mov	r4,r18
   43a34:	d9800315 	stw	r6,12(sp)
   43a38:	d9c00215 	stw	r7,8(sp)
   43a3c:	da400115 	stw	r9,4(sp)
   43a40:	00455740 	call	45574 <__udivsi3>
   43a44:	a00b883a 	mov	r5,r20
   43a48:	9009883a 	mov	r4,r18
   43a4c:	d8800015 	stw	r2,0(sp)
   43a50:	00455d80 	call	455d8 <__umodsi3>
   43a54:	d9c00217 	ldw	r7,8(sp)
   43a58:	da000017 	ldw	r8,0(sp)
   43a5c:	1006943a 	slli	r3,r2,16
   43a60:	3804d43a 	srli	r2,r7,16
   43a64:	ba21383a 	mul	r16,r23,r8
   43a68:	d9800317 	ldw	r6,12(sp)
   43a6c:	10c4b03a 	or	r2,r2,r3
   43a70:	da400117 	ldw	r9,4(sp)
   43a74:	1400062e 	bgeu	r2,r16,43a90 <__divdf3+0x4cc>
   43a78:	1705883a 	add	r2,r2,fp
   43a7c:	40ffffc4 	addi	r3,r8,-1
   43a80:	1700ad36 	bltu	r2,fp,43d38 <__divdf3+0x774>
   43a84:	1400ac2e 	bgeu	r2,r16,43d38 <__divdf3+0x774>
   43a88:	423fff84 	addi	r8,r8,-2
   43a8c:	1705883a 	add	r2,r2,fp
   43a90:	1421c83a 	sub	r16,r2,r16
   43a94:	a00b883a 	mov	r5,r20
   43a98:	8009883a 	mov	r4,r16
   43a9c:	d9800315 	stw	r6,12(sp)
   43aa0:	d9c00215 	stw	r7,8(sp)
   43aa4:	da000015 	stw	r8,0(sp)
   43aa8:	da400115 	stw	r9,4(sp)
   43aac:	00455740 	call	45574 <__udivsi3>
   43ab0:	8009883a 	mov	r4,r16
   43ab4:	a00b883a 	mov	r5,r20
   43ab8:	1025883a 	mov	r18,r2
   43abc:	00455d80 	call	455d8 <__umodsi3>
   43ac0:	d9c00217 	ldw	r7,8(sp)
   43ac4:	1004943a 	slli	r2,r2,16
   43ac8:	bcaf383a 	mul	r23,r23,r18
   43acc:	393fffcc 	andi	r4,r7,65535
   43ad0:	2088b03a 	or	r4,r4,r2
   43ad4:	d9800317 	ldw	r6,12(sp)
   43ad8:	da000017 	ldw	r8,0(sp)
   43adc:	da400117 	ldw	r9,4(sp)
   43ae0:	25c0062e 	bgeu	r4,r23,43afc <__divdf3+0x538>
   43ae4:	2709883a 	add	r4,r4,fp
   43ae8:	90bfffc4 	addi	r2,r18,-1
   43aec:	27009436 	bltu	r4,fp,43d40 <__divdf3+0x77c>
   43af0:	25c0932e 	bgeu	r4,r23,43d40 <__divdf3+0x77c>
   43af4:	94bfff84 	addi	r18,r18,-2
   43af8:	2709883a 	add	r4,r4,fp
   43afc:	4004943a 	slli	r2,r8,16
   43b00:	25efc83a 	sub	r23,r4,r23
   43b04:	1490b03a 	or	r8,r2,r18
   43b08:	4008d43a 	srli	r4,r8,16
   43b0c:	40ffffcc 	andi	r3,r8,65535
   43b10:	30c5383a 	mul	r2,r6,r3
   43b14:	1a47383a 	mul	r3,r3,r9
   43b18:	310d383a 	mul	r6,r6,r4
   43b1c:	100ad43a 	srli	r5,r2,16
   43b20:	4913383a 	mul	r9,r9,r4
   43b24:	1987883a 	add	r3,r3,r6
   43b28:	28c7883a 	add	r3,r5,r3
   43b2c:	1980022e 	bgeu	r3,r6,43b38 <__divdf3+0x574>
   43b30:	01000074 	movhi	r4,1
   43b34:	4913883a 	add	r9,r9,r4
   43b38:	1808d43a 	srli	r4,r3,16
   43b3c:	1806943a 	slli	r3,r3,16
   43b40:	10bfffcc 	andi	r2,r2,65535
   43b44:	2253883a 	add	r9,r4,r9
   43b48:	1887883a 	add	r3,r3,r2
   43b4c:	ba403836 	bltu	r23,r9,43c30 <__divdf3+0x66c>
   43b50:	ba403626 	beq	r23,r9,43c2c <__divdf3+0x668>
   43b54:	42000054 	ori	r8,r8,1
   43b58:	a880ffc4 	addi	r2,r21,1023
   43b5c:	00bf570e 	bge	zero,r2,438bc <__alt_data_end+0xfffc50bc>
   43b60:	40c001cc 	andi	r3,r8,7
   43b64:	18000726 	beq	r3,zero,43b84 <__divdf3+0x5c0>
   43b68:	40c003cc 	andi	r3,r8,15
   43b6c:	01000104 	movi	r4,4
   43b70:	19000426 	beq	r3,r4,43b84 <__divdf3+0x5c0>
   43b74:	4107883a 	add	r3,r8,r4
   43b78:	1a11803a 	cmpltu	r8,r3,r8
   43b7c:	8a23883a 	add	r17,r17,r8
   43b80:	1811883a 	mov	r8,r3
   43b84:	88c0402c 	andhi	r3,r17,256
   43b88:	18000426 	beq	r3,zero,43b9c <__divdf3+0x5d8>
   43b8c:	00ffc034 	movhi	r3,65280
   43b90:	18ffffc4 	addi	r3,r3,-1
   43b94:	a8810004 	addi	r2,r21,1024
   43b98:	88e2703a 	and	r17,r17,r3
   43b9c:	00c1ff84 	movi	r3,2046
   43ba0:	18bee316 	blt	r3,r2,43730 <__alt_data_end+0xfffc4f30>
   43ba4:	8824977a 	slli	r18,r17,29
   43ba8:	4010d0fa 	srli	r8,r8,3
   43bac:	8822927a 	slli	r17,r17,9
   43bb0:	1081ffcc 	andi	r2,r2,2047
   43bb4:	9224b03a 	or	r18,r18,r8
   43bb8:	880ad33a 	srli	r5,r17,12
   43bbc:	98c0004c 	andi	r3,r19,1
   43bc0:	003edf06 	br	43740 <__alt_data_end+0xfffc4f40>
   43bc4:	8080022c 	andhi	r2,r16,8
   43bc8:	10001226 	beq	r2,zero,43c14 <__divdf3+0x650>
   43bcc:	8880022c 	andhi	r2,r17,8
   43bd0:	1000101e 	bne	r2,zero,43c14 <__divdf3+0x650>
   43bd4:	00800434 	movhi	r2,16
   43bd8:	89400234 	orhi	r5,r17,8
   43bdc:	10bfffc4 	addi	r2,r2,-1
   43be0:	b007883a 	mov	r3,r22
   43be4:	288a703a 	and	r5,r5,r2
   43be8:	4025883a 	mov	r18,r8
   43bec:	003f3106 	br	438b4 <__alt_data_end+0xfffc50b4>
   43bf0:	008000c4 	movi	r2,3
   43bf4:	3880a626 	beq	r7,r2,43e90 <__divdf3+0x8cc>
   43bf8:	00800044 	movi	r2,1
   43bfc:	3880521e 	bne	r7,r2,43d48 <__divdf3+0x784>
   43c00:	b807883a 	mov	r3,r23
   43c04:	0005883a 	mov	r2,zero
   43c08:	000b883a 	mov	r5,zero
   43c0c:	0025883a 	mov	r18,zero
   43c10:	003ecb06 	br	43740 <__alt_data_end+0xfffc4f40>
   43c14:	00800434 	movhi	r2,16
   43c18:	81400234 	orhi	r5,r16,8
   43c1c:	10bfffc4 	addi	r2,r2,-1
   43c20:	a007883a 	mov	r3,r20
   43c24:	288a703a 	and	r5,r5,r2
   43c28:	003f2206 	br	438b4 <__alt_data_end+0xfffc50b4>
   43c2c:	183fca26 	beq	r3,zero,43b58 <__alt_data_end+0xfffc5358>
   43c30:	e5ef883a 	add	r23,fp,r23
   43c34:	40bfffc4 	addi	r2,r8,-1
   43c38:	bf00392e 	bgeu	r23,fp,43d20 <__divdf3+0x75c>
   43c3c:	1011883a 	mov	r8,r2
   43c40:	ba7fc41e 	bne	r23,r9,43b54 <__alt_data_end+0xfffc5354>
   43c44:	b0ffc31e 	bne	r22,r3,43b54 <__alt_data_end+0xfffc5354>
   43c48:	003fc306 	br	43b58 <__alt_data_end+0xfffc5358>
   43c4c:	143ff604 	addi	r16,r2,-40
   43c50:	9c20983a 	sll	r16,r19,r16
   43c54:	0025883a 	mov	r18,zero
   43c58:	003ee206 	br	437e4 <__alt_data_end+0xfffc4fe4>
   43c5c:	d9800315 	stw	r6,12(sp)
   43c60:	d9c00215 	stw	r7,8(sp)
   43c64:	00453a40 	call	453a4 <__clzsi2>
   43c68:	10800804 	addi	r2,r2,32
   43c6c:	d9c00217 	ldw	r7,8(sp)
   43c70:	d9800317 	ldw	r6,12(sp)
   43c74:	003ed106 	br	437bc <__alt_data_end+0xfffc4fbc>
   43c78:	147ff604 	addi	r17,r2,-40
   43c7c:	3462983a 	sll	r17,r6,r17
   43c80:	0011883a 	mov	r8,zero
   43c84:	003ef506 	br	4385c <__alt_data_end+0xfffc505c>
   43c88:	3009883a 	mov	r4,r6
   43c8c:	d9800315 	stw	r6,12(sp)
   43c90:	da400115 	stw	r9,4(sp)
   43c94:	00453a40 	call	453a4 <__clzsi2>
   43c98:	10800804 	addi	r2,r2,32
   43c9c:	da400117 	ldw	r9,4(sp)
   43ca0:	d9800317 	ldw	r6,12(sp)
   43ca4:	003ee306 	br	43834 <__alt_data_end+0xfffc5034>
   43ca8:	85a1883a 	add	r16,r16,r22
   43cac:	8585803a 	cmpltu	r2,r16,r22
   43cb0:	1705883a 	add	r2,r2,fp
   43cb4:	14a5883a 	add	r18,r2,r18
   43cb8:	88bfffc4 	addi	r2,r17,-1
   43cbc:	e4800c2e 	bgeu	fp,r18,43cf0 <__divdf3+0x72c>
   43cc0:	90c03e36 	bltu	r18,r3,43dbc <__divdf3+0x7f8>
   43cc4:	1c806926 	beq	r3,r18,43e6c <__divdf3+0x8a8>
   43cc8:	90c7c83a 	sub	r3,r18,r3
   43ccc:	1023883a 	mov	r17,r2
   43cd0:	003f5206 	br	43a1c <__alt_data_end+0xfffc521c>
   43cd4:	923f0436 	bltu	r18,r8,438e8 <__alt_data_end+0xfffc50e8>
   43cd8:	800897fa 	slli	r4,r16,31
   43cdc:	9004d07a 	srli	r2,r18,1
   43ce0:	8006d07a 	srli	r3,r16,1
   43ce4:	902097fa 	slli	r16,r18,31
   43ce8:	20a4b03a 	or	r18,r4,r2
   43cec:	003f0106 	br	438f4 <__alt_data_end+0xfffc50f4>
   43cf0:	e4bff51e 	bne	fp,r18,43cc8 <__alt_data_end+0xfffc54c8>
   43cf4:	85bff22e 	bgeu	r16,r22,43cc0 <__alt_data_end+0xfffc54c0>
   43cf8:	e0c7c83a 	sub	r3,fp,r3
   43cfc:	1023883a 	mov	r17,r2
   43d00:	003f4606 	br	43a1c <__alt_data_end+0xfffc521c>
   43d04:	100f883a 	mov	r7,r2
   43d08:	003f2b06 	br	439b8 <__alt_data_end+0xfffc51b8>
   43d0c:	180d883a 	mov	r6,r3
   43d10:	003f1306 	br	43960 <__alt_data_end+0xfffc5160>
   43d14:	813fe436 	bltu	r16,r4,43ca8 <__alt_data_end+0xfffc54a8>
   43d18:	0007883a 	mov	r3,zero
   43d1c:	003f3f06 	br	43a1c <__alt_data_end+0xfffc521c>
   43d20:	ba402c36 	bltu	r23,r9,43dd4 <__divdf3+0x810>
   43d24:	4dc05426 	beq	r9,r23,43e78 <__divdf3+0x8b4>
   43d28:	1011883a 	mov	r8,r2
   43d2c:	003f8906 	br	43b54 <__alt_data_end+0xfffc5354>
   43d30:	023fffc4 	movi	r8,-1
   43d34:	003f8806 	br	43b58 <__alt_data_end+0xfffc5358>
   43d38:	1811883a 	mov	r8,r3
   43d3c:	003f5406 	br	43a90 <__alt_data_end+0xfffc5290>
   43d40:	1025883a 	mov	r18,r2
   43d44:	003f6d06 	br	43afc <__alt_data_end+0xfffc52fc>
   43d48:	b827883a 	mov	r19,r23
   43d4c:	003f8206 	br	43b58 <__alt_data_end+0xfffc5358>
   43d50:	010007c4 	movi	r4,31
   43d54:	20c02616 	blt	r4,r3,43df0 <__divdf3+0x82c>
   43d58:	00800804 	movi	r2,32
   43d5c:	10c5c83a 	sub	r2,r2,r3
   43d60:	888a983a 	sll	r5,r17,r2
   43d64:	40c8d83a 	srl	r4,r8,r3
   43d68:	4084983a 	sll	r2,r8,r2
   43d6c:	88e2d83a 	srl	r17,r17,r3
   43d70:	2906b03a 	or	r3,r5,r4
   43d74:	1004c03a 	cmpne	r2,r2,zero
   43d78:	1886b03a 	or	r3,r3,r2
   43d7c:	188001cc 	andi	r2,r3,7
   43d80:	10000726 	beq	r2,zero,43da0 <__divdf3+0x7dc>
   43d84:	188003cc 	andi	r2,r3,15
   43d88:	01000104 	movi	r4,4
   43d8c:	11000426 	beq	r2,r4,43da0 <__divdf3+0x7dc>
   43d90:	1805883a 	mov	r2,r3
   43d94:	10c00104 	addi	r3,r2,4
   43d98:	1885803a 	cmpltu	r2,r3,r2
   43d9c:	88a3883a 	add	r17,r17,r2
   43da0:	8880202c 	andhi	r2,r17,128
   43da4:	10002726 	beq	r2,zero,43e44 <__divdf3+0x880>
   43da8:	98c0004c 	andi	r3,r19,1
   43dac:	00800044 	movi	r2,1
   43db0:	000b883a 	mov	r5,zero
   43db4:	0025883a 	mov	r18,zero
   43db8:	003e6106 	br	43740 <__alt_data_end+0xfffc4f40>
   43dbc:	85a1883a 	add	r16,r16,r22
   43dc0:	8585803a 	cmpltu	r2,r16,r22
   43dc4:	1705883a 	add	r2,r2,fp
   43dc8:	14a5883a 	add	r18,r2,r18
   43dcc:	8c7fff84 	addi	r17,r17,-2
   43dd0:	003f1106 	br	43a18 <__alt_data_end+0xfffc5218>
   43dd4:	b589883a 	add	r4,r22,r22
   43dd8:	25ad803a 	cmpltu	r22,r4,r22
   43ddc:	b739883a 	add	fp,r22,fp
   43de0:	40bfff84 	addi	r2,r8,-2
   43de4:	bf2f883a 	add	r23,r23,fp
   43de8:	202d883a 	mov	r22,r4
   43dec:	003f9306 	br	43c3c <__alt_data_end+0xfffc543c>
   43df0:	013ff844 	movi	r4,-31
   43df4:	2085c83a 	sub	r2,r4,r2
   43df8:	8888d83a 	srl	r4,r17,r2
   43dfc:	00800804 	movi	r2,32
   43e00:	18802126 	beq	r3,r2,43e88 <__divdf3+0x8c4>
   43e04:	00801004 	movi	r2,64
   43e08:	10c5c83a 	sub	r2,r2,r3
   43e0c:	8884983a 	sll	r2,r17,r2
   43e10:	1204b03a 	or	r2,r2,r8
   43e14:	1004c03a 	cmpne	r2,r2,zero
   43e18:	2084b03a 	or	r2,r4,r2
   43e1c:	144001cc 	andi	r17,r2,7
   43e20:	88000d1e 	bne	r17,zero,43e58 <__divdf3+0x894>
   43e24:	000b883a 	mov	r5,zero
   43e28:	1024d0fa 	srli	r18,r2,3
   43e2c:	98c0004c 	andi	r3,r19,1
   43e30:	0005883a 	mov	r2,zero
   43e34:	9464b03a 	or	r18,r18,r17
   43e38:	003e4106 	br	43740 <__alt_data_end+0xfffc4f40>
   43e3c:	1007883a 	mov	r3,r2
   43e40:	0023883a 	mov	r17,zero
   43e44:	880a927a 	slli	r5,r17,9
   43e48:	1805883a 	mov	r2,r3
   43e4c:	8822977a 	slli	r17,r17,29
   43e50:	280ad33a 	srli	r5,r5,12
   43e54:	003ff406 	br	43e28 <__alt_data_end+0xfffc5628>
   43e58:	10c003cc 	andi	r3,r2,15
   43e5c:	01000104 	movi	r4,4
   43e60:	193ff626 	beq	r3,r4,43e3c <__alt_data_end+0xfffc563c>
   43e64:	0023883a 	mov	r17,zero
   43e68:	003fca06 	br	43d94 <__alt_data_end+0xfffc5594>
   43e6c:	813fd336 	bltu	r16,r4,43dbc <__alt_data_end+0xfffc55bc>
   43e70:	1023883a 	mov	r17,r2
   43e74:	003fa806 	br	43d18 <__alt_data_end+0xfffc5518>
   43e78:	b0ffd636 	bltu	r22,r3,43dd4 <__alt_data_end+0xfffc55d4>
   43e7c:	1011883a 	mov	r8,r2
   43e80:	b0ff341e 	bne	r22,r3,43b54 <__alt_data_end+0xfffc5354>
   43e84:	003f3406 	br	43b58 <__alt_data_end+0xfffc5358>
   43e88:	0005883a 	mov	r2,zero
   43e8c:	003fe006 	br	43e10 <__alt_data_end+0xfffc5610>
   43e90:	00800434 	movhi	r2,16
   43e94:	89400234 	orhi	r5,r17,8
   43e98:	10bfffc4 	addi	r2,r2,-1
   43e9c:	b807883a 	mov	r3,r23
   43ea0:	288a703a 	and	r5,r5,r2
   43ea4:	4025883a 	mov	r18,r8
   43ea8:	003e8206 	br	438b4 <__alt_data_end+0xfffc50b4>

00043eac <__gedf2>:
   43eac:	2804d53a 	srli	r2,r5,20
   43eb0:	3806d53a 	srli	r3,r7,20
   43eb4:	02000434 	movhi	r8,16
   43eb8:	423fffc4 	addi	r8,r8,-1
   43ebc:	1081ffcc 	andi	r2,r2,2047
   43ec0:	0241ffc4 	movi	r9,2047
   43ec4:	2a14703a 	and	r10,r5,r8
   43ec8:	18c1ffcc 	andi	r3,r3,2047
   43ecc:	3a10703a 	and	r8,r7,r8
   43ed0:	280ad7fa 	srli	r5,r5,31
   43ed4:	380ed7fa 	srli	r7,r7,31
   43ed8:	12401d26 	beq	r2,r9,43f50 <__gedf2+0xa4>
   43edc:	0241ffc4 	movi	r9,2047
   43ee0:	1a401226 	beq	r3,r9,43f2c <__gedf2+0x80>
   43ee4:	1000081e 	bne	r2,zero,43f08 <__gedf2+0x5c>
   43ee8:	2296b03a 	or	r11,r4,r10
   43eec:	5813003a 	cmpeq	r9,r11,zero
   43ef0:	1800091e 	bne	r3,zero,43f18 <__gedf2+0x6c>
   43ef4:	3218b03a 	or	r12,r6,r8
   43ef8:	6000071e 	bne	r12,zero,43f18 <__gedf2+0x6c>
   43efc:	0005883a 	mov	r2,zero
   43f00:	5800101e 	bne	r11,zero,43f44 <__gedf2+0x98>
   43f04:	f800283a 	ret
   43f08:	18000c1e 	bne	r3,zero,43f3c <__gedf2+0x90>
   43f0c:	3212b03a 	or	r9,r6,r8
   43f10:	48000c26 	beq	r9,zero,43f44 <__gedf2+0x98>
   43f14:	0013883a 	mov	r9,zero
   43f18:	39c03fcc 	andi	r7,r7,255
   43f1c:	48000826 	beq	r9,zero,43f40 <__gedf2+0x94>
   43f20:	38000926 	beq	r7,zero,43f48 <__gedf2+0x9c>
   43f24:	00800044 	movi	r2,1
   43f28:	f800283a 	ret
   43f2c:	3212b03a 	or	r9,r6,r8
   43f30:	483fec26 	beq	r9,zero,43ee4 <__alt_data_end+0xfffc56e4>
   43f34:	00bfff84 	movi	r2,-2
   43f38:	f800283a 	ret
   43f3c:	39c03fcc 	andi	r7,r7,255
   43f40:	29c00626 	beq	r5,r7,43f5c <__gedf2+0xb0>
   43f44:	283ff726 	beq	r5,zero,43f24 <__alt_data_end+0xfffc5724>
   43f48:	00bfffc4 	movi	r2,-1
   43f4c:	f800283a 	ret
   43f50:	2292b03a 	or	r9,r4,r10
   43f54:	483fe126 	beq	r9,zero,43edc <__alt_data_end+0xfffc56dc>
   43f58:	003ff606 	br	43f34 <__alt_data_end+0xfffc5734>
   43f5c:	18bff916 	blt	r3,r2,43f44 <__alt_data_end+0xfffc5744>
   43f60:	10c00316 	blt	r2,r3,43f70 <__gedf2+0xc4>
   43f64:	42bff736 	bltu	r8,r10,43f44 <__alt_data_end+0xfffc5744>
   43f68:	52000326 	beq	r10,r8,43f78 <__gedf2+0xcc>
   43f6c:	5200042e 	bgeu	r10,r8,43f80 <__gedf2+0xd4>
   43f70:	283fec1e 	bne	r5,zero,43f24 <__alt_data_end+0xfffc5724>
   43f74:	003ff406 	br	43f48 <__alt_data_end+0xfffc5748>
   43f78:	313ff236 	bltu	r6,r4,43f44 <__alt_data_end+0xfffc5744>
   43f7c:	21bffc36 	bltu	r4,r6,43f70 <__alt_data_end+0xfffc5770>
   43f80:	0005883a 	mov	r2,zero
   43f84:	f800283a 	ret

00043f88 <__ledf2>:
   43f88:	2804d53a 	srli	r2,r5,20
   43f8c:	3810d53a 	srli	r8,r7,20
   43f90:	00c00434 	movhi	r3,16
   43f94:	18ffffc4 	addi	r3,r3,-1
   43f98:	1081ffcc 	andi	r2,r2,2047
   43f9c:	0241ffc4 	movi	r9,2047
   43fa0:	28d4703a 	and	r10,r5,r3
   43fa4:	4201ffcc 	andi	r8,r8,2047
   43fa8:	38c6703a 	and	r3,r7,r3
   43fac:	280ad7fa 	srli	r5,r5,31
   43fb0:	380ed7fa 	srli	r7,r7,31
   43fb4:	12401f26 	beq	r2,r9,44034 <__ledf2+0xac>
   43fb8:	0241ffc4 	movi	r9,2047
   43fbc:	42401426 	beq	r8,r9,44010 <__ledf2+0x88>
   43fc0:	1000091e 	bne	r2,zero,43fe8 <__ledf2+0x60>
   43fc4:	2296b03a 	or	r11,r4,r10
   43fc8:	5813003a 	cmpeq	r9,r11,zero
   43fcc:	29403fcc 	andi	r5,r5,255
   43fd0:	40000a1e 	bne	r8,zero,43ffc <__ledf2+0x74>
   43fd4:	30d8b03a 	or	r12,r6,r3
   43fd8:	6000081e 	bne	r12,zero,43ffc <__ledf2+0x74>
   43fdc:	0005883a 	mov	r2,zero
   43fe0:	5800111e 	bne	r11,zero,44028 <__ledf2+0xa0>
   43fe4:	f800283a 	ret
   43fe8:	29403fcc 	andi	r5,r5,255
   43fec:	40000c1e 	bne	r8,zero,44020 <__ledf2+0x98>
   43ff0:	30d2b03a 	or	r9,r6,r3
   43ff4:	48000c26 	beq	r9,zero,44028 <__ledf2+0xa0>
   43ff8:	0013883a 	mov	r9,zero
   43ffc:	39c03fcc 	andi	r7,r7,255
   44000:	48000826 	beq	r9,zero,44024 <__ledf2+0x9c>
   44004:	38001126 	beq	r7,zero,4404c <__ledf2+0xc4>
   44008:	00800044 	movi	r2,1
   4400c:	f800283a 	ret
   44010:	30d2b03a 	or	r9,r6,r3
   44014:	483fea26 	beq	r9,zero,43fc0 <__alt_data_end+0xfffc57c0>
   44018:	00800084 	movi	r2,2
   4401c:	f800283a 	ret
   44020:	39c03fcc 	andi	r7,r7,255
   44024:	39400726 	beq	r7,r5,44044 <__ledf2+0xbc>
   44028:	2800081e 	bne	r5,zero,4404c <__ledf2+0xc4>
   4402c:	00800044 	movi	r2,1
   44030:	f800283a 	ret
   44034:	2292b03a 	or	r9,r4,r10
   44038:	483fdf26 	beq	r9,zero,43fb8 <__alt_data_end+0xfffc57b8>
   4403c:	00800084 	movi	r2,2
   44040:	f800283a 	ret
   44044:	4080030e 	bge	r8,r2,44054 <__ledf2+0xcc>
   44048:	383fef26 	beq	r7,zero,44008 <__alt_data_end+0xfffc5808>
   4404c:	00bfffc4 	movi	r2,-1
   44050:	f800283a 	ret
   44054:	123feb16 	blt	r2,r8,44004 <__alt_data_end+0xfffc5804>
   44058:	1abff336 	bltu	r3,r10,44028 <__alt_data_end+0xfffc5828>
   4405c:	50c00326 	beq	r10,r3,4406c <__ledf2+0xe4>
   44060:	50c0042e 	bgeu	r10,r3,44074 <__ledf2+0xec>
   44064:	283fe81e 	bne	r5,zero,44008 <__alt_data_end+0xfffc5808>
   44068:	003ff806 	br	4404c <__alt_data_end+0xfffc584c>
   4406c:	313fee36 	bltu	r6,r4,44028 <__alt_data_end+0xfffc5828>
   44070:	21bffc36 	bltu	r4,r6,44064 <__alt_data_end+0xfffc5864>
   44074:	0005883a 	mov	r2,zero
   44078:	f800283a 	ret

0004407c <__muldf3>:
   4407c:	defff304 	addi	sp,sp,-52
   44080:	2804d53a 	srli	r2,r5,20
   44084:	dd800915 	stw	r22,36(sp)
   44088:	282cd7fa 	srli	r22,r5,31
   4408c:	dc000315 	stw	r16,12(sp)
   44090:	04000434 	movhi	r16,16
   44094:	dd400815 	stw	r21,32(sp)
   44098:	dc800515 	stw	r18,20(sp)
   4409c:	843fffc4 	addi	r16,r16,-1
   440a0:	dfc00c15 	stw	ra,48(sp)
   440a4:	df000b15 	stw	fp,44(sp)
   440a8:	ddc00a15 	stw	r23,40(sp)
   440ac:	dd000715 	stw	r20,28(sp)
   440b0:	dcc00615 	stw	r19,24(sp)
   440b4:	dc400415 	stw	r17,16(sp)
   440b8:	1481ffcc 	andi	r18,r2,2047
   440bc:	2c20703a 	and	r16,r5,r16
   440c0:	b02b883a 	mov	r21,r22
   440c4:	b2403fcc 	andi	r9,r22,255
   440c8:	90006026 	beq	r18,zero,4424c <__muldf3+0x1d0>
   440cc:	0081ffc4 	movi	r2,2047
   440d0:	2029883a 	mov	r20,r4
   440d4:	90803626 	beq	r18,r2,441b0 <__muldf3+0x134>
   440d8:	80800434 	orhi	r2,r16,16
   440dc:	100490fa 	slli	r2,r2,3
   440e0:	2020d77a 	srli	r16,r4,29
   440e4:	202890fa 	slli	r20,r4,3
   440e8:	94bf0044 	addi	r18,r18,-1023
   440ec:	80a0b03a 	or	r16,r16,r2
   440f0:	0027883a 	mov	r19,zero
   440f4:	0039883a 	mov	fp,zero
   440f8:	3804d53a 	srli	r2,r7,20
   440fc:	382ed7fa 	srli	r23,r7,31
   44100:	04400434 	movhi	r17,16
   44104:	8c7fffc4 	addi	r17,r17,-1
   44108:	1081ffcc 	andi	r2,r2,2047
   4410c:	3011883a 	mov	r8,r6
   44110:	3c62703a 	and	r17,r7,r17
   44114:	ba803fcc 	andi	r10,r23,255
   44118:	10006d26 	beq	r2,zero,442d0 <__muldf3+0x254>
   4411c:	00c1ffc4 	movi	r3,2047
   44120:	10c06526 	beq	r2,r3,442b8 <__muldf3+0x23c>
   44124:	88c00434 	orhi	r3,r17,16
   44128:	180690fa 	slli	r3,r3,3
   4412c:	3022d77a 	srli	r17,r6,29
   44130:	301090fa 	slli	r8,r6,3
   44134:	10bf0044 	addi	r2,r2,-1023
   44138:	88e2b03a 	or	r17,r17,r3
   4413c:	000b883a 	mov	r5,zero
   44140:	9085883a 	add	r2,r18,r2
   44144:	2cc8b03a 	or	r4,r5,r19
   44148:	00c003c4 	movi	r3,15
   4414c:	bdacf03a 	xor	r22,r23,r22
   44150:	12c00044 	addi	r11,r2,1
   44154:	19009936 	bltu	r3,r4,443bc <__muldf3+0x340>
   44158:	200890ba 	slli	r4,r4,2
   4415c:	00c00134 	movhi	r3,4
   44160:	18d05c04 	addi	r3,r3,16752
   44164:	20c9883a 	add	r4,r4,r3
   44168:	20c00017 	ldw	r3,0(r4)
   4416c:	1800683a 	jmp	r3
   44170:	000443bc 	xorhi	zero,zero,4366
   44174:	000441d0 	cmplti	zero,zero,4359
   44178:	000441d0 	cmplti	zero,zero,4359
   4417c:	000441cc 	andi	zero,zero,4359
   44180:	00044398 	cmpnei	zero,zero,4366
   44184:	00044398 	cmpnei	zero,zero,4366
   44188:	00044380 	call	4438 <__alt_mem_onchip_memory2-0x3bbc8>
   4418c:	000441cc 	andi	zero,zero,4359
   44190:	00044398 	cmpnei	zero,zero,4366
   44194:	00044380 	call	4438 <__alt_mem_onchip_memory2-0x3bbc8>
   44198:	00044398 	cmpnei	zero,zero,4366
   4419c:	000441cc 	andi	zero,zero,4359
   441a0:	000443a8 	cmpgeui	zero,zero,4366
   441a4:	000443a8 	cmpgeui	zero,zero,4366
   441a8:	000443a8 	cmpgeui	zero,zero,4366
   441ac:	000445c4 	movi	zero,4375
   441b0:	2404b03a 	or	r2,r4,r16
   441b4:	10006f1e 	bne	r2,zero,44374 <__muldf3+0x2f8>
   441b8:	04c00204 	movi	r19,8
   441bc:	0021883a 	mov	r16,zero
   441c0:	0029883a 	mov	r20,zero
   441c4:	07000084 	movi	fp,2
   441c8:	003fcb06 	br	440f8 <__alt_data_end+0xfffc58f8>
   441cc:	502d883a 	mov	r22,r10
   441d0:	00800084 	movi	r2,2
   441d4:	28805726 	beq	r5,r2,44334 <__muldf3+0x2b8>
   441d8:	008000c4 	movi	r2,3
   441dc:	28816626 	beq	r5,r2,44778 <__muldf3+0x6fc>
   441e0:	00800044 	movi	r2,1
   441e4:	2881411e 	bne	r5,r2,446ec <__muldf3+0x670>
   441e8:	b02b883a 	mov	r21,r22
   441ec:	0005883a 	mov	r2,zero
   441f0:	000b883a 	mov	r5,zero
   441f4:	0029883a 	mov	r20,zero
   441f8:	1004953a 	slli	r2,r2,20
   441fc:	a8c03fcc 	andi	r3,r21,255
   44200:	04400434 	movhi	r17,16
   44204:	8c7fffc4 	addi	r17,r17,-1
   44208:	180697fa 	slli	r3,r3,31
   4420c:	2c4a703a 	and	r5,r5,r17
   44210:	288ab03a 	or	r5,r5,r2
   44214:	28c6b03a 	or	r3,r5,r3
   44218:	a005883a 	mov	r2,r20
   4421c:	dfc00c17 	ldw	ra,48(sp)
   44220:	df000b17 	ldw	fp,44(sp)
   44224:	ddc00a17 	ldw	r23,40(sp)
   44228:	dd800917 	ldw	r22,36(sp)
   4422c:	dd400817 	ldw	r21,32(sp)
   44230:	dd000717 	ldw	r20,28(sp)
   44234:	dcc00617 	ldw	r19,24(sp)
   44238:	dc800517 	ldw	r18,20(sp)
   4423c:	dc400417 	ldw	r17,16(sp)
   44240:	dc000317 	ldw	r16,12(sp)
   44244:	dec00d04 	addi	sp,sp,52
   44248:	f800283a 	ret
   4424c:	2404b03a 	or	r2,r4,r16
   44250:	2027883a 	mov	r19,r4
   44254:	10004226 	beq	r2,zero,44360 <__muldf3+0x2e4>
   44258:	8000fc26 	beq	r16,zero,4464c <__muldf3+0x5d0>
   4425c:	8009883a 	mov	r4,r16
   44260:	d9800215 	stw	r6,8(sp)
   44264:	d9c00015 	stw	r7,0(sp)
   44268:	da400115 	stw	r9,4(sp)
   4426c:	00453a40 	call	453a4 <__clzsi2>
   44270:	d9800217 	ldw	r6,8(sp)
   44274:	d9c00017 	ldw	r7,0(sp)
   44278:	da400117 	ldw	r9,4(sp)
   4427c:	113ffd44 	addi	r4,r2,-11
   44280:	00c00704 	movi	r3,28
   44284:	1900ed16 	blt	r3,r4,4463c <__muldf3+0x5c0>
   44288:	00c00744 	movi	r3,29
   4428c:	147ffe04 	addi	r17,r2,-8
   44290:	1907c83a 	sub	r3,r3,r4
   44294:	8460983a 	sll	r16,r16,r17
   44298:	98c6d83a 	srl	r3,r19,r3
   4429c:	9c68983a 	sll	r20,r19,r17
   442a0:	1c20b03a 	or	r16,r3,r16
   442a4:	1080fcc4 	addi	r2,r2,1011
   442a8:	00a5c83a 	sub	r18,zero,r2
   442ac:	0027883a 	mov	r19,zero
   442b0:	0039883a 	mov	fp,zero
   442b4:	003f9006 	br	440f8 <__alt_data_end+0xfffc58f8>
   442b8:	3446b03a 	or	r3,r6,r17
   442bc:	1800261e 	bne	r3,zero,44358 <__muldf3+0x2dc>
   442c0:	0023883a 	mov	r17,zero
   442c4:	0011883a 	mov	r8,zero
   442c8:	01400084 	movi	r5,2
   442cc:	003f9c06 	br	44140 <__alt_data_end+0xfffc5940>
   442d0:	3446b03a 	or	r3,r6,r17
   442d4:	18001c26 	beq	r3,zero,44348 <__muldf3+0x2cc>
   442d8:	8800ce26 	beq	r17,zero,44614 <__muldf3+0x598>
   442dc:	8809883a 	mov	r4,r17
   442e0:	d9800215 	stw	r6,8(sp)
   442e4:	da400115 	stw	r9,4(sp)
   442e8:	da800015 	stw	r10,0(sp)
   442ec:	00453a40 	call	453a4 <__clzsi2>
   442f0:	d9800217 	ldw	r6,8(sp)
   442f4:	da400117 	ldw	r9,4(sp)
   442f8:	da800017 	ldw	r10,0(sp)
   442fc:	113ffd44 	addi	r4,r2,-11
   44300:	00c00704 	movi	r3,28
   44304:	1900bf16 	blt	r3,r4,44604 <__muldf3+0x588>
   44308:	00c00744 	movi	r3,29
   4430c:	123ffe04 	addi	r8,r2,-8
   44310:	1907c83a 	sub	r3,r3,r4
   44314:	8a22983a 	sll	r17,r17,r8
   44318:	30c6d83a 	srl	r3,r6,r3
   4431c:	3210983a 	sll	r8,r6,r8
   44320:	1c62b03a 	or	r17,r3,r17
   44324:	1080fcc4 	addi	r2,r2,1011
   44328:	0085c83a 	sub	r2,zero,r2
   4432c:	000b883a 	mov	r5,zero
   44330:	003f8306 	br	44140 <__alt_data_end+0xfffc5940>
   44334:	b02b883a 	mov	r21,r22
   44338:	0081ffc4 	movi	r2,2047
   4433c:	000b883a 	mov	r5,zero
   44340:	0029883a 	mov	r20,zero
   44344:	003fac06 	br	441f8 <__alt_data_end+0xfffc59f8>
   44348:	0023883a 	mov	r17,zero
   4434c:	0011883a 	mov	r8,zero
   44350:	01400044 	movi	r5,1
   44354:	003f7a06 	br	44140 <__alt_data_end+0xfffc5940>
   44358:	014000c4 	movi	r5,3
   4435c:	003f7806 	br	44140 <__alt_data_end+0xfffc5940>
   44360:	04c00104 	movi	r19,4
   44364:	0021883a 	mov	r16,zero
   44368:	0029883a 	mov	r20,zero
   4436c:	07000044 	movi	fp,1
   44370:	003f6106 	br	440f8 <__alt_data_end+0xfffc58f8>
   44374:	04c00304 	movi	r19,12
   44378:	070000c4 	movi	fp,3
   4437c:	003f5e06 	br	440f8 <__alt_data_end+0xfffc58f8>
   44380:	01400434 	movhi	r5,16
   44384:	002b883a 	mov	r21,zero
   44388:	297fffc4 	addi	r5,r5,-1
   4438c:	053fffc4 	movi	r20,-1
   44390:	0081ffc4 	movi	r2,2047
   44394:	003f9806 	br	441f8 <__alt_data_end+0xfffc59f8>
   44398:	8023883a 	mov	r17,r16
   4439c:	a011883a 	mov	r8,r20
   443a0:	e00b883a 	mov	r5,fp
   443a4:	003f8a06 	br	441d0 <__alt_data_end+0xfffc59d0>
   443a8:	8023883a 	mov	r17,r16
   443ac:	a011883a 	mov	r8,r20
   443b0:	482d883a 	mov	r22,r9
   443b4:	e00b883a 	mov	r5,fp
   443b8:	003f8506 	br	441d0 <__alt_data_end+0xfffc59d0>
   443bc:	a00ad43a 	srli	r5,r20,16
   443c0:	401ad43a 	srli	r13,r8,16
   443c4:	a53fffcc 	andi	r20,r20,65535
   443c8:	423fffcc 	andi	r8,r8,65535
   443cc:	4519383a 	mul	r12,r8,r20
   443d0:	4147383a 	mul	r3,r8,r5
   443d4:	6d09383a 	mul	r4,r13,r20
   443d8:	600cd43a 	srli	r6,r12,16
   443dc:	2b5d383a 	mul	r14,r5,r13
   443e0:	20c9883a 	add	r4,r4,r3
   443e4:	310d883a 	add	r6,r6,r4
   443e8:	30c0022e 	bgeu	r6,r3,443f4 <__muldf3+0x378>
   443ec:	00c00074 	movhi	r3,1
   443f0:	70dd883a 	add	r14,r14,r3
   443f4:	8826d43a 	srli	r19,r17,16
   443f8:	8bffffcc 	andi	r15,r17,65535
   443fc:	7d23383a 	mul	r17,r15,r20
   44400:	7949383a 	mul	r4,r15,r5
   44404:	9d29383a 	mul	r20,r19,r20
   44408:	8814d43a 	srli	r10,r17,16
   4440c:	3012943a 	slli	r9,r6,16
   44410:	a129883a 	add	r20,r20,r4
   44414:	633fffcc 	andi	r12,r12,65535
   44418:	5515883a 	add	r10,r10,r20
   4441c:	3006d43a 	srli	r3,r6,16
   44420:	4b13883a 	add	r9,r9,r12
   44424:	2ccb383a 	mul	r5,r5,r19
   44428:	5100022e 	bgeu	r10,r4,44434 <__muldf3+0x3b8>
   4442c:	01000074 	movhi	r4,1
   44430:	290b883a 	add	r5,r5,r4
   44434:	802ad43a 	srli	r21,r16,16
   44438:	843fffcc 	andi	r16,r16,65535
   4443c:	440d383a 	mul	r6,r8,r16
   44440:	4565383a 	mul	r18,r8,r21
   44444:	8349383a 	mul	r4,r16,r13
   44448:	500e943a 	slli	r7,r10,16
   4444c:	3010d43a 	srli	r8,r6,16
   44450:	5028d43a 	srli	r20,r10,16
   44454:	2489883a 	add	r4,r4,r18
   44458:	8abfffcc 	andi	r10,r17,65535
   4445c:	3a95883a 	add	r10,r7,r10
   44460:	4119883a 	add	r12,r8,r4
   44464:	a169883a 	add	r20,r20,r5
   44468:	1a87883a 	add	r3,r3,r10
   4446c:	6d5b383a 	mul	r13,r13,r21
   44470:	6480022e 	bgeu	r12,r18,4447c <__muldf3+0x400>
   44474:	01000074 	movhi	r4,1
   44478:	691b883a 	add	r13,r13,r4
   4447c:	7c25383a 	mul	r18,r15,r16
   44480:	7d4b383a 	mul	r5,r15,r21
   44484:	84cf383a 	mul	r7,r16,r19
   44488:	901ed43a 	srli	r15,r18,16
   4448c:	6008d43a 	srli	r4,r12,16
   44490:	6010943a 	slli	r8,r12,16
   44494:	394f883a 	add	r7,r7,r5
   44498:	333fffcc 	andi	r12,r6,65535
   4449c:	79df883a 	add	r15,r15,r7
   444a0:	235b883a 	add	r13,r4,r13
   444a4:	9d63383a 	mul	r17,r19,r21
   444a8:	4309883a 	add	r4,r8,r12
   444ac:	7940022e 	bgeu	r15,r5,444b8 <__muldf3+0x43c>
   444b0:	01400074 	movhi	r5,1
   444b4:	8963883a 	add	r17,r17,r5
   444b8:	780a943a 	slli	r5,r15,16
   444bc:	91bfffcc 	andi	r6,r18,65535
   444c0:	70c7883a 	add	r3,r14,r3
   444c4:	298d883a 	add	r6,r5,r6
   444c8:	1a8f803a 	cmpltu	r7,r3,r10
   444cc:	350b883a 	add	r5,r6,r20
   444d0:	20c7883a 	add	r3,r4,r3
   444d4:	3955883a 	add	r10,r7,r5
   444d8:	1909803a 	cmpltu	r4,r3,r4
   444dc:	6a91883a 	add	r8,r13,r10
   444e0:	780cd43a 	srli	r6,r15,16
   444e4:	2219883a 	add	r12,r4,r8
   444e8:	2d0b803a 	cmpltu	r5,r5,r20
   444ec:	51cf803a 	cmpltu	r7,r10,r7
   444f0:	29ceb03a 	or	r7,r5,r7
   444f4:	4351803a 	cmpltu	r8,r8,r13
   444f8:	610b803a 	cmpltu	r5,r12,r4
   444fc:	4148b03a 	or	r4,r8,r5
   44500:	398f883a 	add	r7,r7,r6
   44504:	3909883a 	add	r4,r7,r4
   44508:	1810927a 	slli	r8,r3,9
   4450c:	2449883a 	add	r4,r4,r17
   44510:	2008927a 	slli	r4,r4,9
   44514:	6022d5fa 	srli	r17,r12,23
   44518:	1806d5fa 	srli	r3,r3,23
   4451c:	4252b03a 	or	r9,r8,r9
   44520:	600a927a 	slli	r5,r12,9
   44524:	4810c03a 	cmpne	r8,r9,zero
   44528:	2462b03a 	or	r17,r4,r17
   4452c:	40c6b03a 	or	r3,r8,r3
   44530:	8900402c 	andhi	r4,r17,256
   44534:	1950b03a 	or	r8,r3,r5
   44538:	20000726 	beq	r4,zero,44558 <__muldf3+0x4dc>
   4453c:	4006d07a 	srli	r3,r8,1
   44540:	880497fa 	slli	r2,r17,31
   44544:	4200004c 	andi	r8,r8,1
   44548:	8822d07a 	srli	r17,r17,1
   4454c:	1a10b03a 	or	r8,r3,r8
   44550:	1210b03a 	or	r8,r2,r8
   44554:	5805883a 	mov	r2,r11
   44558:	1140ffc4 	addi	r5,r2,1023
   4455c:	0140440e 	bge	zero,r5,44670 <__muldf3+0x5f4>
   44560:	40c001cc 	andi	r3,r8,7
   44564:	18000726 	beq	r3,zero,44584 <__muldf3+0x508>
   44568:	40c003cc 	andi	r3,r8,15
   4456c:	01000104 	movi	r4,4
   44570:	19000426 	beq	r3,r4,44584 <__muldf3+0x508>
   44574:	4107883a 	add	r3,r8,r4
   44578:	1a11803a 	cmpltu	r8,r3,r8
   4457c:	8a23883a 	add	r17,r17,r8
   44580:	1811883a 	mov	r8,r3
   44584:	88c0402c 	andhi	r3,r17,256
   44588:	18000426 	beq	r3,zero,4459c <__muldf3+0x520>
   4458c:	11410004 	addi	r5,r2,1024
   44590:	00bfc034 	movhi	r2,65280
   44594:	10bfffc4 	addi	r2,r2,-1
   44598:	88a2703a 	and	r17,r17,r2
   4459c:	0081ff84 	movi	r2,2046
   445a0:	117f6416 	blt	r2,r5,44334 <__alt_data_end+0xfffc5b34>
   445a4:	8828977a 	slli	r20,r17,29
   445a8:	4010d0fa 	srli	r8,r8,3
   445ac:	8822927a 	slli	r17,r17,9
   445b0:	2881ffcc 	andi	r2,r5,2047
   445b4:	a228b03a 	or	r20,r20,r8
   445b8:	880ad33a 	srli	r5,r17,12
   445bc:	b02b883a 	mov	r21,r22
   445c0:	003f0d06 	br	441f8 <__alt_data_end+0xfffc59f8>
   445c4:	8080022c 	andhi	r2,r16,8
   445c8:	10000926 	beq	r2,zero,445f0 <__muldf3+0x574>
   445cc:	8880022c 	andhi	r2,r17,8
   445d0:	1000071e 	bne	r2,zero,445f0 <__muldf3+0x574>
   445d4:	00800434 	movhi	r2,16
   445d8:	89400234 	orhi	r5,r17,8
   445dc:	10bfffc4 	addi	r2,r2,-1
   445e0:	b82b883a 	mov	r21,r23
   445e4:	288a703a 	and	r5,r5,r2
   445e8:	4029883a 	mov	r20,r8
   445ec:	003f6806 	br	44390 <__alt_data_end+0xfffc5b90>
   445f0:	00800434 	movhi	r2,16
   445f4:	81400234 	orhi	r5,r16,8
   445f8:	10bfffc4 	addi	r2,r2,-1
   445fc:	288a703a 	and	r5,r5,r2
   44600:	003f6306 	br	44390 <__alt_data_end+0xfffc5b90>
   44604:	147ff604 	addi	r17,r2,-40
   44608:	3462983a 	sll	r17,r6,r17
   4460c:	0011883a 	mov	r8,zero
   44610:	003f4406 	br	44324 <__alt_data_end+0xfffc5b24>
   44614:	3009883a 	mov	r4,r6
   44618:	d9800215 	stw	r6,8(sp)
   4461c:	da400115 	stw	r9,4(sp)
   44620:	da800015 	stw	r10,0(sp)
   44624:	00453a40 	call	453a4 <__clzsi2>
   44628:	10800804 	addi	r2,r2,32
   4462c:	da800017 	ldw	r10,0(sp)
   44630:	da400117 	ldw	r9,4(sp)
   44634:	d9800217 	ldw	r6,8(sp)
   44638:	003f3006 	br	442fc <__alt_data_end+0xfffc5afc>
   4463c:	143ff604 	addi	r16,r2,-40
   44640:	9c20983a 	sll	r16,r19,r16
   44644:	0029883a 	mov	r20,zero
   44648:	003f1606 	br	442a4 <__alt_data_end+0xfffc5aa4>
   4464c:	d9800215 	stw	r6,8(sp)
   44650:	d9c00015 	stw	r7,0(sp)
   44654:	da400115 	stw	r9,4(sp)
   44658:	00453a40 	call	453a4 <__clzsi2>
   4465c:	10800804 	addi	r2,r2,32
   44660:	da400117 	ldw	r9,4(sp)
   44664:	d9c00017 	ldw	r7,0(sp)
   44668:	d9800217 	ldw	r6,8(sp)
   4466c:	003f0306 	br	4427c <__alt_data_end+0xfffc5a7c>
   44670:	00c00044 	movi	r3,1
   44674:	1947c83a 	sub	r3,r3,r5
   44678:	00800e04 	movi	r2,56
   4467c:	10feda16 	blt	r2,r3,441e8 <__alt_data_end+0xfffc59e8>
   44680:	008007c4 	movi	r2,31
   44684:	10c01b16 	blt	r2,r3,446f4 <__muldf3+0x678>
   44688:	00800804 	movi	r2,32
   4468c:	10c5c83a 	sub	r2,r2,r3
   44690:	888a983a 	sll	r5,r17,r2
   44694:	40c8d83a 	srl	r4,r8,r3
   44698:	4084983a 	sll	r2,r8,r2
   4469c:	88e2d83a 	srl	r17,r17,r3
   446a0:	2906b03a 	or	r3,r5,r4
   446a4:	1004c03a 	cmpne	r2,r2,zero
   446a8:	1886b03a 	or	r3,r3,r2
   446ac:	188001cc 	andi	r2,r3,7
   446b0:	10000726 	beq	r2,zero,446d0 <__muldf3+0x654>
   446b4:	188003cc 	andi	r2,r3,15
   446b8:	01000104 	movi	r4,4
   446bc:	11000426 	beq	r2,r4,446d0 <__muldf3+0x654>
   446c0:	1805883a 	mov	r2,r3
   446c4:	10c00104 	addi	r3,r2,4
   446c8:	1885803a 	cmpltu	r2,r3,r2
   446cc:	88a3883a 	add	r17,r17,r2
   446d0:	8880202c 	andhi	r2,r17,128
   446d4:	10001c26 	beq	r2,zero,44748 <__muldf3+0x6cc>
   446d8:	b02b883a 	mov	r21,r22
   446dc:	00800044 	movi	r2,1
   446e0:	000b883a 	mov	r5,zero
   446e4:	0029883a 	mov	r20,zero
   446e8:	003ec306 	br	441f8 <__alt_data_end+0xfffc59f8>
   446ec:	5805883a 	mov	r2,r11
   446f0:	003f9906 	br	44558 <__alt_data_end+0xfffc5d58>
   446f4:	00bff844 	movi	r2,-31
   446f8:	1145c83a 	sub	r2,r2,r5
   446fc:	8888d83a 	srl	r4,r17,r2
   44700:	00800804 	movi	r2,32
   44704:	18801a26 	beq	r3,r2,44770 <__muldf3+0x6f4>
   44708:	00801004 	movi	r2,64
   4470c:	10c5c83a 	sub	r2,r2,r3
   44710:	8884983a 	sll	r2,r17,r2
   44714:	1204b03a 	or	r2,r2,r8
   44718:	1004c03a 	cmpne	r2,r2,zero
   4471c:	2084b03a 	or	r2,r4,r2
   44720:	144001cc 	andi	r17,r2,7
   44724:	88000d1e 	bne	r17,zero,4475c <__muldf3+0x6e0>
   44728:	000b883a 	mov	r5,zero
   4472c:	1028d0fa 	srli	r20,r2,3
   44730:	b02b883a 	mov	r21,r22
   44734:	0005883a 	mov	r2,zero
   44738:	a468b03a 	or	r20,r20,r17
   4473c:	003eae06 	br	441f8 <__alt_data_end+0xfffc59f8>
   44740:	1007883a 	mov	r3,r2
   44744:	0023883a 	mov	r17,zero
   44748:	880a927a 	slli	r5,r17,9
   4474c:	1805883a 	mov	r2,r3
   44750:	8822977a 	slli	r17,r17,29
   44754:	280ad33a 	srli	r5,r5,12
   44758:	003ff406 	br	4472c <__alt_data_end+0xfffc5f2c>
   4475c:	10c003cc 	andi	r3,r2,15
   44760:	01000104 	movi	r4,4
   44764:	193ff626 	beq	r3,r4,44740 <__alt_data_end+0xfffc5f40>
   44768:	0023883a 	mov	r17,zero
   4476c:	003fd506 	br	446c4 <__alt_data_end+0xfffc5ec4>
   44770:	0005883a 	mov	r2,zero
   44774:	003fe706 	br	44714 <__alt_data_end+0xfffc5f14>
   44778:	00800434 	movhi	r2,16
   4477c:	89400234 	orhi	r5,r17,8
   44780:	10bfffc4 	addi	r2,r2,-1
   44784:	b02b883a 	mov	r21,r22
   44788:	288a703a 	and	r5,r5,r2
   4478c:	4029883a 	mov	r20,r8
   44790:	003eff06 	br	44390 <__alt_data_end+0xfffc5b90>

00044794 <__subdf3>:
   44794:	02000434 	movhi	r8,16
   44798:	423fffc4 	addi	r8,r8,-1
   4479c:	defffb04 	addi	sp,sp,-20
   447a0:	2a14703a 	and	r10,r5,r8
   447a4:	3812d53a 	srli	r9,r7,20
   447a8:	3a10703a 	and	r8,r7,r8
   447ac:	2006d77a 	srli	r3,r4,29
   447b0:	3004d77a 	srli	r2,r6,29
   447b4:	dc000015 	stw	r16,0(sp)
   447b8:	501490fa 	slli	r10,r10,3
   447bc:	2820d53a 	srli	r16,r5,20
   447c0:	401090fa 	slli	r8,r8,3
   447c4:	dc800215 	stw	r18,8(sp)
   447c8:	dc400115 	stw	r17,4(sp)
   447cc:	dfc00415 	stw	ra,16(sp)
   447d0:	202290fa 	slli	r17,r4,3
   447d4:	dcc00315 	stw	r19,12(sp)
   447d8:	4a41ffcc 	andi	r9,r9,2047
   447dc:	0101ffc4 	movi	r4,2047
   447e0:	2824d7fa 	srli	r18,r5,31
   447e4:	8401ffcc 	andi	r16,r16,2047
   447e8:	50c6b03a 	or	r3,r10,r3
   447ec:	380ed7fa 	srli	r7,r7,31
   447f0:	408ab03a 	or	r5,r8,r2
   447f4:	300c90fa 	slli	r6,r6,3
   447f8:	49009626 	beq	r9,r4,44a54 <__subdf3+0x2c0>
   447fc:	39c0005c 	xori	r7,r7,1
   44800:	8245c83a 	sub	r2,r16,r9
   44804:	3c807426 	beq	r7,r18,449d8 <__subdf3+0x244>
   44808:	0080af0e 	bge	zero,r2,44ac8 <__subdf3+0x334>
   4480c:	48002a1e 	bne	r9,zero,448b8 <__subdf3+0x124>
   44810:	2988b03a 	or	r4,r5,r6
   44814:	20009a1e 	bne	r4,zero,44a80 <__subdf3+0x2ec>
   44818:	888001cc 	andi	r2,r17,7
   4481c:	10000726 	beq	r2,zero,4483c <__subdf3+0xa8>
   44820:	888003cc 	andi	r2,r17,15
   44824:	01000104 	movi	r4,4
   44828:	11000426 	beq	r2,r4,4483c <__subdf3+0xa8>
   4482c:	890b883a 	add	r5,r17,r4
   44830:	2c63803a 	cmpltu	r17,r5,r17
   44834:	1c47883a 	add	r3,r3,r17
   44838:	2823883a 	mov	r17,r5
   4483c:	1880202c 	andhi	r2,r3,128
   44840:	10005926 	beq	r2,zero,449a8 <__subdf3+0x214>
   44844:	84000044 	addi	r16,r16,1
   44848:	0081ffc4 	movi	r2,2047
   4484c:	8080be26 	beq	r16,r2,44b48 <__subdf3+0x3b4>
   44850:	017fe034 	movhi	r5,65408
   44854:	297fffc4 	addi	r5,r5,-1
   44858:	1946703a 	and	r3,r3,r5
   4485c:	1804977a 	slli	r2,r3,29
   44860:	1806927a 	slli	r3,r3,9
   44864:	8822d0fa 	srli	r17,r17,3
   44868:	8401ffcc 	andi	r16,r16,2047
   4486c:	180ad33a 	srli	r5,r3,12
   44870:	9100004c 	andi	r4,r18,1
   44874:	1444b03a 	or	r2,r2,r17
   44878:	80c1ffcc 	andi	r3,r16,2047
   4487c:	1820953a 	slli	r16,r3,20
   44880:	20c03fcc 	andi	r3,r4,255
   44884:	180897fa 	slli	r4,r3,31
   44888:	00c00434 	movhi	r3,16
   4488c:	18ffffc4 	addi	r3,r3,-1
   44890:	28c6703a 	and	r3,r5,r3
   44894:	1c06b03a 	or	r3,r3,r16
   44898:	1906b03a 	or	r3,r3,r4
   4489c:	dfc00417 	ldw	ra,16(sp)
   448a0:	dcc00317 	ldw	r19,12(sp)
   448a4:	dc800217 	ldw	r18,8(sp)
   448a8:	dc400117 	ldw	r17,4(sp)
   448ac:	dc000017 	ldw	r16,0(sp)
   448b0:	dec00504 	addi	sp,sp,20
   448b4:	f800283a 	ret
   448b8:	0101ffc4 	movi	r4,2047
   448bc:	813fd626 	beq	r16,r4,44818 <__alt_data_end+0xfffc6018>
   448c0:	29402034 	orhi	r5,r5,128
   448c4:	01000e04 	movi	r4,56
   448c8:	2080a316 	blt	r4,r2,44b58 <__subdf3+0x3c4>
   448cc:	010007c4 	movi	r4,31
   448d0:	2080c616 	blt	r4,r2,44bec <__subdf3+0x458>
   448d4:	01000804 	movi	r4,32
   448d8:	2089c83a 	sub	r4,r4,r2
   448dc:	2910983a 	sll	r8,r5,r4
   448e0:	308ed83a 	srl	r7,r6,r2
   448e4:	3108983a 	sll	r4,r6,r4
   448e8:	2884d83a 	srl	r2,r5,r2
   448ec:	41ccb03a 	or	r6,r8,r7
   448f0:	2008c03a 	cmpne	r4,r4,zero
   448f4:	310cb03a 	or	r6,r6,r4
   448f8:	898dc83a 	sub	r6,r17,r6
   448fc:	89a3803a 	cmpltu	r17,r17,r6
   44900:	1887c83a 	sub	r3,r3,r2
   44904:	1c47c83a 	sub	r3,r3,r17
   44908:	3023883a 	mov	r17,r6
   4490c:	1880202c 	andhi	r2,r3,128
   44910:	10002326 	beq	r2,zero,449a0 <__subdf3+0x20c>
   44914:	04c02034 	movhi	r19,128
   44918:	9cffffc4 	addi	r19,r19,-1
   4491c:	1ce6703a 	and	r19,r3,r19
   44920:	98007a26 	beq	r19,zero,44b0c <__subdf3+0x378>
   44924:	9809883a 	mov	r4,r19
   44928:	00453a40 	call	453a4 <__clzsi2>
   4492c:	113ffe04 	addi	r4,r2,-8
   44930:	00c007c4 	movi	r3,31
   44934:	19007b16 	blt	r3,r4,44b24 <__subdf3+0x390>
   44938:	00800804 	movi	r2,32
   4493c:	1105c83a 	sub	r2,r2,r4
   44940:	8884d83a 	srl	r2,r17,r2
   44944:	9906983a 	sll	r3,r19,r4
   44948:	8922983a 	sll	r17,r17,r4
   4494c:	10c4b03a 	or	r2,r2,r3
   44950:	24007816 	blt	r4,r16,44b34 <__subdf3+0x3a0>
   44954:	2421c83a 	sub	r16,r4,r16
   44958:	80c00044 	addi	r3,r16,1
   4495c:	010007c4 	movi	r4,31
   44960:	20c09516 	blt	r4,r3,44bb8 <__subdf3+0x424>
   44964:	01400804 	movi	r5,32
   44968:	28cbc83a 	sub	r5,r5,r3
   4496c:	88c8d83a 	srl	r4,r17,r3
   44970:	8962983a 	sll	r17,r17,r5
   44974:	114a983a 	sll	r5,r2,r5
   44978:	10c6d83a 	srl	r3,r2,r3
   4497c:	8804c03a 	cmpne	r2,r17,zero
   44980:	290ab03a 	or	r5,r5,r4
   44984:	28a2b03a 	or	r17,r5,r2
   44988:	0021883a 	mov	r16,zero
   4498c:	003fa206 	br	44818 <__alt_data_end+0xfffc6018>
   44990:	2090b03a 	or	r8,r4,r2
   44994:	40018e26 	beq	r8,zero,44fd0 <__subdf3+0x83c>
   44998:	1007883a 	mov	r3,r2
   4499c:	2023883a 	mov	r17,r4
   449a0:	888001cc 	andi	r2,r17,7
   449a4:	103f9e1e 	bne	r2,zero,44820 <__alt_data_end+0xfffc6020>
   449a8:	1804977a 	slli	r2,r3,29
   449ac:	8822d0fa 	srli	r17,r17,3
   449b0:	1810d0fa 	srli	r8,r3,3
   449b4:	9100004c 	andi	r4,r18,1
   449b8:	1444b03a 	or	r2,r2,r17
   449bc:	00c1ffc4 	movi	r3,2047
   449c0:	80c02826 	beq	r16,r3,44a64 <__subdf3+0x2d0>
   449c4:	01400434 	movhi	r5,16
   449c8:	297fffc4 	addi	r5,r5,-1
   449cc:	80e0703a 	and	r16,r16,r3
   449d0:	414a703a 	and	r5,r8,r5
   449d4:	003fa806 	br	44878 <__alt_data_end+0xfffc6078>
   449d8:	0080630e 	bge	zero,r2,44b68 <__subdf3+0x3d4>
   449dc:	48003026 	beq	r9,zero,44aa0 <__subdf3+0x30c>
   449e0:	0101ffc4 	movi	r4,2047
   449e4:	813f8c26 	beq	r16,r4,44818 <__alt_data_end+0xfffc6018>
   449e8:	29402034 	orhi	r5,r5,128
   449ec:	01000e04 	movi	r4,56
   449f0:	2080a90e 	bge	r4,r2,44c98 <__subdf3+0x504>
   449f4:	298cb03a 	or	r6,r5,r6
   449f8:	3012c03a 	cmpne	r9,r6,zero
   449fc:	0005883a 	mov	r2,zero
   44a00:	4c53883a 	add	r9,r9,r17
   44a04:	4c63803a 	cmpltu	r17,r9,r17
   44a08:	10c7883a 	add	r3,r2,r3
   44a0c:	88c7883a 	add	r3,r17,r3
   44a10:	4823883a 	mov	r17,r9
   44a14:	1880202c 	andhi	r2,r3,128
   44a18:	1000d026 	beq	r2,zero,44d5c <__subdf3+0x5c8>
   44a1c:	84000044 	addi	r16,r16,1
   44a20:	0081ffc4 	movi	r2,2047
   44a24:	8080fe26 	beq	r16,r2,44e20 <__subdf3+0x68c>
   44a28:	00bfe034 	movhi	r2,65408
   44a2c:	10bfffc4 	addi	r2,r2,-1
   44a30:	1886703a 	and	r3,r3,r2
   44a34:	880ad07a 	srli	r5,r17,1
   44a38:	180497fa 	slli	r2,r3,31
   44a3c:	8900004c 	andi	r4,r17,1
   44a40:	2922b03a 	or	r17,r5,r4
   44a44:	1806d07a 	srli	r3,r3,1
   44a48:	1462b03a 	or	r17,r2,r17
   44a4c:	3825883a 	mov	r18,r7
   44a50:	003f7106 	br	44818 <__alt_data_end+0xfffc6018>
   44a54:	2984b03a 	or	r2,r5,r6
   44a58:	103f6826 	beq	r2,zero,447fc <__alt_data_end+0xfffc5ffc>
   44a5c:	39c03fcc 	andi	r7,r7,255
   44a60:	003f6706 	br	44800 <__alt_data_end+0xfffc6000>
   44a64:	4086b03a 	or	r3,r8,r2
   44a68:	18015226 	beq	r3,zero,44fb4 <__subdf3+0x820>
   44a6c:	00c00434 	movhi	r3,16
   44a70:	41400234 	orhi	r5,r8,8
   44a74:	18ffffc4 	addi	r3,r3,-1
   44a78:	28ca703a 	and	r5,r5,r3
   44a7c:	003f7e06 	br	44878 <__alt_data_end+0xfffc6078>
   44a80:	10bfffc4 	addi	r2,r2,-1
   44a84:	1000491e 	bne	r2,zero,44bac <__subdf3+0x418>
   44a88:	898fc83a 	sub	r7,r17,r6
   44a8c:	89e3803a 	cmpltu	r17,r17,r7
   44a90:	1947c83a 	sub	r3,r3,r5
   44a94:	1c47c83a 	sub	r3,r3,r17
   44a98:	3823883a 	mov	r17,r7
   44a9c:	003f9b06 	br	4490c <__alt_data_end+0xfffc610c>
   44aa0:	2988b03a 	or	r4,r5,r6
   44aa4:	203f5c26 	beq	r4,zero,44818 <__alt_data_end+0xfffc6018>
   44aa8:	10bfffc4 	addi	r2,r2,-1
   44aac:	1000931e 	bne	r2,zero,44cfc <__subdf3+0x568>
   44ab0:	898d883a 	add	r6,r17,r6
   44ab4:	3463803a 	cmpltu	r17,r6,r17
   44ab8:	1947883a 	add	r3,r3,r5
   44abc:	88c7883a 	add	r3,r17,r3
   44ac0:	3023883a 	mov	r17,r6
   44ac4:	003fd306 	br	44a14 <__alt_data_end+0xfffc6214>
   44ac8:	1000541e 	bne	r2,zero,44c1c <__subdf3+0x488>
   44acc:	80800044 	addi	r2,r16,1
   44ad0:	1081ffcc 	andi	r2,r2,2047
   44ad4:	01000044 	movi	r4,1
   44ad8:	2080a20e 	bge	r4,r2,44d64 <__subdf3+0x5d0>
   44adc:	8989c83a 	sub	r4,r17,r6
   44ae0:	8905803a 	cmpltu	r2,r17,r4
   44ae4:	1967c83a 	sub	r19,r3,r5
   44ae8:	98a7c83a 	sub	r19,r19,r2
   44aec:	9880202c 	andhi	r2,r19,128
   44af0:	10006326 	beq	r2,zero,44c80 <__subdf3+0x4ec>
   44af4:	3463c83a 	sub	r17,r6,r17
   44af8:	28c7c83a 	sub	r3,r5,r3
   44afc:	344d803a 	cmpltu	r6,r6,r17
   44b00:	19a7c83a 	sub	r19,r3,r6
   44b04:	3825883a 	mov	r18,r7
   44b08:	983f861e 	bne	r19,zero,44924 <__alt_data_end+0xfffc6124>
   44b0c:	8809883a 	mov	r4,r17
   44b10:	00453a40 	call	453a4 <__clzsi2>
   44b14:	10800804 	addi	r2,r2,32
   44b18:	113ffe04 	addi	r4,r2,-8
   44b1c:	00c007c4 	movi	r3,31
   44b20:	193f850e 	bge	r3,r4,44938 <__alt_data_end+0xfffc6138>
   44b24:	10bff604 	addi	r2,r2,-40
   44b28:	8884983a 	sll	r2,r17,r2
   44b2c:	0023883a 	mov	r17,zero
   44b30:	243f880e 	bge	r4,r16,44954 <__alt_data_end+0xfffc6154>
   44b34:	00ffe034 	movhi	r3,65408
   44b38:	18ffffc4 	addi	r3,r3,-1
   44b3c:	8121c83a 	sub	r16,r16,r4
   44b40:	10c6703a 	and	r3,r2,r3
   44b44:	003f3406 	br	44818 <__alt_data_end+0xfffc6018>
   44b48:	9100004c 	andi	r4,r18,1
   44b4c:	000b883a 	mov	r5,zero
   44b50:	0005883a 	mov	r2,zero
   44b54:	003f4806 	br	44878 <__alt_data_end+0xfffc6078>
   44b58:	298cb03a 	or	r6,r5,r6
   44b5c:	300cc03a 	cmpne	r6,r6,zero
   44b60:	0005883a 	mov	r2,zero
   44b64:	003f6406 	br	448f8 <__alt_data_end+0xfffc60f8>
   44b68:	10009a1e 	bne	r2,zero,44dd4 <__subdf3+0x640>
   44b6c:	82400044 	addi	r9,r16,1
   44b70:	4881ffcc 	andi	r2,r9,2047
   44b74:	02800044 	movi	r10,1
   44b78:	5080670e 	bge	r10,r2,44d18 <__subdf3+0x584>
   44b7c:	0081ffc4 	movi	r2,2047
   44b80:	4880af26 	beq	r9,r2,44e40 <__subdf3+0x6ac>
   44b84:	898d883a 	add	r6,r17,r6
   44b88:	1945883a 	add	r2,r3,r5
   44b8c:	3447803a 	cmpltu	r3,r6,r17
   44b90:	1887883a 	add	r3,r3,r2
   44b94:	182297fa 	slli	r17,r3,31
   44b98:	300cd07a 	srli	r6,r6,1
   44b9c:	1806d07a 	srli	r3,r3,1
   44ba0:	4821883a 	mov	r16,r9
   44ba4:	89a2b03a 	or	r17,r17,r6
   44ba8:	003f1b06 	br	44818 <__alt_data_end+0xfffc6018>
   44bac:	0101ffc4 	movi	r4,2047
   44bb0:	813f441e 	bne	r16,r4,448c4 <__alt_data_end+0xfffc60c4>
   44bb4:	003f1806 	br	44818 <__alt_data_end+0xfffc6018>
   44bb8:	843ff844 	addi	r16,r16,-31
   44bbc:	01400804 	movi	r5,32
   44bc0:	1408d83a 	srl	r4,r2,r16
   44bc4:	19405026 	beq	r3,r5,44d08 <__subdf3+0x574>
   44bc8:	01401004 	movi	r5,64
   44bcc:	28c7c83a 	sub	r3,r5,r3
   44bd0:	10c4983a 	sll	r2,r2,r3
   44bd4:	88a2b03a 	or	r17,r17,r2
   44bd8:	8822c03a 	cmpne	r17,r17,zero
   44bdc:	2462b03a 	or	r17,r4,r17
   44be0:	0007883a 	mov	r3,zero
   44be4:	0021883a 	mov	r16,zero
   44be8:	003f6d06 	br	449a0 <__alt_data_end+0xfffc61a0>
   44bec:	11fff804 	addi	r7,r2,-32
   44bf0:	01000804 	movi	r4,32
   44bf4:	29ced83a 	srl	r7,r5,r7
   44bf8:	11004526 	beq	r2,r4,44d10 <__subdf3+0x57c>
   44bfc:	01001004 	movi	r4,64
   44c00:	2089c83a 	sub	r4,r4,r2
   44c04:	2904983a 	sll	r2,r5,r4
   44c08:	118cb03a 	or	r6,r2,r6
   44c0c:	300cc03a 	cmpne	r6,r6,zero
   44c10:	398cb03a 	or	r6,r7,r6
   44c14:	0005883a 	mov	r2,zero
   44c18:	003f3706 	br	448f8 <__alt_data_end+0xfffc60f8>
   44c1c:	80002a26 	beq	r16,zero,44cc8 <__subdf3+0x534>
   44c20:	0101ffc4 	movi	r4,2047
   44c24:	49006626 	beq	r9,r4,44dc0 <__subdf3+0x62c>
   44c28:	0085c83a 	sub	r2,zero,r2
   44c2c:	18c02034 	orhi	r3,r3,128
   44c30:	01000e04 	movi	r4,56
   44c34:	20807e16 	blt	r4,r2,44e30 <__subdf3+0x69c>
   44c38:	010007c4 	movi	r4,31
   44c3c:	2080e716 	blt	r4,r2,44fdc <__subdf3+0x848>
   44c40:	01000804 	movi	r4,32
   44c44:	2089c83a 	sub	r4,r4,r2
   44c48:	1914983a 	sll	r10,r3,r4
   44c4c:	8890d83a 	srl	r8,r17,r2
   44c50:	8908983a 	sll	r4,r17,r4
   44c54:	1884d83a 	srl	r2,r3,r2
   44c58:	5222b03a 	or	r17,r10,r8
   44c5c:	2006c03a 	cmpne	r3,r4,zero
   44c60:	88e2b03a 	or	r17,r17,r3
   44c64:	3463c83a 	sub	r17,r6,r17
   44c68:	2885c83a 	sub	r2,r5,r2
   44c6c:	344d803a 	cmpltu	r6,r6,r17
   44c70:	1187c83a 	sub	r3,r2,r6
   44c74:	4821883a 	mov	r16,r9
   44c78:	3825883a 	mov	r18,r7
   44c7c:	003f2306 	br	4490c <__alt_data_end+0xfffc610c>
   44c80:	24d0b03a 	or	r8,r4,r19
   44c84:	40001b1e 	bne	r8,zero,44cf4 <__subdf3+0x560>
   44c88:	0005883a 	mov	r2,zero
   44c8c:	0009883a 	mov	r4,zero
   44c90:	0021883a 	mov	r16,zero
   44c94:	003f4906 	br	449bc <__alt_data_end+0xfffc61bc>
   44c98:	010007c4 	movi	r4,31
   44c9c:	20803a16 	blt	r4,r2,44d88 <__subdf3+0x5f4>
   44ca0:	01000804 	movi	r4,32
   44ca4:	2089c83a 	sub	r4,r4,r2
   44ca8:	2912983a 	sll	r9,r5,r4
   44cac:	3090d83a 	srl	r8,r6,r2
   44cb0:	3108983a 	sll	r4,r6,r4
   44cb4:	2884d83a 	srl	r2,r5,r2
   44cb8:	4a12b03a 	or	r9,r9,r8
   44cbc:	2008c03a 	cmpne	r4,r4,zero
   44cc0:	4912b03a 	or	r9,r9,r4
   44cc4:	003f4e06 	br	44a00 <__alt_data_end+0xfffc6200>
   44cc8:	1c48b03a 	or	r4,r3,r17
   44ccc:	20003c26 	beq	r4,zero,44dc0 <__subdf3+0x62c>
   44cd0:	0084303a 	nor	r2,zero,r2
   44cd4:	1000381e 	bne	r2,zero,44db8 <__subdf3+0x624>
   44cd8:	3463c83a 	sub	r17,r6,r17
   44cdc:	28c5c83a 	sub	r2,r5,r3
   44ce0:	344d803a 	cmpltu	r6,r6,r17
   44ce4:	1187c83a 	sub	r3,r2,r6
   44ce8:	4821883a 	mov	r16,r9
   44cec:	3825883a 	mov	r18,r7
   44cf0:	003f0606 	br	4490c <__alt_data_end+0xfffc610c>
   44cf4:	2023883a 	mov	r17,r4
   44cf8:	003f0906 	br	44920 <__alt_data_end+0xfffc6120>
   44cfc:	0101ffc4 	movi	r4,2047
   44d00:	813f3a1e 	bne	r16,r4,449ec <__alt_data_end+0xfffc61ec>
   44d04:	003ec406 	br	44818 <__alt_data_end+0xfffc6018>
   44d08:	0005883a 	mov	r2,zero
   44d0c:	003fb106 	br	44bd4 <__alt_data_end+0xfffc63d4>
   44d10:	0005883a 	mov	r2,zero
   44d14:	003fbc06 	br	44c08 <__alt_data_end+0xfffc6408>
   44d18:	1c44b03a 	or	r2,r3,r17
   44d1c:	80008e1e 	bne	r16,zero,44f58 <__subdf3+0x7c4>
   44d20:	1000c826 	beq	r2,zero,45044 <__subdf3+0x8b0>
   44d24:	2984b03a 	or	r2,r5,r6
   44d28:	103ebb26 	beq	r2,zero,44818 <__alt_data_end+0xfffc6018>
   44d2c:	8989883a 	add	r4,r17,r6
   44d30:	1945883a 	add	r2,r3,r5
   44d34:	2447803a 	cmpltu	r3,r4,r17
   44d38:	1887883a 	add	r3,r3,r2
   44d3c:	1880202c 	andhi	r2,r3,128
   44d40:	2023883a 	mov	r17,r4
   44d44:	103f1626 	beq	r2,zero,449a0 <__alt_data_end+0xfffc61a0>
   44d48:	00bfe034 	movhi	r2,65408
   44d4c:	10bfffc4 	addi	r2,r2,-1
   44d50:	5021883a 	mov	r16,r10
   44d54:	1886703a 	and	r3,r3,r2
   44d58:	003eaf06 	br	44818 <__alt_data_end+0xfffc6018>
   44d5c:	3825883a 	mov	r18,r7
   44d60:	003f0f06 	br	449a0 <__alt_data_end+0xfffc61a0>
   44d64:	1c44b03a 	or	r2,r3,r17
   44d68:	8000251e 	bne	r16,zero,44e00 <__subdf3+0x66c>
   44d6c:	1000661e 	bne	r2,zero,44f08 <__subdf3+0x774>
   44d70:	2990b03a 	or	r8,r5,r6
   44d74:	40009626 	beq	r8,zero,44fd0 <__subdf3+0x83c>
   44d78:	2807883a 	mov	r3,r5
   44d7c:	3023883a 	mov	r17,r6
   44d80:	3825883a 	mov	r18,r7
   44d84:	003ea406 	br	44818 <__alt_data_end+0xfffc6018>
   44d88:	127ff804 	addi	r9,r2,-32
   44d8c:	01000804 	movi	r4,32
   44d90:	2a52d83a 	srl	r9,r5,r9
   44d94:	11008c26 	beq	r2,r4,44fc8 <__subdf3+0x834>
   44d98:	01001004 	movi	r4,64
   44d9c:	2085c83a 	sub	r2,r4,r2
   44da0:	2884983a 	sll	r2,r5,r2
   44da4:	118cb03a 	or	r6,r2,r6
   44da8:	300cc03a 	cmpne	r6,r6,zero
   44dac:	4992b03a 	or	r9,r9,r6
   44db0:	0005883a 	mov	r2,zero
   44db4:	003f1206 	br	44a00 <__alt_data_end+0xfffc6200>
   44db8:	0101ffc4 	movi	r4,2047
   44dbc:	493f9c1e 	bne	r9,r4,44c30 <__alt_data_end+0xfffc6430>
   44dc0:	2807883a 	mov	r3,r5
   44dc4:	3023883a 	mov	r17,r6
   44dc8:	4821883a 	mov	r16,r9
   44dcc:	3825883a 	mov	r18,r7
   44dd0:	003e9106 	br	44818 <__alt_data_end+0xfffc6018>
   44dd4:	80001f1e 	bne	r16,zero,44e54 <__subdf3+0x6c0>
   44dd8:	1c48b03a 	or	r4,r3,r17
   44ddc:	20005a26 	beq	r4,zero,44f48 <__subdf3+0x7b4>
   44de0:	0084303a 	nor	r2,zero,r2
   44de4:	1000561e 	bne	r2,zero,44f40 <__subdf3+0x7ac>
   44de8:	89a3883a 	add	r17,r17,r6
   44dec:	1945883a 	add	r2,r3,r5
   44df0:	898d803a 	cmpltu	r6,r17,r6
   44df4:	3087883a 	add	r3,r6,r2
   44df8:	4821883a 	mov	r16,r9
   44dfc:	003f0506 	br	44a14 <__alt_data_end+0xfffc6214>
   44e00:	10002b1e 	bne	r2,zero,44eb0 <__subdf3+0x71c>
   44e04:	2984b03a 	or	r2,r5,r6
   44e08:	10008026 	beq	r2,zero,4500c <__subdf3+0x878>
   44e0c:	2807883a 	mov	r3,r5
   44e10:	3023883a 	mov	r17,r6
   44e14:	3825883a 	mov	r18,r7
   44e18:	0401ffc4 	movi	r16,2047
   44e1c:	003e7e06 	br	44818 <__alt_data_end+0xfffc6018>
   44e20:	3809883a 	mov	r4,r7
   44e24:	0011883a 	mov	r8,zero
   44e28:	0005883a 	mov	r2,zero
   44e2c:	003ee306 	br	449bc <__alt_data_end+0xfffc61bc>
   44e30:	1c62b03a 	or	r17,r3,r17
   44e34:	8822c03a 	cmpne	r17,r17,zero
   44e38:	0005883a 	mov	r2,zero
   44e3c:	003f8906 	br	44c64 <__alt_data_end+0xfffc6464>
   44e40:	3809883a 	mov	r4,r7
   44e44:	4821883a 	mov	r16,r9
   44e48:	0011883a 	mov	r8,zero
   44e4c:	0005883a 	mov	r2,zero
   44e50:	003eda06 	br	449bc <__alt_data_end+0xfffc61bc>
   44e54:	0101ffc4 	movi	r4,2047
   44e58:	49003b26 	beq	r9,r4,44f48 <__subdf3+0x7b4>
   44e5c:	0085c83a 	sub	r2,zero,r2
   44e60:	18c02034 	orhi	r3,r3,128
   44e64:	01000e04 	movi	r4,56
   44e68:	20806e16 	blt	r4,r2,45024 <__subdf3+0x890>
   44e6c:	010007c4 	movi	r4,31
   44e70:	20807716 	blt	r4,r2,45050 <__subdf3+0x8bc>
   44e74:	01000804 	movi	r4,32
   44e78:	2089c83a 	sub	r4,r4,r2
   44e7c:	1914983a 	sll	r10,r3,r4
   44e80:	8890d83a 	srl	r8,r17,r2
   44e84:	8908983a 	sll	r4,r17,r4
   44e88:	1884d83a 	srl	r2,r3,r2
   44e8c:	5222b03a 	or	r17,r10,r8
   44e90:	2006c03a 	cmpne	r3,r4,zero
   44e94:	88e2b03a 	or	r17,r17,r3
   44e98:	89a3883a 	add	r17,r17,r6
   44e9c:	1145883a 	add	r2,r2,r5
   44ea0:	898d803a 	cmpltu	r6,r17,r6
   44ea4:	3087883a 	add	r3,r6,r2
   44ea8:	4821883a 	mov	r16,r9
   44eac:	003ed906 	br	44a14 <__alt_data_end+0xfffc6214>
   44eb0:	2984b03a 	or	r2,r5,r6
   44eb4:	10004226 	beq	r2,zero,44fc0 <__subdf3+0x82c>
   44eb8:	1808d0fa 	srli	r4,r3,3
   44ebc:	8822d0fa 	srli	r17,r17,3
   44ec0:	1806977a 	slli	r3,r3,29
   44ec4:	2080022c 	andhi	r2,r4,8
   44ec8:	1c62b03a 	or	r17,r3,r17
   44ecc:	10000826 	beq	r2,zero,44ef0 <__subdf3+0x75c>
   44ed0:	2812d0fa 	srli	r9,r5,3
   44ed4:	4880022c 	andhi	r2,r9,8
   44ed8:	1000051e 	bne	r2,zero,44ef0 <__subdf3+0x75c>
   44edc:	300cd0fa 	srli	r6,r6,3
   44ee0:	2804977a 	slli	r2,r5,29
   44ee4:	4809883a 	mov	r4,r9
   44ee8:	3825883a 	mov	r18,r7
   44eec:	11a2b03a 	or	r17,r2,r6
   44ef0:	8806d77a 	srli	r3,r17,29
   44ef4:	200890fa 	slli	r4,r4,3
   44ef8:	882290fa 	slli	r17,r17,3
   44efc:	0401ffc4 	movi	r16,2047
   44f00:	1906b03a 	or	r3,r3,r4
   44f04:	003e4406 	br	44818 <__alt_data_end+0xfffc6018>
   44f08:	2984b03a 	or	r2,r5,r6
   44f0c:	103e4226 	beq	r2,zero,44818 <__alt_data_end+0xfffc6018>
   44f10:	8989c83a 	sub	r4,r17,r6
   44f14:	8911803a 	cmpltu	r8,r17,r4
   44f18:	1945c83a 	sub	r2,r3,r5
   44f1c:	1205c83a 	sub	r2,r2,r8
   44f20:	1200202c 	andhi	r8,r2,128
   44f24:	403e9a26 	beq	r8,zero,44990 <__alt_data_end+0xfffc6190>
   44f28:	3463c83a 	sub	r17,r6,r17
   44f2c:	28c5c83a 	sub	r2,r5,r3
   44f30:	344d803a 	cmpltu	r6,r6,r17
   44f34:	1187c83a 	sub	r3,r2,r6
   44f38:	3825883a 	mov	r18,r7
   44f3c:	003e3606 	br	44818 <__alt_data_end+0xfffc6018>
   44f40:	0101ffc4 	movi	r4,2047
   44f44:	493fc71e 	bne	r9,r4,44e64 <__alt_data_end+0xfffc6664>
   44f48:	2807883a 	mov	r3,r5
   44f4c:	3023883a 	mov	r17,r6
   44f50:	4821883a 	mov	r16,r9
   44f54:	003e3006 	br	44818 <__alt_data_end+0xfffc6018>
   44f58:	10003626 	beq	r2,zero,45034 <__subdf3+0x8a0>
   44f5c:	2984b03a 	or	r2,r5,r6
   44f60:	10001726 	beq	r2,zero,44fc0 <__subdf3+0x82c>
   44f64:	1808d0fa 	srli	r4,r3,3
   44f68:	8822d0fa 	srli	r17,r17,3
   44f6c:	1806977a 	slli	r3,r3,29
   44f70:	2080022c 	andhi	r2,r4,8
   44f74:	1c62b03a 	or	r17,r3,r17
   44f78:	10000726 	beq	r2,zero,44f98 <__subdf3+0x804>
   44f7c:	2812d0fa 	srli	r9,r5,3
   44f80:	4880022c 	andhi	r2,r9,8
   44f84:	1000041e 	bne	r2,zero,44f98 <__subdf3+0x804>
   44f88:	300cd0fa 	srli	r6,r6,3
   44f8c:	2804977a 	slli	r2,r5,29
   44f90:	4809883a 	mov	r4,r9
   44f94:	11a2b03a 	or	r17,r2,r6
   44f98:	8806d77a 	srli	r3,r17,29
   44f9c:	200890fa 	slli	r4,r4,3
   44fa0:	882290fa 	slli	r17,r17,3
   44fa4:	3825883a 	mov	r18,r7
   44fa8:	1906b03a 	or	r3,r3,r4
   44fac:	0401ffc4 	movi	r16,2047
   44fb0:	003e1906 	br	44818 <__alt_data_end+0xfffc6018>
   44fb4:	000b883a 	mov	r5,zero
   44fb8:	0005883a 	mov	r2,zero
   44fbc:	003e2e06 	br	44878 <__alt_data_end+0xfffc6078>
   44fc0:	0401ffc4 	movi	r16,2047
   44fc4:	003e1406 	br	44818 <__alt_data_end+0xfffc6018>
   44fc8:	0005883a 	mov	r2,zero
   44fcc:	003f7506 	br	44da4 <__alt_data_end+0xfffc65a4>
   44fd0:	0005883a 	mov	r2,zero
   44fd4:	0009883a 	mov	r4,zero
   44fd8:	003e7806 	br	449bc <__alt_data_end+0xfffc61bc>
   44fdc:	123ff804 	addi	r8,r2,-32
   44fe0:	01000804 	movi	r4,32
   44fe4:	1a10d83a 	srl	r8,r3,r8
   44fe8:	11002526 	beq	r2,r4,45080 <__subdf3+0x8ec>
   44fec:	01001004 	movi	r4,64
   44ff0:	2085c83a 	sub	r2,r4,r2
   44ff4:	1884983a 	sll	r2,r3,r2
   44ff8:	1444b03a 	or	r2,r2,r17
   44ffc:	1004c03a 	cmpne	r2,r2,zero
   45000:	40a2b03a 	or	r17,r8,r2
   45004:	0005883a 	mov	r2,zero
   45008:	003f1606 	br	44c64 <__alt_data_end+0xfffc6464>
   4500c:	02000434 	movhi	r8,16
   45010:	0009883a 	mov	r4,zero
   45014:	423fffc4 	addi	r8,r8,-1
   45018:	00bfffc4 	movi	r2,-1
   4501c:	0401ffc4 	movi	r16,2047
   45020:	003e6606 	br	449bc <__alt_data_end+0xfffc61bc>
   45024:	1c62b03a 	or	r17,r3,r17
   45028:	8822c03a 	cmpne	r17,r17,zero
   4502c:	0005883a 	mov	r2,zero
   45030:	003f9906 	br	44e98 <__alt_data_end+0xfffc6698>
   45034:	2807883a 	mov	r3,r5
   45038:	3023883a 	mov	r17,r6
   4503c:	0401ffc4 	movi	r16,2047
   45040:	003df506 	br	44818 <__alt_data_end+0xfffc6018>
   45044:	2807883a 	mov	r3,r5
   45048:	3023883a 	mov	r17,r6
   4504c:	003df206 	br	44818 <__alt_data_end+0xfffc6018>
   45050:	123ff804 	addi	r8,r2,-32
   45054:	01000804 	movi	r4,32
   45058:	1a10d83a 	srl	r8,r3,r8
   4505c:	11000a26 	beq	r2,r4,45088 <__subdf3+0x8f4>
   45060:	01001004 	movi	r4,64
   45064:	2085c83a 	sub	r2,r4,r2
   45068:	1884983a 	sll	r2,r3,r2
   4506c:	1444b03a 	or	r2,r2,r17
   45070:	1004c03a 	cmpne	r2,r2,zero
   45074:	40a2b03a 	or	r17,r8,r2
   45078:	0005883a 	mov	r2,zero
   4507c:	003f8606 	br	44e98 <__alt_data_end+0xfffc6698>
   45080:	0005883a 	mov	r2,zero
   45084:	003fdc06 	br	44ff8 <__alt_data_end+0xfffc67f8>
   45088:	0005883a 	mov	r2,zero
   4508c:	003ff706 	br	4506c <__alt_data_end+0xfffc686c>

00045090 <__fixdfsi>:
   45090:	280cd53a 	srli	r6,r5,20
   45094:	00c00434 	movhi	r3,16
   45098:	18ffffc4 	addi	r3,r3,-1
   4509c:	3181ffcc 	andi	r6,r6,2047
   450a0:	01c0ff84 	movi	r7,1022
   450a4:	28c6703a 	and	r3,r5,r3
   450a8:	280ad7fa 	srli	r5,r5,31
   450ac:	3980120e 	bge	r7,r6,450f8 <__fixdfsi+0x68>
   450b0:	00810744 	movi	r2,1053
   450b4:	11800c16 	blt	r2,r6,450e8 <__fixdfsi+0x58>
   450b8:	00810cc4 	movi	r2,1075
   450bc:	1185c83a 	sub	r2,r2,r6
   450c0:	01c007c4 	movi	r7,31
   450c4:	18c00434 	orhi	r3,r3,16
   450c8:	38800d16 	blt	r7,r2,45100 <__fixdfsi+0x70>
   450cc:	31befb44 	addi	r6,r6,-1043
   450d0:	2084d83a 	srl	r2,r4,r2
   450d4:	1986983a 	sll	r3,r3,r6
   450d8:	1884b03a 	or	r2,r3,r2
   450dc:	28000726 	beq	r5,zero,450fc <__fixdfsi+0x6c>
   450e0:	0085c83a 	sub	r2,zero,r2
   450e4:	f800283a 	ret
   450e8:	00a00034 	movhi	r2,32768
   450ec:	10bfffc4 	addi	r2,r2,-1
   450f0:	2885883a 	add	r2,r5,r2
   450f4:	f800283a 	ret
   450f8:	0005883a 	mov	r2,zero
   450fc:	f800283a 	ret
   45100:	008104c4 	movi	r2,1043
   45104:	1185c83a 	sub	r2,r2,r6
   45108:	1884d83a 	srl	r2,r3,r2
   4510c:	003ff306 	br	450dc <__alt_data_end+0xfffc68dc>

00045110 <__floatsidf>:
   45110:	defffd04 	addi	sp,sp,-12
   45114:	dfc00215 	stw	ra,8(sp)
   45118:	dc400115 	stw	r17,4(sp)
   4511c:	dc000015 	stw	r16,0(sp)
   45120:	20002b26 	beq	r4,zero,451d0 <__floatsidf+0xc0>
   45124:	2023883a 	mov	r17,r4
   45128:	2020d7fa 	srli	r16,r4,31
   4512c:	20002d16 	blt	r4,zero,451e4 <__floatsidf+0xd4>
   45130:	8809883a 	mov	r4,r17
   45134:	00453a40 	call	453a4 <__clzsi2>
   45138:	01410784 	movi	r5,1054
   4513c:	288bc83a 	sub	r5,r5,r2
   45140:	01010cc4 	movi	r4,1075
   45144:	2149c83a 	sub	r4,r4,r5
   45148:	00c007c4 	movi	r3,31
   4514c:	1900160e 	bge	r3,r4,451a8 <__floatsidf+0x98>
   45150:	00c104c4 	movi	r3,1043
   45154:	1947c83a 	sub	r3,r3,r5
   45158:	88c6983a 	sll	r3,r17,r3
   4515c:	00800434 	movhi	r2,16
   45160:	10bfffc4 	addi	r2,r2,-1
   45164:	1886703a 	and	r3,r3,r2
   45168:	2941ffcc 	andi	r5,r5,2047
   4516c:	800d883a 	mov	r6,r16
   45170:	0005883a 	mov	r2,zero
   45174:	280a953a 	slli	r5,r5,20
   45178:	31803fcc 	andi	r6,r6,255
   4517c:	01000434 	movhi	r4,16
   45180:	300c97fa 	slli	r6,r6,31
   45184:	213fffc4 	addi	r4,r4,-1
   45188:	1906703a 	and	r3,r3,r4
   4518c:	1946b03a 	or	r3,r3,r5
   45190:	1986b03a 	or	r3,r3,r6
   45194:	dfc00217 	ldw	ra,8(sp)
   45198:	dc400117 	ldw	r17,4(sp)
   4519c:	dc000017 	ldw	r16,0(sp)
   451a0:	dec00304 	addi	sp,sp,12
   451a4:	f800283a 	ret
   451a8:	00c002c4 	movi	r3,11
   451ac:	1887c83a 	sub	r3,r3,r2
   451b0:	88c6d83a 	srl	r3,r17,r3
   451b4:	8904983a 	sll	r2,r17,r4
   451b8:	01000434 	movhi	r4,16
   451bc:	213fffc4 	addi	r4,r4,-1
   451c0:	2941ffcc 	andi	r5,r5,2047
   451c4:	1906703a 	and	r3,r3,r4
   451c8:	800d883a 	mov	r6,r16
   451cc:	003fe906 	br	45174 <__alt_data_end+0xfffc6974>
   451d0:	000d883a 	mov	r6,zero
   451d4:	000b883a 	mov	r5,zero
   451d8:	0007883a 	mov	r3,zero
   451dc:	0005883a 	mov	r2,zero
   451e0:	003fe406 	br	45174 <__alt_data_end+0xfffc6974>
   451e4:	0123c83a 	sub	r17,zero,r4
   451e8:	003fd106 	br	45130 <__alt_data_end+0xfffc6930>

000451ec <__floatunsidf>:
   451ec:	defffe04 	addi	sp,sp,-8
   451f0:	dc000015 	stw	r16,0(sp)
   451f4:	dfc00115 	stw	ra,4(sp)
   451f8:	2021883a 	mov	r16,r4
   451fc:	20002226 	beq	r4,zero,45288 <__floatunsidf+0x9c>
   45200:	00453a40 	call	453a4 <__clzsi2>
   45204:	01010784 	movi	r4,1054
   45208:	2089c83a 	sub	r4,r4,r2
   4520c:	01810cc4 	movi	r6,1075
   45210:	310dc83a 	sub	r6,r6,r4
   45214:	00c007c4 	movi	r3,31
   45218:	1980120e 	bge	r3,r6,45264 <__floatunsidf+0x78>
   4521c:	00c104c4 	movi	r3,1043
   45220:	1907c83a 	sub	r3,r3,r4
   45224:	80ca983a 	sll	r5,r16,r3
   45228:	00800434 	movhi	r2,16
   4522c:	10bfffc4 	addi	r2,r2,-1
   45230:	2101ffcc 	andi	r4,r4,2047
   45234:	0021883a 	mov	r16,zero
   45238:	288a703a 	and	r5,r5,r2
   4523c:	2008953a 	slli	r4,r4,20
   45240:	00c00434 	movhi	r3,16
   45244:	18ffffc4 	addi	r3,r3,-1
   45248:	28c6703a 	and	r3,r5,r3
   4524c:	8005883a 	mov	r2,r16
   45250:	1906b03a 	or	r3,r3,r4
   45254:	dfc00117 	ldw	ra,4(sp)
   45258:	dc000017 	ldw	r16,0(sp)
   4525c:	dec00204 	addi	sp,sp,8
   45260:	f800283a 	ret
   45264:	00c002c4 	movi	r3,11
   45268:	188bc83a 	sub	r5,r3,r2
   4526c:	814ad83a 	srl	r5,r16,r5
   45270:	00c00434 	movhi	r3,16
   45274:	18ffffc4 	addi	r3,r3,-1
   45278:	81a0983a 	sll	r16,r16,r6
   4527c:	2101ffcc 	andi	r4,r4,2047
   45280:	28ca703a 	and	r5,r5,r3
   45284:	003fed06 	br	4523c <__alt_data_end+0xfffc6a3c>
   45288:	0009883a 	mov	r4,zero
   4528c:	000b883a 	mov	r5,zero
   45290:	003fea06 	br	4523c <__alt_data_end+0xfffc6a3c>

00045294 <__extendsfdf2>:
   45294:	200ad5fa 	srli	r5,r4,23
   45298:	defffd04 	addi	sp,sp,-12
   4529c:	dc400115 	stw	r17,4(sp)
   452a0:	29403fcc 	andi	r5,r5,255
   452a4:	29800044 	addi	r6,r5,1
   452a8:	04402034 	movhi	r17,128
   452ac:	dc000015 	stw	r16,0(sp)
   452b0:	8c7fffc4 	addi	r17,r17,-1
   452b4:	dfc00215 	stw	ra,8(sp)
   452b8:	31803fcc 	andi	r6,r6,255
   452bc:	00800044 	movi	r2,1
   452c0:	8922703a 	and	r17,r17,r4
   452c4:	2020d7fa 	srli	r16,r4,31
   452c8:	1180110e 	bge	r2,r6,45310 <__extendsfdf2+0x7c>
   452cc:	880cd0fa 	srli	r6,r17,3
   452d0:	8822977a 	slli	r17,r17,29
   452d4:	2940e004 	addi	r5,r5,896
   452d8:	2941ffcc 	andi	r5,r5,2047
   452dc:	2804953a 	slli	r2,r5,20
   452e0:	01400434 	movhi	r5,16
   452e4:	800697fa 	slli	r3,r16,31
   452e8:	297fffc4 	addi	r5,r5,-1
   452ec:	314a703a 	and	r5,r6,r5
   452f0:	288ab03a 	or	r5,r5,r2
   452f4:	28c6b03a 	or	r3,r5,r3
   452f8:	8805883a 	mov	r2,r17
   452fc:	dfc00217 	ldw	ra,8(sp)
   45300:	dc400117 	ldw	r17,4(sp)
   45304:	dc000017 	ldw	r16,0(sp)
   45308:	dec00304 	addi	sp,sp,12
   4530c:	f800283a 	ret
   45310:	2800111e 	bne	r5,zero,45358 <__extendsfdf2+0xc4>
   45314:	88001c26 	beq	r17,zero,45388 <__extendsfdf2+0xf4>
   45318:	8809883a 	mov	r4,r17
   4531c:	00453a40 	call	453a4 <__clzsi2>
   45320:	00c00284 	movi	r3,10
   45324:	18801b16 	blt	r3,r2,45394 <__extendsfdf2+0x100>
   45328:	018002c4 	movi	r6,11
   4532c:	308dc83a 	sub	r6,r6,r2
   45330:	11000544 	addi	r4,r2,21
   45334:	8986d83a 	srl	r3,r17,r6
   45338:	8922983a 	sll	r17,r17,r4
   4533c:	0180e244 	movi	r6,905
   45340:	01400434 	movhi	r5,16
   45344:	3085c83a 	sub	r2,r6,r2
   45348:	297fffc4 	addi	r5,r5,-1
   4534c:	194c703a 	and	r6,r3,r5
   45350:	1141ffcc 	andi	r5,r2,2047
   45354:	003fe006 	br	452d8 <__alt_data_end+0xfffc6ad8>
   45358:	88000826 	beq	r17,zero,4537c <__extendsfdf2+0xe8>
   4535c:	880cd0fa 	srli	r6,r17,3
   45360:	00800434 	movhi	r2,16
   45364:	10bfffc4 	addi	r2,r2,-1
   45368:	31800234 	orhi	r6,r6,8
   4536c:	8822977a 	slli	r17,r17,29
   45370:	308c703a 	and	r6,r6,r2
   45374:	0141ffc4 	movi	r5,2047
   45378:	003fd706 	br	452d8 <__alt_data_end+0xfffc6ad8>
   4537c:	0141ffc4 	movi	r5,2047
   45380:	000d883a 	mov	r6,zero
   45384:	003fd406 	br	452d8 <__alt_data_end+0xfffc6ad8>
   45388:	000b883a 	mov	r5,zero
   4538c:	000d883a 	mov	r6,zero
   45390:	003fd106 	br	452d8 <__alt_data_end+0xfffc6ad8>
   45394:	11bffd44 	addi	r6,r2,-11
   45398:	8986983a 	sll	r3,r17,r6
   4539c:	0023883a 	mov	r17,zero
   453a0:	003fe606 	br	4533c <__alt_data_end+0xfffc6b3c>

000453a4 <__clzsi2>:
   453a4:	00bfffd4 	movui	r2,65535
   453a8:	11000536 	bltu	r2,r4,453c0 <__clzsi2+0x1c>
   453ac:	00803fc4 	movi	r2,255
   453b0:	11000f36 	bltu	r2,r4,453f0 <__clzsi2+0x4c>
   453b4:	00800804 	movi	r2,32
   453b8:	0007883a 	mov	r3,zero
   453bc:	00000506 	br	453d4 <__clzsi2+0x30>
   453c0:	00804034 	movhi	r2,256
   453c4:	10bfffc4 	addi	r2,r2,-1
   453c8:	11000c2e 	bgeu	r2,r4,453fc <__clzsi2+0x58>
   453cc:	00800204 	movi	r2,8
   453d0:	00c00604 	movi	r3,24
   453d4:	20c8d83a 	srl	r4,r4,r3
   453d8:	00c001b4 	movhi	r3,6
   453dc:	18ec4204 	addi	r3,r3,-20216
   453e0:	1909883a 	add	r4,r3,r4
   453e4:	20c00003 	ldbu	r3,0(r4)
   453e8:	10c5c83a 	sub	r2,r2,r3
   453ec:	f800283a 	ret
   453f0:	00800604 	movi	r2,24
   453f4:	00c00204 	movi	r3,8
   453f8:	003ff606 	br	453d4 <__alt_data_end+0xfffc6bd4>
   453fc:	00800404 	movi	r2,16
   45400:	1007883a 	mov	r3,r2
   45404:	003ff306 	br	453d4 <__alt_data_end+0xfffc6bd4>

00045408 <__fixunsdfsi>:
   45408:	defffd04 	addi	sp,sp,-12
   4540c:	000d883a 	mov	r6,zero
   45410:	01d07834 	movhi	r7,16864
   45414:	dc400115 	stw	r17,4(sp)
   45418:	dc000015 	stw	r16,0(sp)
   4541c:	dfc00215 	stw	ra,8(sp)
   45420:	2023883a 	mov	r17,r4
   45424:	2821883a 	mov	r16,r5
   45428:	0043eac0 	call	43eac <__gedf2>
   4542c:	1000080e 	bge	r2,zero,45450 <__fixunsdfsi+0x48>
   45430:	8809883a 	mov	r4,r17
   45434:	800b883a 	mov	r5,r16
   45438:	00450900 	call	45090 <__fixdfsi>
   4543c:	dfc00217 	ldw	ra,8(sp)
   45440:	dc400117 	ldw	r17,4(sp)
   45444:	dc000017 	ldw	r16,0(sp)
   45448:	dec00304 	addi	sp,sp,12
   4544c:	f800283a 	ret
   45450:	000d883a 	mov	r6,zero
   45454:	01d07834 	movhi	r7,16864
   45458:	8809883a 	mov	r4,r17
   4545c:	800b883a 	mov	r5,r16
   45460:	00447940 	call	44794 <__subdf3>
   45464:	180b883a 	mov	r5,r3
   45468:	1009883a 	mov	r4,r2
   4546c:	00450900 	call	45090 <__fixdfsi>
   45470:	00e00034 	movhi	r3,32768
   45474:	10c5883a 	add	r2,r2,r3
   45478:	003ff006 	br	4543c <__alt_data_end+0xfffc6c3c>

0004547c <__divsi3>:
   4547c:	20001b16 	blt	r4,zero,454ec <__divsi3+0x70>
   45480:	000f883a 	mov	r7,zero
   45484:	28001616 	blt	r5,zero,454e0 <__divsi3+0x64>
   45488:	200d883a 	mov	r6,r4
   4548c:	29001a2e 	bgeu	r5,r4,454f8 <__divsi3+0x7c>
   45490:	00800804 	movi	r2,32
   45494:	00c00044 	movi	r3,1
   45498:	00000106 	br	454a0 <__divsi3+0x24>
   4549c:	10000d26 	beq	r2,zero,454d4 <__divsi3+0x58>
   454a0:	294b883a 	add	r5,r5,r5
   454a4:	10bfffc4 	addi	r2,r2,-1
   454a8:	18c7883a 	add	r3,r3,r3
   454ac:	293ffb36 	bltu	r5,r4,4549c <__alt_data_end+0xfffc6c9c>
   454b0:	0005883a 	mov	r2,zero
   454b4:	18000726 	beq	r3,zero,454d4 <__divsi3+0x58>
   454b8:	0005883a 	mov	r2,zero
   454bc:	31400236 	bltu	r6,r5,454c8 <__divsi3+0x4c>
   454c0:	314dc83a 	sub	r6,r6,r5
   454c4:	10c4b03a 	or	r2,r2,r3
   454c8:	1806d07a 	srli	r3,r3,1
   454cc:	280ad07a 	srli	r5,r5,1
   454d0:	183ffa1e 	bne	r3,zero,454bc <__alt_data_end+0xfffc6cbc>
   454d4:	38000126 	beq	r7,zero,454dc <__divsi3+0x60>
   454d8:	0085c83a 	sub	r2,zero,r2
   454dc:	f800283a 	ret
   454e0:	014bc83a 	sub	r5,zero,r5
   454e4:	39c0005c 	xori	r7,r7,1
   454e8:	003fe706 	br	45488 <__alt_data_end+0xfffc6c88>
   454ec:	0109c83a 	sub	r4,zero,r4
   454f0:	01c00044 	movi	r7,1
   454f4:	003fe306 	br	45484 <__alt_data_end+0xfffc6c84>
   454f8:	00c00044 	movi	r3,1
   454fc:	003fee06 	br	454b8 <__alt_data_end+0xfffc6cb8>

00045500 <__modsi3>:
   45500:	20001716 	blt	r4,zero,45560 <__modsi3+0x60>
   45504:	000f883a 	mov	r7,zero
   45508:	2005883a 	mov	r2,r4
   4550c:	28001216 	blt	r5,zero,45558 <__modsi3+0x58>
   45510:	2900162e 	bgeu	r5,r4,4556c <__modsi3+0x6c>
   45514:	01800804 	movi	r6,32
   45518:	00c00044 	movi	r3,1
   4551c:	00000106 	br	45524 <__modsi3+0x24>
   45520:	30000a26 	beq	r6,zero,4554c <__modsi3+0x4c>
   45524:	294b883a 	add	r5,r5,r5
   45528:	31bfffc4 	addi	r6,r6,-1
   4552c:	18c7883a 	add	r3,r3,r3
   45530:	293ffb36 	bltu	r5,r4,45520 <__alt_data_end+0xfffc6d20>
   45534:	18000526 	beq	r3,zero,4554c <__modsi3+0x4c>
   45538:	1806d07a 	srli	r3,r3,1
   4553c:	11400136 	bltu	r2,r5,45544 <__modsi3+0x44>
   45540:	1145c83a 	sub	r2,r2,r5
   45544:	280ad07a 	srli	r5,r5,1
   45548:	183ffb1e 	bne	r3,zero,45538 <__alt_data_end+0xfffc6d38>
   4554c:	38000126 	beq	r7,zero,45554 <__modsi3+0x54>
   45550:	0085c83a 	sub	r2,zero,r2
   45554:	f800283a 	ret
   45558:	014bc83a 	sub	r5,zero,r5
   4555c:	003fec06 	br	45510 <__alt_data_end+0xfffc6d10>
   45560:	0109c83a 	sub	r4,zero,r4
   45564:	01c00044 	movi	r7,1
   45568:	003fe706 	br	45508 <__alt_data_end+0xfffc6d08>
   4556c:	00c00044 	movi	r3,1
   45570:	003ff106 	br	45538 <__alt_data_end+0xfffc6d38>

00045574 <__udivsi3>:
   45574:	200d883a 	mov	r6,r4
   45578:	2900152e 	bgeu	r5,r4,455d0 <__udivsi3+0x5c>
   4557c:	28001416 	blt	r5,zero,455d0 <__udivsi3+0x5c>
   45580:	00800804 	movi	r2,32
   45584:	00c00044 	movi	r3,1
   45588:	00000206 	br	45594 <__udivsi3+0x20>
   4558c:	10000e26 	beq	r2,zero,455c8 <__udivsi3+0x54>
   45590:	28000516 	blt	r5,zero,455a8 <__udivsi3+0x34>
   45594:	294b883a 	add	r5,r5,r5
   45598:	10bfffc4 	addi	r2,r2,-1
   4559c:	18c7883a 	add	r3,r3,r3
   455a0:	293ffa36 	bltu	r5,r4,4558c <__alt_data_end+0xfffc6d8c>
   455a4:	18000826 	beq	r3,zero,455c8 <__udivsi3+0x54>
   455a8:	0005883a 	mov	r2,zero
   455ac:	31400236 	bltu	r6,r5,455b8 <__udivsi3+0x44>
   455b0:	314dc83a 	sub	r6,r6,r5
   455b4:	10c4b03a 	or	r2,r2,r3
   455b8:	1806d07a 	srli	r3,r3,1
   455bc:	280ad07a 	srli	r5,r5,1
   455c0:	183ffa1e 	bne	r3,zero,455ac <__alt_data_end+0xfffc6dac>
   455c4:	f800283a 	ret
   455c8:	0005883a 	mov	r2,zero
   455cc:	f800283a 	ret
   455d0:	00c00044 	movi	r3,1
   455d4:	003ff406 	br	455a8 <__alt_data_end+0xfffc6da8>

000455d8 <__umodsi3>:
   455d8:	2005883a 	mov	r2,r4
   455dc:	2900122e 	bgeu	r5,r4,45628 <__umodsi3+0x50>
   455e0:	28001116 	blt	r5,zero,45628 <__umodsi3+0x50>
   455e4:	01800804 	movi	r6,32
   455e8:	00c00044 	movi	r3,1
   455ec:	00000206 	br	455f8 <__umodsi3+0x20>
   455f0:	30000c26 	beq	r6,zero,45624 <__umodsi3+0x4c>
   455f4:	28000516 	blt	r5,zero,4560c <__umodsi3+0x34>
   455f8:	294b883a 	add	r5,r5,r5
   455fc:	31bfffc4 	addi	r6,r6,-1
   45600:	18c7883a 	add	r3,r3,r3
   45604:	293ffa36 	bltu	r5,r4,455f0 <__alt_data_end+0xfffc6df0>
   45608:	18000626 	beq	r3,zero,45624 <__umodsi3+0x4c>
   4560c:	1806d07a 	srli	r3,r3,1
   45610:	11400136 	bltu	r2,r5,45618 <__umodsi3+0x40>
   45614:	1145c83a 	sub	r2,r2,r5
   45618:	280ad07a 	srli	r5,r5,1
   4561c:	183ffb1e 	bne	r3,zero,4560c <__alt_data_end+0xfffc6e0c>
   45620:	f800283a 	ret
   45624:	f800283a 	ret
   45628:	00c00044 	movi	r3,1
   4562c:	003ff706 	br	4560c <__alt_data_end+0xfffc6e0c>

00045630 <memcpy>:
   45630:	defffd04 	addi	sp,sp,-12
   45634:	dfc00215 	stw	ra,8(sp)
   45638:	dc400115 	stw	r17,4(sp)
   4563c:	dc000015 	stw	r16,0(sp)
   45640:	00c003c4 	movi	r3,15
   45644:	2005883a 	mov	r2,r4
   45648:	1980452e 	bgeu	r3,r6,45760 <memcpy+0x130>
   4564c:	2906b03a 	or	r3,r5,r4
   45650:	18c000cc 	andi	r3,r3,3
   45654:	1800441e 	bne	r3,zero,45768 <memcpy+0x138>
   45658:	347ffc04 	addi	r17,r6,-16
   4565c:	8822d13a 	srli	r17,r17,4
   45660:	28c00104 	addi	r3,r5,4
   45664:	23400104 	addi	r13,r4,4
   45668:	8820913a 	slli	r16,r17,4
   4566c:	2b000204 	addi	r12,r5,8
   45670:	22c00204 	addi	r11,r4,8
   45674:	84000504 	addi	r16,r16,20
   45678:	2a800304 	addi	r10,r5,12
   4567c:	22400304 	addi	r9,r4,12
   45680:	2c21883a 	add	r16,r5,r16
   45684:	2811883a 	mov	r8,r5
   45688:	200f883a 	mov	r7,r4
   4568c:	41000017 	ldw	r4,0(r8)
   45690:	1fc00017 	ldw	ra,0(r3)
   45694:	63c00017 	ldw	r15,0(r12)
   45698:	39000015 	stw	r4,0(r7)
   4569c:	53800017 	ldw	r14,0(r10)
   456a0:	6fc00015 	stw	ra,0(r13)
   456a4:	5bc00015 	stw	r15,0(r11)
   456a8:	4b800015 	stw	r14,0(r9)
   456ac:	18c00404 	addi	r3,r3,16
   456b0:	39c00404 	addi	r7,r7,16
   456b4:	42000404 	addi	r8,r8,16
   456b8:	6b400404 	addi	r13,r13,16
   456bc:	63000404 	addi	r12,r12,16
   456c0:	5ac00404 	addi	r11,r11,16
   456c4:	52800404 	addi	r10,r10,16
   456c8:	4a400404 	addi	r9,r9,16
   456cc:	1c3fef1e 	bne	r3,r16,4568c <__alt_data_end+0xfffc6e8c>
   456d0:	89c00044 	addi	r7,r17,1
   456d4:	380e913a 	slli	r7,r7,4
   456d8:	310003cc 	andi	r4,r6,15
   456dc:	02c000c4 	movi	r11,3
   456e0:	11c7883a 	add	r3,r2,r7
   456e4:	29cb883a 	add	r5,r5,r7
   456e8:	5900212e 	bgeu	r11,r4,45770 <memcpy+0x140>
   456ec:	1813883a 	mov	r9,r3
   456f0:	2811883a 	mov	r8,r5
   456f4:	200f883a 	mov	r7,r4
   456f8:	42800017 	ldw	r10,0(r8)
   456fc:	4a400104 	addi	r9,r9,4
   45700:	39ffff04 	addi	r7,r7,-4
   45704:	4abfff15 	stw	r10,-4(r9)
   45708:	42000104 	addi	r8,r8,4
   4570c:	59fffa36 	bltu	r11,r7,456f8 <__alt_data_end+0xfffc6ef8>
   45710:	213fff04 	addi	r4,r4,-4
   45714:	2008d0ba 	srli	r4,r4,2
   45718:	318000cc 	andi	r6,r6,3
   4571c:	21000044 	addi	r4,r4,1
   45720:	2109883a 	add	r4,r4,r4
   45724:	2109883a 	add	r4,r4,r4
   45728:	1907883a 	add	r3,r3,r4
   4572c:	290b883a 	add	r5,r5,r4
   45730:	30000626 	beq	r6,zero,4574c <memcpy+0x11c>
   45734:	198d883a 	add	r6,r3,r6
   45738:	29c00003 	ldbu	r7,0(r5)
   4573c:	18c00044 	addi	r3,r3,1
   45740:	29400044 	addi	r5,r5,1
   45744:	19ffffc5 	stb	r7,-1(r3)
   45748:	19bffb1e 	bne	r3,r6,45738 <__alt_data_end+0xfffc6f38>
   4574c:	dfc00217 	ldw	ra,8(sp)
   45750:	dc400117 	ldw	r17,4(sp)
   45754:	dc000017 	ldw	r16,0(sp)
   45758:	dec00304 	addi	sp,sp,12
   4575c:	f800283a 	ret
   45760:	2007883a 	mov	r3,r4
   45764:	003ff206 	br	45730 <__alt_data_end+0xfffc6f30>
   45768:	2007883a 	mov	r3,r4
   4576c:	003ff106 	br	45734 <__alt_data_end+0xfffc6f34>
   45770:	200d883a 	mov	r6,r4
   45774:	003fee06 	br	45730 <__alt_data_end+0xfffc6f30>

00045778 <_printf_r>:
   45778:	defffd04 	addi	sp,sp,-12
   4577c:	2805883a 	mov	r2,r5
   45780:	dfc00015 	stw	ra,0(sp)
   45784:	d9800115 	stw	r6,4(sp)
   45788:	d9c00215 	stw	r7,8(sp)
   4578c:	21400217 	ldw	r5,8(r4)
   45790:	d9c00104 	addi	r7,sp,4
   45794:	100d883a 	mov	r6,r2
   45798:	00459bc0 	call	459bc <___vfprintf_internal_r>
   4579c:	dfc00017 	ldw	ra,0(sp)
   457a0:	dec00304 	addi	sp,sp,12
   457a4:	f800283a 	ret

000457a8 <printf>:
   457a8:	defffc04 	addi	sp,sp,-16
   457ac:	dfc00015 	stw	ra,0(sp)
   457b0:	d9400115 	stw	r5,4(sp)
   457b4:	d9800215 	stw	r6,8(sp)
   457b8:	d9c00315 	stw	r7,12(sp)
   457bc:	008001b4 	movhi	r2,6
   457c0:	10b55004 	addi	r2,r2,-10944
   457c4:	10800017 	ldw	r2,0(r2)
   457c8:	200b883a 	mov	r5,r4
   457cc:	d9800104 	addi	r6,sp,4
   457d0:	11000217 	ldw	r4,8(r2)
   457d4:	0047bb40 	call	47bb4 <__vfprintf_internal>
   457d8:	dfc00017 	ldw	ra,0(sp)
   457dc:	dec00404 	addi	sp,sp,16
   457e0:	f800283a 	ret

000457e4 <_puts_r>:
   457e4:	defff604 	addi	sp,sp,-40
   457e8:	dc000715 	stw	r16,28(sp)
   457ec:	2021883a 	mov	r16,r4
   457f0:	2809883a 	mov	r4,r5
   457f4:	dc400815 	stw	r17,32(sp)
   457f8:	dfc00915 	stw	ra,36(sp)
   457fc:	2823883a 	mov	r17,r5
   45800:	00459240 	call	45924 <strlen>
   45804:	10c00044 	addi	r3,r2,1
   45808:	d8800115 	stw	r2,4(sp)
   4580c:	008001b4 	movhi	r2,6
   45810:	10ac8204 	addi	r2,r2,-19960
   45814:	d8800215 	stw	r2,8(sp)
   45818:	00800044 	movi	r2,1
   4581c:	d8800315 	stw	r2,12(sp)
   45820:	00800084 	movi	r2,2
   45824:	dc400015 	stw	r17,0(sp)
   45828:	d8c00615 	stw	r3,24(sp)
   4582c:	dec00415 	stw	sp,16(sp)
   45830:	d8800515 	stw	r2,20(sp)
   45834:	80000226 	beq	r16,zero,45840 <_puts_r+0x5c>
   45838:	80800e17 	ldw	r2,56(r16)
   4583c:	10001426 	beq	r2,zero,45890 <_puts_r+0xac>
   45840:	81400217 	ldw	r5,8(r16)
   45844:	2880030b 	ldhu	r2,12(r5)
   45848:	10c8000c 	andi	r3,r2,8192
   4584c:	1800061e 	bne	r3,zero,45868 <_puts_r+0x84>
   45850:	29001917 	ldw	r4,100(r5)
   45854:	00f7ffc4 	movi	r3,-8193
   45858:	10880014 	ori	r2,r2,8192
   4585c:	20c6703a 	and	r3,r4,r3
   45860:	2880030d 	sth	r2,12(r5)
   45864:	28c01915 	stw	r3,100(r5)
   45868:	d9800404 	addi	r6,sp,16
   4586c:	8009883a 	mov	r4,r16
   45870:	004bbd00 	call	4bbd0 <__sfvwrite_r>
   45874:	1000091e 	bne	r2,zero,4589c <_puts_r+0xb8>
   45878:	00800284 	movi	r2,10
   4587c:	dfc00917 	ldw	ra,36(sp)
   45880:	dc400817 	ldw	r17,32(sp)
   45884:	dc000717 	ldw	r16,28(sp)
   45888:	dec00a04 	addi	sp,sp,40
   4588c:	f800283a 	ret
   45890:	8009883a 	mov	r4,r16
   45894:	004b4ec0 	call	4b4ec <__sinit>
   45898:	003fe906 	br	45840 <__alt_data_end+0xfffc7040>
   4589c:	00bfffc4 	movi	r2,-1
   458a0:	003ff606 	br	4587c <__alt_data_end+0xfffc707c>

000458a4 <puts>:
   458a4:	008001b4 	movhi	r2,6
   458a8:	10b55004 	addi	r2,r2,-10944
   458ac:	200b883a 	mov	r5,r4
   458b0:	11000017 	ldw	r4,0(r2)
   458b4:	00457e41 	jmpi	457e4 <_puts_r>

000458b8 <scanf>:
   458b8:	defffc04 	addi	sp,sp,-16
   458bc:	dfc00015 	stw	ra,0(sp)
   458c0:	d9400115 	stw	r5,4(sp)
   458c4:	d9800215 	stw	r6,8(sp)
   458c8:	d9c00315 	stw	r7,12(sp)
   458cc:	008001b4 	movhi	r2,6
   458d0:	10b55004 	addi	r2,r2,-10944
   458d4:	200d883a 	mov	r6,r4
   458d8:	11000017 	ldw	r4,0(r2)
   458dc:	d9c00104 	addi	r7,sp,4
   458e0:	21400117 	ldw	r5,4(r4)
   458e4:	00494cc0 	call	494cc <_vfscanf_r>
   458e8:	dfc00017 	ldw	ra,0(sp)
   458ec:	dec00404 	addi	sp,sp,16
   458f0:	f800283a 	ret

000458f4 <_scanf_r>:
   458f4:	defffd04 	addi	sp,sp,-12
   458f8:	2805883a 	mov	r2,r5
   458fc:	dfc00015 	stw	ra,0(sp)
   45900:	d9800115 	stw	r6,4(sp)
   45904:	d9c00215 	stw	r7,8(sp)
   45908:	21400117 	ldw	r5,4(r4)
   4590c:	d9c00104 	addi	r7,sp,4
   45910:	100d883a 	mov	r6,r2
   45914:	00494cc0 	call	494cc <_vfscanf_r>
   45918:	dfc00017 	ldw	ra,0(sp)
   4591c:	dec00304 	addi	sp,sp,12
   45920:	f800283a 	ret

00045924 <strlen>:
   45924:	208000cc 	andi	r2,r4,3
   45928:	10002026 	beq	r2,zero,459ac <strlen+0x88>
   4592c:	20800007 	ldb	r2,0(r4)
   45930:	10002026 	beq	r2,zero,459b4 <strlen+0x90>
   45934:	2005883a 	mov	r2,r4
   45938:	00000206 	br	45944 <strlen+0x20>
   4593c:	10c00007 	ldb	r3,0(r2)
   45940:	18001826 	beq	r3,zero,459a4 <strlen+0x80>
   45944:	10800044 	addi	r2,r2,1
   45948:	10c000cc 	andi	r3,r2,3
   4594c:	183ffb1e 	bne	r3,zero,4593c <__alt_data_end+0xfffc713c>
   45950:	10c00017 	ldw	r3,0(r2)
   45954:	01ffbff4 	movhi	r7,65279
   45958:	39ffbfc4 	addi	r7,r7,-257
   4595c:	00ca303a 	nor	r5,zero,r3
   45960:	01a02074 	movhi	r6,32897
   45964:	19c7883a 	add	r3,r3,r7
   45968:	31a02004 	addi	r6,r6,-32640
   4596c:	1946703a 	and	r3,r3,r5
   45970:	1986703a 	and	r3,r3,r6
   45974:	1800091e 	bne	r3,zero,4599c <strlen+0x78>
   45978:	10800104 	addi	r2,r2,4
   4597c:	10c00017 	ldw	r3,0(r2)
   45980:	19cb883a 	add	r5,r3,r7
   45984:	00c6303a 	nor	r3,zero,r3
   45988:	28c6703a 	and	r3,r5,r3
   4598c:	1986703a 	and	r3,r3,r6
   45990:	183ff926 	beq	r3,zero,45978 <__alt_data_end+0xfffc7178>
   45994:	00000106 	br	4599c <strlen+0x78>
   45998:	10800044 	addi	r2,r2,1
   4599c:	10c00007 	ldb	r3,0(r2)
   459a0:	183ffd1e 	bne	r3,zero,45998 <__alt_data_end+0xfffc7198>
   459a4:	1105c83a 	sub	r2,r2,r4
   459a8:	f800283a 	ret
   459ac:	2005883a 	mov	r2,r4
   459b0:	003fe706 	br	45950 <__alt_data_end+0xfffc7150>
   459b4:	0005883a 	mov	r2,zero
   459b8:	f800283a 	ret

000459bc <___vfprintf_internal_r>:
   459bc:	deffb804 	addi	sp,sp,-288
   459c0:	dfc04715 	stw	ra,284(sp)
   459c4:	ddc04515 	stw	r23,276(sp)
   459c8:	dd404315 	stw	r21,268(sp)
   459cc:	d9002c15 	stw	r4,176(sp)
   459d0:	282f883a 	mov	r23,r5
   459d4:	302b883a 	mov	r21,r6
   459d8:	d9c02d15 	stw	r7,180(sp)
   459dc:	df004615 	stw	fp,280(sp)
   459e0:	dd804415 	stw	r22,272(sp)
   459e4:	dd004215 	stw	r20,264(sp)
   459e8:	dcc04115 	stw	r19,260(sp)
   459ec:	dc804015 	stw	r18,256(sp)
   459f0:	dc403f15 	stw	r17,252(sp)
   459f4:	dc003e15 	stw	r16,248(sp)
   459f8:	004c2f00 	call	4c2f0 <_localeconv_r>
   459fc:	10800017 	ldw	r2,0(r2)
   45a00:	1009883a 	mov	r4,r2
   45a04:	d8803415 	stw	r2,208(sp)
   45a08:	00459240 	call	45924 <strlen>
   45a0c:	d8803715 	stw	r2,220(sp)
   45a10:	d8802c17 	ldw	r2,176(sp)
   45a14:	10000226 	beq	r2,zero,45a20 <___vfprintf_internal_r+0x64>
   45a18:	10800e17 	ldw	r2,56(r2)
   45a1c:	1000f926 	beq	r2,zero,45e04 <___vfprintf_internal_r+0x448>
   45a20:	b880030b 	ldhu	r2,12(r23)
   45a24:	10c8000c 	andi	r3,r2,8192
   45a28:	1800061e 	bne	r3,zero,45a44 <___vfprintf_internal_r+0x88>
   45a2c:	b9001917 	ldw	r4,100(r23)
   45a30:	00f7ffc4 	movi	r3,-8193
   45a34:	10880014 	ori	r2,r2,8192
   45a38:	20c6703a 	and	r3,r4,r3
   45a3c:	b880030d 	sth	r2,12(r23)
   45a40:	b8c01915 	stw	r3,100(r23)
   45a44:	10c0020c 	andi	r3,r2,8
   45a48:	1800c126 	beq	r3,zero,45d50 <___vfprintf_internal_r+0x394>
   45a4c:	b8c00417 	ldw	r3,16(r23)
   45a50:	1800bf26 	beq	r3,zero,45d50 <___vfprintf_internal_r+0x394>
   45a54:	1080068c 	andi	r2,r2,26
   45a58:	00c00284 	movi	r3,10
   45a5c:	10c0c426 	beq	r2,r3,45d70 <___vfprintf_internal_r+0x3b4>
   45a60:	d8c00404 	addi	r3,sp,16
   45a64:	050001b4 	movhi	r20,6
   45a68:	d9001e04 	addi	r4,sp,120
   45a6c:	a52c9384 	addi	r20,r20,-19890
   45a70:	d8c01e15 	stw	r3,120(sp)
   45a74:	d8002015 	stw	zero,128(sp)
   45a78:	d8001f15 	stw	zero,124(sp)
   45a7c:	d8003315 	stw	zero,204(sp)
   45a80:	d8003615 	stw	zero,216(sp)
   45a84:	d8003815 	stw	zero,224(sp)
   45a88:	1811883a 	mov	r8,r3
   45a8c:	d8003915 	stw	zero,228(sp)
   45a90:	d8003a15 	stw	zero,232(sp)
   45a94:	d8002f15 	stw	zero,188(sp)
   45a98:	d9002815 	stw	r4,160(sp)
   45a9c:	a8800007 	ldb	r2,0(r21)
   45aa0:	10027b26 	beq	r2,zero,46490 <___vfprintf_internal_r+0xad4>
   45aa4:	00c00944 	movi	r3,37
   45aa8:	a821883a 	mov	r16,r21
   45aac:	10c0021e 	bne	r2,r3,45ab8 <___vfprintf_internal_r+0xfc>
   45ab0:	00001406 	br	45b04 <___vfprintf_internal_r+0x148>
   45ab4:	10c00326 	beq	r2,r3,45ac4 <___vfprintf_internal_r+0x108>
   45ab8:	84000044 	addi	r16,r16,1
   45abc:	80800007 	ldb	r2,0(r16)
   45ac0:	103ffc1e 	bne	r2,zero,45ab4 <__alt_data_end+0xfffc72b4>
   45ac4:	8563c83a 	sub	r17,r16,r21
   45ac8:	88000e26 	beq	r17,zero,45b04 <___vfprintf_internal_r+0x148>
   45acc:	d8c02017 	ldw	r3,128(sp)
   45ad0:	d8801f17 	ldw	r2,124(sp)
   45ad4:	45400015 	stw	r21,0(r8)
   45ad8:	1c47883a 	add	r3,r3,r17
   45adc:	10800044 	addi	r2,r2,1
   45ae0:	d8c02015 	stw	r3,128(sp)
   45ae4:	44400115 	stw	r17,4(r8)
   45ae8:	d8801f15 	stw	r2,124(sp)
   45aec:	00c001c4 	movi	r3,7
   45af0:	1880a716 	blt	r3,r2,45d90 <___vfprintf_internal_r+0x3d4>
   45af4:	42000204 	addi	r8,r8,8
   45af8:	d9402f17 	ldw	r5,188(sp)
   45afc:	2c4b883a 	add	r5,r5,r17
   45b00:	d9402f15 	stw	r5,188(sp)
   45b04:	80800007 	ldb	r2,0(r16)
   45b08:	1000a826 	beq	r2,zero,45dac <___vfprintf_internal_r+0x3f0>
   45b0c:	84400047 	ldb	r17,1(r16)
   45b10:	00bfffc4 	movi	r2,-1
   45b14:	85400044 	addi	r21,r16,1
   45b18:	d8002785 	stb	zero,158(sp)
   45b1c:	0007883a 	mov	r3,zero
   45b20:	000f883a 	mov	r7,zero
   45b24:	d8802915 	stw	r2,164(sp)
   45b28:	d8003115 	stw	zero,196(sp)
   45b2c:	0025883a 	mov	r18,zero
   45b30:	01401604 	movi	r5,88
   45b34:	01800244 	movi	r6,9
   45b38:	02800a84 	movi	r10,42
   45b3c:	02401b04 	movi	r9,108
   45b40:	ad400044 	addi	r21,r21,1
   45b44:	88bff804 	addi	r2,r17,-32
   45b48:	28830436 	bltu	r5,r2,4675c <___vfprintf_internal_r+0xda0>
   45b4c:	100490ba 	slli	r2,r2,2
   45b50:	01000134 	movhi	r4,4
   45b54:	2116d904 	addi	r4,r4,23396
   45b58:	1105883a 	add	r2,r2,r4
   45b5c:	10800017 	ldw	r2,0(r2)
   45b60:	1000683a 	jmp	r2
   45b64:	0004667c 	xorhi	zero,zero,4505
   45b68:	0004675c 	xori	zero,zero,4509
   45b6c:	0004675c 	xori	zero,zero,4509
   45b70:	0004669c 	xori	zero,zero,4506
   45b74:	0004675c 	xori	zero,zero,4509
   45b78:	0004675c 	xori	zero,zero,4509
   45b7c:	0004675c 	xori	zero,zero,4509
   45b80:	0004675c 	xori	zero,zero,4509
   45b84:	0004675c 	xori	zero,zero,4509
   45b88:	0004675c 	xori	zero,zero,4509
   45b8c:	00045e10 	cmplti	zero,zero,4472
   45b90:	000465b8 	rdprs	zero,zero,4502
   45b94:	0004675c 	xori	zero,zero,4509
   45b98:	00045cd8 	cmpnei	zero,zero,4467
   45b9c:	00045e38 	rdprs	zero,zero,4472
   45ba0:	0004675c 	xori	zero,zero,4509
   45ba4:	00045e78 	rdprs	zero,zero,4473
   45ba8:	00045e84 	movi	zero,4474
   45bac:	00045e84 	movi	zero,4474
   45bb0:	00045e84 	movi	zero,4474
   45bb4:	00045e84 	movi	zero,4474
   45bb8:	00045e84 	movi	zero,4474
   45bbc:	00045e84 	movi	zero,4474
   45bc0:	00045e84 	movi	zero,4474
   45bc4:	00045e84 	movi	zero,4474
   45bc8:	00045e84 	movi	zero,4474
   45bcc:	0004675c 	xori	zero,zero,4509
   45bd0:	0004675c 	xori	zero,zero,4509
   45bd4:	0004675c 	xori	zero,zero,4509
   45bd8:	0004675c 	xori	zero,zero,4509
   45bdc:	0004675c 	xori	zero,zero,4509
   45be0:	0004675c 	xori	zero,zero,4509
   45be4:	0004675c 	xori	zero,zero,4509
   45be8:	0004675c 	xori	zero,zero,4509
   45bec:	0004675c 	xori	zero,zero,4509
   45bf0:	0004675c 	xori	zero,zero,4509
   45bf4:	00045eb8 	rdprs	zero,zero,4474
   45bf8:	00045f74 	movhi	zero,4477
   45bfc:	0004675c 	xori	zero,zero,4509
   45c00:	00045f74 	movhi	zero,4477
   45c04:	0004675c 	xori	zero,zero,4509
   45c08:	0004675c 	xori	zero,zero,4509
   45c0c:	0004675c 	xori	zero,zero,4509
   45c10:	0004675c 	xori	zero,zero,4509
   45c14:	00046014 	movui	zero,4480
   45c18:	0004675c 	xori	zero,zero,4509
   45c1c:	0004675c 	xori	zero,zero,4509
   45c20:	00046020 	cmpeqi	zero,zero,4480
   45c24:	0004675c 	xori	zero,zero,4509
   45c28:	0004675c 	xori	zero,zero,4509
   45c2c:	0004675c 	xori	zero,zero,4509
   45c30:	0004675c 	xori	zero,zero,4509
   45c34:	0004675c 	xori	zero,zero,4509
   45c38:	00046498 	cmpnei	zero,zero,4498
   45c3c:	0004675c 	xori	zero,zero,4509
   45c40:	0004675c 	xori	zero,zero,4509
   45c44:	000464f8 	rdprs	zero,zero,4499
   45c48:	0004675c 	xori	zero,zero,4509
   45c4c:	0004675c 	xori	zero,zero,4509
   45c50:	0004675c 	xori	zero,zero,4509
   45c54:	0004675c 	xori	zero,zero,4509
   45c58:	0004675c 	xori	zero,zero,4509
   45c5c:	0004675c 	xori	zero,zero,4509
   45c60:	0004675c 	xori	zero,zero,4509
   45c64:	0004675c 	xori	zero,zero,4509
   45c68:	0004675c 	xori	zero,zero,4509
   45c6c:	0004675c 	xori	zero,zero,4509
   45c70:	00046708 	cmpgei	zero,zero,4508
   45c74:	000466a8 	cmpgeui	zero,zero,4506
   45c78:	00045f74 	movhi	zero,4477
   45c7c:	00045f74 	movhi	zero,4477
   45c80:	00045f74 	movhi	zero,4477
   45c84:	000466b8 	rdprs	zero,zero,4506
   45c88:	000466a8 	cmpgeui	zero,zero,4506
   45c8c:	0004675c 	xori	zero,zero,4509
   45c90:	0004675c 	xori	zero,zero,4509
   45c94:	000466c4 	movi	zero,4507
   45c98:	0004675c 	xori	zero,zero,4509
   45c9c:	000466d4 	movui	zero,4507
   45ca0:	000465a8 	cmpgeui	zero,zero,4502
   45ca4:	00045ce4 	muli	zero,zero,4467
   45ca8:	000465c8 	cmpgei	zero,zero,4503
   45cac:	0004675c 	xori	zero,zero,4509
   45cb0:	000465d4 	movui	zero,4503
   45cb4:	0004675c 	xori	zero,zero,4509
   45cb8:	00046630 	cmpltui	zero,zero,4504
   45cbc:	0004675c 	xori	zero,zero,4509
   45cc0:	0004675c 	xori	zero,zero,4509
   45cc4:	00046640 	call	4664 <__alt_mem_onchip_memory2-0x3b99c>
   45cc8:	d9003117 	ldw	r4,196(sp)
   45ccc:	d8802d15 	stw	r2,180(sp)
   45cd0:	0109c83a 	sub	r4,zero,r4
   45cd4:	d9003115 	stw	r4,196(sp)
   45cd8:	94800114 	ori	r18,r18,4
   45cdc:	ac400007 	ldb	r17,0(r21)
   45ce0:	003f9706 	br	45b40 <__alt_data_end+0xfffc7340>
   45ce4:	00800c04 	movi	r2,48
   45ce8:	d9002d17 	ldw	r4,180(sp)
   45cec:	d9402917 	ldw	r5,164(sp)
   45cf0:	d8802705 	stb	r2,156(sp)
   45cf4:	00801e04 	movi	r2,120
   45cf8:	d8802745 	stb	r2,157(sp)
   45cfc:	d8002785 	stb	zero,158(sp)
   45d00:	20c00104 	addi	r3,r4,4
   45d04:	24c00017 	ldw	r19,0(r4)
   45d08:	002d883a 	mov	r22,zero
   45d0c:	90800094 	ori	r2,r18,2
   45d10:	28029a16 	blt	r5,zero,4677c <___vfprintf_internal_r+0xdc0>
   45d14:	00bfdfc4 	movi	r2,-129
   45d18:	90a4703a 	and	r18,r18,r2
   45d1c:	d8c02d15 	stw	r3,180(sp)
   45d20:	94800094 	ori	r18,r18,2
   45d24:	9802871e 	bne	r19,zero,46744 <___vfprintf_internal_r+0xd88>
   45d28:	008001b4 	movhi	r2,6
   45d2c:	10ac8c04 	addi	r2,r2,-19920
   45d30:	d8803915 	stw	r2,228(sp)
   45d34:	04401e04 	movi	r17,120
   45d38:	d8802917 	ldw	r2,164(sp)
   45d3c:	0039883a 	mov	fp,zero
   45d40:	1001e926 	beq	r2,zero,464e8 <___vfprintf_internal_r+0xb2c>
   45d44:	0027883a 	mov	r19,zero
   45d48:	002d883a 	mov	r22,zero
   45d4c:	00020506 	br	46564 <___vfprintf_internal_r+0xba8>
   45d50:	d9002c17 	ldw	r4,176(sp)
   45d54:	b80b883a 	mov	r5,r23
   45d58:	00495180 	call	49518 <__swsetup_r>
   45d5c:	1005ac1e 	bne	r2,zero,47410 <___vfprintf_internal_r+0x1a54>
   45d60:	b880030b 	ldhu	r2,12(r23)
   45d64:	00c00284 	movi	r3,10
   45d68:	1080068c 	andi	r2,r2,26
   45d6c:	10ff3c1e 	bne	r2,r3,45a60 <__alt_data_end+0xfffc7260>
   45d70:	b880038f 	ldh	r2,14(r23)
   45d74:	103f3a16 	blt	r2,zero,45a60 <__alt_data_end+0xfffc7260>
   45d78:	d9c02d17 	ldw	r7,180(sp)
   45d7c:	d9002c17 	ldw	r4,176(sp)
   45d80:	a80d883a 	mov	r6,r21
   45d84:	b80b883a 	mov	r5,r23
   45d88:	0047bd00 	call	47bd0 <__sbprintf>
   45d8c:	00001106 	br	45dd4 <___vfprintf_internal_r+0x418>
   45d90:	d9002c17 	ldw	r4,176(sp)
   45d94:	d9801e04 	addi	r6,sp,120
   45d98:	b80b883a 	mov	r5,r23
   45d9c:	005357c0 	call	5357c <__sprint_r>
   45da0:	1000081e 	bne	r2,zero,45dc4 <___vfprintf_internal_r+0x408>
   45da4:	da000404 	addi	r8,sp,16
   45da8:	003f5306 	br	45af8 <__alt_data_end+0xfffc72f8>
   45dac:	d8802017 	ldw	r2,128(sp)
   45db0:	10000426 	beq	r2,zero,45dc4 <___vfprintf_internal_r+0x408>
   45db4:	d9002c17 	ldw	r4,176(sp)
   45db8:	d9801e04 	addi	r6,sp,120
   45dbc:	b80b883a 	mov	r5,r23
   45dc0:	005357c0 	call	5357c <__sprint_r>
   45dc4:	b880030b 	ldhu	r2,12(r23)
   45dc8:	1080100c 	andi	r2,r2,64
   45dcc:	1005901e 	bne	r2,zero,47410 <___vfprintf_internal_r+0x1a54>
   45dd0:	d8802f17 	ldw	r2,188(sp)
   45dd4:	dfc04717 	ldw	ra,284(sp)
   45dd8:	df004617 	ldw	fp,280(sp)
   45ddc:	ddc04517 	ldw	r23,276(sp)
   45de0:	dd804417 	ldw	r22,272(sp)
   45de4:	dd404317 	ldw	r21,268(sp)
   45de8:	dd004217 	ldw	r20,264(sp)
   45dec:	dcc04117 	ldw	r19,260(sp)
   45df0:	dc804017 	ldw	r18,256(sp)
   45df4:	dc403f17 	ldw	r17,252(sp)
   45df8:	dc003e17 	ldw	r16,248(sp)
   45dfc:	dec04804 	addi	sp,sp,288
   45e00:	f800283a 	ret
   45e04:	d9002c17 	ldw	r4,176(sp)
   45e08:	004b4ec0 	call	4b4ec <__sinit>
   45e0c:	003f0406 	br	45a20 <__alt_data_end+0xfffc7220>
   45e10:	d8802d17 	ldw	r2,180(sp)
   45e14:	d9002d17 	ldw	r4,180(sp)
   45e18:	10800017 	ldw	r2,0(r2)
   45e1c:	d8803115 	stw	r2,196(sp)
   45e20:	20800104 	addi	r2,r4,4
   45e24:	d9003117 	ldw	r4,196(sp)
   45e28:	203fa716 	blt	r4,zero,45cc8 <__alt_data_end+0xfffc74c8>
   45e2c:	d8802d15 	stw	r2,180(sp)
   45e30:	ac400007 	ldb	r17,0(r21)
   45e34:	003f4206 	br	45b40 <__alt_data_end+0xfffc7340>
   45e38:	ac400007 	ldb	r17,0(r21)
   45e3c:	aac00044 	addi	r11,r21,1
   45e40:	8a872826 	beq	r17,r10,47ae4 <___vfprintf_internal_r+0x2128>
   45e44:	88bff404 	addi	r2,r17,-48
   45e48:	0009883a 	mov	r4,zero
   45e4c:	30867d36 	bltu	r6,r2,47844 <___vfprintf_internal_r+0x1e88>
   45e50:	5c400007 	ldb	r17,0(r11)
   45e54:	210002a4 	muli	r4,r4,10
   45e58:	5d400044 	addi	r21,r11,1
   45e5c:	a817883a 	mov	r11,r21
   45e60:	2089883a 	add	r4,r4,r2
   45e64:	88bff404 	addi	r2,r17,-48
   45e68:	30bff92e 	bgeu	r6,r2,45e50 <__alt_data_end+0xfffc7650>
   45e6c:	2005c916 	blt	r4,zero,47594 <___vfprintf_internal_r+0x1bd8>
   45e70:	d9002915 	stw	r4,164(sp)
   45e74:	003f3306 	br	45b44 <__alt_data_end+0xfffc7344>
   45e78:	94802014 	ori	r18,r18,128
   45e7c:	ac400007 	ldb	r17,0(r21)
   45e80:	003f2f06 	br	45b40 <__alt_data_end+0xfffc7340>
   45e84:	a809883a 	mov	r4,r21
   45e88:	d8003115 	stw	zero,196(sp)
   45e8c:	88bff404 	addi	r2,r17,-48
   45e90:	0017883a 	mov	r11,zero
   45e94:	24400007 	ldb	r17,0(r4)
   45e98:	5ac002a4 	muli	r11,r11,10
   45e9c:	ad400044 	addi	r21,r21,1
   45ea0:	a809883a 	mov	r4,r21
   45ea4:	12d7883a 	add	r11,r2,r11
   45ea8:	88bff404 	addi	r2,r17,-48
   45eac:	30bff92e 	bgeu	r6,r2,45e94 <__alt_data_end+0xfffc7694>
   45eb0:	dac03115 	stw	r11,196(sp)
   45eb4:	003f2306 	br	45b44 <__alt_data_end+0xfffc7344>
   45eb8:	18c03fcc 	andi	r3,r3,255
   45ebc:	18072b1e 	bne	r3,zero,47b6c <___vfprintf_internal_r+0x21b0>
   45ec0:	94800414 	ori	r18,r18,16
   45ec4:	9080080c 	andi	r2,r18,32
   45ec8:	10037b26 	beq	r2,zero,46cb8 <___vfprintf_internal_r+0x12fc>
   45ecc:	d9402d17 	ldw	r5,180(sp)
   45ed0:	28800117 	ldw	r2,4(r5)
   45ed4:	2cc00017 	ldw	r19,0(r5)
   45ed8:	29400204 	addi	r5,r5,8
   45edc:	d9402d15 	stw	r5,180(sp)
   45ee0:	102d883a 	mov	r22,r2
   45ee4:	10044b16 	blt	r2,zero,47014 <___vfprintf_internal_r+0x1658>
   45ee8:	d9402917 	ldw	r5,164(sp)
   45eec:	df002783 	ldbu	fp,158(sp)
   45ef0:	2803bc16 	blt	r5,zero,46de4 <___vfprintf_internal_r+0x1428>
   45ef4:	00ffdfc4 	movi	r3,-129
   45ef8:	9d84b03a 	or	r2,r19,r22
   45efc:	90e4703a 	and	r18,r18,r3
   45f00:	10017726 	beq	r2,zero,464e0 <___vfprintf_internal_r+0xb24>
   45f04:	b0038326 	beq	r22,zero,46d14 <___vfprintf_internal_r+0x1358>
   45f08:	dc402a15 	stw	r17,168(sp)
   45f0c:	dc001e04 	addi	r16,sp,120
   45f10:	b023883a 	mov	r17,r22
   45f14:	402d883a 	mov	r22,r8
   45f18:	9809883a 	mov	r4,r19
   45f1c:	880b883a 	mov	r5,r17
   45f20:	01800284 	movi	r6,10
   45f24:	000f883a 	mov	r7,zero
   45f28:	00579dc0 	call	579dc <__umoddi3>
   45f2c:	10800c04 	addi	r2,r2,48
   45f30:	843fffc4 	addi	r16,r16,-1
   45f34:	9809883a 	mov	r4,r19
   45f38:	880b883a 	mov	r5,r17
   45f3c:	80800005 	stb	r2,0(r16)
   45f40:	01800284 	movi	r6,10
   45f44:	000f883a 	mov	r7,zero
   45f48:	00574640 	call	57464 <__udivdi3>
   45f4c:	1027883a 	mov	r19,r2
   45f50:	10c4b03a 	or	r2,r2,r3
   45f54:	1823883a 	mov	r17,r3
   45f58:	103fef1e 	bne	r2,zero,45f18 <__alt_data_end+0xfffc7718>
   45f5c:	d8c02817 	ldw	r3,160(sp)
   45f60:	dc402a17 	ldw	r17,168(sp)
   45f64:	b011883a 	mov	r8,r22
   45f68:	1c07c83a 	sub	r3,r3,r16
   45f6c:	d8c02e15 	stw	r3,184(sp)
   45f70:	00005906 	br	460d8 <___vfprintf_internal_r+0x71c>
   45f74:	18c03fcc 	andi	r3,r3,255
   45f78:	1806fa1e 	bne	r3,zero,47b64 <___vfprintf_internal_r+0x21a8>
   45f7c:	9080020c 	andi	r2,r18,8
   45f80:	10048a26 	beq	r2,zero,471ac <___vfprintf_internal_r+0x17f0>
   45f84:	d8c02d17 	ldw	r3,180(sp)
   45f88:	d9002d17 	ldw	r4,180(sp)
   45f8c:	d9402d17 	ldw	r5,180(sp)
   45f90:	18c00017 	ldw	r3,0(r3)
   45f94:	21000117 	ldw	r4,4(r4)
   45f98:	29400204 	addi	r5,r5,8
   45f9c:	d8c03615 	stw	r3,216(sp)
   45fa0:	d9003815 	stw	r4,224(sp)
   45fa4:	d9402d15 	stw	r5,180(sp)
   45fa8:	d9003617 	ldw	r4,216(sp)
   45fac:	d9403817 	ldw	r5,224(sp)
   45fb0:	da003d15 	stw	r8,244(sp)
   45fb4:	04000044 	movi	r16,1
   45fb8:	004e9c40 	call	4e9c4 <__fpclassifyd>
   45fbc:	da003d17 	ldw	r8,244(sp)
   45fc0:	14041f1e 	bne	r2,r16,47040 <___vfprintf_internal_r+0x1684>
   45fc4:	d9003617 	ldw	r4,216(sp)
   45fc8:	d9403817 	ldw	r5,224(sp)
   45fcc:	000d883a 	mov	r6,zero
   45fd0:	000f883a 	mov	r7,zero
   45fd4:	0043f880 	call	43f88 <__ledf2>
   45fd8:	da003d17 	ldw	r8,244(sp)
   45fdc:	1005be16 	blt	r2,zero,476d8 <___vfprintf_internal_r+0x1d1c>
   45fe0:	df002783 	ldbu	fp,158(sp)
   45fe4:	008011c4 	movi	r2,71
   45fe8:	1445330e 	bge	r2,r17,474b8 <___vfprintf_internal_r+0x1afc>
   45fec:	040001b4 	movhi	r16,6
   45ff0:	842c8404 	addi	r16,r16,-19952
   45ff4:	00c000c4 	movi	r3,3
   45ff8:	00bfdfc4 	movi	r2,-129
   45ffc:	d8c02a15 	stw	r3,168(sp)
   46000:	90a4703a 	and	r18,r18,r2
   46004:	d8c02e15 	stw	r3,184(sp)
   46008:	d8002915 	stw	zero,164(sp)
   4600c:	d8003215 	stw	zero,200(sp)
   46010:	00003706 	br	460f0 <___vfprintf_internal_r+0x734>
   46014:	94800214 	ori	r18,r18,8
   46018:	ac400007 	ldb	r17,0(r21)
   4601c:	003ec806 	br	45b40 <__alt_data_end+0xfffc7340>
   46020:	18c03fcc 	andi	r3,r3,255
   46024:	1806db1e 	bne	r3,zero,47b94 <___vfprintf_internal_r+0x21d8>
   46028:	94800414 	ori	r18,r18,16
   4602c:	9080080c 	andi	r2,r18,32
   46030:	1002d826 	beq	r2,zero,46b94 <___vfprintf_internal_r+0x11d8>
   46034:	d9402d17 	ldw	r5,180(sp)
   46038:	d8c02917 	ldw	r3,164(sp)
   4603c:	d8002785 	stb	zero,158(sp)
   46040:	28800204 	addi	r2,r5,8
   46044:	2cc00017 	ldw	r19,0(r5)
   46048:	2d800117 	ldw	r22,4(r5)
   4604c:	18048f16 	blt	r3,zero,4728c <___vfprintf_internal_r+0x18d0>
   46050:	013fdfc4 	movi	r4,-129
   46054:	9d86b03a 	or	r3,r19,r22
   46058:	d8802d15 	stw	r2,180(sp)
   4605c:	9124703a 	and	r18,r18,r4
   46060:	1802d91e 	bne	r3,zero,46bc8 <___vfprintf_internal_r+0x120c>
   46064:	d8c02917 	ldw	r3,164(sp)
   46068:	0039883a 	mov	fp,zero
   4606c:	1805c326 	beq	r3,zero,4777c <___vfprintf_internal_r+0x1dc0>
   46070:	0027883a 	mov	r19,zero
   46074:	002d883a 	mov	r22,zero
   46078:	dc001e04 	addi	r16,sp,120
   4607c:	9806d0fa 	srli	r3,r19,3
   46080:	b008977a 	slli	r4,r22,29
   46084:	b02cd0fa 	srli	r22,r22,3
   46088:	9cc001cc 	andi	r19,r19,7
   4608c:	98800c04 	addi	r2,r19,48
   46090:	843fffc4 	addi	r16,r16,-1
   46094:	20e6b03a 	or	r19,r4,r3
   46098:	80800005 	stb	r2,0(r16)
   4609c:	9d86b03a 	or	r3,r19,r22
   460a0:	183ff61e 	bne	r3,zero,4607c <__alt_data_end+0xfffc787c>
   460a4:	90c0004c 	andi	r3,r18,1
   460a8:	18013b26 	beq	r3,zero,46598 <___vfprintf_internal_r+0xbdc>
   460ac:	10803fcc 	andi	r2,r2,255
   460b0:	1080201c 	xori	r2,r2,128
   460b4:	10bfe004 	addi	r2,r2,-128
   460b8:	00c00c04 	movi	r3,48
   460bc:	10c13626 	beq	r2,r3,46598 <___vfprintf_internal_r+0xbdc>
   460c0:	80ffffc5 	stb	r3,-1(r16)
   460c4:	d8c02817 	ldw	r3,160(sp)
   460c8:	80bfffc4 	addi	r2,r16,-1
   460cc:	1021883a 	mov	r16,r2
   460d0:	1887c83a 	sub	r3,r3,r2
   460d4:	d8c02e15 	stw	r3,184(sp)
   460d8:	d8802e17 	ldw	r2,184(sp)
   460dc:	d9002917 	ldw	r4,164(sp)
   460e0:	1100010e 	bge	r2,r4,460e8 <___vfprintf_internal_r+0x72c>
   460e4:	2005883a 	mov	r2,r4
   460e8:	d8802a15 	stw	r2,168(sp)
   460ec:	d8003215 	stw	zero,200(sp)
   460f0:	e7003fcc 	andi	fp,fp,255
   460f4:	e700201c 	xori	fp,fp,128
   460f8:	e73fe004 	addi	fp,fp,-128
   460fc:	e0000326 	beq	fp,zero,4610c <___vfprintf_internal_r+0x750>
   46100:	d8c02a17 	ldw	r3,168(sp)
   46104:	18c00044 	addi	r3,r3,1
   46108:	d8c02a15 	stw	r3,168(sp)
   4610c:	90c0008c 	andi	r3,r18,2
   46110:	d8c02b15 	stw	r3,172(sp)
   46114:	18000326 	beq	r3,zero,46124 <___vfprintf_internal_r+0x768>
   46118:	d8c02a17 	ldw	r3,168(sp)
   4611c:	18c00084 	addi	r3,r3,2
   46120:	d8c02a15 	stw	r3,168(sp)
   46124:	90c0210c 	andi	r3,r18,132
   46128:	d8c03015 	stw	r3,192(sp)
   4612c:	1801a31e 	bne	r3,zero,467bc <___vfprintf_internal_r+0xe00>
   46130:	d9003117 	ldw	r4,196(sp)
   46134:	d8c02a17 	ldw	r3,168(sp)
   46138:	20e7c83a 	sub	r19,r4,r3
   4613c:	04c19f0e 	bge	zero,r19,467bc <___vfprintf_internal_r+0xe00>
   46140:	02400404 	movi	r9,16
   46144:	d8c02017 	ldw	r3,128(sp)
   46148:	d8801f17 	ldw	r2,124(sp)
   4614c:	4cc50d0e 	bge	r9,r19,47584 <___vfprintf_internal_r+0x1bc8>
   46150:	014001b4 	movhi	r5,6
   46154:	296c9784 	addi	r5,r5,-19874
   46158:	dc403b15 	stw	r17,236(sp)
   4615c:	d9403515 	stw	r5,212(sp)
   46160:	9823883a 	mov	r17,r19
   46164:	482d883a 	mov	r22,r9
   46168:	9027883a 	mov	r19,r18
   4616c:	070001c4 	movi	fp,7
   46170:	8025883a 	mov	r18,r16
   46174:	dc002c17 	ldw	r16,176(sp)
   46178:	00000306 	br	46188 <___vfprintf_internal_r+0x7cc>
   4617c:	8c7ffc04 	addi	r17,r17,-16
   46180:	42000204 	addi	r8,r8,8
   46184:	b440130e 	bge	r22,r17,461d4 <___vfprintf_internal_r+0x818>
   46188:	010001b4 	movhi	r4,6
   4618c:	18c00404 	addi	r3,r3,16
   46190:	10800044 	addi	r2,r2,1
   46194:	212c9784 	addi	r4,r4,-19874
   46198:	41000015 	stw	r4,0(r8)
   4619c:	45800115 	stw	r22,4(r8)
   461a0:	d8c02015 	stw	r3,128(sp)
   461a4:	d8801f15 	stw	r2,124(sp)
   461a8:	e0bff40e 	bge	fp,r2,4617c <__alt_data_end+0xfffc797c>
   461ac:	d9801e04 	addi	r6,sp,120
   461b0:	b80b883a 	mov	r5,r23
   461b4:	8009883a 	mov	r4,r16
   461b8:	005357c0 	call	5357c <__sprint_r>
   461bc:	103f011e 	bne	r2,zero,45dc4 <__alt_data_end+0xfffc75c4>
   461c0:	8c7ffc04 	addi	r17,r17,-16
   461c4:	d8c02017 	ldw	r3,128(sp)
   461c8:	d8801f17 	ldw	r2,124(sp)
   461cc:	da000404 	addi	r8,sp,16
   461d0:	b47fed16 	blt	r22,r17,46188 <__alt_data_end+0xfffc7988>
   461d4:	9021883a 	mov	r16,r18
   461d8:	9825883a 	mov	r18,r19
   461dc:	8827883a 	mov	r19,r17
   461e0:	dc403b17 	ldw	r17,236(sp)
   461e4:	d9403517 	ldw	r5,212(sp)
   461e8:	98c7883a 	add	r3,r19,r3
   461ec:	10800044 	addi	r2,r2,1
   461f0:	41400015 	stw	r5,0(r8)
   461f4:	44c00115 	stw	r19,4(r8)
   461f8:	d8c02015 	stw	r3,128(sp)
   461fc:	d8801f15 	stw	r2,124(sp)
   46200:	010001c4 	movi	r4,7
   46204:	2082a316 	blt	r4,r2,46c94 <___vfprintf_internal_r+0x12d8>
   46208:	df002787 	ldb	fp,158(sp)
   4620c:	42000204 	addi	r8,r8,8
   46210:	e0000c26 	beq	fp,zero,46244 <___vfprintf_internal_r+0x888>
   46214:	d8801f17 	ldw	r2,124(sp)
   46218:	d9002784 	addi	r4,sp,158
   4621c:	18c00044 	addi	r3,r3,1
   46220:	10800044 	addi	r2,r2,1
   46224:	41000015 	stw	r4,0(r8)
   46228:	01000044 	movi	r4,1
   4622c:	41000115 	stw	r4,4(r8)
   46230:	d8c02015 	stw	r3,128(sp)
   46234:	d8801f15 	stw	r2,124(sp)
   46238:	010001c4 	movi	r4,7
   4623c:	20823c16 	blt	r4,r2,46b30 <___vfprintf_internal_r+0x1174>
   46240:	42000204 	addi	r8,r8,8
   46244:	d8802b17 	ldw	r2,172(sp)
   46248:	10000c26 	beq	r2,zero,4627c <___vfprintf_internal_r+0x8c0>
   4624c:	d8801f17 	ldw	r2,124(sp)
   46250:	d9002704 	addi	r4,sp,156
   46254:	18c00084 	addi	r3,r3,2
   46258:	10800044 	addi	r2,r2,1
   4625c:	41000015 	stw	r4,0(r8)
   46260:	01000084 	movi	r4,2
   46264:	41000115 	stw	r4,4(r8)
   46268:	d8c02015 	stw	r3,128(sp)
   4626c:	d8801f15 	stw	r2,124(sp)
   46270:	010001c4 	movi	r4,7
   46274:	20823616 	blt	r4,r2,46b50 <___vfprintf_internal_r+0x1194>
   46278:	42000204 	addi	r8,r8,8
   4627c:	d9003017 	ldw	r4,192(sp)
   46280:	00802004 	movi	r2,128
   46284:	20819926 	beq	r4,r2,468ec <___vfprintf_internal_r+0xf30>
   46288:	d9402917 	ldw	r5,164(sp)
   4628c:	d8802e17 	ldw	r2,184(sp)
   46290:	28adc83a 	sub	r22,r5,r2
   46294:	0580310e 	bge	zero,r22,4635c <___vfprintf_internal_r+0x9a0>
   46298:	07000404 	movi	fp,16
   4629c:	d8801f17 	ldw	r2,124(sp)
   462a0:	e584140e 	bge	fp,r22,472f4 <___vfprintf_internal_r+0x1938>
   462a4:	014001b4 	movhi	r5,6
   462a8:	296c9384 	addi	r5,r5,-19890
   462ac:	dc402915 	stw	r17,164(sp)
   462b0:	d9402b15 	stw	r5,172(sp)
   462b4:	b023883a 	mov	r17,r22
   462b8:	04c001c4 	movi	r19,7
   462bc:	a82d883a 	mov	r22,r21
   462c0:	902b883a 	mov	r21,r18
   462c4:	8025883a 	mov	r18,r16
   462c8:	dc002c17 	ldw	r16,176(sp)
   462cc:	00000306 	br	462dc <___vfprintf_internal_r+0x920>
   462d0:	8c7ffc04 	addi	r17,r17,-16
   462d4:	42000204 	addi	r8,r8,8
   462d8:	e440110e 	bge	fp,r17,46320 <___vfprintf_internal_r+0x964>
   462dc:	18c00404 	addi	r3,r3,16
   462e0:	10800044 	addi	r2,r2,1
   462e4:	45000015 	stw	r20,0(r8)
   462e8:	47000115 	stw	fp,4(r8)
   462ec:	d8c02015 	stw	r3,128(sp)
   462f0:	d8801f15 	stw	r2,124(sp)
   462f4:	98bff60e 	bge	r19,r2,462d0 <__alt_data_end+0xfffc7ad0>
   462f8:	d9801e04 	addi	r6,sp,120
   462fc:	b80b883a 	mov	r5,r23
   46300:	8009883a 	mov	r4,r16
   46304:	005357c0 	call	5357c <__sprint_r>
   46308:	103eae1e 	bne	r2,zero,45dc4 <__alt_data_end+0xfffc75c4>
   4630c:	8c7ffc04 	addi	r17,r17,-16
   46310:	d8c02017 	ldw	r3,128(sp)
   46314:	d8801f17 	ldw	r2,124(sp)
   46318:	da000404 	addi	r8,sp,16
   4631c:	e47fef16 	blt	fp,r17,462dc <__alt_data_end+0xfffc7adc>
   46320:	9021883a 	mov	r16,r18
   46324:	a825883a 	mov	r18,r21
   46328:	b02b883a 	mov	r21,r22
   4632c:	882d883a 	mov	r22,r17
   46330:	dc402917 	ldw	r17,164(sp)
   46334:	d9002b17 	ldw	r4,172(sp)
   46338:	1d87883a 	add	r3,r3,r22
   4633c:	10800044 	addi	r2,r2,1
   46340:	41000015 	stw	r4,0(r8)
   46344:	45800115 	stw	r22,4(r8)
   46348:	d8c02015 	stw	r3,128(sp)
   4634c:	d8801f15 	stw	r2,124(sp)
   46350:	010001c4 	movi	r4,7
   46354:	2081ee16 	blt	r4,r2,46b10 <___vfprintf_internal_r+0x1154>
   46358:	42000204 	addi	r8,r8,8
   4635c:	9080400c 	andi	r2,r18,256
   46360:	1001181e 	bne	r2,zero,467c4 <___vfprintf_internal_r+0xe08>
   46364:	d9402e17 	ldw	r5,184(sp)
   46368:	d8801f17 	ldw	r2,124(sp)
   4636c:	44000015 	stw	r16,0(r8)
   46370:	1947883a 	add	r3,r3,r5
   46374:	10800044 	addi	r2,r2,1
   46378:	41400115 	stw	r5,4(r8)
   4637c:	d8c02015 	stw	r3,128(sp)
   46380:	d8801f15 	stw	r2,124(sp)
   46384:	010001c4 	movi	r4,7
   46388:	2081d316 	blt	r4,r2,46ad8 <___vfprintf_internal_r+0x111c>
   4638c:	42000204 	addi	r8,r8,8
   46390:	9480010c 	andi	r18,r18,4
   46394:	90003226 	beq	r18,zero,46460 <___vfprintf_internal_r+0xaa4>
   46398:	d9403117 	ldw	r5,196(sp)
   4639c:	d8802a17 	ldw	r2,168(sp)
   463a0:	28a1c83a 	sub	r16,r5,r2
   463a4:	04002e0e 	bge	zero,r16,46460 <___vfprintf_internal_r+0xaa4>
   463a8:	04400404 	movi	r17,16
   463ac:	d8801f17 	ldw	r2,124(sp)
   463b0:	8c04a20e 	bge	r17,r16,4763c <___vfprintf_internal_r+0x1c80>
   463b4:	014001b4 	movhi	r5,6
   463b8:	296c9784 	addi	r5,r5,-19874
   463bc:	d9403515 	stw	r5,212(sp)
   463c0:	048001c4 	movi	r18,7
   463c4:	dcc02c17 	ldw	r19,176(sp)
   463c8:	00000306 	br	463d8 <___vfprintf_internal_r+0xa1c>
   463cc:	843ffc04 	addi	r16,r16,-16
   463d0:	42000204 	addi	r8,r8,8
   463d4:	8c00130e 	bge	r17,r16,46424 <___vfprintf_internal_r+0xa68>
   463d8:	010001b4 	movhi	r4,6
   463dc:	18c00404 	addi	r3,r3,16
   463e0:	10800044 	addi	r2,r2,1
   463e4:	212c9784 	addi	r4,r4,-19874
   463e8:	41000015 	stw	r4,0(r8)
   463ec:	44400115 	stw	r17,4(r8)
   463f0:	d8c02015 	stw	r3,128(sp)
   463f4:	d8801f15 	stw	r2,124(sp)
   463f8:	90bff40e 	bge	r18,r2,463cc <__alt_data_end+0xfffc7bcc>
   463fc:	d9801e04 	addi	r6,sp,120
   46400:	b80b883a 	mov	r5,r23
   46404:	9809883a 	mov	r4,r19
   46408:	005357c0 	call	5357c <__sprint_r>
   4640c:	103e6d1e 	bne	r2,zero,45dc4 <__alt_data_end+0xfffc75c4>
   46410:	843ffc04 	addi	r16,r16,-16
   46414:	d8c02017 	ldw	r3,128(sp)
   46418:	d8801f17 	ldw	r2,124(sp)
   4641c:	da000404 	addi	r8,sp,16
   46420:	8c3fed16 	blt	r17,r16,463d8 <__alt_data_end+0xfffc7bd8>
   46424:	d9403517 	ldw	r5,212(sp)
   46428:	1c07883a 	add	r3,r3,r16
   4642c:	10800044 	addi	r2,r2,1
   46430:	41400015 	stw	r5,0(r8)
   46434:	44000115 	stw	r16,4(r8)
   46438:	d8c02015 	stw	r3,128(sp)
   4643c:	d8801f15 	stw	r2,124(sp)
   46440:	010001c4 	movi	r4,7
   46444:	2080060e 	bge	r4,r2,46460 <___vfprintf_internal_r+0xaa4>
   46448:	d9002c17 	ldw	r4,176(sp)
   4644c:	d9801e04 	addi	r6,sp,120
   46450:	b80b883a 	mov	r5,r23
   46454:	005357c0 	call	5357c <__sprint_r>
   46458:	103e5a1e 	bne	r2,zero,45dc4 <__alt_data_end+0xfffc75c4>
   4645c:	d8c02017 	ldw	r3,128(sp)
   46460:	d8803117 	ldw	r2,196(sp)
   46464:	d9002a17 	ldw	r4,168(sp)
   46468:	1100010e 	bge	r2,r4,46470 <___vfprintf_internal_r+0xab4>
   4646c:	2005883a 	mov	r2,r4
   46470:	d9402f17 	ldw	r5,188(sp)
   46474:	288b883a 	add	r5,r5,r2
   46478:	d9402f15 	stw	r5,188(sp)
   4647c:	18019e1e 	bne	r3,zero,46af8 <___vfprintf_internal_r+0x113c>
   46480:	a8800007 	ldb	r2,0(r21)
   46484:	d8001f15 	stw	zero,124(sp)
   46488:	da000404 	addi	r8,sp,16
   4648c:	103d851e 	bne	r2,zero,45aa4 <__alt_data_end+0xfffc72a4>
   46490:	a821883a 	mov	r16,r21
   46494:	003d9b06 	br	45b04 <__alt_data_end+0xfffc7304>
   46498:	18c03fcc 	andi	r3,r3,255
   4649c:	1805c11e 	bne	r3,zero,47ba4 <___vfprintf_internal_r+0x21e8>
   464a0:	94800414 	ori	r18,r18,16
   464a4:	9080080c 	andi	r2,r18,32
   464a8:	10020c26 	beq	r2,zero,46cdc <___vfprintf_internal_r+0x1320>
   464ac:	d8802d17 	ldw	r2,180(sp)
   464b0:	d9002917 	ldw	r4,164(sp)
   464b4:	d8002785 	stb	zero,158(sp)
   464b8:	10c00204 	addi	r3,r2,8
   464bc:	14c00017 	ldw	r19,0(r2)
   464c0:	15800117 	ldw	r22,4(r2)
   464c4:	20040f16 	blt	r4,zero,47504 <___vfprintf_internal_r+0x1b48>
   464c8:	013fdfc4 	movi	r4,-129
   464cc:	9d84b03a 	or	r2,r19,r22
   464d0:	d8c02d15 	stw	r3,180(sp)
   464d4:	9124703a 	and	r18,r18,r4
   464d8:	0039883a 	mov	fp,zero
   464dc:	103e891e 	bne	r2,zero,45f04 <__alt_data_end+0xfffc7704>
   464e0:	d9002917 	ldw	r4,164(sp)
   464e4:	2002c11e 	bne	r4,zero,46fec <___vfprintf_internal_r+0x1630>
   464e8:	d8002915 	stw	zero,164(sp)
   464ec:	d8002e15 	stw	zero,184(sp)
   464f0:	dc001e04 	addi	r16,sp,120
   464f4:	003ef806 	br	460d8 <__alt_data_end+0xfffc78d8>
   464f8:	18c03fcc 	andi	r3,r3,255
   464fc:	18059d1e 	bne	r3,zero,47b74 <___vfprintf_internal_r+0x21b8>
   46500:	014001b4 	movhi	r5,6
   46504:	296c8704 	addi	r5,r5,-19940
   46508:	d9403915 	stw	r5,228(sp)
   4650c:	9080080c 	andi	r2,r18,32
   46510:	10005226 	beq	r2,zero,4665c <___vfprintf_internal_r+0xca0>
   46514:	d8802d17 	ldw	r2,180(sp)
   46518:	14c00017 	ldw	r19,0(r2)
   4651c:	15800117 	ldw	r22,4(r2)
   46520:	10800204 	addi	r2,r2,8
   46524:	d8802d15 	stw	r2,180(sp)
   46528:	9080004c 	andi	r2,r18,1
   4652c:	10019026 	beq	r2,zero,46b70 <___vfprintf_internal_r+0x11b4>
   46530:	9d84b03a 	or	r2,r19,r22
   46534:	10036926 	beq	r2,zero,472dc <___vfprintf_internal_r+0x1920>
   46538:	d8c02917 	ldw	r3,164(sp)
   4653c:	00800c04 	movi	r2,48
   46540:	d8802705 	stb	r2,156(sp)
   46544:	dc402745 	stb	r17,157(sp)
   46548:	d8002785 	stb	zero,158(sp)
   4654c:	90800094 	ori	r2,r18,2
   46550:	18045d16 	blt	r3,zero,476c8 <___vfprintf_internal_r+0x1d0c>
   46554:	00bfdfc4 	movi	r2,-129
   46558:	90a4703a 	and	r18,r18,r2
   4655c:	94800094 	ori	r18,r18,2
   46560:	0039883a 	mov	fp,zero
   46564:	d9003917 	ldw	r4,228(sp)
   46568:	dc001e04 	addi	r16,sp,120
   4656c:	988003cc 	andi	r2,r19,15
   46570:	b006973a 	slli	r3,r22,28
   46574:	2085883a 	add	r2,r4,r2
   46578:	9826d13a 	srli	r19,r19,4
   4657c:	10800003 	ldbu	r2,0(r2)
   46580:	b02cd13a 	srli	r22,r22,4
   46584:	843fffc4 	addi	r16,r16,-1
   46588:	1ce6b03a 	or	r19,r3,r19
   4658c:	80800005 	stb	r2,0(r16)
   46590:	9d84b03a 	or	r2,r19,r22
   46594:	103ff51e 	bne	r2,zero,4656c <__alt_data_end+0xfffc7d6c>
   46598:	d8c02817 	ldw	r3,160(sp)
   4659c:	1c07c83a 	sub	r3,r3,r16
   465a0:	d8c02e15 	stw	r3,184(sp)
   465a4:	003ecc06 	br	460d8 <__alt_data_end+0xfffc78d8>
   465a8:	18c03fcc 	andi	r3,r3,255
   465ac:	183e9f26 	beq	r3,zero,4602c <__alt_data_end+0xfffc782c>
   465b0:	d9c02785 	stb	r7,158(sp)
   465b4:	003e9d06 	br	4602c <__alt_data_end+0xfffc782c>
   465b8:	00c00044 	movi	r3,1
   465bc:	01c00ac4 	movi	r7,43
   465c0:	ac400007 	ldb	r17,0(r21)
   465c4:	003d5e06 	br	45b40 <__alt_data_end+0xfffc7340>
   465c8:	94800814 	ori	r18,r18,32
   465cc:	ac400007 	ldb	r17,0(r21)
   465d0:	003d5b06 	br	45b40 <__alt_data_end+0xfffc7340>
   465d4:	d8c02d17 	ldw	r3,180(sp)
   465d8:	d8002785 	stb	zero,158(sp)
   465dc:	1c000017 	ldw	r16,0(r3)
   465e0:	1cc00104 	addi	r19,r3,4
   465e4:	80041926 	beq	r16,zero,4764c <___vfprintf_internal_r+0x1c90>
   465e8:	d9002917 	ldw	r4,164(sp)
   465ec:	2003d016 	blt	r4,zero,47530 <___vfprintf_internal_r+0x1b74>
   465f0:	200d883a 	mov	r6,r4
   465f4:	000b883a 	mov	r5,zero
   465f8:	8009883a 	mov	r4,r16
   465fc:	da003d15 	stw	r8,244(sp)
   46600:	004cf0c0 	call	4cf0c <memchr>
   46604:	da003d17 	ldw	r8,244(sp)
   46608:	10045426 	beq	r2,zero,4775c <___vfprintf_internal_r+0x1da0>
   4660c:	1405c83a 	sub	r2,r2,r16
   46610:	d8802e15 	stw	r2,184(sp)
   46614:	1003cc16 	blt	r2,zero,47548 <___vfprintf_internal_r+0x1b8c>
   46618:	df002783 	ldbu	fp,158(sp)
   4661c:	d8802a15 	stw	r2,168(sp)
   46620:	dcc02d15 	stw	r19,180(sp)
   46624:	d8002915 	stw	zero,164(sp)
   46628:	d8003215 	stw	zero,200(sp)
   4662c:	003eb006 	br	460f0 <__alt_data_end+0xfffc78f0>
   46630:	18c03fcc 	andi	r3,r3,255
   46634:	183f9b26 	beq	r3,zero,464a4 <__alt_data_end+0xfffc7ca4>
   46638:	d9c02785 	stb	r7,158(sp)
   4663c:	003f9906 	br	464a4 <__alt_data_end+0xfffc7ca4>
   46640:	18c03fcc 	andi	r3,r3,255
   46644:	1805551e 	bne	r3,zero,47b9c <___vfprintf_internal_r+0x21e0>
   46648:	014001b4 	movhi	r5,6
   4664c:	296c8c04 	addi	r5,r5,-19920
   46650:	d9403915 	stw	r5,228(sp)
   46654:	9080080c 	andi	r2,r18,32
   46658:	103fae1e 	bne	r2,zero,46514 <__alt_data_end+0xfffc7d14>
   4665c:	9080040c 	andi	r2,r18,16
   46660:	1002de26 	beq	r2,zero,471dc <___vfprintf_internal_r+0x1820>
   46664:	d8c02d17 	ldw	r3,180(sp)
   46668:	002d883a 	mov	r22,zero
   4666c:	1cc00017 	ldw	r19,0(r3)
   46670:	18c00104 	addi	r3,r3,4
   46674:	d8c02d15 	stw	r3,180(sp)
   46678:	003fab06 	br	46528 <__alt_data_end+0xfffc7d28>
   4667c:	38803fcc 	andi	r2,r7,255
   46680:	1080201c 	xori	r2,r2,128
   46684:	10bfe004 	addi	r2,r2,-128
   46688:	1002d21e 	bne	r2,zero,471d4 <___vfprintf_internal_r+0x1818>
   4668c:	00c00044 	movi	r3,1
   46690:	01c00804 	movi	r7,32
   46694:	ac400007 	ldb	r17,0(r21)
   46698:	003d2906 	br	45b40 <__alt_data_end+0xfffc7340>
   4669c:	94800054 	ori	r18,r18,1
   466a0:	ac400007 	ldb	r17,0(r21)
   466a4:	003d2606 	br	45b40 <__alt_data_end+0xfffc7340>
   466a8:	18c03fcc 	andi	r3,r3,255
   466ac:	183e0526 	beq	r3,zero,45ec4 <__alt_data_end+0xfffc76c4>
   466b0:	d9c02785 	stb	r7,158(sp)
   466b4:	003e0306 	br	45ec4 <__alt_data_end+0xfffc76c4>
   466b8:	94801014 	ori	r18,r18,64
   466bc:	ac400007 	ldb	r17,0(r21)
   466c0:	003d1f06 	br	45b40 <__alt_data_end+0xfffc7340>
   466c4:	ac400007 	ldb	r17,0(r21)
   466c8:	8a438726 	beq	r17,r9,474e8 <___vfprintf_internal_r+0x1b2c>
   466cc:	94800414 	ori	r18,r18,16
   466d0:	003d1b06 	br	45b40 <__alt_data_end+0xfffc7340>
   466d4:	18c03fcc 	andi	r3,r3,255
   466d8:	1805341e 	bne	r3,zero,47bac <___vfprintf_internal_r+0x21f0>
   466dc:	9080080c 	andi	r2,r18,32
   466e0:	1002cd26 	beq	r2,zero,47218 <___vfprintf_internal_r+0x185c>
   466e4:	d9402d17 	ldw	r5,180(sp)
   466e8:	d9002f17 	ldw	r4,188(sp)
   466ec:	28800017 	ldw	r2,0(r5)
   466f0:	2007d7fa 	srai	r3,r4,31
   466f4:	29400104 	addi	r5,r5,4
   466f8:	d9402d15 	stw	r5,180(sp)
   466fc:	11000015 	stw	r4,0(r2)
   46700:	10c00115 	stw	r3,4(r2)
   46704:	003ce506 	br	45a9c <__alt_data_end+0xfffc729c>
   46708:	d8c02d17 	ldw	r3,180(sp)
   4670c:	d9002d17 	ldw	r4,180(sp)
   46710:	d8002785 	stb	zero,158(sp)
   46714:	18800017 	ldw	r2,0(r3)
   46718:	21000104 	addi	r4,r4,4
   4671c:	00c00044 	movi	r3,1
   46720:	d8c02a15 	stw	r3,168(sp)
   46724:	d8801405 	stb	r2,80(sp)
   46728:	d9002d15 	stw	r4,180(sp)
   4672c:	d8c02e15 	stw	r3,184(sp)
   46730:	d8002915 	stw	zero,164(sp)
   46734:	d8003215 	stw	zero,200(sp)
   46738:	dc001404 	addi	r16,sp,80
   4673c:	0039883a 	mov	fp,zero
   46740:	003e7206 	br	4610c <__alt_data_end+0xfffc790c>
   46744:	010001b4 	movhi	r4,6
   46748:	212c8c04 	addi	r4,r4,-19920
   4674c:	0039883a 	mov	fp,zero
   46750:	d9003915 	stw	r4,228(sp)
   46754:	04401e04 	movi	r17,120
   46758:	003f8206 	br	46564 <__alt_data_end+0xfffc7d64>
   4675c:	18c03fcc 	andi	r3,r3,255
   46760:	1805061e 	bne	r3,zero,47b7c <___vfprintf_internal_r+0x21c0>
   46764:	883d9126 	beq	r17,zero,45dac <__alt_data_end+0xfffc75ac>
   46768:	00c00044 	movi	r3,1
   4676c:	d8c02a15 	stw	r3,168(sp)
   46770:	dc401405 	stb	r17,80(sp)
   46774:	d8002785 	stb	zero,158(sp)
   46778:	003fec06 	br	4672c <__alt_data_end+0xfffc7f2c>
   4677c:	014001b4 	movhi	r5,6
   46780:	296c8c04 	addi	r5,r5,-19920
   46784:	d9403915 	stw	r5,228(sp)
   46788:	d8c02d15 	stw	r3,180(sp)
   4678c:	1025883a 	mov	r18,r2
   46790:	04401e04 	movi	r17,120
   46794:	9d84b03a 	or	r2,r19,r22
   46798:	1000fc1e 	bne	r2,zero,46b8c <___vfprintf_internal_r+0x11d0>
   4679c:	0039883a 	mov	fp,zero
   467a0:	00800084 	movi	r2,2
   467a4:	10803fcc 	andi	r2,r2,255
   467a8:	00c00044 	movi	r3,1
   467ac:	10c20f26 	beq	r2,r3,46fec <___vfprintf_internal_r+0x1630>
   467b0:	00c00084 	movi	r3,2
   467b4:	10fd6326 	beq	r2,r3,45d44 <__alt_data_end+0xfffc7544>
   467b8:	003e2d06 	br	46070 <__alt_data_end+0xfffc7870>
   467bc:	d8c02017 	ldw	r3,128(sp)
   467c0:	003e9306 	br	46210 <__alt_data_end+0xfffc7a10>
   467c4:	00801944 	movi	r2,101
   467c8:	14407e0e 	bge	r2,r17,469c4 <___vfprintf_internal_r+0x1008>
   467cc:	d9003617 	ldw	r4,216(sp)
   467d0:	d9403817 	ldw	r5,224(sp)
   467d4:	000d883a 	mov	r6,zero
   467d8:	000f883a 	mov	r7,zero
   467dc:	d8c03c15 	stw	r3,240(sp)
   467e0:	da003d15 	stw	r8,244(sp)
   467e4:	00581100 	call	58110 <__eqdf2>
   467e8:	d8c03c17 	ldw	r3,240(sp)
   467ec:	da003d17 	ldw	r8,244(sp)
   467f0:	1000f71e 	bne	r2,zero,46bd0 <___vfprintf_internal_r+0x1214>
   467f4:	d8801f17 	ldw	r2,124(sp)
   467f8:	010001b4 	movhi	r4,6
   467fc:	212c9304 	addi	r4,r4,-19892
   46800:	18c00044 	addi	r3,r3,1
   46804:	10800044 	addi	r2,r2,1
   46808:	41000015 	stw	r4,0(r8)
   4680c:	01000044 	movi	r4,1
   46810:	41000115 	stw	r4,4(r8)
   46814:	d8c02015 	stw	r3,128(sp)
   46818:	d8801f15 	stw	r2,124(sp)
   4681c:	010001c4 	movi	r4,7
   46820:	2082b816 	blt	r4,r2,47304 <___vfprintf_internal_r+0x1948>
   46824:	42000204 	addi	r8,r8,8
   46828:	d8802617 	ldw	r2,152(sp)
   4682c:	d9403317 	ldw	r5,204(sp)
   46830:	11400216 	blt	r2,r5,4683c <___vfprintf_internal_r+0xe80>
   46834:	9080004c 	andi	r2,r18,1
   46838:	103ed526 	beq	r2,zero,46390 <__alt_data_end+0xfffc7b90>
   4683c:	d8803717 	ldw	r2,220(sp)
   46840:	d9003417 	ldw	r4,208(sp)
   46844:	d9403717 	ldw	r5,220(sp)
   46848:	1887883a 	add	r3,r3,r2
   4684c:	d8801f17 	ldw	r2,124(sp)
   46850:	41000015 	stw	r4,0(r8)
   46854:	41400115 	stw	r5,4(r8)
   46858:	10800044 	addi	r2,r2,1
   4685c:	d8c02015 	stw	r3,128(sp)
   46860:	d8801f15 	stw	r2,124(sp)
   46864:	010001c4 	movi	r4,7
   46868:	20832916 	blt	r4,r2,47510 <___vfprintf_internal_r+0x1b54>
   4686c:	42000204 	addi	r8,r8,8
   46870:	d8803317 	ldw	r2,204(sp)
   46874:	143fffc4 	addi	r16,r2,-1
   46878:	043ec50e 	bge	zero,r16,46390 <__alt_data_end+0xfffc7b90>
   4687c:	04400404 	movi	r17,16
   46880:	d8801f17 	ldw	r2,124(sp)
   46884:	8c00880e 	bge	r17,r16,46aa8 <___vfprintf_internal_r+0x10ec>
   46888:	014001b4 	movhi	r5,6
   4688c:	296c9384 	addi	r5,r5,-19890
   46890:	d9402b15 	stw	r5,172(sp)
   46894:	058001c4 	movi	r22,7
   46898:	dcc02c17 	ldw	r19,176(sp)
   4689c:	00000306 	br	468ac <___vfprintf_internal_r+0xef0>
   468a0:	42000204 	addi	r8,r8,8
   468a4:	843ffc04 	addi	r16,r16,-16
   468a8:	8c00820e 	bge	r17,r16,46ab4 <___vfprintf_internal_r+0x10f8>
   468ac:	18c00404 	addi	r3,r3,16
   468b0:	10800044 	addi	r2,r2,1
   468b4:	45000015 	stw	r20,0(r8)
   468b8:	44400115 	stw	r17,4(r8)
   468bc:	d8c02015 	stw	r3,128(sp)
   468c0:	d8801f15 	stw	r2,124(sp)
   468c4:	b0bff60e 	bge	r22,r2,468a0 <__alt_data_end+0xfffc80a0>
   468c8:	d9801e04 	addi	r6,sp,120
   468cc:	b80b883a 	mov	r5,r23
   468d0:	9809883a 	mov	r4,r19
   468d4:	005357c0 	call	5357c <__sprint_r>
   468d8:	103d3a1e 	bne	r2,zero,45dc4 <__alt_data_end+0xfffc75c4>
   468dc:	d8c02017 	ldw	r3,128(sp)
   468e0:	d8801f17 	ldw	r2,124(sp)
   468e4:	da000404 	addi	r8,sp,16
   468e8:	003fee06 	br	468a4 <__alt_data_end+0xfffc80a4>
   468ec:	d9403117 	ldw	r5,196(sp)
   468f0:	d8802a17 	ldw	r2,168(sp)
   468f4:	28adc83a 	sub	r22,r5,r2
   468f8:	05be630e 	bge	zero,r22,46288 <__alt_data_end+0xfffc7a88>
   468fc:	07000404 	movi	fp,16
   46900:	d8801f17 	ldw	r2,124(sp)
   46904:	e5838f0e 	bge	fp,r22,47744 <___vfprintf_internal_r+0x1d88>
   46908:	014001b4 	movhi	r5,6
   4690c:	296c9384 	addi	r5,r5,-19890
   46910:	dc403015 	stw	r17,192(sp)
   46914:	d9402b15 	stw	r5,172(sp)
   46918:	b023883a 	mov	r17,r22
   4691c:	04c001c4 	movi	r19,7
   46920:	a82d883a 	mov	r22,r21
   46924:	902b883a 	mov	r21,r18
   46928:	8025883a 	mov	r18,r16
   4692c:	dc002c17 	ldw	r16,176(sp)
   46930:	00000306 	br	46940 <___vfprintf_internal_r+0xf84>
   46934:	8c7ffc04 	addi	r17,r17,-16
   46938:	42000204 	addi	r8,r8,8
   4693c:	e440110e 	bge	fp,r17,46984 <___vfprintf_internal_r+0xfc8>
   46940:	18c00404 	addi	r3,r3,16
   46944:	10800044 	addi	r2,r2,1
   46948:	45000015 	stw	r20,0(r8)
   4694c:	47000115 	stw	fp,4(r8)
   46950:	d8c02015 	stw	r3,128(sp)
   46954:	d8801f15 	stw	r2,124(sp)
   46958:	98bff60e 	bge	r19,r2,46934 <__alt_data_end+0xfffc8134>
   4695c:	d9801e04 	addi	r6,sp,120
   46960:	b80b883a 	mov	r5,r23
   46964:	8009883a 	mov	r4,r16
   46968:	005357c0 	call	5357c <__sprint_r>
   4696c:	103d151e 	bne	r2,zero,45dc4 <__alt_data_end+0xfffc75c4>
   46970:	8c7ffc04 	addi	r17,r17,-16
   46974:	d8c02017 	ldw	r3,128(sp)
   46978:	d8801f17 	ldw	r2,124(sp)
   4697c:	da000404 	addi	r8,sp,16
   46980:	e47fef16 	blt	fp,r17,46940 <__alt_data_end+0xfffc8140>
   46984:	9021883a 	mov	r16,r18
   46988:	a825883a 	mov	r18,r21
   4698c:	b02b883a 	mov	r21,r22
   46990:	882d883a 	mov	r22,r17
   46994:	dc403017 	ldw	r17,192(sp)
   46998:	d9002b17 	ldw	r4,172(sp)
   4699c:	1d87883a 	add	r3,r3,r22
   469a0:	10800044 	addi	r2,r2,1
   469a4:	41000015 	stw	r4,0(r8)
   469a8:	45800115 	stw	r22,4(r8)
   469ac:	d8c02015 	stw	r3,128(sp)
   469b0:	d8801f15 	stw	r2,124(sp)
   469b4:	010001c4 	movi	r4,7
   469b8:	20818e16 	blt	r4,r2,46ff4 <___vfprintf_internal_r+0x1638>
   469bc:	42000204 	addi	r8,r8,8
   469c0:	003e3106 	br	46288 <__alt_data_end+0xfffc7a88>
   469c4:	d9403317 	ldw	r5,204(sp)
   469c8:	00800044 	movi	r2,1
   469cc:	18c00044 	addi	r3,r3,1
   469d0:	1141530e 	bge	r2,r5,46f20 <___vfprintf_internal_r+0x1564>
   469d4:	dc401f17 	ldw	r17,124(sp)
   469d8:	00800044 	movi	r2,1
   469dc:	40800115 	stw	r2,4(r8)
   469e0:	8c400044 	addi	r17,r17,1
   469e4:	44000015 	stw	r16,0(r8)
   469e8:	d8c02015 	stw	r3,128(sp)
   469ec:	dc401f15 	stw	r17,124(sp)
   469f0:	008001c4 	movi	r2,7
   469f4:	14416b16 	blt	r2,r17,46fa4 <___vfprintf_internal_r+0x15e8>
   469f8:	42000204 	addi	r8,r8,8
   469fc:	d8803717 	ldw	r2,220(sp)
   46a00:	d9003417 	ldw	r4,208(sp)
   46a04:	8c400044 	addi	r17,r17,1
   46a08:	10c7883a 	add	r3,r2,r3
   46a0c:	40800115 	stw	r2,4(r8)
   46a10:	41000015 	stw	r4,0(r8)
   46a14:	d8c02015 	stw	r3,128(sp)
   46a18:	dc401f15 	stw	r17,124(sp)
   46a1c:	008001c4 	movi	r2,7
   46a20:	14416916 	blt	r2,r17,46fc8 <___vfprintf_internal_r+0x160c>
   46a24:	45800204 	addi	r22,r8,8
   46a28:	d9003617 	ldw	r4,216(sp)
   46a2c:	d9403817 	ldw	r5,224(sp)
   46a30:	000d883a 	mov	r6,zero
   46a34:	000f883a 	mov	r7,zero
   46a38:	d8c03c15 	stw	r3,240(sp)
   46a3c:	00581100 	call	58110 <__eqdf2>
   46a40:	d8c03c17 	ldw	r3,240(sp)
   46a44:	1000bc26 	beq	r2,zero,46d38 <___vfprintf_internal_r+0x137c>
   46a48:	d9403317 	ldw	r5,204(sp)
   46a4c:	84000044 	addi	r16,r16,1
   46a50:	8c400044 	addi	r17,r17,1
   46a54:	28bfffc4 	addi	r2,r5,-1
   46a58:	1887883a 	add	r3,r3,r2
   46a5c:	b0800115 	stw	r2,4(r22)
   46a60:	b4000015 	stw	r16,0(r22)
   46a64:	d8c02015 	stw	r3,128(sp)
   46a68:	dc401f15 	stw	r17,124(sp)
   46a6c:	008001c4 	movi	r2,7
   46a70:	14414316 	blt	r2,r17,46f80 <___vfprintf_internal_r+0x15c4>
   46a74:	b5800204 	addi	r22,r22,8
   46a78:	d9003a17 	ldw	r4,232(sp)
   46a7c:	df0022c4 	addi	fp,sp,139
   46a80:	8c400044 	addi	r17,r17,1
   46a84:	20c7883a 	add	r3,r4,r3
   46a88:	b7000015 	stw	fp,0(r22)
   46a8c:	b1000115 	stw	r4,4(r22)
   46a90:	d8c02015 	stw	r3,128(sp)
   46a94:	dc401f15 	stw	r17,124(sp)
   46a98:	008001c4 	movi	r2,7
   46a9c:	14400e16 	blt	r2,r17,46ad8 <___vfprintf_internal_r+0x111c>
   46aa0:	b2000204 	addi	r8,r22,8
   46aa4:	003e3a06 	br	46390 <__alt_data_end+0xfffc7b90>
   46aa8:	010001b4 	movhi	r4,6
   46aac:	212c9384 	addi	r4,r4,-19890
   46ab0:	d9002b15 	stw	r4,172(sp)
   46ab4:	d9002b17 	ldw	r4,172(sp)
   46ab8:	1c07883a 	add	r3,r3,r16
   46abc:	44000115 	stw	r16,4(r8)
   46ac0:	41000015 	stw	r4,0(r8)
   46ac4:	10800044 	addi	r2,r2,1
   46ac8:	d8c02015 	stw	r3,128(sp)
   46acc:	d8801f15 	stw	r2,124(sp)
   46ad0:	010001c4 	movi	r4,7
   46ad4:	20be2d0e 	bge	r4,r2,4638c <__alt_data_end+0xfffc7b8c>
   46ad8:	d9002c17 	ldw	r4,176(sp)
   46adc:	d9801e04 	addi	r6,sp,120
   46ae0:	b80b883a 	mov	r5,r23
   46ae4:	005357c0 	call	5357c <__sprint_r>
   46ae8:	103cb61e 	bne	r2,zero,45dc4 <__alt_data_end+0xfffc75c4>
   46aec:	d8c02017 	ldw	r3,128(sp)
   46af0:	da000404 	addi	r8,sp,16
   46af4:	003e2606 	br	46390 <__alt_data_end+0xfffc7b90>
   46af8:	d9002c17 	ldw	r4,176(sp)
   46afc:	d9801e04 	addi	r6,sp,120
   46b00:	b80b883a 	mov	r5,r23
   46b04:	005357c0 	call	5357c <__sprint_r>
   46b08:	103e5d26 	beq	r2,zero,46480 <__alt_data_end+0xfffc7c80>
   46b0c:	003cad06 	br	45dc4 <__alt_data_end+0xfffc75c4>
   46b10:	d9002c17 	ldw	r4,176(sp)
   46b14:	d9801e04 	addi	r6,sp,120
   46b18:	b80b883a 	mov	r5,r23
   46b1c:	005357c0 	call	5357c <__sprint_r>
   46b20:	103ca81e 	bne	r2,zero,45dc4 <__alt_data_end+0xfffc75c4>
   46b24:	d8c02017 	ldw	r3,128(sp)
   46b28:	da000404 	addi	r8,sp,16
   46b2c:	003e0b06 	br	4635c <__alt_data_end+0xfffc7b5c>
   46b30:	d9002c17 	ldw	r4,176(sp)
   46b34:	d9801e04 	addi	r6,sp,120
   46b38:	b80b883a 	mov	r5,r23
   46b3c:	005357c0 	call	5357c <__sprint_r>
   46b40:	103ca01e 	bne	r2,zero,45dc4 <__alt_data_end+0xfffc75c4>
   46b44:	d8c02017 	ldw	r3,128(sp)
   46b48:	da000404 	addi	r8,sp,16
   46b4c:	003dbd06 	br	46244 <__alt_data_end+0xfffc7a44>
   46b50:	d9002c17 	ldw	r4,176(sp)
   46b54:	d9801e04 	addi	r6,sp,120
   46b58:	b80b883a 	mov	r5,r23
   46b5c:	005357c0 	call	5357c <__sprint_r>
   46b60:	103c981e 	bne	r2,zero,45dc4 <__alt_data_end+0xfffc75c4>
   46b64:	d8c02017 	ldw	r3,128(sp)
   46b68:	da000404 	addi	r8,sp,16
   46b6c:	003dc306 	br	4627c <__alt_data_end+0xfffc7a7c>
   46b70:	d8802917 	ldw	r2,164(sp)
   46b74:	d8002785 	stb	zero,158(sp)
   46b78:	103f0616 	blt	r2,zero,46794 <__alt_data_end+0xfffc7f94>
   46b7c:	00ffdfc4 	movi	r3,-129
   46b80:	9d84b03a 	or	r2,r19,r22
   46b84:	90e4703a 	and	r18,r18,r3
   46b88:	103c6b26 	beq	r2,zero,45d38 <__alt_data_end+0xfffc7538>
   46b8c:	0039883a 	mov	fp,zero
   46b90:	003e7406 	br	46564 <__alt_data_end+0xfffc7d64>
   46b94:	9080040c 	andi	r2,r18,16
   46b98:	1001b326 	beq	r2,zero,47268 <___vfprintf_internal_r+0x18ac>
   46b9c:	d9002d17 	ldw	r4,180(sp)
   46ba0:	d9402917 	ldw	r5,164(sp)
   46ba4:	d8002785 	stb	zero,158(sp)
   46ba8:	20800104 	addi	r2,r4,4
   46bac:	24c00017 	ldw	r19,0(r4)
   46bb0:	002d883a 	mov	r22,zero
   46bb4:	2801b516 	blt	r5,zero,4728c <___vfprintf_internal_r+0x18d0>
   46bb8:	00ffdfc4 	movi	r3,-129
   46bbc:	d8802d15 	stw	r2,180(sp)
   46bc0:	90e4703a 	and	r18,r18,r3
   46bc4:	983d2726 	beq	r19,zero,46064 <__alt_data_end+0xfffc7864>
   46bc8:	0039883a 	mov	fp,zero
   46bcc:	003d2a06 	br	46078 <__alt_data_end+0xfffc7878>
   46bd0:	dc402617 	ldw	r17,152(sp)
   46bd4:	0441d30e 	bge	zero,r17,47324 <___vfprintf_internal_r+0x1968>
   46bd8:	dc403217 	ldw	r17,200(sp)
   46bdc:	d8803317 	ldw	r2,204(sp)
   46be0:	1440010e 	bge	r2,r17,46be8 <___vfprintf_internal_r+0x122c>
   46be4:	1023883a 	mov	r17,r2
   46be8:	04400a0e 	bge	zero,r17,46c14 <___vfprintf_internal_r+0x1258>
   46bec:	d8801f17 	ldw	r2,124(sp)
   46bf0:	1c47883a 	add	r3,r3,r17
   46bf4:	44000015 	stw	r16,0(r8)
   46bf8:	10800044 	addi	r2,r2,1
   46bfc:	44400115 	stw	r17,4(r8)
   46c00:	d8c02015 	stw	r3,128(sp)
   46c04:	d8801f15 	stw	r2,124(sp)
   46c08:	010001c4 	movi	r4,7
   46c0c:	20826516 	blt	r4,r2,475a4 <___vfprintf_internal_r+0x1be8>
   46c10:	42000204 	addi	r8,r8,8
   46c14:	88026116 	blt	r17,zero,4759c <___vfprintf_internal_r+0x1be0>
   46c18:	d9003217 	ldw	r4,200(sp)
   46c1c:	2463c83a 	sub	r17,r4,r17
   46c20:	04407b0e 	bge	zero,r17,46e10 <___vfprintf_internal_r+0x1454>
   46c24:	05800404 	movi	r22,16
   46c28:	d8801f17 	ldw	r2,124(sp)
   46c2c:	b4419d0e 	bge	r22,r17,472a4 <___vfprintf_internal_r+0x18e8>
   46c30:	010001b4 	movhi	r4,6
   46c34:	212c9384 	addi	r4,r4,-19890
   46c38:	d9002b15 	stw	r4,172(sp)
   46c3c:	070001c4 	movi	fp,7
   46c40:	dcc02c17 	ldw	r19,176(sp)
   46c44:	00000306 	br	46c54 <___vfprintf_internal_r+0x1298>
   46c48:	42000204 	addi	r8,r8,8
   46c4c:	8c7ffc04 	addi	r17,r17,-16
   46c50:	b441970e 	bge	r22,r17,472b0 <___vfprintf_internal_r+0x18f4>
   46c54:	18c00404 	addi	r3,r3,16
   46c58:	10800044 	addi	r2,r2,1
   46c5c:	45000015 	stw	r20,0(r8)
   46c60:	45800115 	stw	r22,4(r8)
   46c64:	d8c02015 	stw	r3,128(sp)
   46c68:	d8801f15 	stw	r2,124(sp)
   46c6c:	e0bff60e 	bge	fp,r2,46c48 <__alt_data_end+0xfffc8448>
   46c70:	d9801e04 	addi	r6,sp,120
   46c74:	b80b883a 	mov	r5,r23
   46c78:	9809883a 	mov	r4,r19
   46c7c:	005357c0 	call	5357c <__sprint_r>
   46c80:	103c501e 	bne	r2,zero,45dc4 <__alt_data_end+0xfffc75c4>
   46c84:	d8c02017 	ldw	r3,128(sp)
   46c88:	d8801f17 	ldw	r2,124(sp)
   46c8c:	da000404 	addi	r8,sp,16
   46c90:	003fee06 	br	46c4c <__alt_data_end+0xfffc844c>
   46c94:	d9002c17 	ldw	r4,176(sp)
   46c98:	d9801e04 	addi	r6,sp,120
   46c9c:	b80b883a 	mov	r5,r23
   46ca0:	005357c0 	call	5357c <__sprint_r>
   46ca4:	103c471e 	bne	r2,zero,45dc4 <__alt_data_end+0xfffc75c4>
   46ca8:	d8c02017 	ldw	r3,128(sp)
   46cac:	df002787 	ldb	fp,158(sp)
   46cb0:	da000404 	addi	r8,sp,16
   46cb4:	003d5606 	br	46210 <__alt_data_end+0xfffc7a10>
   46cb8:	9080040c 	andi	r2,r18,16
   46cbc:	10016126 	beq	r2,zero,47244 <___vfprintf_internal_r+0x1888>
   46cc0:	d8802d17 	ldw	r2,180(sp)
   46cc4:	14c00017 	ldw	r19,0(r2)
   46cc8:	10800104 	addi	r2,r2,4
   46ccc:	d8802d15 	stw	r2,180(sp)
   46cd0:	982dd7fa 	srai	r22,r19,31
   46cd4:	b005883a 	mov	r2,r22
   46cd8:	003c8206 	br	45ee4 <__alt_data_end+0xfffc76e4>
   46cdc:	9080040c 	andi	r2,r18,16
   46ce0:	10003526 	beq	r2,zero,46db8 <___vfprintf_internal_r+0x13fc>
   46ce4:	d9402d17 	ldw	r5,180(sp)
   46ce8:	d8c02917 	ldw	r3,164(sp)
   46cec:	d8002785 	stb	zero,158(sp)
   46cf0:	28800104 	addi	r2,r5,4
   46cf4:	2cc00017 	ldw	r19,0(r5)
   46cf8:	002d883a 	mov	r22,zero
   46cfc:	18003716 	blt	r3,zero,46ddc <___vfprintf_internal_r+0x1420>
   46d00:	00ffdfc4 	movi	r3,-129
   46d04:	d8802d15 	stw	r2,180(sp)
   46d08:	90e4703a 	and	r18,r18,r3
   46d0c:	0039883a 	mov	fp,zero
   46d10:	983df326 	beq	r19,zero,464e0 <__alt_data_end+0xfffc7ce0>
   46d14:	00800244 	movi	r2,9
   46d18:	14fc7b36 	bltu	r2,r19,45f08 <__alt_data_end+0xfffc7708>
   46d1c:	d8c02817 	ldw	r3,160(sp)
   46d20:	dc001dc4 	addi	r16,sp,119
   46d24:	9cc00c04 	addi	r19,r19,48
   46d28:	1c07c83a 	sub	r3,r3,r16
   46d2c:	dcc01dc5 	stb	r19,119(sp)
   46d30:	d8c02e15 	stw	r3,184(sp)
   46d34:	003ce806 	br	460d8 <__alt_data_end+0xfffc78d8>
   46d38:	d8803317 	ldw	r2,204(sp)
   46d3c:	143fffc4 	addi	r16,r2,-1
   46d40:	043f4d0e 	bge	zero,r16,46a78 <__alt_data_end+0xfffc8278>
   46d44:	07000404 	movi	fp,16
   46d48:	e400810e 	bge	fp,r16,46f50 <___vfprintf_internal_r+0x1594>
   46d4c:	014001b4 	movhi	r5,6
   46d50:	296c9384 	addi	r5,r5,-19890
   46d54:	d9402b15 	stw	r5,172(sp)
   46d58:	01c001c4 	movi	r7,7
   46d5c:	dcc02c17 	ldw	r19,176(sp)
   46d60:	00000306 	br	46d70 <___vfprintf_internal_r+0x13b4>
   46d64:	b5800204 	addi	r22,r22,8
   46d68:	843ffc04 	addi	r16,r16,-16
   46d6c:	e4007b0e 	bge	fp,r16,46f5c <___vfprintf_internal_r+0x15a0>
   46d70:	18c00404 	addi	r3,r3,16
   46d74:	8c400044 	addi	r17,r17,1
   46d78:	b5000015 	stw	r20,0(r22)
   46d7c:	b7000115 	stw	fp,4(r22)
   46d80:	d8c02015 	stw	r3,128(sp)
   46d84:	dc401f15 	stw	r17,124(sp)
   46d88:	3c7ff60e 	bge	r7,r17,46d64 <__alt_data_end+0xfffc8564>
   46d8c:	d9801e04 	addi	r6,sp,120
   46d90:	b80b883a 	mov	r5,r23
   46d94:	9809883a 	mov	r4,r19
   46d98:	d9c03c15 	stw	r7,240(sp)
   46d9c:	005357c0 	call	5357c <__sprint_r>
   46da0:	d9c03c17 	ldw	r7,240(sp)
   46da4:	103c071e 	bne	r2,zero,45dc4 <__alt_data_end+0xfffc75c4>
   46da8:	d8c02017 	ldw	r3,128(sp)
   46dac:	dc401f17 	ldw	r17,124(sp)
   46db0:	dd800404 	addi	r22,sp,16
   46db4:	003fec06 	br	46d68 <__alt_data_end+0xfffc8568>
   46db8:	9080100c 	andi	r2,r18,64
   46dbc:	d8002785 	stb	zero,158(sp)
   46dc0:	10010e26 	beq	r2,zero,471fc <___vfprintf_internal_r+0x1840>
   46dc4:	d9002d17 	ldw	r4,180(sp)
   46dc8:	d9402917 	ldw	r5,164(sp)
   46dcc:	002d883a 	mov	r22,zero
   46dd0:	20800104 	addi	r2,r4,4
   46dd4:	24c0000b 	ldhu	r19,0(r4)
   46dd8:	283fc90e 	bge	r5,zero,46d00 <__alt_data_end+0xfffc8500>
   46ddc:	d8802d15 	stw	r2,180(sp)
   46de0:	0039883a 	mov	fp,zero
   46de4:	9d84b03a 	or	r2,r19,r22
   46de8:	103c461e 	bne	r2,zero,45f04 <__alt_data_end+0xfffc7704>
   46dec:	00800044 	movi	r2,1
   46df0:	003e6c06 	br	467a4 <__alt_data_end+0xfffc7fa4>
   46df4:	d9002c17 	ldw	r4,176(sp)
   46df8:	d9801e04 	addi	r6,sp,120
   46dfc:	b80b883a 	mov	r5,r23
   46e00:	005357c0 	call	5357c <__sprint_r>
   46e04:	103bef1e 	bne	r2,zero,45dc4 <__alt_data_end+0xfffc75c4>
   46e08:	d8c02017 	ldw	r3,128(sp)
   46e0c:	da000404 	addi	r8,sp,16
   46e10:	d9003217 	ldw	r4,200(sp)
   46e14:	d8802617 	ldw	r2,152(sp)
   46e18:	d9403317 	ldw	r5,204(sp)
   46e1c:	8123883a 	add	r17,r16,r4
   46e20:	11400216 	blt	r2,r5,46e2c <___vfprintf_internal_r+0x1470>
   46e24:	9100004c 	andi	r4,r18,1
   46e28:	20000d26 	beq	r4,zero,46e60 <___vfprintf_internal_r+0x14a4>
   46e2c:	d9003717 	ldw	r4,220(sp)
   46e30:	d9403417 	ldw	r5,208(sp)
   46e34:	1907883a 	add	r3,r3,r4
   46e38:	d9001f17 	ldw	r4,124(sp)
   46e3c:	41400015 	stw	r5,0(r8)
   46e40:	d9403717 	ldw	r5,220(sp)
   46e44:	21000044 	addi	r4,r4,1
   46e48:	d8c02015 	stw	r3,128(sp)
   46e4c:	41400115 	stw	r5,4(r8)
   46e50:	d9001f15 	stw	r4,124(sp)
   46e54:	014001c4 	movi	r5,7
   46e58:	2901e816 	blt	r5,r4,475fc <___vfprintf_internal_r+0x1c40>
   46e5c:	42000204 	addi	r8,r8,8
   46e60:	d9003317 	ldw	r4,204(sp)
   46e64:	8121883a 	add	r16,r16,r4
   46e68:	2085c83a 	sub	r2,r4,r2
   46e6c:	8461c83a 	sub	r16,r16,r17
   46e70:	1400010e 	bge	r2,r16,46e78 <___vfprintf_internal_r+0x14bc>
   46e74:	1021883a 	mov	r16,r2
   46e78:	04000a0e 	bge	zero,r16,46ea4 <___vfprintf_internal_r+0x14e8>
   46e7c:	d9001f17 	ldw	r4,124(sp)
   46e80:	1c07883a 	add	r3,r3,r16
   46e84:	44400015 	stw	r17,0(r8)
   46e88:	21000044 	addi	r4,r4,1
   46e8c:	44000115 	stw	r16,4(r8)
   46e90:	d8c02015 	stw	r3,128(sp)
   46e94:	d9001f15 	stw	r4,124(sp)
   46e98:	014001c4 	movi	r5,7
   46e9c:	2901fb16 	blt	r5,r4,4768c <___vfprintf_internal_r+0x1cd0>
   46ea0:	42000204 	addi	r8,r8,8
   46ea4:	8001f716 	blt	r16,zero,47684 <___vfprintf_internal_r+0x1cc8>
   46ea8:	1421c83a 	sub	r16,r2,r16
   46eac:	043d380e 	bge	zero,r16,46390 <__alt_data_end+0xfffc7b90>
   46eb0:	04400404 	movi	r17,16
   46eb4:	d8801f17 	ldw	r2,124(sp)
   46eb8:	8c3efb0e 	bge	r17,r16,46aa8 <__alt_data_end+0xfffc82a8>
   46ebc:	014001b4 	movhi	r5,6
   46ec0:	296c9384 	addi	r5,r5,-19890
   46ec4:	d9402b15 	stw	r5,172(sp)
   46ec8:	058001c4 	movi	r22,7
   46ecc:	dcc02c17 	ldw	r19,176(sp)
   46ed0:	00000306 	br	46ee0 <___vfprintf_internal_r+0x1524>
   46ed4:	42000204 	addi	r8,r8,8
   46ed8:	843ffc04 	addi	r16,r16,-16
   46edc:	8c3ef50e 	bge	r17,r16,46ab4 <__alt_data_end+0xfffc82b4>
   46ee0:	18c00404 	addi	r3,r3,16
   46ee4:	10800044 	addi	r2,r2,1
   46ee8:	45000015 	stw	r20,0(r8)
   46eec:	44400115 	stw	r17,4(r8)
   46ef0:	d8c02015 	stw	r3,128(sp)
   46ef4:	d8801f15 	stw	r2,124(sp)
   46ef8:	b0bff60e 	bge	r22,r2,46ed4 <__alt_data_end+0xfffc86d4>
   46efc:	d9801e04 	addi	r6,sp,120
   46f00:	b80b883a 	mov	r5,r23
   46f04:	9809883a 	mov	r4,r19
   46f08:	005357c0 	call	5357c <__sprint_r>
   46f0c:	103bad1e 	bne	r2,zero,45dc4 <__alt_data_end+0xfffc75c4>
   46f10:	d8c02017 	ldw	r3,128(sp)
   46f14:	d8801f17 	ldw	r2,124(sp)
   46f18:	da000404 	addi	r8,sp,16
   46f1c:	003fee06 	br	46ed8 <__alt_data_end+0xfffc86d8>
   46f20:	9088703a 	and	r4,r18,r2
   46f24:	203eab1e 	bne	r4,zero,469d4 <__alt_data_end+0xfffc81d4>
   46f28:	dc401f17 	ldw	r17,124(sp)
   46f2c:	40800115 	stw	r2,4(r8)
   46f30:	44000015 	stw	r16,0(r8)
   46f34:	8c400044 	addi	r17,r17,1
   46f38:	d8c02015 	stw	r3,128(sp)
   46f3c:	dc401f15 	stw	r17,124(sp)
   46f40:	008001c4 	movi	r2,7
   46f44:	14400e16 	blt	r2,r17,46f80 <___vfprintf_internal_r+0x15c4>
   46f48:	45800204 	addi	r22,r8,8
   46f4c:	003eca06 	br	46a78 <__alt_data_end+0xfffc8278>
   46f50:	010001b4 	movhi	r4,6
   46f54:	212c9384 	addi	r4,r4,-19890
   46f58:	d9002b15 	stw	r4,172(sp)
   46f5c:	d8802b17 	ldw	r2,172(sp)
   46f60:	1c07883a 	add	r3,r3,r16
   46f64:	8c400044 	addi	r17,r17,1
   46f68:	b0800015 	stw	r2,0(r22)
   46f6c:	b4000115 	stw	r16,4(r22)
   46f70:	d8c02015 	stw	r3,128(sp)
   46f74:	dc401f15 	stw	r17,124(sp)
   46f78:	008001c4 	movi	r2,7
   46f7c:	147ebd0e 	bge	r2,r17,46a74 <__alt_data_end+0xfffc8274>
   46f80:	d9002c17 	ldw	r4,176(sp)
   46f84:	d9801e04 	addi	r6,sp,120
   46f88:	b80b883a 	mov	r5,r23
   46f8c:	005357c0 	call	5357c <__sprint_r>
   46f90:	103b8c1e 	bne	r2,zero,45dc4 <__alt_data_end+0xfffc75c4>
   46f94:	d8c02017 	ldw	r3,128(sp)
   46f98:	dc401f17 	ldw	r17,124(sp)
   46f9c:	dd800404 	addi	r22,sp,16
   46fa0:	003eb506 	br	46a78 <__alt_data_end+0xfffc8278>
   46fa4:	d9002c17 	ldw	r4,176(sp)
   46fa8:	d9801e04 	addi	r6,sp,120
   46fac:	b80b883a 	mov	r5,r23
   46fb0:	005357c0 	call	5357c <__sprint_r>
   46fb4:	103b831e 	bne	r2,zero,45dc4 <__alt_data_end+0xfffc75c4>
   46fb8:	d8c02017 	ldw	r3,128(sp)
   46fbc:	dc401f17 	ldw	r17,124(sp)
   46fc0:	da000404 	addi	r8,sp,16
   46fc4:	003e8d06 	br	469fc <__alt_data_end+0xfffc81fc>
   46fc8:	d9002c17 	ldw	r4,176(sp)
   46fcc:	d9801e04 	addi	r6,sp,120
   46fd0:	b80b883a 	mov	r5,r23
   46fd4:	005357c0 	call	5357c <__sprint_r>
   46fd8:	103b7a1e 	bne	r2,zero,45dc4 <__alt_data_end+0xfffc75c4>
   46fdc:	d8c02017 	ldw	r3,128(sp)
   46fe0:	dc401f17 	ldw	r17,124(sp)
   46fe4:	dd800404 	addi	r22,sp,16
   46fe8:	003e8f06 	br	46a28 <__alt_data_end+0xfffc8228>
   46fec:	0027883a 	mov	r19,zero
   46ff0:	003f4a06 	br	46d1c <__alt_data_end+0xfffc851c>
   46ff4:	d9002c17 	ldw	r4,176(sp)
   46ff8:	d9801e04 	addi	r6,sp,120
   46ffc:	b80b883a 	mov	r5,r23
   47000:	005357c0 	call	5357c <__sprint_r>
   47004:	103b6f1e 	bne	r2,zero,45dc4 <__alt_data_end+0xfffc75c4>
   47008:	d8c02017 	ldw	r3,128(sp)
   4700c:	da000404 	addi	r8,sp,16
   47010:	003c9d06 	br	46288 <__alt_data_end+0xfffc7a88>
   47014:	04e7c83a 	sub	r19,zero,r19
   47018:	9804c03a 	cmpne	r2,r19,zero
   4701c:	05adc83a 	sub	r22,zero,r22
   47020:	b0adc83a 	sub	r22,r22,r2
   47024:	d8802917 	ldw	r2,164(sp)
   47028:	07000b44 	movi	fp,45
   4702c:	df002785 	stb	fp,158(sp)
   47030:	10017b16 	blt	r2,zero,47620 <___vfprintf_internal_r+0x1c64>
   47034:	00bfdfc4 	movi	r2,-129
   47038:	90a4703a 	and	r18,r18,r2
   4703c:	003bb106 	br	45f04 <__alt_data_end+0xfffc7704>
   47040:	d9003617 	ldw	r4,216(sp)
   47044:	d9403817 	ldw	r5,224(sp)
   47048:	da003d15 	stw	r8,244(sp)
   4704c:	004e9c40 	call	4e9c4 <__fpclassifyd>
   47050:	da003d17 	ldw	r8,244(sp)
   47054:	1000f026 	beq	r2,zero,47418 <___vfprintf_internal_r+0x1a5c>
   47058:	d9002917 	ldw	r4,164(sp)
   4705c:	05bff7c4 	movi	r22,-33
   47060:	00bfffc4 	movi	r2,-1
   47064:	8dac703a 	and	r22,r17,r22
   47068:	20820026 	beq	r4,r2,4786c <___vfprintf_internal_r+0x1eb0>
   4706c:	008011c4 	movi	r2,71
   47070:	b081f726 	beq	r22,r2,47850 <___vfprintf_internal_r+0x1e94>
   47074:	d9003817 	ldw	r4,224(sp)
   47078:	90c04014 	ori	r3,r18,256
   4707c:	d8c02b15 	stw	r3,172(sp)
   47080:	20021516 	blt	r4,zero,478d8 <___vfprintf_internal_r+0x1f1c>
   47084:	dcc03817 	ldw	r19,224(sp)
   47088:	d8002a05 	stb	zero,168(sp)
   4708c:	00801984 	movi	r2,102
   47090:	8881f926 	beq	r17,r2,47878 <___vfprintf_internal_r+0x1ebc>
   47094:	00801184 	movi	r2,70
   47098:	88821c26 	beq	r17,r2,4790c <___vfprintf_internal_r+0x1f50>
   4709c:	00801144 	movi	r2,69
   470a0:	b081ef26 	beq	r22,r2,47860 <___vfprintf_internal_r+0x1ea4>
   470a4:	d8c02917 	ldw	r3,164(sp)
   470a8:	d8802104 	addi	r2,sp,132
   470ac:	d8800315 	stw	r2,12(sp)
   470b0:	d9403617 	ldw	r5,216(sp)
   470b4:	d8802504 	addi	r2,sp,148
   470b8:	d9002c17 	ldw	r4,176(sp)
   470bc:	d8800215 	stw	r2,8(sp)
   470c0:	d8802604 	addi	r2,sp,152
   470c4:	d8c00015 	stw	r3,0(sp)
   470c8:	d8800115 	stw	r2,4(sp)
   470cc:	01c00084 	movi	r7,2
   470d0:	980d883a 	mov	r6,r19
   470d4:	d8c03c15 	stw	r3,240(sp)
   470d8:	da003d15 	stw	r8,244(sp)
   470dc:	004986c0 	call	4986c <_dtoa_r>
   470e0:	1021883a 	mov	r16,r2
   470e4:	008019c4 	movi	r2,103
   470e8:	d8c03c17 	ldw	r3,240(sp)
   470ec:	da003d17 	ldw	r8,244(sp)
   470f0:	88817126 	beq	r17,r2,476b8 <___vfprintf_internal_r+0x1cfc>
   470f4:	008011c4 	movi	r2,71
   470f8:	88829226 	beq	r17,r2,47b44 <___vfprintf_internal_r+0x2188>
   470fc:	80f9883a 	add	fp,r16,r3
   47100:	d9003617 	ldw	r4,216(sp)
   47104:	000d883a 	mov	r6,zero
   47108:	000f883a 	mov	r7,zero
   4710c:	980b883a 	mov	r5,r19
   47110:	da003d15 	stw	r8,244(sp)
   47114:	00581100 	call	58110 <__eqdf2>
   47118:	da003d17 	ldw	r8,244(sp)
   4711c:	10018d26 	beq	r2,zero,47754 <___vfprintf_internal_r+0x1d98>
   47120:	d8802117 	ldw	r2,132(sp)
   47124:	1700062e 	bgeu	r2,fp,47140 <___vfprintf_internal_r+0x1784>
   47128:	01000c04 	movi	r4,48
   4712c:	10c00044 	addi	r3,r2,1
   47130:	d8c02115 	stw	r3,132(sp)
   47134:	11000005 	stb	r4,0(r2)
   47138:	d8802117 	ldw	r2,132(sp)
   4713c:	173ffb36 	bltu	r2,fp,4712c <__alt_data_end+0xfffc892c>
   47140:	1405c83a 	sub	r2,r2,r16
   47144:	d8803315 	stw	r2,204(sp)
   47148:	008011c4 	movi	r2,71
   4714c:	b0817626 	beq	r22,r2,47728 <___vfprintf_internal_r+0x1d6c>
   47150:	00801944 	movi	r2,101
   47154:	1442810e 	bge	r2,r17,47b5c <___vfprintf_internal_r+0x21a0>
   47158:	d8c02617 	ldw	r3,152(sp)
   4715c:	00801984 	movi	r2,102
   47160:	d8c03215 	stw	r3,200(sp)
   47164:	8881fe26 	beq	r17,r2,47960 <___vfprintf_internal_r+0x1fa4>
   47168:	d8c03217 	ldw	r3,200(sp)
   4716c:	d9003317 	ldw	r4,204(sp)
   47170:	1901dd16 	blt	r3,r4,478e8 <___vfprintf_internal_r+0x1f2c>
   47174:	9480004c 	andi	r18,r18,1
   47178:	90022b1e 	bne	r18,zero,47a28 <___vfprintf_internal_r+0x206c>
   4717c:	1805883a 	mov	r2,r3
   47180:	18028016 	blt	r3,zero,47b84 <___vfprintf_internal_r+0x21c8>
   47184:	d8c03217 	ldw	r3,200(sp)
   47188:	044019c4 	movi	r17,103
   4718c:	d8c02e15 	stw	r3,184(sp)
   47190:	df002a07 	ldb	fp,168(sp)
   47194:	e001531e 	bne	fp,zero,476e4 <___vfprintf_internal_r+0x1d28>
   47198:	df002783 	ldbu	fp,158(sp)
   4719c:	d8802a15 	stw	r2,168(sp)
   471a0:	dc802b17 	ldw	r18,172(sp)
   471a4:	d8002915 	stw	zero,164(sp)
   471a8:	003bd106 	br	460f0 <__alt_data_end+0xfffc78f0>
   471ac:	d8802d17 	ldw	r2,180(sp)
   471b0:	d8c02d17 	ldw	r3,180(sp)
   471b4:	d9002d17 	ldw	r4,180(sp)
   471b8:	10800017 	ldw	r2,0(r2)
   471bc:	18c00117 	ldw	r3,4(r3)
   471c0:	21000204 	addi	r4,r4,8
   471c4:	d8803615 	stw	r2,216(sp)
   471c8:	d8c03815 	stw	r3,224(sp)
   471cc:	d9002d15 	stw	r4,180(sp)
   471d0:	003b7506 	br	45fa8 <__alt_data_end+0xfffc77a8>
   471d4:	ac400007 	ldb	r17,0(r21)
   471d8:	003a5906 	br	45b40 <__alt_data_end+0xfffc7340>
   471dc:	9080100c 	andi	r2,r18,64
   471e0:	1000a826 	beq	r2,zero,47484 <___vfprintf_internal_r+0x1ac8>
   471e4:	d9002d17 	ldw	r4,180(sp)
   471e8:	002d883a 	mov	r22,zero
   471ec:	24c0000b 	ldhu	r19,0(r4)
   471f0:	21000104 	addi	r4,r4,4
   471f4:	d9002d15 	stw	r4,180(sp)
   471f8:	003ccb06 	br	46528 <__alt_data_end+0xfffc7d28>
   471fc:	d8c02d17 	ldw	r3,180(sp)
   47200:	d9002917 	ldw	r4,164(sp)
   47204:	002d883a 	mov	r22,zero
   47208:	18800104 	addi	r2,r3,4
   4720c:	1cc00017 	ldw	r19,0(r3)
   47210:	203ebb0e 	bge	r4,zero,46d00 <__alt_data_end+0xfffc8500>
   47214:	003ef106 	br	46ddc <__alt_data_end+0xfffc85dc>
   47218:	9080040c 	andi	r2,r18,16
   4721c:	1000921e 	bne	r2,zero,47468 <___vfprintf_internal_r+0x1aac>
   47220:	9480100c 	andi	r18,r18,64
   47224:	90013926 	beq	r18,zero,4770c <___vfprintf_internal_r+0x1d50>
   47228:	d9002d17 	ldw	r4,180(sp)
   4722c:	d9402f17 	ldw	r5,188(sp)
   47230:	20800017 	ldw	r2,0(r4)
   47234:	21000104 	addi	r4,r4,4
   47238:	d9002d15 	stw	r4,180(sp)
   4723c:	1140000d 	sth	r5,0(r2)
   47240:	003a1606 	br	45a9c <__alt_data_end+0xfffc729c>
   47244:	9080100c 	andi	r2,r18,64
   47248:	10008026 	beq	r2,zero,4744c <___vfprintf_internal_r+0x1a90>
   4724c:	d8c02d17 	ldw	r3,180(sp)
   47250:	1cc0000f 	ldh	r19,0(r3)
   47254:	18c00104 	addi	r3,r3,4
   47258:	d8c02d15 	stw	r3,180(sp)
   4725c:	982dd7fa 	srai	r22,r19,31
   47260:	b005883a 	mov	r2,r22
   47264:	003b1f06 	br	45ee4 <__alt_data_end+0xfffc76e4>
   47268:	9080100c 	andi	r2,r18,64
   4726c:	d8002785 	stb	zero,158(sp)
   47270:	10008a1e 	bne	r2,zero,4749c <___vfprintf_internal_r+0x1ae0>
   47274:	d9402d17 	ldw	r5,180(sp)
   47278:	d8c02917 	ldw	r3,164(sp)
   4727c:	002d883a 	mov	r22,zero
   47280:	28800104 	addi	r2,r5,4
   47284:	2cc00017 	ldw	r19,0(r5)
   47288:	183e4b0e 	bge	r3,zero,46bb8 <__alt_data_end+0xfffc83b8>
   4728c:	9d86b03a 	or	r3,r19,r22
   47290:	d8802d15 	stw	r2,180(sp)
   47294:	183e4c1e 	bne	r3,zero,46bc8 <__alt_data_end+0xfffc83c8>
   47298:	0039883a 	mov	fp,zero
   4729c:	0005883a 	mov	r2,zero
   472a0:	003d4006 	br	467a4 <__alt_data_end+0xfffc7fa4>
   472a4:	014001b4 	movhi	r5,6
   472a8:	296c9384 	addi	r5,r5,-19890
   472ac:	d9402b15 	stw	r5,172(sp)
   472b0:	d9402b17 	ldw	r5,172(sp)
   472b4:	1c47883a 	add	r3,r3,r17
   472b8:	10800044 	addi	r2,r2,1
   472bc:	41400015 	stw	r5,0(r8)
   472c0:	44400115 	stw	r17,4(r8)
   472c4:	d8c02015 	stw	r3,128(sp)
   472c8:	d8801f15 	stw	r2,124(sp)
   472cc:	010001c4 	movi	r4,7
   472d0:	20bec816 	blt	r4,r2,46df4 <__alt_data_end+0xfffc85f4>
   472d4:	42000204 	addi	r8,r8,8
   472d8:	003ecd06 	br	46e10 <__alt_data_end+0xfffc8610>
   472dc:	d9002917 	ldw	r4,164(sp)
   472e0:	d8002785 	stb	zero,158(sp)
   472e4:	203d2d16 	blt	r4,zero,4679c <__alt_data_end+0xfffc7f9c>
   472e8:	00bfdfc4 	movi	r2,-129
   472ec:	90a4703a 	and	r18,r18,r2
   472f0:	003a9106 	br	45d38 <__alt_data_end+0xfffc7538>
   472f4:	010001b4 	movhi	r4,6
   472f8:	212c9384 	addi	r4,r4,-19890
   472fc:	d9002b15 	stw	r4,172(sp)
   47300:	003c0c06 	br	46334 <__alt_data_end+0xfffc7b34>
   47304:	d9002c17 	ldw	r4,176(sp)
   47308:	d9801e04 	addi	r6,sp,120
   4730c:	b80b883a 	mov	r5,r23
   47310:	005357c0 	call	5357c <__sprint_r>
   47314:	103aab1e 	bne	r2,zero,45dc4 <__alt_data_end+0xfffc75c4>
   47318:	d8c02017 	ldw	r3,128(sp)
   4731c:	da000404 	addi	r8,sp,16
   47320:	003d4106 	br	46828 <__alt_data_end+0xfffc8028>
   47324:	d8801f17 	ldw	r2,124(sp)
   47328:	014001b4 	movhi	r5,6
   4732c:	01000044 	movi	r4,1
   47330:	18c00044 	addi	r3,r3,1
   47334:	10800044 	addi	r2,r2,1
   47338:	296c9304 	addi	r5,r5,-19892
   4733c:	41000115 	stw	r4,4(r8)
   47340:	41400015 	stw	r5,0(r8)
   47344:	d8c02015 	stw	r3,128(sp)
   47348:	d8801f15 	stw	r2,124(sp)
   4734c:	010001c4 	movi	r4,7
   47350:	20805c16 	blt	r4,r2,474c4 <___vfprintf_internal_r+0x1b08>
   47354:	42000204 	addi	r8,r8,8
   47358:	8800041e 	bne	r17,zero,4736c <___vfprintf_internal_r+0x19b0>
   4735c:	d8803317 	ldw	r2,204(sp)
   47360:	1000021e 	bne	r2,zero,4736c <___vfprintf_internal_r+0x19b0>
   47364:	9080004c 	andi	r2,r18,1
   47368:	103c0926 	beq	r2,zero,46390 <__alt_data_end+0xfffc7b90>
   4736c:	d9003717 	ldw	r4,220(sp)
   47370:	d8801f17 	ldw	r2,124(sp)
   47374:	d9403417 	ldw	r5,208(sp)
   47378:	20c7883a 	add	r3,r4,r3
   4737c:	10800044 	addi	r2,r2,1
   47380:	41000115 	stw	r4,4(r8)
   47384:	41400015 	stw	r5,0(r8)
   47388:	d8c02015 	stw	r3,128(sp)
   4738c:	d8801f15 	stw	r2,124(sp)
   47390:	010001c4 	movi	r4,7
   47394:	20812116 	blt	r4,r2,4781c <___vfprintf_internal_r+0x1e60>
   47398:	42000204 	addi	r8,r8,8
   4739c:	0463c83a 	sub	r17,zero,r17
   473a0:	0440730e 	bge	zero,r17,47570 <___vfprintf_internal_r+0x1bb4>
   473a4:	05800404 	movi	r22,16
   473a8:	b440860e 	bge	r22,r17,475c4 <___vfprintf_internal_r+0x1c08>
   473ac:	014001b4 	movhi	r5,6
   473b0:	296c9384 	addi	r5,r5,-19890
   473b4:	d9402b15 	stw	r5,172(sp)
   473b8:	070001c4 	movi	fp,7
   473bc:	dcc02c17 	ldw	r19,176(sp)
   473c0:	00000306 	br	473d0 <___vfprintf_internal_r+0x1a14>
   473c4:	42000204 	addi	r8,r8,8
   473c8:	8c7ffc04 	addi	r17,r17,-16
   473cc:	b440800e 	bge	r22,r17,475d0 <___vfprintf_internal_r+0x1c14>
   473d0:	18c00404 	addi	r3,r3,16
   473d4:	10800044 	addi	r2,r2,1
   473d8:	45000015 	stw	r20,0(r8)
   473dc:	45800115 	stw	r22,4(r8)
   473e0:	d8c02015 	stw	r3,128(sp)
   473e4:	d8801f15 	stw	r2,124(sp)
   473e8:	e0bff60e 	bge	fp,r2,473c4 <__alt_data_end+0xfffc8bc4>
   473ec:	d9801e04 	addi	r6,sp,120
   473f0:	b80b883a 	mov	r5,r23
   473f4:	9809883a 	mov	r4,r19
   473f8:	005357c0 	call	5357c <__sprint_r>
   473fc:	103a711e 	bne	r2,zero,45dc4 <__alt_data_end+0xfffc75c4>
   47400:	d8c02017 	ldw	r3,128(sp)
   47404:	d8801f17 	ldw	r2,124(sp)
   47408:	da000404 	addi	r8,sp,16
   4740c:	003fee06 	br	473c8 <__alt_data_end+0xfffc8bc8>
   47410:	00bfffc4 	movi	r2,-1
   47414:	003a6f06 	br	45dd4 <__alt_data_end+0xfffc75d4>
   47418:	008011c4 	movi	r2,71
   4741c:	1440b816 	blt	r2,r17,47700 <___vfprintf_internal_r+0x1d44>
   47420:	040001b4 	movhi	r16,6
   47424:	842c8504 	addi	r16,r16,-19948
   47428:	00c000c4 	movi	r3,3
   4742c:	00bfdfc4 	movi	r2,-129
   47430:	d8c02a15 	stw	r3,168(sp)
   47434:	90a4703a 	and	r18,r18,r2
   47438:	df002783 	ldbu	fp,158(sp)
   4743c:	d8c02e15 	stw	r3,184(sp)
   47440:	d8002915 	stw	zero,164(sp)
   47444:	d8003215 	stw	zero,200(sp)
   47448:	003b2906 	br	460f0 <__alt_data_end+0xfffc78f0>
   4744c:	d9002d17 	ldw	r4,180(sp)
   47450:	24c00017 	ldw	r19,0(r4)
   47454:	21000104 	addi	r4,r4,4
   47458:	d9002d15 	stw	r4,180(sp)
   4745c:	982dd7fa 	srai	r22,r19,31
   47460:	b005883a 	mov	r2,r22
   47464:	003a9f06 	br	45ee4 <__alt_data_end+0xfffc76e4>
   47468:	d9402d17 	ldw	r5,180(sp)
   4746c:	d8c02f17 	ldw	r3,188(sp)
   47470:	28800017 	ldw	r2,0(r5)
   47474:	29400104 	addi	r5,r5,4
   47478:	d9402d15 	stw	r5,180(sp)
   4747c:	10c00015 	stw	r3,0(r2)
   47480:	00398606 	br	45a9c <__alt_data_end+0xfffc729c>
   47484:	d9402d17 	ldw	r5,180(sp)
   47488:	002d883a 	mov	r22,zero
   4748c:	2cc00017 	ldw	r19,0(r5)
   47490:	29400104 	addi	r5,r5,4
   47494:	d9402d15 	stw	r5,180(sp)
   47498:	003c2306 	br	46528 <__alt_data_end+0xfffc7d28>
   4749c:	d8c02d17 	ldw	r3,180(sp)
   474a0:	d9002917 	ldw	r4,164(sp)
   474a4:	002d883a 	mov	r22,zero
   474a8:	18800104 	addi	r2,r3,4
   474ac:	1cc0000b 	ldhu	r19,0(r3)
   474b0:	203dc10e 	bge	r4,zero,46bb8 <__alt_data_end+0xfffc83b8>
   474b4:	003f7506 	br	4728c <__alt_data_end+0xfffc8a8c>
   474b8:	040001b4 	movhi	r16,6
   474bc:	842c8304 	addi	r16,r16,-19956
   474c0:	003acc06 	br	45ff4 <__alt_data_end+0xfffc77f4>
   474c4:	d9002c17 	ldw	r4,176(sp)
   474c8:	d9801e04 	addi	r6,sp,120
   474cc:	b80b883a 	mov	r5,r23
   474d0:	005357c0 	call	5357c <__sprint_r>
   474d4:	103a3b1e 	bne	r2,zero,45dc4 <__alt_data_end+0xfffc75c4>
   474d8:	dc402617 	ldw	r17,152(sp)
   474dc:	d8c02017 	ldw	r3,128(sp)
   474e0:	da000404 	addi	r8,sp,16
   474e4:	003f9c06 	br	47358 <__alt_data_end+0xfffc8b58>
   474e8:	ac400043 	ldbu	r17,1(r21)
   474ec:	94800814 	ori	r18,r18,32
   474f0:	ad400044 	addi	r21,r21,1
   474f4:	8c403fcc 	andi	r17,r17,255
   474f8:	8c40201c 	xori	r17,r17,128
   474fc:	8c7fe004 	addi	r17,r17,-128
   47500:	00398f06 	br	45b40 <__alt_data_end+0xfffc7340>
   47504:	d8c02d15 	stw	r3,180(sp)
   47508:	0039883a 	mov	fp,zero
   4750c:	003e3506 	br	46de4 <__alt_data_end+0xfffc85e4>
   47510:	d9002c17 	ldw	r4,176(sp)
   47514:	d9801e04 	addi	r6,sp,120
   47518:	b80b883a 	mov	r5,r23
   4751c:	005357c0 	call	5357c <__sprint_r>
   47520:	103a281e 	bne	r2,zero,45dc4 <__alt_data_end+0xfffc75c4>
   47524:	d8c02017 	ldw	r3,128(sp)
   47528:	da000404 	addi	r8,sp,16
   4752c:	003cd006 	br	46870 <__alt_data_end+0xfffc8070>
   47530:	8009883a 	mov	r4,r16
   47534:	da003d15 	stw	r8,244(sp)
   47538:	00459240 	call	45924 <strlen>
   4753c:	d8802e15 	stw	r2,184(sp)
   47540:	da003d17 	ldw	r8,244(sp)
   47544:	103c340e 	bge	r2,zero,46618 <__alt_data_end+0xfffc7e18>
   47548:	0005883a 	mov	r2,zero
   4754c:	003c3206 	br	46618 <__alt_data_end+0xfffc7e18>
   47550:	d9002c17 	ldw	r4,176(sp)
   47554:	d9801e04 	addi	r6,sp,120
   47558:	b80b883a 	mov	r5,r23
   4755c:	005357c0 	call	5357c <__sprint_r>
   47560:	103a181e 	bne	r2,zero,45dc4 <__alt_data_end+0xfffc75c4>
   47564:	d8c02017 	ldw	r3,128(sp)
   47568:	d8801f17 	ldw	r2,124(sp)
   4756c:	da000404 	addi	r8,sp,16
   47570:	d9403317 	ldw	r5,204(sp)
   47574:	10800044 	addi	r2,r2,1
   47578:	44000015 	stw	r16,0(r8)
   4757c:	28c7883a 	add	r3,r5,r3
   47580:	003b7d06 	br	46378 <__alt_data_end+0xfffc7b78>
   47584:	010001b4 	movhi	r4,6
   47588:	212c9784 	addi	r4,r4,-19874
   4758c:	d9003515 	stw	r4,212(sp)
   47590:	003b1406 	br	461e4 <__alt_data_end+0xfffc79e4>
   47594:	013fffc4 	movi	r4,-1
   47598:	003a3506 	br	45e70 <__alt_data_end+0xfffc7670>
   4759c:	0023883a 	mov	r17,zero
   475a0:	003d9d06 	br	46c18 <__alt_data_end+0xfffc8418>
   475a4:	d9002c17 	ldw	r4,176(sp)
   475a8:	d9801e04 	addi	r6,sp,120
   475ac:	b80b883a 	mov	r5,r23
   475b0:	005357c0 	call	5357c <__sprint_r>
   475b4:	103a031e 	bne	r2,zero,45dc4 <__alt_data_end+0xfffc75c4>
   475b8:	d8c02017 	ldw	r3,128(sp)
   475bc:	da000404 	addi	r8,sp,16
   475c0:	003d9406 	br	46c14 <__alt_data_end+0xfffc8414>
   475c4:	010001b4 	movhi	r4,6
   475c8:	212c9384 	addi	r4,r4,-19890
   475cc:	d9002b15 	stw	r4,172(sp)
   475d0:	d9002b17 	ldw	r4,172(sp)
   475d4:	1c47883a 	add	r3,r3,r17
   475d8:	10800044 	addi	r2,r2,1
   475dc:	41000015 	stw	r4,0(r8)
   475e0:	44400115 	stw	r17,4(r8)
   475e4:	d8c02015 	stw	r3,128(sp)
   475e8:	d8801f15 	stw	r2,124(sp)
   475ec:	010001c4 	movi	r4,7
   475f0:	20bfd716 	blt	r4,r2,47550 <__alt_data_end+0xfffc8d50>
   475f4:	42000204 	addi	r8,r8,8
   475f8:	003fdd06 	br	47570 <__alt_data_end+0xfffc8d70>
   475fc:	d9002c17 	ldw	r4,176(sp)
   47600:	d9801e04 	addi	r6,sp,120
   47604:	b80b883a 	mov	r5,r23
   47608:	005357c0 	call	5357c <__sprint_r>
   4760c:	1039ed1e 	bne	r2,zero,45dc4 <__alt_data_end+0xfffc75c4>
   47610:	d8802617 	ldw	r2,152(sp)
   47614:	d8c02017 	ldw	r3,128(sp)
   47618:	da000404 	addi	r8,sp,16
   4761c:	003e1006 	br	46e60 <__alt_data_end+0xfffc8660>
   47620:	00800044 	movi	r2,1
   47624:	10803fcc 	andi	r2,r2,255
   47628:	00c00044 	movi	r3,1
   4762c:	10fa3526 	beq	r2,r3,45f04 <__alt_data_end+0xfffc7704>
   47630:	00c00084 	movi	r3,2
   47634:	10fbcb26 	beq	r2,r3,46564 <__alt_data_end+0xfffc7d64>
   47638:	003a8f06 	br	46078 <__alt_data_end+0xfffc7878>
   4763c:	010001b4 	movhi	r4,6
   47640:	212c9784 	addi	r4,r4,-19874
   47644:	d9003515 	stw	r4,212(sp)
   47648:	003b7606 	br	46424 <__alt_data_end+0xfffc7c24>
   4764c:	d8802917 	ldw	r2,164(sp)
   47650:	00c00184 	movi	r3,6
   47654:	1880012e 	bgeu	r3,r2,4765c <___vfprintf_internal_r+0x1ca0>
   47658:	1805883a 	mov	r2,r3
   4765c:	d8802e15 	stw	r2,184(sp)
   47660:	1000ef16 	blt	r2,zero,47a20 <___vfprintf_internal_r+0x2064>
   47664:	040001b4 	movhi	r16,6
   47668:	d8802a15 	stw	r2,168(sp)
   4766c:	dcc02d15 	stw	r19,180(sp)
   47670:	d8002915 	stw	zero,164(sp)
   47674:	d8003215 	stw	zero,200(sp)
   47678:	842c9104 	addi	r16,r16,-19900
   4767c:	0039883a 	mov	fp,zero
   47680:	003aa206 	br	4610c <__alt_data_end+0xfffc790c>
   47684:	0021883a 	mov	r16,zero
   47688:	003e0706 	br	46ea8 <__alt_data_end+0xfffc86a8>
   4768c:	d9002c17 	ldw	r4,176(sp)
   47690:	d9801e04 	addi	r6,sp,120
   47694:	b80b883a 	mov	r5,r23
   47698:	005357c0 	call	5357c <__sprint_r>
   4769c:	1039c91e 	bne	r2,zero,45dc4 <__alt_data_end+0xfffc75c4>
   476a0:	d8802617 	ldw	r2,152(sp)
   476a4:	d9403317 	ldw	r5,204(sp)
   476a8:	d8c02017 	ldw	r3,128(sp)
   476ac:	da000404 	addi	r8,sp,16
   476b0:	2885c83a 	sub	r2,r5,r2
   476b4:	003dfb06 	br	46ea4 <__alt_data_end+0xfffc86a4>
   476b8:	9080004c 	andi	r2,r18,1
   476bc:	103e8f1e 	bne	r2,zero,470fc <__alt_data_end+0xfffc88fc>
   476c0:	d8802117 	ldw	r2,132(sp)
   476c4:	003e9e06 	br	47140 <__alt_data_end+0xfffc8940>
   476c8:	1025883a 	mov	r18,r2
   476cc:	0039883a 	mov	fp,zero
   476d0:	00800084 	movi	r2,2
   476d4:	003fd306 	br	47624 <__alt_data_end+0xfffc8e24>
   476d8:	07000b44 	movi	fp,45
   476dc:	df002785 	stb	fp,158(sp)
   476e0:	003a4006 	br	45fe4 <__alt_data_end+0xfffc77e4>
   476e4:	00c00b44 	movi	r3,45
   476e8:	d8c02785 	stb	r3,158(sp)
   476ec:	d8802a15 	stw	r2,168(sp)
   476f0:	dc802b17 	ldw	r18,172(sp)
   476f4:	d8002915 	stw	zero,164(sp)
   476f8:	07000b44 	movi	fp,45
   476fc:	003a8006 	br	46100 <__alt_data_end+0xfffc7900>
   47700:	040001b4 	movhi	r16,6
   47704:	842c8604 	addi	r16,r16,-19944
   47708:	003f4706 	br	47428 <__alt_data_end+0xfffc8c28>
   4770c:	d8c02d17 	ldw	r3,180(sp)
   47710:	d9002f17 	ldw	r4,188(sp)
   47714:	18800017 	ldw	r2,0(r3)
   47718:	18c00104 	addi	r3,r3,4
   4771c:	d8c02d15 	stw	r3,180(sp)
   47720:	11000015 	stw	r4,0(r2)
   47724:	0038dd06 	br	45a9c <__alt_data_end+0xfffc729c>
   47728:	dd802617 	ldw	r22,152(sp)
   4772c:	00bfff44 	movi	r2,-3
   47730:	b0801c16 	blt	r22,r2,477a4 <___vfprintf_internal_r+0x1de8>
   47734:	d9402917 	ldw	r5,164(sp)
   47738:	2d801a16 	blt	r5,r22,477a4 <___vfprintf_internal_r+0x1de8>
   4773c:	dd803215 	stw	r22,200(sp)
   47740:	003e8906 	br	47168 <__alt_data_end+0xfffc8968>
   47744:	010001b4 	movhi	r4,6
   47748:	212c9384 	addi	r4,r4,-19890
   4774c:	d9002b15 	stw	r4,172(sp)
   47750:	003c9106 	br	46998 <__alt_data_end+0xfffc8198>
   47754:	e005883a 	mov	r2,fp
   47758:	003e7906 	br	47140 <__alt_data_end+0xfffc8940>
   4775c:	d9402917 	ldw	r5,164(sp)
   47760:	df002783 	ldbu	fp,158(sp)
   47764:	dcc02d15 	stw	r19,180(sp)
   47768:	d9402a15 	stw	r5,168(sp)
   4776c:	d9402e15 	stw	r5,184(sp)
   47770:	d8002915 	stw	zero,164(sp)
   47774:	d8003215 	stw	zero,200(sp)
   47778:	003a5d06 	br	460f0 <__alt_data_end+0xfffc78f0>
   4777c:	9080004c 	andi	r2,r18,1
   47780:	0039883a 	mov	fp,zero
   47784:	10000426 	beq	r2,zero,47798 <___vfprintf_internal_r+0x1ddc>
   47788:	00800c04 	movi	r2,48
   4778c:	dc001dc4 	addi	r16,sp,119
   47790:	d8801dc5 	stb	r2,119(sp)
   47794:	003b8006 	br	46598 <__alt_data_end+0xfffc7d98>
   47798:	d8002e15 	stw	zero,184(sp)
   4779c:	dc001e04 	addi	r16,sp,120
   477a0:	003a4d06 	br	460d8 <__alt_data_end+0xfffc78d8>
   477a4:	8c7fff84 	addi	r17,r17,-2
   477a8:	b5bfffc4 	addi	r22,r22,-1
   477ac:	dd802615 	stw	r22,152(sp)
   477b0:	dc4022c5 	stb	r17,139(sp)
   477b4:	b000bf16 	blt	r22,zero,47ab4 <___vfprintf_internal_r+0x20f8>
   477b8:	00800ac4 	movi	r2,43
   477bc:	d8802305 	stb	r2,140(sp)
   477c0:	00800244 	movi	r2,9
   477c4:	15807016 	blt	r2,r22,47988 <___vfprintf_internal_r+0x1fcc>
   477c8:	00800c04 	movi	r2,48
   477cc:	b5800c04 	addi	r22,r22,48
   477d0:	d8802345 	stb	r2,141(sp)
   477d4:	dd802385 	stb	r22,142(sp)
   477d8:	d88023c4 	addi	r2,sp,143
   477dc:	df0022c4 	addi	fp,sp,139
   477e0:	d8c03317 	ldw	r3,204(sp)
   477e4:	1739c83a 	sub	fp,r2,fp
   477e8:	d9003317 	ldw	r4,204(sp)
   477ec:	e0c7883a 	add	r3,fp,r3
   477f0:	df003a15 	stw	fp,232(sp)
   477f4:	d8c02e15 	stw	r3,184(sp)
   477f8:	00800044 	movi	r2,1
   477fc:	1100b30e 	bge	r2,r4,47acc <___vfprintf_internal_r+0x2110>
   47800:	d8c02e17 	ldw	r3,184(sp)
   47804:	18c00044 	addi	r3,r3,1
   47808:	d8c02e15 	stw	r3,184(sp)
   4780c:	1805883a 	mov	r2,r3
   47810:	1800ac16 	blt	r3,zero,47ac4 <___vfprintf_internal_r+0x2108>
   47814:	d8003215 	stw	zero,200(sp)
   47818:	003e5d06 	br	47190 <__alt_data_end+0xfffc8990>
   4781c:	d9002c17 	ldw	r4,176(sp)
   47820:	d9801e04 	addi	r6,sp,120
   47824:	b80b883a 	mov	r5,r23
   47828:	005357c0 	call	5357c <__sprint_r>
   4782c:	1039651e 	bne	r2,zero,45dc4 <__alt_data_end+0xfffc75c4>
   47830:	dc402617 	ldw	r17,152(sp)
   47834:	d8c02017 	ldw	r3,128(sp)
   47838:	d8801f17 	ldw	r2,124(sp)
   4783c:	da000404 	addi	r8,sp,16
   47840:	003ed606 	br	4739c <__alt_data_end+0xfffc8b9c>
   47844:	582b883a 	mov	r21,r11
   47848:	d8002915 	stw	zero,164(sp)
   4784c:	0038bd06 	br	45b44 <__alt_data_end+0xfffc7344>
   47850:	d8802917 	ldw	r2,164(sp)
   47854:	103e071e 	bne	r2,zero,47074 <__alt_data_end+0xfffc8874>
   47858:	dc002915 	stw	r16,164(sp)
   4785c:	003e0506 	br	47074 <__alt_data_end+0xfffc8874>
   47860:	d9002917 	ldw	r4,164(sp)
   47864:	20c00044 	addi	r3,r4,1
   47868:	003e0f06 	br	470a8 <__alt_data_end+0xfffc88a8>
   4786c:	01400184 	movi	r5,6
   47870:	d9402915 	stw	r5,164(sp)
   47874:	003dff06 	br	47074 <__alt_data_end+0xfffc8874>
   47878:	d8802104 	addi	r2,sp,132
   4787c:	d8800315 	stw	r2,12(sp)
   47880:	d8802504 	addi	r2,sp,148
   47884:	d8800215 	stw	r2,8(sp)
   47888:	d8802604 	addi	r2,sp,152
   4788c:	d8800115 	stw	r2,4(sp)
   47890:	d8802917 	ldw	r2,164(sp)
   47894:	d9403617 	ldw	r5,216(sp)
   47898:	d9002c17 	ldw	r4,176(sp)
   4789c:	d8800015 	stw	r2,0(sp)
   478a0:	01c000c4 	movi	r7,3
   478a4:	980d883a 	mov	r6,r19
   478a8:	da003d15 	stw	r8,244(sp)
   478ac:	004986c0 	call	4986c <_dtoa_r>
   478b0:	d8c02917 	ldw	r3,164(sp)
   478b4:	da003d17 	ldw	r8,244(sp)
   478b8:	1021883a 	mov	r16,r2
   478bc:	10f9883a 	add	fp,r2,r3
   478c0:	81000007 	ldb	r4,0(r16)
   478c4:	00800c04 	movi	r2,48
   478c8:	20805e26 	beq	r4,r2,47a44 <___vfprintf_internal_r+0x2088>
   478cc:	d8c02617 	ldw	r3,152(sp)
   478d0:	e0f9883a 	add	fp,fp,r3
   478d4:	003e0a06 	br	47100 <__alt_data_end+0xfffc8900>
   478d8:	00c00b44 	movi	r3,45
   478dc:	24e0003c 	xorhi	r19,r4,32768
   478e0:	d8c02a05 	stb	r3,168(sp)
   478e4:	003de906 	br	4708c <__alt_data_end+0xfffc888c>
   478e8:	d8c03217 	ldw	r3,200(sp)
   478ec:	00c07a0e 	bge	zero,r3,47ad8 <___vfprintf_internal_r+0x211c>
   478f0:	00800044 	movi	r2,1
   478f4:	d9003317 	ldw	r4,204(sp)
   478f8:	1105883a 	add	r2,r2,r4
   478fc:	d8802e15 	stw	r2,184(sp)
   47900:	10004e16 	blt	r2,zero,47a3c <___vfprintf_internal_r+0x2080>
   47904:	044019c4 	movi	r17,103
   47908:	003e2106 	br	47190 <__alt_data_end+0xfffc8990>
   4790c:	d9002917 	ldw	r4,164(sp)
   47910:	d8802104 	addi	r2,sp,132
   47914:	d8800315 	stw	r2,12(sp)
   47918:	d9000015 	stw	r4,0(sp)
   4791c:	d8802504 	addi	r2,sp,148
   47920:	d9403617 	ldw	r5,216(sp)
   47924:	d9002c17 	ldw	r4,176(sp)
   47928:	d8800215 	stw	r2,8(sp)
   4792c:	d8802604 	addi	r2,sp,152
   47930:	d8800115 	stw	r2,4(sp)
   47934:	01c000c4 	movi	r7,3
   47938:	980d883a 	mov	r6,r19
   4793c:	da003d15 	stw	r8,244(sp)
   47940:	004986c0 	call	4986c <_dtoa_r>
   47944:	d8c02917 	ldw	r3,164(sp)
   47948:	da003d17 	ldw	r8,244(sp)
   4794c:	1021883a 	mov	r16,r2
   47950:	00801184 	movi	r2,70
   47954:	80f9883a 	add	fp,r16,r3
   47958:	88bfd926 	beq	r17,r2,478c0 <__alt_data_end+0xfffc90c0>
   4795c:	003de806 	br	47100 <__alt_data_end+0xfffc8900>
   47960:	d9002917 	ldw	r4,164(sp)
   47964:	00c04d0e 	bge	zero,r3,47a9c <___vfprintf_internal_r+0x20e0>
   47968:	2000441e 	bne	r4,zero,47a7c <___vfprintf_internal_r+0x20c0>
   4796c:	9480004c 	andi	r18,r18,1
   47970:	9000421e 	bne	r18,zero,47a7c <___vfprintf_internal_r+0x20c0>
   47974:	1805883a 	mov	r2,r3
   47978:	18007016 	blt	r3,zero,47b3c <___vfprintf_internal_r+0x2180>
   4797c:	d8c03217 	ldw	r3,200(sp)
   47980:	d8c02e15 	stw	r3,184(sp)
   47984:	003e0206 	br	47190 <__alt_data_end+0xfffc8990>
   47988:	df0022c4 	addi	fp,sp,139
   4798c:	dc002915 	stw	r16,164(sp)
   47990:	4027883a 	mov	r19,r8
   47994:	e021883a 	mov	r16,fp
   47998:	b009883a 	mov	r4,r22
   4799c:	01400284 	movi	r5,10
   479a0:	00455000 	call	45500 <__modsi3>
   479a4:	10800c04 	addi	r2,r2,48
   479a8:	843fffc4 	addi	r16,r16,-1
   479ac:	b009883a 	mov	r4,r22
   479b0:	01400284 	movi	r5,10
   479b4:	80800005 	stb	r2,0(r16)
   479b8:	004547c0 	call	4547c <__divsi3>
   479bc:	102d883a 	mov	r22,r2
   479c0:	00800244 	movi	r2,9
   479c4:	15bff416 	blt	r2,r22,47998 <__alt_data_end+0xfffc9198>
   479c8:	9811883a 	mov	r8,r19
   479cc:	b0800c04 	addi	r2,r22,48
   479d0:	8027883a 	mov	r19,r16
   479d4:	997fffc4 	addi	r5,r19,-1
   479d8:	98bfffc5 	stb	r2,-1(r19)
   479dc:	dc002917 	ldw	r16,164(sp)
   479e0:	2f006a2e 	bgeu	r5,fp,47b8c <___vfprintf_internal_r+0x21d0>
   479e4:	d9c02384 	addi	r7,sp,142
   479e8:	3ccfc83a 	sub	r7,r7,r19
   479ec:	d9002344 	addi	r4,sp,141
   479f0:	e1cf883a 	add	r7,fp,r7
   479f4:	00000106 	br	479fc <___vfprintf_internal_r+0x2040>
   479f8:	28800003 	ldbu	r2,0(r5)
   479fc:	20800005 	stb	r2,0(r4)
   47a00:	21000044 	addi	r4,r4,1
   47a04:	29400044 	addi	r5,r5,1
   47a08:	393ffb1e 	bne	r7,r4,479f8 <__alt_data_end+0xfffc91f8>
   47a0c:	d8802304 	addi	r2,sp,140
   47a10:	14c5c83a 	sub	r2,r2,r19
   47a14:	d8c02344 	addi	r3,sp,141
   47a18:	1885883a 	add	r2,r3,r2
   47a1c:	003f7006 	br	477e0 <__alt_data_end+0xfffc8fe0>
   47a20:	0005883a 	mov	r2,zero
   47a24:	003f0f06 	br	47664 <__alt_data_end+0xfffc8e64>
   47a28:	d8c03217 	ldw	r3,200(sp)
   47a2c:	18c00044 	addi	r3,r3,1
   47a30:	d8c02e15 	stw	r3,184(sp)
   47a34:	1805883a 	mov	r2,r3
   47a38:	183fb20e 	bge	r3,zero,47904 <__alt_data_end+0xfffc9104>
   47a3c:	0005883a 	mov	r2,zero
   47a40:	003fb006 	br	47904 <__alt_data_end+0xfffc9104>
   47a44:	d9003617 	ldw	r4,216(sp)
   47a48:	000d883a 	mov	r6,zero
   47a4c:	000f883a 	mov	r7,zero
   47a50:	980b883a 	mov	r5,r19
   47a54:	d8c03c15 	stw	r3,240(sp)
   47a58:	da003d15 	stw	r8,244(sp)
   47a5c:	00581100 	call	58110 <__eqdf2>
   47a60:	d8c03c17 	ldw	r3,240(sp)
   47a64:	da003d17 	ldw	r8,244(sp)
   47a68:	103f9826 	beq	r2,zero,478cc <__alt_data_end+0xfffc90cc>
   47a6c:	00800044 	movi	r2,1
   47a70:	10c7c83a 	sub	r3,r2,r3
   47a74:	d8c02615 	stw	r3,152(sp)
   47a78:	003f9506 	br	478d0 <__alt_data_end+0xfffc90d0>
   47a7c:	d9002917 	ldw	r4,164(sp)
   47a80:	d8c03217 	ldw	r3,200(sp)
   47a84:	20800044 	addi	r2,r4,1
   47a88:	1885883a 	add	r2,r3,r2
   47a8c:	d8802e15 	stw	r2,184(sp)
   47a90:	103dbf0e 	bge	r2,zero,47190 <__alt_data_end+0xfffc8990>
   47a94:	0005883a 	mov	r2,zero
   47a98:	003dbd06 	br	47190 <__alt_data_end+0xfffc8990>
   47a9c:	2000211e 	bne	r4,zero,47b24 <___vfprintf_internal_r+0x2168>
   47aa0:	9480004c 	andi	r18,r18,1
   47aa4:	90001f1e 	bne	r18,zero,47b24 <___vfprintf_internal_r+0x2168>
   47aa8:	00800044 	movi	r2,1
   47aac:	d8802e15 	stw	r2,184(sp)
   47ab0:	003db706 	br	47190 <__alt_data_end+0xfffc8990>
   47ab4:	00800b44 	movi	r2,45
   47ab8:	05adc83a 	sub	r22,zero,r22
   47abc:	d8802305 	stb	r2,140(sp)
   47ac0:	003f3f06 	br	477c0 <__alt_data_end+0xfffc8fc0>
   47ac4:	0005883a 	mov	r2,zero
   47ac8:	003f5206 	br	47814 <__alt_data_end+0xfffc9014>
   47acc:	90a4703a 	and	r18,r18,r2
   47ad0:	903f4e26 	beq	r18,zero,4780c <__alt_data_end+0xfffc900c>
   47ad4:	003f4a06 	br	47800 <__alt_data_end+0xfffc9000>
   47ad8:	00800084 	movi	r2,2
   47adc:	10c5c83a 	sub	r2,r2,r3
   47ae0:	003f8406 	br	478f4 <__alt_data_end+0xfffc90f4>
   47ae4:	d8802d17 	ldw	r2,180(sp)
   47ae8:	d9002d17 	ldw	r4,180(sp)
   47aec:	ac400043 	ldbu	r17,1(r21)
   47af0:	10800017 	ldw	r2,0(r2)
   47af4:	582b883a 	mov	r21,r11
   47af8:	d8802915 	stw	r2,164(sp)
   47afc:	20800104 	addi	r2,r4,4
   47b00:	d9002917 	ldw	r4,164(sp)
   47b04:	d8802d15 	stw	r2,180(sp)
   47b08:	203e7a0e 	bge	r4,zero,474f4 <__alt_data_end+0xfffc8cf4>
   47b0c:	8c403fcc 	andi	r17,r17,255
   47b10:	00bfffc4 	movi	r2,-1
   47b14:	8c40201c 	xori	r17,r17,128
   47b18:	d8802915 	stw	r2,164(sp)
   47b1c:	8c7fe004 	addi	r17,r17,-128
   47b20:	00380706 	br	45b40 <__alt_data_end+0xfffc7340>
   47b24:	d8c02917 	ldw	r3,164(sp)
   47b28:	18c00084 	addi	r3,r3,2
   47b2c:	d8c02e15 	stw	r3,184(sp)
   47b30:	1805883a 	mov	r2,r3
   47b34:	183d960e 	bge	r3,zero,47190 <__alt_data_end+0xfffc8990>
   47b38:	003fd606 	br	47a94 <__alt_data_end+0xfffc9294>
   47b3c:	0005883a 	mov	r2,zero
   47b40:	003f8e06 	br	4797c <__alt_data_end+0xfffc917c>
   47b44:	9080004c 	andi	r2,r18,1
   47b48:	103f811e 	bne	r2,zero,47950 <__alt_data_end+0xfffc9150>
   47b4c:	d8802117 	ldw	r2,132(sp)
   47b50:	1405c83a 	sub	r2,r2,r16
   47b54:	d8803315 	stw	r2,204(sp)
   47b58:	b47ef326 	beq	r22,r17,47728 <__alt_data_end+0xfffc8f28>
   47b5c:	dd802617 	ldw	r22,152(sp)
   47b60:	003f1106 	br	477a8 <__alt_data_end+0xfffc8fa8>
   47b64:	d9c02785 	stb	r7,158(sp)
   47b68:	00390406 	br	45f7c <__alt_data_end+0xfffc777c>
   47b6c:	d9c02785 	stb	r7,158(sp)
   47b70:	0038d306 	br	45ec0 <__alt_data_end+0xfffc76c0>
   47b74:	d9c02785 	stb	r7,158(sp)
   47b78:	003a6106 	br	46500 <__alt_data_end+0xfffc7d00>
   47b7c:	d9c02785 	stb	r7,158(sp)
   47b80:	003af806 	br	46764 <__alt_data_end+0xfffc7f64>
   47b84:	0005883a 	mov	r2,zero
   47b88:	003d7e06 	br	47184 <__alt_data_end+0xfffc8984>
   47b8c:	d8802344 	addi	r2,sp,141
   47b90:	003f1306 	br	477e0 <__alt_data_end+0xfffc8fe0>
   47b94:	d9c02785 	stb	r7,158(sp)
   47b98:	00392306 	br	46028 <__alt_data_end+0xfffc7828>
   47b9c:	d9c02785 	stb	r7,158(sp)
   47ba0:	003aa906 	br	46648 <__alt_data_end+0xfffc7e48>
   47ba4:	d9c02785 	stb	r7,158(sp)
   47ba8:	003a3d06 	br	464a0 <__alt_data_end+0xfffc7ca0>
   47bac:	d9c02785 	stb	r7,158(sp)
   47bb0:	003aca06 	br	466dc <__alt_data_end+0xfffc7edc>

00047bb4 <__vfprintf_internal>:
   47bb4:	008001b4 	movhi	r2,6
   47bb8:	10b55004 	addi	r2,r2,-10944
   47bbc:	300f883a 	mov	r7,r6
   47bc0:	280d883a 	mov	r6,r5
   47bc4:	200b883a 	mov	r5,r4
   47bc8:	11000017 	ldw	r4,0(r2)
   47bcc:	00459bc1 	jmpi	459bc <___vfprintf_internal_r>

00047bd0 <__sbprintf>:
   47bd0:	2880030b 	ldhu	r2,12(r5)
   47bd4:	2ac01917 	ldw	r11,100(r5)
   47bd8:	2a80038b 	ldhu	r10,14(r5)
   47bdc:	2a400717 	ldw	r9,28(r5)
   47be0:	2a000917 	ldw	r8,36(r5)
   47be4:	defee204 	addi	sp,sp,-1144
   47be8:	00c10004 	movi	r3,1024
   47bec:	dc011a15 	stw	r16,1128(sp)
   47bf0:	10bfff4c 	andi	r2,r2,65533
   47bf4:	2821883a 	mov	r16,r5
   47bf8:	d8cb883a 	add	r5,sp,r3
   47bfc:	dc811c15 	stw	r18,1136(sp)
   47c00:	dc411b15 	stw	r17,1132(sp)
   47c04:	dfc11d15 	stw	ra,1140(sp)
   47c08:	2025883a 	mov	r18,r4
   47c0c:	d881030d 	sth	r2,1036(sp)
   47c10:	dac11915 	stw	r11,1124(sp)
   47c14:	da81038d 	sth	r10,1038(sp)
   47c18:	da410715 	stw	r9,1052(sp)
   47c1c:	da010915 	stw	r8,1060(sp)
   47c20:	dec10015 	stw	sp,1024(sp)
   47c24:	dec10415 	stw	sp,1040(sp)
   47c28:	d8c10215 	stw	r3,1032(sp)
   47c2c:	d8c10515 	stw	r3,1044(sp)
   47c30:	d8010615 	stw	zero,1048(sp)
   47c34:	00459bc0 	call	459bc <___vfprintf_internal_r>
   47c38:	1023883a 	mov	r17,r2
   47c3c:	10000416 	blt	r2,zero,47c50 <__sbprintf+0x80>
   47c40:	d9410004 	addi	r5,sp,1024
   47c44:	9009883a 	mov	r4,r18
   47c48:	004b1100 	call	4b110 <_fflush_r>
   47c4c:	10000d1e 	bne	r2,zero,47c84 <__sbprintf+0xb4>
   47c50:	d881030b 	ldhu	r2,1036(sp)
   47c54:	1080100c 	andi	r2,r2,64
   47c58:	10000326 	beq	r2,zero,47c68 <__sbprintf+0x98>
   47c5c:	8080030b 	ldhu	r2,12(r16)
   47c60:	10801014 	ori	r2,r2,64
   47c64:	8080030d 	sth	r2,12(r16)
   47c68:	8805883a 	mov	r2,r17
   47c6c:	dfc11d17 	ldw	ra,1140(sp)
   47c70:	dc811c17 	ldw	r18,1136(sp)
   47c74:	dc411b17 	ldw	r17,1132(sp)
   47c78:	dc011a17 	ldw	r16,1128(sp)
   47c7c:	dec11e04 	addi	sp,sp,1144
   47c80:	f800283a 	ret
   47c84:	047fffc4 	movi	r17,-1
   47c88:	003ff106 	br	47c50 <__alt_data_end+0xfffc9450>

00047c8c <__svfscanf_r>:
   47c8c:	2880030b 	ldhu	r2,12(r5)
   47c90:	deff4b04 	addi	sp,sp,-724
   47c94:	df00b315 	stw	fp,716(sp)
   47c98:	dd80b115 	stw	r22,708(sp)
   47c9c:	dfc0b415 	stw	ra,720(sp)
   47ca0:	ddc0b215 	stw	r23,712(sp)
   47ca4:	dd40b015 	stw	r21,704(sp)
   47ca8:	dd00af15 	stw	r20,700(sp)
   47cac:	dcc0ae15 	stw	r19,696(sp)
   47cb0:	dc80ad15 	stw	r18,692(sp)
   47cb4:	dc40ac15 	stw	r17,688(sp)
   47cb8:	dc00ab15 	stw	r16,684(sp)
   47cbc:	10c8000c 	andi	r3,r2,8192
   47cc0:	d9c09c15 	stw	r7,624(sp)
   47cc4:	2839883a 	mov	fp,r5
   47cc8:	202d883a 	mov	r22,r4
   47ccc:	1800061e 	bne	r3,zero,47ce8 <__svfscanf_r+0x5c>
   47cd0:	29001917 	ldw	r4,100(r5)
   47cd4:	00f7ffc4 	movi	r3,-8193
   47cd8:	10880014 	ori	r2,r2,8192
   47cdc:	20c6703a 	and	r3,r4,r3
   47ce0:	2880030d 	sth	r2,12(r5)
   47ce4:	28c01915 	stw	r3,100(r5)
   47ce8:	30800003 	ldbu	r2,0(r6)
   47cec:	0021883a 	mov	r16,zero
   47cf0:	05c001b4 	movhi	r23,6
   47cf4:	d800a115 	stw	zero,644(sp)
   47cf8:	d8009e15 	stw	zero,632(sp)
   47cfc:	d800a015 	stw	zero,640(sp)
   47d00:	d8809b15 	stw	r2,620(sp)
   47d04:	bdf54e04 	addi	r23,r23,-10952
   47d08:	8025883a 	mov	r18,r16
   47d0c:	35000044 	addi	r20,r6,1
   47d10:	10001e26 	beq	r2,zero,47d8c <__svfscanf_r+0x100>
   47d14:	b9c00017 	ldw	r7,0(r23)
   47d18:	3887883a 	add	r3,r7,r2
   47d1c:	18c00043 	ldbu	r3,1(r3)
   47d20:	18c0020c 	andi	r3,r3,8
   47d24:	18001b26 	beq	r3,zero,47d94 <__svfscanf_r+0x108>
   47d28:	e0800117 	ldw	r2,4(fp)
   47d2c:	00800e0e 	bge	zero,r2,47d68 <__svfscanf_r+0xdc>
   47d30:	e0c00017 	ldw	r3,0(fp)
   47d34:	b9000017 	ldw	r4,0(r23)
   47d38:	18800003 	ldbu	r2,0(r3)
   47d3c:	2085883a 	add	r2,r4,r2
   47d40:	10800043 	ldbu	r2,1(r2)
   47d44:	1080020c 	andi	r2,r2,8
   47d48:	10000b26 	beq	r2,zero,47d78 <__svfscanf_r+0xec>
   47d4c:	e0800117 	ldw	r2,4(fp)
   47d50:	18c00044 	addi	r3,r3,1
   47d54:	e0c00015 	stw	r3,0(fp)
   47d58:	10bfffc4 	addi	r2,r2,-1
   47d5c:	e0800115 	stw	r2,4(fp)
   47d60:	94800044 	addi	r18,r18,1
   47d64:	00bff216 	blt	zero,r2,47d30 <__alt_data_end+0xfffc9530>
   47d68:	e00b883a 	mov	r5,fp
   47d6c:	b009883a 	mov	r4,r22
   47d70:	004e7f00 	call	4e7f0 <__srefill_r>
   47d74:	103fee26 	beq	r2,zero,47d30 <__alt_data_end+0xfffc9530>
   47d78:	a00d883a 	mov	r6,r20
   47d7c:	30800003 	ldbu	r2,0(r6)
   47d80:	35000044 	addi	r20,r6,1
   47d84:	d8809b15 	stw	r2,620(sp)
   47d88:	103fe21e 	bne	r2,zero,47d14 <__alt_data_end+0xfffc9514>
   47d8c:	d880a017 	ldw	r2,640(sp)
   47d90:	00009906 	br	47ff8 <__svfscanf_r+0x36c>
   47d94:	00c00944 	movi	r3,37
   47d98:	10c0881e 	bne	r2,r3,47fbc <__svfscanf_r+0x330>
   47d9c:	30c00043 	ldbu	r3,1(r6)
   47da0:	0023883a 	mov	r17,zero
   47da4:	0027883a 	mov	r19,zero
   47da8:	01001e04 	movi	r4,120
   47dac:	01401b04 	movi	r5,108
   47db0:	a1800044 	addi	r6,r20,1
   47db4:	20c0a236 	bltu	r4,r3,48040 <__svfscanf_r+0x3b4>
   47db8:	180490ba 	slli	r2,r3,2
   47dbc:	02000134 	movhi	r8,4
   47dc0:	421f7404 	addi	r8,r8,32208
   47dc4:	1205883a 	add	r2,r2,r8
   47dc8:	10800017 	ldw	r2,0(r2)
   47dcc:	1000683a 	jmp	r2
   47dd0:	00047ff4 	movhi	zero,4607
   47dd4:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47dd8:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47ddc:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47de0:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47de4:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47de8:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47dec:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47df0:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47df4:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47df8:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47dfc:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e00:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e04:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e08:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e0c:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e10:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e14:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e18:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e1c:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e20:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e24:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e28:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e2c:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e30:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e34:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e38:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e3c:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e40:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e44:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e48:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e4c:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e50:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e54:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e58:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e5c:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e60:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e64:	00047fb4 	movhi	zero,4606
   47e68:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e6c:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e70:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e74:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e78:	00048028 	cmpgeui	zero,zero,4608
   47e7c:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e80:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e84:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e88:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e8c:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47e90:	0004815c 	xori	zero,zero,4613
   47e94:	0004815c 	xori	zero,zero,4613
   47e98:	0004815c 	xori	zero,zero,4613
   47e9c:	0004815c 	xori	zero,zero,4613
   47ea0:	0004815c 	xori	zero,zero,4613
   47ea4:	0004815c 	xori	zero,zero,4613
   47ea8:	0004815c 	xori	zero,zero,4613
   47eac:	0004815c 	xori	zero,zero,4613
   47eb0:	0004815c 	xori	zero,zero,4613
   47eb4:	0004815c 	xori	zero,zero,4613
   47eb8:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47ebc:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47ec0:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47ec4:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47ec8:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47ecc:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47ed0:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47ed4:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47ed8:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47edc:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47ee0:	00048130 	cmpltui	zero,zero,4612
   47ee4:	000481e0 	cmpeqi	zero,zero,4615
   47ee8:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47eec:	000481e0 	cmpeqi	zero,zero,4615
   47ef0:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47ef4:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47ef8:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47efc:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47f00:	000481cc 	andi	zero,zero,4615
   47f04:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47f08:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47f0c:	000481a0 	cmpeqi	zero,zero,4614
   47f10:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47f14:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47f18:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47f1c:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47f20:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47f24:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47f28:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47f2c:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47f30:	00048178 	rdprs	zero,zero,4613
   47f34:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47f38:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47f3c:	00048314 	movui	zero,4620
   47f40:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47f44:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47f48:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47f4c:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47f50:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47f54:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47f58:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47f5c:	00048298 	cmpnei	zero,zero,4618
   47f60:	00048270 	cmpltui	zero,zero,4617
   47f64:	000481e0 	cmpeqi	zero,zero,4615
   47f68:	000481e0 	cmpeqi	zero,zero,4615
   47f6c:	000481e0 	cmpeqi	zero,zero,4615
   47f70:	0004825c 	xori	zero,zero,4617
   47f74:	000483a0 	cmpeqi	zero,zero,4622
   47f78:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47f7c:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47f80:	00048248 	cmpgei	zero,zero,4617
   47f84:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47f88:	00048218 	cmpnei	zero,zero,4616
   47f8c:	000481f4 	movhi	zero,4615
   47f90:	00048104 	movi	zero,4612
   47f94:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47f98:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47f9c:	000480f0 	cmpltui	zero,zero,4611
   47fa0:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47fa4:	00048078 	rdprs	zero,zero,4609
   47fa8:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47fac:	00048040 	call	4804 <__alt_mem_onchip_memory2-0x3b7fc>
   47fb0:	00048178 	rdprs	zero,zero,4613
   47fb4:	d9809d15 	stw	r6,628(sp)
   47fb8:	3029883a 	mov	r20,r6
   47fbc:	e0800117 	ldw	r2,4(fp)
   47fc0:	0081aa0e 	bge	zero,r2,4866c <__svfscanf_r+0x9e0>
   47fc4:	e0800017 	ldw	r2,0(fp)
   47fc8:	a0ffffc3 	ldbu	r3,-1(r20)
   47fcc:	11000003 	ldbu	r4,0(r2)
   47fd0:	20ff6e1e 	bne	r4,r3,47d8c <__alt_data_end+0xfffc958c>
   47fd4:	e0c00117 	ldw	r3,4(fp)
   47fd8:	10800044 	addi	r2,r2,1
   47fdc:	e0800015 	stw	r2,0(fp)
   47fe0:	18bfffc4 	addi	r2,r3,-1
   47fe4:	e0800115 	stw	r2,4(fp)
   47fe8:	94800044 	addi	r18,r18,1
   47fec:	a00d883a 	mov	r6,r20
   47ff0:	003f6206 	br	47d7c <__alt_data_end+0xfffc957c>
   47ff4:	00bfffc4 	movi	r2,-1
   47ff8:	dfc0b417 	ldw	ra,720(sp)
   47ffc:	df00b317 	ldw	fp,716(sp)
   48000:	ddc0b217 	ldw	r23,712(sp)
   48004:	dd80b117 	ldw	r22,708(sp)
   48008:	dd40b017 	ldw	r21,704(sp)
   4800c:	dd00af17 	ldw	r20,700(sp)
   48010:	dcc0ae17 	ldw	r19,696(sp)
   48014:	dc80ad17 	ldw	r18,692(sp)
   48018:	dc40ac17 	ldw	r17,688(sp)
   4801c:	dc00ab17 	ldw	r16,684(sp)
   48020:	dec0b504 	addi	sp,sp,724
   48024:	f800283a 	ret
   48028:	a0800043 	ldbu	r2,1(r20)
   4802c:	3029883a 	mov	r20,r6
   48030:	8c400414 	ori	r17,r17,16
   48034:	10c03fcc 	andi	r3,r2,255
   48038:	a1800044 	addi	r6,r20,1
   4803c:	20ff5e2e 	bgeu	r4,r3,47db8 <__alt_data_end+0xfffc95b8>
   48040:	38c7883a 	add	r3,r7,r3
   48044:	18800043 	ldbu	r2,1(r3)
   48048:	d9809d15 	stw	r6,628(sp)
   4804c:	00c00044 	movi	r3,1
   48050:	108000cc 	andi	r2,r2,3
   48054:	10c18f26 	beq	r2,r3,48694 <__svfscanf_r+0xa08>
   48058:	e0800117 	ldw	r2,4(fp)
   4805c:	00808716 	blt	zero,r2,4827c <__svfscanf_r+0x5f0>
   48060:	e00b883a 	mov	r5,fp
   48064:	b009883a 	mov	r4,r22
   48068:	004e7f00 	call	4e7f0 <__srefill_r>
   4806c:	1001431e 	bne	r2,zero,4857c <__svfscanf_r+0x8f0>
   48070:	b9c00017 	ldw	r7,0(r23)
   48074:	00008106 	br	4827c <__svfscanf_r+0x5f0>
   48078:	e0800117 	ldw	r2,4(fp)
   4807c:	d9809d15 	stw	r6,628(sp)
   48080:	0081a30e 	bge	zero,r2,48710 <__svfscanf_r+0xa84>
   48084:	00800174 	movhi	r2,5
   48088:	1082ba04 	addi	r2,r2,2792
   4808c:	02000284 	movi	r8,10
   48090:	d880a115 	stw	r2,644(sp)
   48094:	da009e15 	stw	r8,632(sp)
   48098:	050000c4 	movi	r20,3
   4809c:	e0c00017 	ldw	r3,0(fp)
   480a0:	00000206 	br	480ac <__svfscanf_r+0x420>
   480a4:	18c00044 	addi	r3,r3,1
   480a8:	e0c00015 	stw	r3,0(fp)
   480ac:	19000003 	ldbu	r4,0(r3)
   480b0:	20803fcc 	andi	r2,r4,255
   480b4:	3885883a 	add	r2,r7,r2
   480b8:	10800043 	ldbu	r2,1(r2)
   480bc:	1140020c 	andi	r5,r2,8
   480c0:	2801ab26 	beq	r5,zero,48770 <__svfscanf_r+0xae4>
   480c4:	e0800117 	ldw	r2,4(fp)
   480c8:	94800044 	addi	r18,r18,1
   480cc:	10bfffc4 	addi	r2,r2,-1
   480d0:	e0800115 	stw	r2,4(fp)
   480d4:	00bff316 	blt	zero,r2,480a4 <__alt_data_end+0xfffc98a4>
   480d8:	e00b883a 	mov	r5,fp
   480dc:	b009883a 	mov	r4,r22
   480e0:	004e7f00 	call	4e7f0 <__srefill_r>
   480e4:	1001251e 	bne	r2,zero,4857c <__svfscanf_r+0x8f0>
   480e8:	b9c00017 	ldw	r7,0(r23)
   480ec:	003feb06 	br	4809c <__alt_data_end+0xfffc989c>
   480f0:	e0800117 	ldw	r2,4(fp)
   480f4:	d9809d15 	stw	r6,628(sp)
   480f8:	00818b0e 	bge	zero,r2,48728 <__svfscanf_r+0xa9c>
   480fc:	05000084 	movi	r20,2
   48100:	003fe606 	br	4809c <__alt_data_end+0xfffc989c>
   48104:	e0800117 	ldw	r2,4(fp)
   48108:	d9809d15 	stw	r6,628(sp)
   4810c:	8c408814 	ori	r17,r17,544
   48110:	00801d0e 	bge	zero,r2,48188 <__svfscanf_r+0x4fc>
   48114:	00800174 	movhi	r2,5
   48118:	1082ba04 	addi	r2,r2,2792
   4811c:	02000404 	movi	r8,16
   48120:	d880a115 	stw	r2,644(sp)
   48124:	da009e15 	stw	r8,632(sp)
   48128:	050000c4 	movi	r20,3
   4812c:	003fdb06 	br	4809c <__alt_data_end+0xfffc989c>
   48130:	e0800117 	ldw	r2,4(fp)
   48134:	d9809d15 	stw	r6,628(sp)
   48138:	8c400054 	ori	r17,r17,1
   4813c:	00bfc80e 	bge	zero,r2,48060 <__alt_data_end+0xfffc9860>
   48140:	00c00174 	movhi	r3,5
   48144:	18c16d04 	addi	r3,r3,1460
   48148:	02000284 	movi	r8,10
   4814c:	d8c0a115 	stw	r3,644(sp)
   48150:	da009e15 	stw	r8,632(sp)
   48154:	050000c4 	movi	r20,3
   48158:	003fd006 	br	4809c <__alt_data_end+0xfffc989c>
   4815c:	9cc002a4 	muli	r19,r19,10
   48160:	a0800043 	ldbu	r2,1(r20)
   48164:	3029883a 	mov	r20,r6
   48168:	98e7883a 	add	r19,r19,r3
   4816c:	9cfff404 	addi	r19,r19,-48
   48170:	10c03fcc 	andi	r3,r2,255
   48174:	003f0e06 	br	47db0 <__alt_data_end+0xfffc95b0>
   48178:	e0800117 	ldw	r2,4(fp)
   4817c:	d9809d15 	stw	r6,628(sp)
   48180:	8c408014 	ori	r17,r17,512
   48184:	00bfe316 	blt	zero,r2,48114 <__alt_data_end+0xfffc9914>
   48188:	e00b883a 	mov	r5,fp
   4818c:	b009883a 	mov	r4,r22
   48190:	004e7f00 	call	4e7f0 <__srefill_r>
   48194:	1000f91e 	bne	r2,zero,4857c <__svfscanf_r+0x8f0>
   48198:	b9c00017 	ldw	r7,0(r23)
   4819c:	003fdd06 	br	48114 <__alt_data_end+0xfffc9914>
   481a0:	e0800117 	ldw	r2,4(fp)
   481a4:	d9809d15 	stw	r6,628(sp)
   481a8:	8c400054 	ori	r17,r17,1
   481ac:	0080140e 	bge	zero,r2,48200 <__svfscanf_r+0x574>
   481b0:	00800174 	movhi	r2,5
   481b4:	1082ba04 	addi	r2,r2,2792
   481b8:	02000204 	movi	r8,8
   481bc:	d880a115 	stw	r2,644(sp)
   481c0:	da009e15 	stw	r8,632(sp)
   481c4:	050000c4 	movi	r20,3
   481c8:	003fb406 	br	4809c <__alt_data_end+0xfffc989c>
   481cc:	a0800043 	ldbu	r2,1(r20)
   481d0:	8c400094 	ori	r17,r17,2
   481d4:	3029883a 	mov	r20,r6
   481d8:	10c03fcc 	andi	r3,r2,255
   481dc:	003ef406 	br	47db0 <__alt_data_end+0xfffc95b0>
   481e0:	e0800117 	ldw	r2,4(fp)
   481e4:	d9809d15 	stw	r6,628(sp)
   481e8:	0081420e 	bge	zero,r2,486f4 <__svfscanf_r+0xa68>
   481ec:	05000104 	movi	r20,4
   481f0:	003faa06 	br	4809c <__alt_data_end+0xfffc989c>
   481f4:	e0800117 	ldw	r2,4(fp)
   481f8:	d9809d15 	stw	r6,628(sp)
   481fc:	00bfec16 	blt	zero,r2,481b0 <__alt_data_end+0xfffc99b0>
   48200:	e00b883a 	mov	r5,fp
   48204:	b009883a 	mov	r4,r22
   48208:	004e7f00 	call	4e7f0 <__srefill_r>
   4820c:	1000db1e 	bne	r2,zero,4857c <__svfscanf_r+0x8f0>
   48210:	b9c00017 	ldw	r7,0(r23)
   48214:	003fe606 	br	481b0 <__alt_data_end+0xfffc99b0>
   48218:	d9809d15 	stw	r6,628(sp)
   4821c:	8880040c 	andi	r2,r17,16
   48220:	10009c1e 	bne	r2,zero,48494 <__svfscanf_r+0x808>
   48224:	8880010c 	andi	r2,r17,4
   48228:	10011e26 	beq	r2,zero,486a4 <__svfscanf_r+0xa18>
   4822c:	da009c17 	ldw	r8,624(sp)
   48230:	3029883a 	mov	r20,r6
   48234:	40800017 	ldw	r2,0(r8)
   48238:	42000104 	addi	r8,r8,4
   4823c:	da009c15 	stw	r8,624(sp)
   48240:	1480000d 	sth	r18,0(r2)
   48244:	003ecc06 	br	47d78 <__alt_data_end+0xfffc9578>
   48248:	a0c00043 	ldbu	r3,1(r20)
   4824c:	19410c26 	beq	r3,r5,48680 <__svfscanf_r+0x9f4>
   48250:	8c400054 	ori	r17,r17,1
   48254:	3029883a 	mov	r20,r6
   48258:	003ed506 	br	47db0 <__alt_data_end+0xfffc95b0>
   4825c:	a0800043 	ldbu	r2,1(r20)
   48260:	8c400114 	ori	r17,r17,4
   48264:	3029883a 	mov	r20,r6
   48268:	10c03fcc 	andi	r3,r2,255
   4826c:	003ed006 	br	47db0 <__alt_data_end+0xfffc95b0>
   48270:	e0800117 	ldw	r2,4(fp)
   48274:	d9809d15 	stw	r6,628(sp)
   48278:	00bf790e 	bge	zero,r2,48060 <__alt_data_end+0xfffc9860>
   4827c:	00800174 	movhi	r2,5
   48280:	10816d04 	addi	r2,r2,1460
   48284:	02000284 	movi	r8,10
   48288:	d880a115 	stw	r2,644(sp)
   4828c:	da009e15 	stw	r8,632(sp)
   48290:	050000c4 	movi	r20,3
   48294:	003f8106 	br	4809c <__alt_data_end+0xfffc989c>
   48298:	e0800117 	ldw	r2,4(fp)
   4829c:	d9809d15 	stw	r6,628(sp)
   482a0:	0080c40e 	bge	zero,r2,485b4 <__svfscanf_r+0x928>
   482a4:	9800011e 	bne	r19,zero,482ac <__svfscanf_r+0x620>
   482a8:	04c00044 	movi	r19,1
   482ac:	8880004c 	andi	r2,r17,1
   482b0:	1000441e 	bne	r2,zero,483c4 <__svfscanf_r+0x738>
   482b4:	8c40040c 	andi	r17,r17,16
   482b8:	8800da26 	beq	r17,zero,48624 <__svfscanf_r+0x998>
   482bc:	0021883a 	mov	r16,zero
   482c0:	00000806 	br	482e4 <__svfscanf_r+0x658>
   482c4:	1887883a 	add	r3,r3,r2
   482c8:	e00b883a 	mov	r5,fp
   482cc:	b009883a 	mov	r4,r22
   482d0:	e0c00015 	stw	r3,0(fp)
   482d4:	80a1883a 	add	r16,r16,r2
   482d8:	98a7c83a 	sub	r19,r19,r2
   482dc:	004e7f00 	call	4e7f0 <__srefill_r>
   482e0:	1000ca1e 	bne	r2,zero,4860c <__svfscanf_r+0x980>
   482e4:	e0800117 	ldw	r2,4(fp)
   482e8:	e0c00017 	ldw	r3,0(fp)
   482ec:	14fff516 	blt	r2,r19,482c4 <__alt_data_end+0xfffc9ac4>
   482f0:	14c5c83a 	sub	r2,r2,r19
   482f4:	1cd5883a 	add	r10,r3,r19
   482f8:	84e1883a 	add	r16,r16,r19
   482fc:	e0800115 	stw	r2,4(fp)
   48300:	e2800015 	stw	r10,0(fp)
   48304:	dd009d17 	ldw	r20,628(sp)
   48308:	9425883a 	add	r18,r18,r16
   4830c:	a00d883a 	mov	r6,r20
   48310:	003e9a06 	br	47d7c <__alt_data_end+0xfffc957c>
   48314:	300b883a 	mov	r5,r6
   48318:	d9005884 	addi	r4,sp,354
   4831c:	d9809d15 	stw	r6,628(sp)
   48320:	004ea8c0 	call	4ea8c <__sccl>
   48324:	1029883a 	mov	r20,r2
   48328:	e0800117 	ldw	r2,4(fp)
   4832c:	0081050e 	bge	zero,r2,48744 <__svfscanf_r+0xab8>
   48330:	e1000017 	ldw	r4,0(fp)
   48334:	20800003 	ldbu	r2,0(r4)
   48338:	98005926 	beq	r19,zero,484a0 <__svfscanf_r+0x814>
   4833c:	8c40040c 	andi	r17,r17,16
   48340:	88005a26 	beq	r17,zero,484ac <__svfscanf_r+0x820>
   48344:	9823883a 	mov	r17,r19
   48348:	0021883a 	mov	r16,zero
   4834c:	00000106 	br	48354 <__svfscanf_r+0x6c8>
   48350:	20800003 	ldbu	r2,0(r4)
   48354:	10803fcc 	andi	r2,r2,255
   48358:	d8c05884 	addi	r3,sp,354
   4835c:	1885883a 	add	r2,r3,r2
   48360:	10800007 	ldb	r2,0(r2)
   48364:	1000ad26 	beq	r2,zero,4861c <__svfscanf_r+0x990>
   48368:	e0800117 	ldw	r2,4(fp)
   4836c:	21000044 	addi	r4,r4,1
   48370:	84000044 	addi	r16,r16,1
   48374:	10bfffc4 	addi	r2,r2,-1
   48378:	e0800115 	stw	r2,4(fp)
   4837c:	e1000015 	stw	r4,0(fp)
   48380:	84c0a026 	beq	r16,r19,48604 <__svfscanf_r+0x978>
   48384:	00bff216 	blt	zero,r2,48350 <__alt_data_end+0xfffc9b50>
   48388:	e00b883a 	mov	r5,fp
   4838c:	b009883a 	mov	r4,r22
   48390:	004e7f00 	call	4e7f0 <__srefill_r>
   48394:	10009a1e 	bne	r2,zero,48600 <__svfscanf_r+0x974>
   48398:	e1000017 	ldw	r4,0(fp)
   4839c:	003fec06 	br	48350 <__alt_data_end+0xfffc9b50>
   483a0:	e0800117 	ldw	r2,4(fp)
   483a4:	d9809d15 	stw	r6,628(sp)
   483a8:	0080eb0e 	bge	zero,r2,48758 <__svfscanf_r+0xacc>
   483ac:	00800174 	movhi	r2,5
   483b0:	10816d04 	addi	r2,r2,1460
   483b4:	d880a115 	stw	r2,644(sp)
   483b8:	d8009e15 	stw	zero,632(sp)
   483bc:	050000c4 	movi	r20,3
   483c0:	003f3606 	br	4809c <__alt_data_end+0xfffc989c>
   483c4:	dd409904 	addi	r21,sp,612
   483c8:	8c40040c 	andi	r17,r17,16
   483cc:	01800204 	movi	r6,8
   483d0:	000b883a 	mov	r5,zero
   483d4:	a809883a 	mov	r4,r21
   483d8:	dc409f15 	stw	r17,636(sp)
   483dc:	004d14c0 	call	4d14c <memset>
   483e0:	dc409f17 	ldw	r17,636(sp)
   483e4:	88006e26 	beq	r17,zero,485a0 <__svfscanf_r+0x914>
   483e8:	0029883a 	mov	r20,zero
   483ec:	0023883a 	mov	r17,zero
   483f0:	004c2cc0 	call	4c2cc <__locale_mb_cur_max>
   483f4:	14406126 	beq	r2,r17,4857c <__svfscanf_r+0x8f0>
   483f8:	e0800017 	ldw	r2,0(fp)
   483fc:	e0c00117 	ldw	r3,4(fp)
   48400:	d9000104 	addi	r4,sp,4
   48404:	12000003 	ldbu	r8,0(r2)
   48408:	18ffffc4 	addi	r3,r3,-1
   4840c:	10800044 	addi	r2,r2,1
   48410:	e0c00115 	stw	r3,4(fp)
   48414:	e0800015 	stw	r2,0(fp)
   48418:	8c000044 	addi	r16,r17,1
   4841c:	dd400015 	stw	r21,0(sp)
   48420:	2463883a 	add	r17,r4,r17
   48424:	200d883a 	mov	r6,r4
   48428:	a00b883a 	mov	r5,r20
   4842c:	800f883a 	mov	r7,r16
   48430:	b009883a 	mov	r4,r22
   48434:	8a000005 	stb	r8,0(r17)
   48438:	004cce80 	call	4cce8 <_mbrtowc_r>
   4843c:	017fffc4 	movi	r5,-1
   48440:	11404e26 	beq	r2,r5,4857c <__svfscanf_r+0x8f0>
   48444:	1000601e 	bne	r2,zero,485c8 <__svfscanf_r+0x93c>
   48448:	da009f17 	ldw	r8,636(sp)
   4844c:	4000641e 	bne	r8,zero,485e0 <__svfscanf_r+0x954>
   48450:	a0000015 	stw	zero,0(r20)
   48454:	9425883a 	add	r18,r18,r16
   48458:	9967883a 	add	r19,r19,r5
   4845c:	a5000104 	addi	r20,r20,4
   48460:	e0800117 	ldw	r2,4(fp)
   48464:	0023883a 	mov	r17,zero
   48468:	00804b16 	blt	zero,r2,48598 <__svfscanf_r+0x90c>
   4846c:	e00b883a 	mov	r5,fp
   48470:	b009883a 	mov	r4,r22
   48474:	004e7f00 	call	4e7f0 <__srefill_r>
   48478:	10004726 	beq	r2,zero,48598 <__svfscanf_r+0x90c>
   4847c:	88003f1e 	bne	r17,zero,4857c <__svfscanf_r+0x8f0>
   48480:	d8c09f17 	ldw	r3,636(sp)
   48484:	1800031e 	bne	r3,zero,48494 <__svfscanf_r+0x808>
   48488:	da00a017 	ldw	r8,640(sp)
   4848c:	42000044 	addi	r8,r8,1
   48490:	da00a015 	stw	r8,640(sp)
   48494:	dd009d17 	ldw	r20,628(sp)
   48498:	a00d883a 	mov	r6,r20
   4849c:	003e3706 	br	47d7c <__alt_data_end+0xfffc957c>
   484a0:	8c40040c 	andi	r17,r17,16
   484a4:	04ffffc4 	movi	r19,-1
   484a8:	883fa61e 	bne	r17,zero,48344 <__alt_data_end+0xfffc9b44>
   484ac:	da009c17 	ldw	r8,624(sp)
   484b0:	9abfffc4 	addi	r10,r19,-1
   484b4:	44000017 	ldw	r16,0(r8)
   484b8:	44400104 	addi	r17,r8,4
   484bc:	8007883a 	mov	r3,r16
   484c0:	82ab883a 	add	r21,r16,r10
   484c4:	00000306 	br	484d4 <__svfscanf_r+0x848>
   484c8:	e1000017 	ldw	r4,0(fp)
   484cc:	9807883a 	mov	r3,r19
   484d0:	20800003 	ldbu	r2,0(r4)
   484d4:	10803fcc 	andi	r2,r2,255
   484d8:	d9405884 	addi	r5,sp,354
   484dc:	2885883a 	add	r2,r5,r2
   484e0:	10800007 	ldb	r2,0(r2)
   484e4:	10004b26 	beq	r2,zero,48614 <__svfscanf_r+0x988>
   484e8:	e0800117 	ldw	r2,4(fp)
   484ec:	21400044 	addi	r5,r4,1
   484f0:	e1400015 	stw	r5,0(fp)
   484f4:	10bfffc4 	addi	r2,r2,-1
   484f8:	e0800115 	stw	r2,4(fp)
   484fc:	20800003 	ldbu	r2,0(r4)
   48500:	1cc00044 	addi	r19,r3,1
   48504:	18800005 	stb	r2,0(r3)
   48508:	1d400726 	beq	r3,r21,48528 <__svfscanf_r+0x89c>
   4850c:	e0800117 	ldw	r2,4(fp)
   48510:	00bfed16 	blt	zero,r2,484c8 <__alt_data_end+0xfffc9cc8>
   48514:	e00b883a 	mov	r5,fp
   48518:	b009883a 	mov	r4,r22
   4851c:	004e7f00 	call	4e7f0 <__srefill_r>
   48520:	103fe926 	beq	r2,zero,484c8 <__alt_data_end+0xfffc9cc8>
   48524:	84c01526 	beq	r16,r19,4857c <__svfscanf_r+0x8f0>
   48528:	9c21c83a 	sub	r16,r19,r16
   4852c:	803e1726 	beq	r16,zero,47d8c <__alt_data_end+0xfffc958c>
   48530:	da00a017 	ldw	r8,640(sp)
   48534:	98000005 	stb	zero,0(r19)
   48538:	dc409c15 	stw	r17,624(sp)
   4853c:	42000044 	addi	r8,r8,1
   48540:	da00a015 	stw	r8,640(sp)
   48544:	9425883a 	add	r18,r18,r16
   48548:	a00d883a 	mov	r6,r20
   4854c:	003e0b06 	br	47d7c <__alt_data_end+0xfffc957c>
   48550:	017fff84 	movi	r5,-2
   48554:	11439b1e 	bne	r2,r5,493c4 <__svfscanf_r+0x1738>
   48558:	8821883a 	mov	r16,r17
   4855c:	e0800117 	ldw	r2,4(fp)
   48560:	0082e516 	blt	zero,r2,490f8 <__svfscanf_r+0x146c>
   48564:	e00b883a 	mov	r5,fp
   48568:	b009883a 	mov	r4,r22
   4856c:	004e7f00 	call	4e7f0 <__srefill_r>
   48570:	1002e126 	beq	r2,zero,490f8 <__svfscanf_r+0x146c>
   48574:	dc409f17 	ldw	r17,636(sp)
   48578:	8002e826 	beq	r16,zero,4911c <__svfscanf_r+0x1490>
   4857c:	da00a017 	ldw	r8,640(sp)
   48580:	403e9c26 	beq	r8,zero,47ff4 <__alt_data_end+0xfffc97f4>
   48584:	e080030b 	ldhu	r2,12(fp)
   48588:	1080100c 	andi	r2,r2,64
   4858c:	103e991e 	bne	r2,zero,47ff4 <__alt_data_end+0xfffc97f4>
   48590:	4005883a 	mov	r2,r8
   48594:	003e9806 	br	47ff8 <__alt_data_end+0xfffc97f8>
   48598:	983f951e 	bne	r19,zero,483f0 <__alt_data_end+0xfffc9bf0>
   4859c:	003fb806 	br	48480 <__alt_data_end+0xfffc9c80>
   485a0:	da009c17 	ldw	r8,624(sp)
   485a4:	45000017 	ldw	r20,0(r8)
   485a8:	42000104 	addi	r8,r8,4
   485ac:	da009c15 	stw	r8,624(sp)
   485b0:	003f8e06 	br	483ec <__alt_data_end+0xfffc9bec>
   485b4:	e00b883a 	mov	r5,fp
   485b8:	b009883a 	mov	r4,r22
   485bc:	004e7f00 	call	4e7f0 <__srefill_r>
   485c0:	103f3826 	beq	r2,zero,482a4 <__alt_data_end+0xfffc9aa4>
   485c4:	003fed06 	br	4857c <__alt_data_end+0xfffc9d7c>
   485c8:	00ffff84 	movi	r3,-2
   485cc:	10c0071e 	bne	r2,r3,485ec <__svfscanf_r+0x960>
   485d0:	e0800117 	ldw	r2,4(fp)
   485d4:	8023883a 	mov	r17,r16
   485d8:	00bf8516 	blt	zero,r2,483f0 <__alt_data_end+0xfffc9bf0>
   485dc:	003fa306 	br	4846c <__alt_data_end+0xfffc9c6c>
   485e0:	9425883a 	add	r18,r18,r16
   485e4:	9cffffc4 	addi	r19,r19,-1
   485e8:	003f9d06 	br	48460 <__alt_data_end+0xfffc9c60>
   485ec:	da009f17 	ldw	r8,636(sp)
   485f0:	9425883a 	add	r18,r18,r16
   485f4:	9cffffc4 	addi	r19,r19,-1
   485f8:	403f9826 	beq	r8,zero,4845c <__alt_data_end+0xfffc9c5c>
   485fc:	003f9806 	br	48460 <__alt_data_end+0xfffc9c60>
   48600:	8023883a 	mov	r17,r16
   48604:	8821883a 	mov	r16,r17
   48608:	003fce06 	br	48544 <__alt_data_end+0xfffc9d44>
   4860c:	803f3d1e 	bne	r16,zero,48304 <__alt_data_end+0xfffc9b04>
   48610:	003fda06 	br	4857c <__alt_data_end+0xfffc9d7c>
   48614:	1827883a 	mov	r19,r3
   48618:	003fc306 	br	48528 <__alt_data_end+0xfffc9d28>
   4861c:	803fc91e 	bne	r16,zero,48544 <__alt_data_end+0xfffc9d44>
   48620:	003dda06 	br	47d8c <__alt_data_end+0xfffc958c>
   48624:	da009c17 	ldw	r8,624(sp)
   48628:	df000015 	stw	fp,0(sp)
   4862c:	980f883a 	mov	r7,r19
   48630:	41400017 	ldw	r5,0(r8)
   48634:	01800044 	movi	r6,1
   48638:	b009883a 	mov	r4,r22
   4863c:	004b53c0 	call	4b53c <_fread_r>
   48640:	da009c17 	ldw	r8,624(sp)
   48644:	40c00104 	addi	r3,r8,4
   48648:	103fcc26 	beq	r2,zero,4857c <__alt_data_end+0xfffc9d7c>
   4864c:	da00a017 	ldw	r8,640(sp)
   48650:	dd009d17 	ldw	r20,628(sp)
   48654:	90a5883a 	add	r18,r18,r2
   48658:	42000044 	addi	r8,r8,1
   4865c:	da00a015 	stw	r8,640(sp)
   48660:	d8c09c15 	stw	r3,624(sp)
   48664:	a00d883a 	mov	r6,r20
   48668:	003dc406 	br	47d7c <__alt_data_end+0xfffc957c>
   4866c:	e00b883a 	mov	r5,fp
   48670:	b009883a 	mov	r4,r22
   48674:	004e7f00 	call	4e7f0 <__srefill_r>
   48678:	103e5226 	beq	r2,zero,47fc4 <__alt_data_end+0xfffc97c4>
   4867c:	003fbf06 	br	4857c <__alt_data_end+0xfffc9d7c>
   48680:	a0800083 	ldbu	r2,2(r20)
   48684:	8c400094 	ori	r17,r17,2
   48688:	a5000084 	addi	r20,r20,2
   4868c:	10c03fcc 	andi	r3,r2,255
   48690:	003dc706 	br	47db0 <__alt_data_end+0xfffc95b0>
   48694:	e0800117 	ldw	r2,4(fp)
   48698:	88e2b03a 	or	r17,r17,r3
   4869c:	00bef716 	blt	zero,r2,4827c <__alt_data_end+0xfffc9a7c>
   486a0:	003e6f06 	br	48060 <__alt_data_end+0xfffc9860>
   486a4:	8880004c 	andi	r2,r17,1
   486a8:	10000b1e 	bne	r2,zero,486d8 <__svfscanf_r+0xa4c>
   486ac:	8c40008c 	andi	r17,r17,2
   486b0:	88000926 	beq	r17,zero,486d8 <__svfscanf_r+0xa4c>
   486b4:	da009c17 	ldw	r8,624(sp)
   486b8:	9007d7fa 	srai	r3,r18,31
   486bc:	dd009d17 	ldw	r20,628(sp)
   486c0:	40800017 	ldw	r2,0(r8)
   486c4:	42000104 	addi	r8,r8,4
   486c8:	da009c15 	stw	r8,624(sp)
   486cc:	14800015 	stw	r18,0(r2)
   486d0:	10c00115 	stw	r3,4(r2)
   486d4:	003da806 	br	47d78 <__alt_data_end+0xfffc9578>
   486d8:	da009c17 	ldw	r8,624(sp)
   486dc:	dd009d17 	ldw	r20,628(sp)
   486e0:	40800017 	ldw	r2,0(r8)
   486e4:	42000104 	addi	r8,r8,4
   486e8:	da009c15 	stw	r8,624(sp)
   486ec:	14800015 	stw	r18,0(r2)
   486f0:	003da106 	br	47d78 <__alt_data_end+0xfffc9578>
   486f4:	e00b883a 	mov	r5,fp
   486f8:	b009883a 	mov	r4,r22
   486fc:	004e7f00 	call	4e7f0 <__srefill_r>
   48700:	103f9e1e 	bne	r2,zero,4857c <__alt_data_end+0xfffc9d7c>
   48704:	b9c00017 	ldw	r7,0(r23)
   48708:	05000104 	movi	r20,4
   4870c:	003e6306 	br	4809c <__alt_data_end+0xfffc989c>
   48710:	e00b883a 	mov	r5,fp
   48714:	b009883a 	mov	r4,r22
   48718:	004e7f00 	call	4e7f0 <__srefill_r>
   4871c:	103f971e 	bne	r2,zero,4857c <__alt_data_end+0xfffc9d7c>
   48720:	b9c00017 	ldw	r7,0(r23)
   48724:	003e5706 	br	48084 <__alt_data_end+0xfffc9884>
   48728:	e00b883a 	mov	r5,fp
   4872c:	b009883a 	mov	r4,r22
   48730:	004e7f00 	call	4e7f0 <__srefill_r>
   48734:	103f911e 	bne	r2,zero,4857c <__alt_data_end+0xfffc9d7c>
   48738:	b9c00017 	ldw	r7,0(r23)
   4873c:	05000084 	movi	r20,2
   48740:	003e5606 	br	4809c <__alt_data_end+0xfffc989c>
   48744:	e00b883a 	mov	r5,fp
   48748:	b009883a 	mov	r4,r22
   4874c:	004e7f00 	call	4e7f0 <__srefill_r>
   48750:	103ef726 	beq	r2,zero,48330 <__alt_data_end+0xfffc9b30>
   48754:	003f8906 	br	4857c <__alt_data_end+0xfffc9d7c>
   48758:	e00b883a 	mov	r5,fp
   4875c:	b009883a 	mov	r4,r22
   48760:	004e7f00 	call	4e7f0 <__srefill_r>
   48764:	103f851e 	bne	r2,zero,4857c <__alt_data_end+0xfffc9d7c>
   48768:	b9c00017 	ldw	r7,0(r23)
   4876c:	003f0f06 	br	483ac <__alt_data_end+0xfffc9bac>
   48770:	014000c4 	movi	r5,3
   48774:	a1414a26 	beq	r20,r5,48ca0 <__svfscanf_r+0x1014>
   48778:	01000104 	movi	r4,4
   4877c:	a101f11e 	bne	r20,r4,48f44 <__svfscanf_r+0x12b8>
   48780:	b009883a 	mov	r4,r22
   48784:	004c2f00 	call	4c2f0 <_localeconv_r>
   48788:	10800017 	ldw	r2,0(r2)
   4878c:	98ffffc4 	addi	r3,r19,-1
   48790:	d880a315 	stw	r2,652(sp)
   48794:	00805704 	movi	r2,348
   48798:	10c21e2e 	bgeu	r2,r3,49014 <__svfscanf_r+0x1388>
   4879c:	9cffa8c4 	addi	r19,r19,-349
   487a0:	dcc0a215 	stw	r19,648(sp)
   487a4:	04c05744 	movi	r19,349
   487a8:	8d01e014 	ori	r20,r17,1920
   487ac:	0023883a 	mov	r17,zero
   487b0:	dc000104 	addi	r16,sp,4
   487b4:	8805883a 	mov	r2,r17
   487b8:	0019883a 	mov	r12,zero
   487bc:	8023883a 	mov	r17,r16
   487c0:	b007883a 	mov	r3,r22
   487c4:	9821883a 	mov	r16,r19
   487c8:	002b883a 	mov	r21,zero
   487cc:	d800a515 	stw	zero,660(sp)
   487d0:	d800a415 	stw	zero,656(sp)
   487d4:	d8009f15 	stw	zero,636(sp)
   487d8:	01c01384 	movi	r7,78
   487dc:	602d883a 	mov	r22,r12
   487e0:	1027883a 	mov	r19,r2
   487e4:	e1000017 	ldw	r4,0(fp)
   487e8:	21400003 	ldbu	r5,0(r4)
   487ec:	28bff544 	addi	r2,r5,-43
   487f0:	10803fcc 	andi	r2,r2,255
   487f4:	38810e36 	bltu	r7,r2,48c30 <__svfscanf_r+0xfa4>
   487f8:	100490ba 	slli	r2,r2,2
   487fc:	01800174 	movhi	r6,5
   48800:	31a20404 	addi	r6,r6,-30704
   48804:	1185883a 	add	r2,r2,r6
   48808:	10800017 	ldw	r2,0(r2)
   4880c:	1000683a 	jmp	r2
   48810:	00048b08 	cmpgei	zero,zero,4652
   48814:	00048c30 	cmpltui	zero,zero,4656
   48818:	00048b08 	cmpgei	zero,zero,4652
   4881c:	00048c30 	cmpltui	zero,zero,4656
   48820:	00048c30 	cmpltui	zero,zero,4656
   48824:	00048adc 	xori	zero,zero,4651
   48828:	0004894c 	andi	zero,zero,4645
   4882c:	0004894c 	andi	zero,zero,4645
   48830:	0004894c 	andi	zero,zero,4645
   48834:	0004894c 	andi	zero,zero,4645
   48838:	0004894c 	andi	zero,zero,4645
   4883c:	0004894c 	andi	zero,zero,4645
   48840:	0004894c 	andi	zero,zero,4645
   48844:	0004894c 	andi	zero,zero,4645
   48848:	0004894c 	andi	zero,zero,4645
   4884c:	00048c30 	cmpltui	zero,zero,4656
   48850:	00048c30 	cmpltui	zero,zero,4656
   48854:	00048c30 	cmpltui	zero,zero,4656
   48858:	00048c30 	cmpltui	zero,zero,4656
   4885c:	00048c30 	cmpltui	zero,zero,4656
   48860:	00048c30 	cmpltui	zero,zero,4656
   48864:	00048c30 	cmpltui	zero,zero,4656
   48868:	00048c20 	cmpeqi	zero,zero,4656
   4886c:	00048c30 	cmpltui	zero,zero,4656
   48870:	00048c30 	cmpltui	zero,zero,4656
   48874:	00048c30 	cmpltui	zero,zero,4656
   48878:	00048bdc 	xori	zero,zero,4655
   4887c:	00048bc0 	call	48bc <__alt_mem_onchip_memory2-0x3b744>
   48880:	00048c30 	cmpltui	zero,zero,4656
   48884:	00048c30 	cmpltui	zero,zero,4656
   48888:	00048b8c 	andi	zero,zero,4654
   4888c:	00048c30 	cmpltui	zero,zero,4656
   48890:	00048c30 	cmpltui	zero,zero,4656
   48894:	00048c30 	cmpltui	zero,zero,4656
   48898:	00048c30 	cmpltui	zero,zero,4656
   4889c:	00048b54 	movui	zero,4653
   488a0:	00048c30 	cmpltui	zero,zero,4656
   488a4:	00048c30 	cmpltui	zero,zero,4656
   488a8:	00048c30 	cmpltui	zero,zero,4656
   488ac:	00048c30 	cmpltui	zero,zero,4656
   488b0:	00048c30 	cmpltui	zero,zero,4656
   488b4:	00048b38 	rdprs	zero,zero,4652
   488b8:	00048c30 	cmpltui	zero,zero,4656
   488bc:	00048c30 	cmpltui	zero,zero,4656
   488c0:	00048c30 	cmpltui	zero,zero,4656
   488c4:	00048c30 	cmpltui	zero,zero,4656
   488c8:	00048b1c 	xori	zero,zero,4652
   488cc:	00048c30 	cmpltui	zero,zero,4656
   488d0:	00048c30 	cmpltui	zero,zero,4656
   488d4:	00048c30 	cmpltui	zero,zero,4656
   488d8:	00048c30 	cmpltui	zero,zero,4656
   488dc:	00048c30 	cmpltui	zero,zero,4656
   488e0:	00048c30 	cmpltui	zero,zero,4656
   488e4:	00048c30 	cmpltui	zero,zero,4656
   488e8:	00048c20 	cmpeqi	zero,zero,4656
   488ec:	00048c30 	cmpltui	zero,zero,4656
   488f0:	00048c30 	cmpltui	zero,zero,4656
   488f4:	00048c30 	cmpltui	zero,zero,4656
   488f8:	00048bdc 	xori	zero,zero,4655
   488fc:	00048bc0 	call	48bc <__alt_mem_onchip_memory2-0x3b744>
   48900:	00048c30 	cmpltui	zero,zero,4656
   48904:	00048c30 	cmpltui	zero,zero,4656
   48908:	00048b8c 	andi	zero,zero,4654
   4890c:	00048c30 	cmpltui	zero,zero,4656
   48910:	00048c30 	cmpltui	zero,zero,4656
   48914:	00048c30 	cmpltui	zero,zero,4656
   48918:	00048c30 	cmpltui	zero,zero,4656
   4891c:	00048b54 	movui	zero,4653
   48920:	00048c30 	cmpltui	zero,zero,4656
   48924:	00048c30 	cmpltui	zero,zero,4656
   48928:	00048c30 	cmpltui	zero,zero,4656
   4892c:	00048c30 	cmpltui	zero,zero,4656
   48930:	00048c30 	cmpltui	zero,zero,4656
   48934:	00048b38 	rdprs	zero,zero,4652
   48938:	00048c30 	cmpltui	zero,zero,4656
   4893c:	00048c30 	cmpltui	zero,zero,4656
   48940:	00048c30 	cmpltui	zero,zero,4656
   48944:	00048c30 	cmpltui	zero,zero,4656
   48948:	00048b1c 	xori	zero,zero,4652
   4894c:	a8803fcc 	andi	r2,r21,255
   48950:	1080201c 	xori	r2,r2,128
   48954:	10bfe004 	addi	r2,r2,-128
   48958:	b085883a 	add	r2,r22,r2
   4895c:	10000d1e 	bne	r2,zero,48994 <__svfscanf_r+0xd08>
   48960:	00bf9fc4 	movi	r2,-385
   48964:	a0a8703a 	and	r20,r20,r2
   48968:	89400005 	stb	r5,0(r17)
   4896c:	8c400044 	addi	r17,r17,1
   48970:	e0800117 	ldw	r2,4(fp)
   48974:	843fffc4 	addi	r16,r16,-1
   48978:	94800044 	addi	r18,r18,1
   4897c:	10bfffc4 	addi	r2,r2,-1
   48980:	e0800115 	stw	r2,4(fp)
   48984:	0080b40e 	bge	zero,r2,48c58 <__svfscanf_r+0xfcc>
   48988:	21000044 	addi	r4,r4,1
   4898c:	e1000015 	stw	r4,0(fp)
   48990:	803f941e 	bne	r16,zero,487e4 <__alt_data_end+0xfffc9fe4>
   48994:	8821883a 	mov	r16,r17
   48998:	b019883a 	mov	r12,r22
   4899c:	9823883a 	mov	r17,r19
   489a0:	182d883a 	mov	r22,r3
   489a4:	9801961e 	bne	r19,zero,49000 <__svfscanf_r+0x1374>
   489a8:	633fffc4 	addi	r12,r12,-1
   489ac:	00800044 	movi	r2,1
   489b0:	1302882e 	bgeu	r2,r12,493d4 <__svfscanf_r+0x1748>
   489b4:	a8803fcc 	andi	r2,r21,255
   489b8:	1080201c 	xori	r2,r2,128
   489bc:	10bfe004 	addi	r2,r2,-128
   489c0:	113fffc4 	addi	r4,r2,-1
   489c4:	01400184 	movi	r5,6
   489c8:	29001136 	bltu	r5,r4,48a10 <__svfscanf_r+0xd84>
   489cc:	01000084 	movi	r4,2
   489d0:	2082900e 	bge	r4,r2,49414 <__svfscanf_r+0x1788>
   489d4:	00c000c4 	movi	r3,3
   489d8:	10c00d26 	beq	r2,r3,48a10 <__svfscanf_r+0xd84>
   489dc:	9425c83a 	sub	r18,r18,r16
   489e0:	1827883a 	mov	r19,r3
   489e4:	843fffc4 	addi	r16,r16,-1
   489e8:	81400007 	ldb	r5,0(r16)
   489ec:	e00d883a 	mov	r6,fp
   489f0:	b009883a 	mov	r4,r22
   489f4:	00532d40 	call	532d4 <_ungetc_r>
   489f8:	a8bfffc4 	addi	r2,r21,-1
   489fc:	10c03fcc 	andi	r3,r2,255
   48a00:	8493883a 	add	r9,r16,r18
   48a04:	102b883a 	mov	r21,r2
   48a08:	98fff636 	bltu	r19,r3,489e4 <__alt_data_end+0xfffca1e4>
   48a0c:	4825883a 	mov	r18,r9
   48a10:	a080400c 	andi	r2,r20,256
   48a14:	10001426 	beq	r2,zero,48a68 <__svfscanf_r+0xddc>
   48a18:	a081000c 	andi	r2,r20,1024
   48a1c:	1002571e 	bne	r2,zero,4937c <__svfscanf_r+0x16f0>
   48a20:	817fffc7 	ldb	r5,-1(r16)
   48a24:	00801944 	movi	r2,101
   48a28:	84ffffc4 	addi	r19,r16,-1
   48a2c:	957fffc4 	addi	r21,r18,-1
   48a30:	28800826 	beq	r5,r2,48a54 <__svfscanf_r+0xdc8>
   48a34:	00801144 	movi	r2,69
   48a38:	28800626 	beq	r5,r2,48a54 <__svfscanf_r+0xdc8>
   48a3c:	e00d883a 	mov	r6,fp
   48a40:	b009883a 	mov	r4,r22
   48a44:	00532d40 	call	532d4 <_ungetc_r>
   48a48:	817fff87 	ldb	r5,-2(r16)
   48a4c:	84ffff84 	addi	r19,r16,-2
   48a50:	957fff84 	addi	r21,r18,-2
   48a54:	e00d883a 	mov	r6,fp
   48a58:	b009883a 	mov	r4,r22
   48a5c:	00532d40 	call	532d4 <_ungetc_r>
   48a60:	a825883a 	mov	r18,r21
   48a64:	9821883a 	mov	r16,r19
   48a68:	a080040c 	andi	r2,r20,16
   48a6c:	103e891e 	bne	r2,zero,48494 <__alt_data_end+0xfffc9c94>
   48a70:	80000005 	stb	zero,0(r16)
   48a74:	a081800c 	andi	r2,r20,1536
   48a78:	01010004 	movi	r4,1024
   48a7c:	1101dd26 	beq	r2,r4,491f4 <__svfscanf_r+0x1568>
   48a80:	da00a417 	ldw	r8,656(sp)
   48a84:	4001e71e 	bne	r8,zero,49224 <__svfscanf_r+0x1598>
   48a88:	000d883a 	mov	r6,zero
   48a8c:	d9400104 	addi	r5,sp,4
   48a90:	b009883a 	mov	r4,r22
   48a94:	004eea40 	call	4eea4 <_strtod_r>
   48a98:	1021883a 	mov	r16,r2
   48a9c:	a080004c 	andi	r2,r20,1
   48aa0:	1000021e 	bne	r2,zero,48aac <__svfscanf_r+0xe20>
   48aa4:	a2c0008c 	andi	r11,r20,2
   48aa8:	5801e826 	beq	r11,zero,4924c <__svfscanf_r+0x15c0>
   48aac:	da009c17 	ldw	r8,624(sp)
   48ab0:	40800017 	ldw	r2,0(r8)
   48ab4:	42000104 	addi	r8,r8,4
   48ab8:	da009c15 	stw	r8,624(sp)
   48abc:	14000015 	stw	r16,0(r2)
   48ac0:	10c00115 	stw	r3,4(r2)
   48ac4:	da00a017 	ldw	r8,640(sp)
   48ac8:	dd009d17 	ldw	r20,628(sp)
   48acc:	42000044 	addi	r8,r8,1
   48ad0:	da00a015 	stw	r8,640(sp)
   48ad4:	a00d883a 	mov	r6,r20
   48ad8:	003ca806 	br	47d7c <__alt_data_end+0xfffc957c>
   48adc:	a080400c 	andi	r2,r20,256
   48ae0:	103f9a26 	beq	r2,zero,4894c <__alt_data_end+0xfffca14c>
   48ae4:	da00a217 	ldw	r8,648(sp)
   48ae8:	00bfdfc4 	movi	r2,-129
   48aec:	a0a8703a 	and	r20,r20,r2
   48af0:	9cc00044 	addi	r19,r19,1
   48af4:	403f9e26 	beq	r8,zero,48970 <__alt_data_end+0xfffca170>
   48af8:	423fffc4 	addi	r8,r8,-1
   48afc:	da00a215 	stw	r8,648(sp)
   48b00:	84000044 	addi	r16,r16,1
   48b04:	003f9a06 	br	48970 <__alt_data_end+0xfffca170>
   48b08:	a080200c 	andi	r2,r20,128
   48b0c:	103fa126 	beq	r2,zero,48994 <__alt_data_end+0xfffca194>
   48b10:	00bfdfc4 	movi	r2,-129
   48b14:	a0a8703a 	and	r20,r20,r2
   48b18:	003f9306 	br	48968 <__alt_data_end+0xfffca168>
   48b1c:	a8803fcc 	andi	r2,r21,255
   48b20:	1080201c 	xori	r2,r2,128
   48b24:	10bfe004 	addi	r2,r2,-128
   48b28:	020001c4 	movi	r8,7
   48b2c:	123f991e 	bne	r2,r8,48994 <__alt_data_end+0xfffca194>
   48b30:	05400204 	movi	r21,8
   48b34:	003f8c06 	br	48968 <__alt_data_end+0xfffca168>
   48b38:	a8803fcc 	andi	r2,r21,255
   48b3c:	1080201c 	xori	r2,r2,128
   48b40:	10bfe004 	addi	r2,r2,-128
   48b44:	01800184 	movi	r6,6
   48b48:	11bf921e 	bne	r2,r6,48994 <__alt_data_end+0xfffca194>
   48b4c:	054001c4 	movi	r21,7
   48b50:	003f8506 	br	48968 <__alt_data_end+0xfffca168>
   48b54:	b000491e 	bne	r22,zero,48c7c <__svfscanf_r+0xff0>
   48b58:	9800031e 	bne	r19,zero,48b68 <__svfscanf_r+0xedc>
   48b5c:	a081c00c 	andi	r2,r20,1792
   48b60:	0181c004 	movi	r6,1792
   48b64:	11819f26 	beq	r2,r6,491e4 <__svfscanf_r+0x1558>
   48b68:	a8803fcc 	andi	r2,r21,255
   48b6c:	1080201c 	xori	r2,r2,128
   48b70:	10bfe004 	addi	r2,r2,-128
   48b74:	01800044 	movi	r6,1
   48b78:	11800226 	beq	r2,r6,48b84 <__svfscanf_r+0xef8>
   48b7c:	01800104 	movi	r6,4
   48b80:	11bf841e 	bne	r2,r6,48994 <__alt_data_end+0xfffca194>
   48b84:	ad400044 	addi	r21,r21,1
   48b88:	003f7706 	br	48968 <__alt_data_end+0xfffca168>
   48b8c:	a8803fcc 	andi	r2,r21,255
   48b90:	1080201c 	xori	r2,r2,128
   48b94:	10bfe004 	addi	r2,r2,-128
   48b98:	10003c1e 	bne	r2,zero,48c8c <__svfscanf_r+0x1000>
   48b9c:	9801141e 	bne	r19,zero,48ff0 <__svfscanf_r+0x1364>
   48ba0:	a081c00c 	andi	r2,r20,1792
   48ba4:	0181c004 	movi	r6,1792
   48ba8:	11818226 	beq	r2,r6,491b4 <__svfscanf_r+0x1528>
   48bac:	8821883a 	mov	r16,r17
   48bb0:	b019883a 	mov	r12,r22
   48bb4:	9823883a 	mov	r17,r19
   48bb8:	182d883a 	mov	r22,r3
   48bbc:	003f7a06 	br	489a8 <__alt_data_end+0xfffca1a8>
   48bc0:	a8803fcc 	andi	r2,r21,255
   48bc4:	1080201c 	xori	r2,r2,128
   48bc8:	10bfe004 	addi	r2,r2,-128
   48bcc:	01800084 	movi	r6,2
   48bd0:	11bf701e 	bne	r2,r6,48994 <__alt_data_end+0xfffca194>
   48bd4:	054000c4 	movi	r21,3
   48bd8:	003f6306 	br	48968 <__alt_data_end+0xfffca168>
   48bdc:	a081400c 	andi	r2,r20,1280
   48be0:	01810004 	movi	r6,1024
   48be4:	11800326 	beq	r2,r6,48bf4 <__svfscanf_r+0xf68>
   48be8:	a184703a 	and	r2,r20,r6
   48bec:	103f6926 	beq	r2,zero,48994 <__alt_data_end+0xfffca194>
   48bf0:	983fee26 	beq	r19,zero,48bac <__alt_data_end+0xfffca3ac>
   48bf4:	a080800c 	andi	r2,r20,512
   48bf8:	1000041e 	bne	r2,zero,48c0c <__svfscanf_r+0xf80>
   48bfc:	da009f17 	ldw	r8,636(sp)
   48c00:	dc40a515 	stw	r17,660(sp)
   48c04:	9a27c83a 	sub	r19,r19,r8
   48c08:	dcc0a415 	stw	r19,656(sp)
   48c0c:	00be1fc4 	movi	r2,-1921
   48c10:	a0a8703a 	and	r20,r20,r2
   48c14:	a5006014 	ori	r20,r20,384
   48c18:	0027883a 	mov	r19,zero
   48c1c:	003f5206 	br	48968 <__alt_data_end+0xfffca168>
   48c20:	00800044 	movi	r2,1
   48c24:	b0bf5b1e 	bne	r22,r2,48994 <__alt_data_end+0xfffca194>
   48c28:	05800084 	movi	r22,2
   48c2c:	003f4e06 	br	48968 <__alt_data_end+0xfffca168>
   48c30:	d980a317 	ldw	r6,652(sp)
   48c34:	30800003 	ldbu	r2,0(r6)
   48c38:	29803fcc 	andi	r6,r5,255
   48c3c:	30bf551e 	bne	r6,r2,48994 <__alt_data_end+0xfffca194>
   48c40:	a080800c 	andi	r2,r20,512
   48c44:	103f5326 	beq	r2,zero,48994 <__alt_data_end+0xfffca194>
   48c48:	023f5fc4 	movi	r8,-641
   48c4c:	a228703a 	and	r20,r20,r8
   48c50:	dcc09f15 	stw	r19,636(sp)
   48c54:	003f4406 	br	48968 <__alt_data_end+0xfffca168>
   48c58:	1809883a 	mov	r4,r3
   48c5c:	e00b883a 	mov	r5,fp
   48c60:	d8c0a615 	stw	r3,664(sp)
   48c64:	d9c0aa15 	stw	r7,680(sp)
   48c68:	004e7f00 	call	4e7f0 <__srefill_r>
   48c6c:	d8c0a617 	ldw	r3,664(sp)
   48c70:	d9c0aa17 	ldw	r7,680(sp)
   48c74:	103f4626 	beq	r2,zero,48990 <__alt_data_end+0xfffca190>
   48c78:	003f4606 	br	48994 <__alt_data_end+0xfffca194>
   48c7c:	00800084 	movi	r2,2
   48c80:	b0bfb91e 	bne	r22,r2,48b68 <__alt_data_end+0xfffca368>
   48c84:	058000c4 	movi	r22,3
   48c88:	003f3706 	br	48968 <__alt_data_end+0xfffca168>
   48c8c:	018000c4 	movi	r6,3
   48c90:	11bfbc26 	beq	r2,r6,48b84 <__alt_data_end+0xfffca384>
   48c94:	01800144 	movi	r6,5
   48c98:	11bfba26 	beq	r2,r6,48b84 <__alt_data_end+0xfffca384>
   48c9c:	003f3d06 	br	48994 <__alt_data_end+0xfffca194>
   48ca0:	98bfffc4 	addi	r2,r19,-1
   48ca4:	01405704 	movi	r5,348
   48ca8:	2880d82e 	bgeu	r5,r2,4900c <__svfscanf_r+0x1380>
   48cac:	99ffa8c4 	addi	r7,r19,-349
   48cb0:	04c05744 	movi	r19,349
   48cb4:	8c436014 	ori	r17,r17,3456
   48cb8:	9013883a 	mov	r9,r18
   48cbc:	8825883a 	mov	r18,r17
   48cc0:	dc409e17 	ldw	r17,632(sp)
   48cc4:	0029883a 	mov	r20,zero
   48cc8:	dc000104 	addi	r16,sp,4
   48ccc:	05401344 	movi	r21,77
   48cd0:	02c08004 	movi	r11,512
   48cd4:	01bf7fc4 	movi	r6,-513
   48cd8:	023fdfc4 	movi	r8,-129
   48cdc:	20bff544 	addi	r2,r4,-43
   48ce0:	10803fcc 	andi	r2,r2,255
   48ce4:	a8807236 	bltu	r21,r2,48eb0 <__svfscanf_r+0x1224>
   48ce8:	100490ba 	slli	r2,r2,2
   48cec:	01400174 	movhi	r5,5
   48cf0:	29634004 	addi	r5,r5,-29440
   48cf4:	1145883a 	add	r2,r2,r5
   48cf8:	10800017 	ldw	r2,0(r2)
   48cfc:	1000683a 	jmp	r2
   48d00:	00048f34 	movhi	zero,4668
   48d04:	00048eb0 	cmpltui	zero,zero,4666
   48d08:	00048f34 	movhi	zero,4668
   48d0c:	00048eb0 	cmpltui	zero,zero,4666
   48d10:	00048eb0 	cmpltui	zero,zero,4666
   48d14:	00048f0c 	andi	zero,zero,4668
   48d18:	00048eec 	andhi	zero,zero,4667
   48d1c:	00048eec 	andhi	zero,zero,4667
   48d20:	00048eec 	andhi	zero,zero,4667
   48d24:	00048eec 	andhi	zero,zero,4667
   48d28:	00048eec 	andhi	zero,zero,4667
   48d2c:	00048eec 	andhi	zero,zero,4667
   48d30:	00048eec 	andhi	zero,zero,4667
   48d34:	00048e94 	movui	zero,4666
   48d38:	00048e94 	movui	zero,4666
   48d3c:	00048eb0 	cmpltui	zero,zero,4666
   48d40:	00048eb0 	cmpltui	zero,zero,4666
   48d44:	00048eb0 	cmpltui	zero,zero,4666
   48d48:	00048eb0 	cmpltui	zero,zero,4666
   48d4c:	00048eb0 	cmpltui	zero,zero,4666
   48d50:	00048eb0 	cmpltui	zero,zero,4666
   48d54:	00048eb0 	cmpltui	zero,zero,4666
   48d58:	00048e80 	call	48e8 <__alt_mem_onchip_memory2-0x3b718>
   48d5c:	00048e80 	call	48e8 <__alt_mem_onchip_memory2-0x3b718>
   48d60:	00048e80 	call	48e8 <__alt_mem_onchip_memory2-0x3b718>
   48d64:	00048e80 	call	48e8 <__alt_mem_onchip_memory2-0x3b718>
   48d68:	00048e80 	call	48e8 <__alt_mem_onchip_memory2-0x3b718>
   48d6c:	00048e80 	call	48e8 <__alt_mem_onchip_memory2-0x3b718>
   48d70:	00048eb0 	cmpltui	zero,zero,4666
   48d74:	00048eb0 	cmpltui	zero,zero,4666
   48d78:	00048eb0 	cmpltui	zero,zero,4666
   48d7c:	00048eb0 	cmpltui	zero,zero,4666
   48d80:	00048eb0 	cmpltui	zero,zero,4666
   48d84:	00048eb0 	cmpltui	zero,zero,4666
   48d88:	00048eb0 	cmpltui	zero,zero,4666
   48d8c:	00048eb0 	cmpltui	zero,zero,4666
   48d90:	00048eb0 	cmpltui	zero,zero,4666
   48d94:	00048eb0 	cmpltui	zero,zero,4666
   48d98:	00048eb0 	cmpltui	zero,zero,4666
   48d9c:	00048eb0 	cmpltui	zero,zero,4666
   48da0:	00048eb0 	cmpltui	zero,zero,4666
   48da4:	00048eb0 	cmpltui	zero,zero,4666
   48da8:	00048eb0 	cmpltui	zero,zero,4666
   48dac:	00048eb0 	cmpltui	zero,zero,4666
   48db0:	00048eb0 	cmpltui	zero,zero,4666
   48db4:	00048e38 	rdprs	zero,zero,4664
   48db8:	00048eb0 	cmpltui	zero,zero,4666
   48dbc:	00048eb0 	cmpltui	zero,zero,4666
   48dc0:	00048eb0 	cmpltui	zero,zero,4666
   48dc4:	00048eb0 	cmpltui	zero,zero,4666
   48dc8:	00048eb0 	cmpltui	zero,zero,4666
   48dcc:	00048eb0 	cmpltui	zero,zero,4666
   48dd0:	00048eb0 	cmpltui	zero,zero,4666
   48dd4:	00048eb0 	cmpltui	zero,zero,4666
   48dd8:	00048e80 	call	48e8 <__alt_mem_onchip_memory2-0x3b718>
   48ddc:	00048e80 	call	48e8 <__alt_mem_onchip_memory2-0x3b718>
   48de0:	00048e80 	call	48e8 <__alt_mem_onchip_memory2-0x3b718>
   48de4:	00048e80 	call	48e8 <__alt_mem_onchip_memory2-0x3b718>
   48de8:	00048e80 	call	48e8 <__alt_mem_onchip_memory2-0x3b718>
   48dec:	00048e80 	call	48e8 <__alt_mem_onchip_memory2-0x3b718>
   48df0:	00048eb0 	cmpltui	zero,zero,4666
   48df4:	00048eb0 	cmpltui	zero,zero,4666
   48df8:	00048eb0 	cmpltui	zero,zero,4666
   48dfc:	00048eb0 	cmpltui	zero,zero,4666
   48e00:	00048eb0 	cmpltui	zero,zero,4666
   48e04:	00048eb0 	cmpltui	zero,zero,4666
   48e08:	00048eb0 	cmpltui	zero,zero,4666
   48e0c:	00048eb0 	cmpltui	zero,zero,4666
   48e10:	00048eb0 	cmpltui	zero,zero,4666
   48e14:	00048eb0 	cmpltui	zero,zero,4666
   48e18:	00048eb0 	cmpltui	zero,zero,4666
   48e1c:	00048eb0 	cmpltui	zero,zero,4666
   48e20:	00048eb0 	cmpltui	zero,zero,4666
   48e24:	00048eb0 	cmpltui	zero,zero,4666
   48e28:	00048eb0 	cmpltui	zero,zero,4666
   48e2c:	00048eb0 	cmpltui	zero,zero,4666
   48e30:	00048eb0 	cmpltui	zero,zero,4666
   48e34:	00048e38 	rdprs	zero,zero,4664
   48e38:	9081800c 	andi	r2,r18,1536
   48e3c:	12c01c1e 	bne	r2,r11,48eb0 <__svfscanf_r+0x1224>
   48e40:	91a4703a 	and	r18,r18,r6
   48e44:	94814014 	ori	r18,r18,1280
   48e48:	04400404 	movi	r17,16
   48e4c:	81000005 	stb	r4,0(r16)
   48e50:	84000044 	addi	r16,r16,1
   48e54:	e0800117 	ldw	r2,4(fp)
   48e58:	10bfffc4 	addi	r2,r2,-1
   48e5c:	e0800115 	stw	r2,4(fp)
   48e60:	0080540e 	bge	zero,r2,48fb4 <__svfscanf_r+0x1328>
   48e64:	18c00044 	addi	r3,r3,1
   48e68:	e0c00015 	stw	r3,0(fp)
   48e6c:	9cffffc4 	addi	r19,r19,-1
   48e70:	98000f26 	beq	r19,zero,48eb0 <__svfscanf_r+0x1224>
   48e74:	e0c00017 	ldw	r3,0(fp)
   48e78:	19000003 	ldbu	r4,0(r3)
   48e7c:	003f9706 	br	48cdc <__alt_data_end+0xfffca4dc>
   48e80:	00800284 	movi	r2,10
   48e84:	14400a0e 	bge	r2,r17,48eb0 <__svfscanf_r+0x1224>
   48e88:	00bd1fc4 	movi	r2,-2945
   48e8c:	90a4703a 	and	r18,r18,r2
   48e90:	003fee06 	br	48e4c <__alt_data_end+0xfffca64c>
   48e94:	014001b4 	movhi	r5,6
   48e98:	8c63883a 	add	r17,r17,r17
   48e9c:	296c9d84 	addi	r5,r5,-19850
   48ea0:	2c45883a 	add	r2,r5,r17
   48ea4:	1440000f 	ldh	r17,0(r2)
   48ea8:	00800204 	movi	r2,8
   48eac:	147ff616 	blt	r2,r17,48e88 <__alt_data_end+0xfffca688>
   48eb0:	dc409e15 	stw	r17,632(sp)
   48eb4:	9023883a 	mov	r17,r18
   48eb8:	8880400c 	andi	r2,r17,256
   48ebc:	4825883a 	mov	r18,r9
   48ec0:	10000426 	beq	r2,zero,48ed4 <__svfscanf_r+0x1248>
   48ec4:	d9800104 	addi	r6,sp,4
   48ec8:	3400be36 	bltu	r6,r16,491c4 <__svfscanf_r+0x1538>
   48ecc:	da000104 	addi	r8,sp,4
   48ed0:	443bae26 	beq	r8,r16,47d8c <__alt_data_end+0xfffc958c>
   48ed4:	8880040c 	andi	r2,r17,16
   48ed8:	10009326 	beq	r2,zero,49128 <__svfscanf_r+0x149c>
   48edc:	d8800104 	addi	r2,sp,4
   48ee0:	80a1c83a 	sub	r16,r16,r2
   48ee4:	8521883a 	add	r16,r16,r20
   48ee8:	003d0606 	br	48304 <__alt_data_end+0xfffc9b04>
   48eec:	014001b4 	movhi	r5,6
   48ef0:	8c63883a 	add	r17,r17,r17
   48ef4:	296c9d84 	addi	r5,r5,-19850
   48ef8:	2c45883a 	add	r2,r5,r17
   48efc:	1440000f 	ldh	r17,0(r2)
   48f00:	00bd1fc4 	movi	r2,-2945
   48f04:	90a4703a 	and	r18,r18,r2
   48f08:	003fd006 	br	48e4c <__alt_data_end+0xfffca64c>
   48f0c:	9082000c 	andi	r2,r18,2048
   48f10:	103fce26 	beq	r2,zero,48e4c <__alt_data_end+0xfffca64c>
   48f14:	8800021e 	bne	r17,zero,48f20 <__svfscanf_r+0x1294>
   48f18:	94808014 	ori	r18,r18,512
   48f1c:	04400204 	movi	r17,8
   48f20:	9081000c 	andi	r2,r18,1024
   48f24:	10009426 	beq	r2,zero,49178 <__svfscanf_r+0x14ec>
   48f28:	00be9fc4 	movi	r2,-1409
   48f2c:	90a4703a 	and	r18,r18,r2
   48f30:	003fc606 	br	48e4c <__alt_data_end+0xfffca64c>
   48f34:	9080200c 	andi	r2,r18,128
   48f38:	103fdd26 	beq	r2,zero,48eb0 <__alt_data_end+0xfffca6b0>
   48f3c:	9224703a 	and	r18,r18,r8
   48f40:	003fc206 	br	48e4c <__alt_data_end+0xfffca64c>
   48f44:	9800011e 	bne	r19,zero,48f4c <__svfscanf_r+0x12c0>
   48f48:	04ffffc4 	movi	r19,-1
   48f4c:	8900004c 	andi	r4,r17,1
   48f50:	20005b1e 	bne	r4,zero,490c0 <__svfscanf_r+0x1434>
   48f54:	8c40040c 	andi	r17,r17,16
   48f58:	88003026 	beq	r17,zero,4901c <__svfscanf_r+0x1390>
   48f5c:	0021883a 	mov	r16,zero
   48f60:	00000306 	br	48f70 <__svfscanf_r+0x12e4>
   48f64:	18800003 	ldbu	r2,0(r3)
   48f68:	3885883a 	add	r2,r7,r2
   48f6c:	10800043 	ldbu	r2,1(r2)
   48f70:	1080020c 	andi	r2,r2,8
   48f74:	103ce31e 	bne	r2,zero,48304 <__alt_data_end+0xfffc9b04>
   48f78:	e0800117 	ldw	r2,4(fp)
   48f7c:	18c00044 	addi	r3,r3,1
   48f80:	84000044 	addi	r16,r16,1
   48f84:	10bfffc4 	addi	r2,r2,-1
   48f88:	e0800115 	stw	r2,4(fp)
   48f8c:	e0c00015 	stw	r3,0(fp)
   48f90:	84fcdc26 	beq	r16,r19,48304 <__alt_data_end+0xfffc9b04>
   48f94:	00bff316 	blt	zero,r2,48f64 <__alt_data_end+0xfffca764>
   48f98:	e00b883a 	mov	r5,fp
   48f9c:	b009883a 	mov	r4,r22
   48fa0:	004e7f00 	call	4e7f0 <__srefill_r>
   48fa4:	103cd71e 	bne	r2,zero,48304 <__alt_data_end+0xfffc9b04>
   48fa8:	b9c00017 	ldw	r7,0(r23)
   48fac:	e0c00017 	ldw	r3,0(fp)
   48fb0:	003fec06 	br	48f64 <__alt_data_end+0xfffca764>
   48fb4:	e00b883a 	mov	r5,fp
   48fb8:	b009883a 	mov	r4,r22
   48fbc:	d980a715 	stw	r6,668(sp)
   48fc0:	d9c0aa15 	stw	r7,680(sp)
   48fc4:	da00a815 	stw	r8,672(sp)
   48fc8:	da40a915 	stw	r9,676(sp)
   48fcc:	dac0a615 	stw	r11,664(sp)
   48fd0:	004e7f00 	call	4e7f0 <__srefill_r>
   48fd4:	d980a717 	ldw	r6,668(sp)
   48fd8:	d9c0aa17 	ldw	r7,680(sp)
   48fdc:	da00a817 	ldw	r8,672(sp)
   48fe0:	da40a917 	ldw	r9,676(sp)
   48fe4:	dac0a617 	ldw	r11,664(sp)
   48fe8:	103fa026 	beq	r2,zero,48e6c <__alt_data_end+0xfffca66c>
   48fec:	003fb006 	br	48eb0 <__alt_data_end+0xfffca6b0>
   48ff0:	8821883a 	mov	r16,r17
   48ff4:	b019883a 	mov	r12,r22
   48ff8:	9823883a 	mov	r17,r19
   48ffc:	182d883a 	mov	r22,r3
   49000:	00bfbfc4 	movi	r2,-257
   49004:	a0a8703a 	and	r20,r20,r2
   49008:	003e6706 	br	489a8 <__alt_data_end+0xfffca1a8>
   4900c:	000f883a 	mov	r7,zero
   49010:	003f2806 	br	48cb4 <__alt_data_end+0xfffca4b4>
   49014:	d800a215 	stw	zero,648(sp)
   49018:	003de306 	br	487a8 <__alt_data_end+0xfffc9fa8>
   4901c:	da009c17 	ldw	r8,624(sp)
   49020:	9abfffc4 	addi	r10,r19,-1
   49024:	44400017 	ldw	r17,0(r8)
   49028:	44000104 	addi	r16,r8,4
   4902c:	880b883a 	mov	r5,r17
   49030:	8aa9883a 	add	r20,r17,r10
   49034:	00000606 	br	49050 <__svfscanf_r+0x13c4>
   49038:	e0c00017 	ldw	r3,0(fp)
   4903c:	b9000017 	ldw	r4,0(r23)
   49040:	a80b883a 	mov	r5,r21
   49044:	18800003 	ldbu	r2,0(r3)
   49048:	2085883a 	add	r2,r4,r2
   4904c:	10800043 	ldbu	r2,1(r2)
   49050:	1080020c 	andi	r2,r2,8
   49054:	1000551e 	bne	r2,zero,491ac <__svfscanf_r+0x1520>
   49058:	e0800117 	ldw	r2,4(fp)
   4905c:	19000044 	addi	r4,r3,1
   49060:	e1000015 	stw	r4,0(fp)
   49064:	10bfffc4 	addi	r2,r2,-1
   49068:	e0800115 	stw	r2,4(fp)
   4906c:	18800003 	ldbu	r2,0(r3)
   49070:	2d400044 	addi	r21,r5,1
   49074:	a827883a 	mov	r19,r21
   49078:	28800005 	stb	r2,0(r5)
   4907c:	2d000626 	beq	r5,r20,49098 <__svfscanf_r+0x140c>
   49080:	e0800117 	ldw	r2,4(fp)
   49084:	00bfec16 	blt	zero,r2,49038 <__alt_data_end+0xfffca838>
   49088:	e00b883a 	mov	r5,fp
   4908c:	b009883a 	mov	r4,r22
   49090:	004e7f00 	call	4e7f0 <__srefill_r>
   49094:	103fe826 	beq	r2,zero,49038 <__alt_data_end+0xfffca838>
   49098:	da00a017 	ldw	r8,640(sp)
   4909c:	dd009d17 	ldw	r20,628(sp)
   490a0:	9c63c83a 	sub	r17,r19,r17
   490a4:	42000044 	addi	r8,r8,1
   490a8:	98000005 	stb	zero,0(r19)
   490ac:	9465883a 	add	r18,r18,r17
   490b0:	da00a015 	stw	r8,640(sp)
   490b4:	dc009c15 	stw	r16,624(sp)
   490b8:	a00d883a 	mov	r6,r20
   490bc:	003b2f06 	br	47d7c <__alt_data_end+0xfffc957c>
   490c0:	dd409904 	addi	r21,sp,612
   490c4:	8c40040c 	andi	r17,r17,16
   490c8:	01800204 	movi	r6,8
   490cc:	000b883a 	mov	r5,zero
   490d0:	a809883a 	mov	r4,r21
   490d4:	004d14c0 	call	4d14c <memset>
   490d8:	8800401e 	bne	r17,zero,491dc <__svfscanf_r+0x1550>
   490dc:	da009c17 	ldw	r8,624(sp)
   490e0:	45000017 	ldw	r20,0(r8)
   490e4:	42000104 	addi	r8,r8,4
   490e8:	da009c15 	stw	r8,624(sp)
   490ec:	000d883a 	mov	r6,zero
   490f0:	3021883a 	mov	r16,r6
   490f4:	dc409f15 	stw	r17,636(sp)
   490f8:	e0800017 	ldw	r2,0(fp)
   490fc:	b8c00017 	ldw	r3,0(r23)
   49100:	10800003 	ldbu	r2,0(r2)
   49104:	1885883a 	add	r2,r3,r2
   49108:	10800043 	ldbu	r2,1(r2)
   4910c:	1080020c 	andi	r2,r2,8
   49110:	1000011e 	bne	r2,zero,49118 <__svfscanf_r+0x148c>
   49114:	9800701e 	bne	r19,zero,492d8 <__svfscanf_r+0x164c>
   49118:	dc409f17 	ldw	r17,636(sp)
   4911c:	883cdd1e 	bne	r17,zero,48494 <__alt_data_end+0xfffc9c94>
   49120:	a0000015 	stw	zero,0(r20)
   49124:	003cd806 	br	48488 <__alt_data_end+0xfffc9c88>
   49128:	d9c09e17 	ldw	r7,632(sp)
   4912c:	da00a117 	ldw	r8,644(sp)
   49130:	000d883a 	mov	r6,zero
   49134:	d9400104 	addi	r5,sp,4
   49138:	b009883a 	mov	r4,r22
   4913c:	80000005 	stb	zero,0(r16)
   49140:	403ee83a 	callr	r8
   49144:	88c0080c 	andi	r3,r17,32
   49148:	1800121e 	bne	r3,zero,49194 <__svfscanf_r+0x1508>
   4914c:	88c0010c 	andi	r3,r17,4
   49150:	18004d26 	beq	r3,zero,49288 <__svfscanf_r+0x15fc>
   49154:	da009c17 	ldw	r8,624(sp)
   49158:	40c00017 	ldw	r3,0(r8)
   4915c:	42000104 	addi	r8,r8,4
   49160:	da009c15 	stw	r8,624(sp)
   49164:	1880000d 	sth	r2,0(r3)
   49168:	da00a017 	ldw	r8,640(sp)
   4916c:	42000044 	addi	r8,r8,1
   49170:	da00a015 	stw	r8,640(sp)
   49174:	003f5906 	br	48edc <__alt_data_end+0xfffca6dc>
   49178:	00bf1fc4 	movi	r2,-897
   4917c:	90a4703a 	and	r18,r18,r2
   49180:	38000226 	beq	r7,zero,4918c <__svfscanf_r+0x1500>
   49184:	39ffffc4 	addi	r7,r7,-1
   49188:	9cc00044 	addi	r19,r19,1
   4918c:	a5000044 	addi	r20,r20,1
   49190:	003f3006 	br	48e54 <__alt_data_end+0xfffca654>
   49194:	da009c17 	ldw	r8,624(sp)
   49198:	40c00017 	ldw	r3,0(r8)
   4919c:	42000104 	addi	r8,r8,4
   491a0:	da009c15 	stw	r8,624(sp)
   491a4:	18800015 	stw	r2,0(r3)
   491a8:	003fef06 	br	49168 <__alt_data_end+0xfffca968>
   491ac:	2827883a 	mov	r19,r5
   491b0:	003fb906 	br	49098 <__alt_data_end+0xfffca898>
   491b4:	01be1fc4 	movi	r6,-1921
   491b8:	a1a8703a 	and	r20,r20,r6
   491bc:	05400044 	movi	r21,1
   491c0:	003de906 	br	48968 <__alt_data_end+0xfffca168>
   491c4:	817fffc7 	ldb	r5,-1(r16)
   491c8:	e00d883a 	mov	r6,fp
   491cc:	b009883a 	mov	r4,r22
   491d0:	843fffc4 	addi	r16,r16,-1
   491d4:	00532d40 	call	532d4 <_ungetc_r>
   491d8:	003f3c06 	br	48ecc <__alt_data_end+0xfffca6cc>
   491dc:	dd009b04 	addi	r20,sp,620
   491e0:	003fc206 	br	490ec <__alt_data_end+0xfffca8ec>
   491e4:	00be1fc4 	movi	r2,-1921
   491e8:	a0a8703a 	and	r20,r20,r2
   491ec:	05800044 	movi	r22,1
   491f0:	003ddd06 	br	48968 <__alt_data_end+0xfffca168>
   491f4:	d8c09f17 	ldw	r3,636(sp)
   491f8:	88e3c83a 	sub	r17,r17,r3
   491fc:	044dc83a 	sub	r6,zero,r17
   49200:	883e2126 	beq	r17,zero,48a88 <__alt_data_end+0xfffca288>
   49204:	d88055c4 	addi	r2,sp,343
   49208:	80800136 	bltu	r16,r2,49210 <__svfscanf_r+0x1584>
   4920c:	dc005584 	addi	r16,sp,342
   49210:	014001b4 	movhi	r5,6
   49214:	296c9c04 	addi	r5,r5,-19856
   49218:	8009883a 	mov	r4,r16
   4921c:	004ebbc0 	call	4ebbc <sprintf>
   49220:	003e1906 	br	48a88 <__alt_data_end+0xfffca288>
   49224:	d8c0a517 	ldw	r3,660(sp)
   49228:	000d883a 	mov	r6,zero
   4922c:	01c00284 	movi	r7,10
   49230:	19400044 	addi	r5,r3,1
   49234:	b009883a 	mov	r4,r22
   49238:	00505b40 	call	505b4 <_strtol_r>
   4923c:	da00a417 	ldw	r8,656(sp)
   49240:	dc00a517 	ldw	r16,660(sp)
   49244:	120dc83a 	sub	r6,r2,r8
   49248:	003fee06 	br	49204 <__alt_data_end+0xfffcaa04>
   4924c:	da009c17 	ldw	r8,624(sp)
   49250:	180b883a 	mov	r5,r3
   49254:	8009883a 	mov	r4,r16
   49258:	45000017 	ldw	r20,0(r8)
   4925c:	44400104 	addi	r17,r8,4
   49260:	d8c0a615 	stw	r3,664(sp)
   49264:	004e9c40 	call	4e9c4 <__fpclassifyd>
   49268:	d8c0a617 	ldw	r3,664(sp)
   4926c:	10006426 	beq	r2,zero,49400 <__svfscanf_r+0x1774>
   49270:	8009883a 	mov	r4,r16
   49274:	180b883a 	mov	r5,r3
   49278:	00581980 	call	58198 <__truncdfsf2>
   4927c:	a0800015 	stw	r2,0(r20)
   49280:	dc409c15 	stw	r17,624(sp)
   49284:	003e0f06 	br	48ac4 <__alt_data_end+0xfffca2c4>
   49288:	88c0004c 	andi	r3,r17,1
   4928c:	183fc11e 	bne	r3,zero,49194 <__alt_data_end+0xfffca994>
   49290:	8c40008c 	andi	r17,r17,2
   49294:	883fbf26 	beq	r17,zero,49194 <__alt_data_end+0xfffca994>
   49298:	da00a117 	ldw	r8,644(sp)
   4929c:	00800174 	movhi	r2,5
   492a0:	1082ba04 	addi	r2,r2,2792
   492a4:	d9c09e17 	ldw	r7,632(sp)
   492a8:	000d883a 	mov	r6,zero
   492ac:	d9400104 	addi	r5,sp,4
   492b0:	b009883a 	mov	r4,r22
   492b4:	40806226 	beq	r8,r2,49440 <__svfscanf_r+0x17b4>
   492b8:	00508080 	call	50808 <_strtoll_r>
   492bc:	da009c17 	ldw	r8,624(sp)
   492c0:	41000017 	ldw	r4,0(r8)
   492c4:	42000104 	addi	r8,r8,4
   492c8:	da009c15 	stw	r8,624(sp)
   492cc:	20800015 	stw	r2,0(r4)
   492d0:	20c00115 	stw	r3,4(r4)
   492d4:	003fa406 	br	49168 <__alt_data_end+0xfffca968>
   492d8:	004c2cc0 	call	4c2cc <__locale_mb_cur_max>
   492dc:	80bca726 	beq	r16,r2,4857c <__alt_data_end+0xfffc9d7c>
   492e0:	e0800017 	ldw	r2,0(fp)
   492e4:	e1000117 	ldw	r4,4(fp)
   492e8:	d8c00104 	addi	r3,sp,4
   492ec:	12000003 	ldbu	r8,0(r2)
   492f0:	213fffc4 	addi	r4,r4,-1
   492f4:	10800044 	addi	r2,r2,1
   492f8:	e1000115 	stw	r4,4(fp)
   492fc:	e0800015 	stw	r2,0(fp)
   49300:	84400044 	addi	r17,r16,1
   49304:	dd400015 	stw	r21,0(sp)
   49308:	1c21883a 	add	r16,r3,r16
   4930c:	b009883a 	mov	r4,r22
   49310:	880f883a 	mov	r7,r17
   49314:	180d883a 	mov	r6,r3
   49318:	a00b883a 	mov	r5,r20
   4931c:	82000005 	stb	r8,0(r16)
   49320:	004cce80 	call	4cce8 <_mbrtowc_r>
   49324:	013fffc4 	movi	r4,-1
   49328:	113c9426 	beq	r2,r4,4857c <__alt_data_end+0xfffc9d7c>
   4932c:	103c881e 	bne	r2,zero,48550 <__alt_data_end+0xfffc9d50>
   49330:	a0000015 	stw	zero,0(r20)
   49334:	0009883a 	mov	r4,zero
   49338:	004c2140 	call	4c214 <iswspace>
   4933c:	10001a26 	beq	r2,zero,493a8 <__svfscanf_r+0x171c>
   49340:	8821883a 	mov	r16,r17
   49344:	dc409f17 	ldw	r17,636(sp)
   49348:	803f7426 	beq	r16,zero,4911c <__alt_data_end+0xfffca91c>
   4934c:	843fffc4 	addi	r16,r16,-1
   49350:	d9800104 	addi	r6,sp,4
   49354:	342b883a 	add	r21,r6,r16
   49358:	00000106 	br	49360 <__svfscanf_r+0x16d4>
   4935c:	843fffc4 	addi	r16,r16,-1
   49360:	a9400003 	ldbu	r5,0(r21)
   49364:	e00d883a 	mov	r6,fp
   49368:	b009883a 	mov	r4,r22
   4936c:	00532d40 	call	532d4 <_ungetc_r>
   49370:	ad7fffc4 	addi	r21,r21,-1
   49374:	803ff91e 	bne	r16,zero,4935c <__alt_data_end+0xfffcab5c>
   49378:	003f6806 	br	4911c <__alt_data_end+0xfffca91c>
   4937c:	d9800104 	addi	r6,sp,4
   49380:	802b883a 	mov	r21,r16
   49384:	343a812e 	bgeu	r6,r16,47d8c <__alt_data_end+0xfffc958c>
   49388:	ad7fffc4 	addi	r21,r21,-1
   4938c:	a9400007 	ldb	r5,0(r21)
   49390:	e00d883a 	mov	r6,fp
   49394:	b009883a 	mov	r4,r22
   49398:	00532d40 	call	532d4 <_ungetc_r>
   4939c:	da000104 	addi	r8,sp,4
   493a0:	457ff91e 	bne	r8,r21,49388 <__alt_data_end+0xfffcab88>
   493a4:	003a7906 	br	47d8c <__alt_data_end+0xfffc958c>
   493a8:	da009f17 	ldw	r8,636(sp)
   493ac:	9465883a 	add	r18,r18,r17
   493b0:	9cffffc4 	addi	r19,r19,-1
   493b4:	4000051e 	bne	r8,zero,493cc <__svfscanf_r+0x1740>
   493b8:	a5000104 	addi	r20,r20,4
   493bc:	0021883a 	mov	r16,zero
   493c0:	003c6606 	br	4855c <__alt_data_end+0xfffc9d5c>
   493c4:	a1000017 	ldw	r4,0(r20)
   493c8:	003fdb06 	br	49338 <__alt_data_end+0xfffcab38>
   493cc:	0021883a 	mov	r16,zero
   493d0:	003c6206 	br	4855c <__alt_data_end+0xfffc9d5c>
   493d4:	d8800104 	addi	r2,sp,4
   493d8:	802b883a 	mov	r21,r16
   493dc:	143a6b2e 	bgeu	r2,r16,47d8c <__alt_data_end+0xfffc958c>
   493e0:	ad7fffc4 	addi	r21,r21,-1
   493e4:	a9400007 	ldb	r5,0(r21)
   493e8:	e00d883a 	mov	r6,fp
   493ec:	b009883a 	mov	r4,r22
   493f0:	00532d40 	call	532d4 <_ungetc_r>
   493f4:	d8c00104 	addi	r3,sp,4
   493f8:	1d7ff91e 	bne	r3,r21,493e0 <__alt_data_end+0xfffcabe0>
   493fc:	003a6306 	br	47d8c <__alt_data_end+0xfffc958c>
   49400:	0009883a 	mov	r4,zero
   49404:	004eb5c0 	call	4eb5c <nanf>
   49408:	a0800015 	stw	r2,0(r20)
   4940c:	dc409c15 	stw	r17,624(sp)
   49410:	003dac06 	br	48ac4 <__alt_data_end+0xfffca2c4>
   49414:	d9000104 	addi	r4,sp,4
   49418:	802b883a 	mov	r21,r16
   4941c:	243a5b2e 	bgeu	r4,r16,47d8c <__alt_data_end+0xfffc958c>
   49420:	ad7fffc4 	addi	r21,r21,-1
   49424:	a9400007 	ldb	r5,0(r21)
   49428:	e00d883a 	mov	r6,fp
   4942c:	b009883a 	mov	r4,r22
   49430:	00532d40 	call	532d4 <_ungetc_r>
   49434:	d9400104 	addi	r5,sp,4
   49438:	2d7ff91e 	bne	r5,r21,49420 <__alt_data_end+0xfffcac20>
   4943c:	003a5306 	br	47d8c <__alt_data_end+0xfffc958c>
   49440:	0050d500 	call	50d50 <_strtoull_r>
   49444:	003f9d06 	br	492bc <__alt_data_end+0xfffcaabc>

00049448 <vfscanf>:
   49448:	008001b4 	movhi	r2,6
   4944c:	defffb04 	addi	sp,sp,-20
   49450:	10b55004 	addi	r2,r2,-10944
   49454:	dc000215 	stw	r16,8(sp)
   49458:	14000017 	ldw	r16,0(r2)
   4945c:	dc400315 	stw	r17,12(sp)
   49460:	dfc00415 	stw	ra,16(sp)
   49464:	2023883a 	mov	r17,r4
   49468:	80000826 	beq	r16,zero,4948c <vfscanf+0x44>
   4946c:	80800e17 	ldw	r2,56(r16)
   49470:	1000061e 	bne	r2,zero,4948c <vfscanf+0x44>
   49474:	8009883a 	mov	r4,r16
   49478:	d9400015 	stw	r5,0(sp)
   4947c:	d9800115 	stw	r6,4(sp)
   49480:	004b4ec0 	call	4b4ec <__sinit>
   49484:	d9800117 	ldw	r6,4(sp)
   49488:	d9400017 	ldw	r5,0(sp)
   4948c:	300f883a 	mov	r7,r6
   49490:	8009883a 	mov	r4,r16
   49494:	280d883a 	mov	r6,r5
   49498:	880b883a 	mov	r5,r17
   4949c:	dfc00417 	ldw	ra,16(sp)
   494a0:	dc400317 	ldw	r17,12(sp)
   494a4:	dc000217 	ldw	r16,8(sp)
   494a8:	dec00504 	addi	sp,sp,20
   494ac:	0047c8c1 	jmpi	47c8c <__svfscanf_r>

000494b0 <__svfscanf>:
   494b0:	008001b4 	movhi	r2,6
   494b4:	10b55004 	addi	r2,r2,-10944
   494b8:	300f883a 	mov	r7,r6
   494bc:	280d883a 	mov	r6,r5
   494c0:	200b883a 	mov	r5,r4
   494c4:	11000017 	ldw	r4,0(r2)
   494c8:	0047c8c1 	jmpi	47c8c <__svfscanf_r>

000494cc <_vfscanf_r>:
   494cc:	defffb04 	addi	sp,sp,-20
   494d0:	dc000315 	stw	r16,12(sp)
   494d4:	dfc00415 	stw	ra,16(sp)
   494d8:	2021883a 	mov	r16,r4
   494dc:	20000926 	beq	r4,zero,49504 <_vfscanf_r+0x38>
   494e0:	20800e17 	ldw	r2,56(r4)
   494e4:	1000071e 	bne	r2,zero,49504 <_vfscanf_r+0x38>
   494e8:	d9400015 	stw	r5,0(sp)
   494ec:	d9800115 	stw	r6,4(sp)
   494f0:	d9c00215 	stw	r7,8(sp)
   494f4:	004b4ec0 	call	4b4ec <__sinit>
   494f8:	d9c00217 	ldw	r7,8(sp)
   494fc:	d9800117 	ldw	r6,4(sp)
   49500:	d9400017 	ldw	r5,0(sp)
   49504:	8009883a 	mov	r4,r16
   49508:	dfc00417 	ldw	ra,16(sp)
   4950c:	dc000317 	ldw	r16,12(sp)
   49510:	dec00504 	addi	sp,sp,20
   49514:	0047c8c1 	jmpi	47c8c <__svfscanf_r>

00049518 <__swsetup_r>:
   49518:	008001b4 	movhi	r2,6
   4951c:	defffd04 	addi	sp,sp,-12
   49520:	10b55004 	addi	r2,r2,-10944
   49524:	dc400115 	stw	r17,4(sp)
   49528:	2023883a 	mov	r17,r4
   4952c:	11000017 	ldw	r4,0(r2)
   49530:	dc000015 	stw	r16,0(sp)
   49534:	dfc00215 	stw	ra,8(sp)
   49538:	2821883a 	mov	r16,r5
   4953c:	20000226 	beq	r4,zero,49548 <__swsetup_r+0x30>
   49540:	20800e17 	ldw	r2,56(r4)
   49544:	10003126 	beq	r2,zero,4960c <__swsetup_r+0xf4>
   49548:	8080030b 	ldhu	r2,12(r16)
   4954c:	10c0020c 	andi	r3,r2,8
   49550:	1009883a 	mov	r4,r2
   49554:	18000f26 	beq	r3,zero,49594 <__swsetup_r+0x7c>
   49558:	80c00417 	ldw	r3,16(r16)
   4955c:	18001526 	beq	r3,zero,495b4 <__swsetup_r+0x9c>
   49560:	1100004c 	andi	r4,r2,1
   49564:	20001c1e 	bne	r4,zero,495d8 <__swsetup_r+0xc0>
   49568:	1080008c 	andi	r2,r2,2
   4956c:	1000291e 	bne	r2,zero,49614 <__swsetup_r+0xfc>
   49570:	80800517 	ldw	r2,20(r16)
   49574:	80800215 	stw	r2,8(r16)
   49578:	18001c26 	beq	r3,zero,495ec <__swsetup_r+0xd4>
   4957c:	0005883a 	mov	r2,zero
   49580:	dfc00217 	ldw	ra,8(sp)
   49584:	dc400117 	ldw	r17,4(sp)
   49588:	dc000017 	ldw	r16,0(sp)
   4958c:	dec00304 	addi	sp,sp,12
   49590:	f800283a 	ret
   49594:	2080040c 	andi	r2,r4,16
   49598:	10002e26 	beq	r2,zero,49654 <__swsetup_r+0x13c>
   4959c:	2080010c 	andi	r2,r4,4
   495a0:	10001e1e 	bne	r2,zero,4961c <__swsetup_r+0x104>
   495a4:	80c00417 	ldw	r3,16(r16)
   495a8:	20800214 	ori	r2,r4,8
   495ac:	8080030d 	sth	r2,12(r16)
   495b0:	183feb1e 	bne	r3,zero,49560 <__alt_data_end+0xfffcad60>
   495b4:	1100a00c 	andi	r4,r2,640
   495b8:	01408004 	movi	r5,512
   495bc:	217fe826 	beq	r4,r5,49560 <__alt_data_end+0xfffcad60>
   495c0:	800b883a 	mov	r5,r16
   495c4:	8809883a 	mov	r4,r17
   495c8:	004c3200 	call	4c320 <__smakebuf_r>
   495cc:	8080030b 	ldhu	r2,12(r16)
   495d0:	80c00417 	ldw	r3,16(r16)
   495d4:	003fe206 	br	49560 <__alt_data_end+0xfffcad60>
   495d8:	80800517 	ldw	r2,20(r16)
   495dc:	80000215 	stw	zero,8(r16)
   495e0:	0085c83a 	sub	r2,zero,r2
   495e4:	80800615 	stw	r2,24(r16)
   495e8:	183fe41e 	bne	r3,zero,4957c <__alt_data_end+0xfffcad7c>
   495ec:	80c0030b 	ldhu	r3,12(r16)
   495f0:	0005883a 	mov	r2,zero
   495f4:	1900200c 	andi	r4,r3,128
   495f8:	203fe126 	beq	r4,zero,49580 <__alt_data_end+0xfffcad80>
   495fc:	18c01014 	ori	r3,r3,64
   49600:	80c0030d 	sth	r3,12(r16)
   49604:	00bfffc4 	movi	r2,-1
   49608:	003fdd06 	br	49580 <__alt_data_end+0xfffcad80>
   4960c:	004b4ec0 	call	4b4ec <__sinit>
   49610:	003fcd06 	br	49548 <__alt_data_end+0xfffcad48>
   49614:	0005883a 	mov	r2,zero
   49618:	003fd606 	br	49574 <__alt_data_end+0xfffcad74>
   4961c:	81400c17 	ldw	r5,48(r16)
   49620:	28000626 	beq	r5,zero,4963c <__swsetup_r+0x124>
   49624:	80801004 	addi	r2,r16,64
   49628:	28800326 	beq	r5,r2,49638 <__swsetup_r+0x120>
   4962c:	8809883a 	mov	r4,r17
   49630:	004b8c00 	call	4b8c0 <_free_r>
   49634:	8100030b 	ldhu	r4,12(r16)
   49638:	80000c15 	stw	zero,48(r16)
   4963c:	80c00417 	ldw	r3,16(r16)
   49640:	00bff6c4 	movi	r2,-37
   49644:	1108703a 	and	r4,r2,r4
   49648:	80000115 	stw	zero,4(r16)
   4964c:	80c00015 	stw	r3,0(r16)
   49650:	003fd506 	br	495a8 <__alt_data_end+0xfffcada8>
   49654:	00800244 	movi	r2,9
   49658:	88800015 	stw	r2,0(r17)
   4965c:	20801014 	ori	r2,r4,64
   49660:	8080030d 	sth	r2,12(r16)
   49664:	00bfffc4 	movi	r2,-1
   49668:	003fc506 	br	49580 <__alt_data_end+0xfffcad80>

0004966c <quorem>:
   4966c:	defff704 	addi	sp,sp,-36
   49670:	dc800215 	stw	r18,8(sp)
   49674:	20800417 	ldw	r2,16(r4)
   49678:	2c800417 	ldw	r18,16(r5)
   4967c:	dfc00815 	stw	ra,32(sp)
   49680:	ddc00715 	stw	r23,28(sp)
   49684:	dd800615 	stw	r22,24(sp)
   49688:	dd400515 	stw	r21,20(sp)
   4968c:	dd000415 	stw	r20,16(sp)
   49690:	dcc00315 	stw	r19,12(sp)
   49694:	dc400115 	stw	r17,4(sp)
   49698:	dc000015 	stw	r16,0(sp)
   4969c:	14807116 	blt	r2,r18,49864 <quorem+0x1f8>
   496a0:	94bfffc4 	addi	r18,r18,-1
   496a4:	94ad883a 	add	r22,r18,r18
   496a8:	b5ad883a 	add	r22,r22,r22
   496ac:	2c400504 	addi	r17,r5,20
   496b0:	8da9883a 	add	r20,r17,r22
   496b4:	25400504 	addi	r21,r4,20
   496b8:	282f883a 	mov	r23,r5
   496bc:	adad883a 	add	r22,r21,r22
   496c0:	a1400017 	ldw	r5,0(r20)
   496c4:	2021883a 	mov	r16,r4
   496c8:	b1000017 	ldw	r4,0(r22)
   496cc:	29400044 	addi	r5,r5,1
   496d0:	00455740 	call	45574 <__udivsi3>
   496d4:	1027883a 	mov	r19,r2
   496d8:	10002c26 	beq	r2,zero,4978c <quorem+0x120>
   496dc:	a813883a 	mov	r9,r21
   496e0:	880b883a 	mov	r5,r17
   496e4:	0009883a 	mov	r4,zero
   496e8:	000d883a 	mov	r6,zero
   496ec:	2a000017 	ldw	r8,0(r5)
   496f0:	49c00017 	ldw	r7,0(r9)
   496f4:	29400104 	addi	r5,r5,4
   496f8:	40bfffcc 	andi	r2,r8,65535
   496fc:	14c5383a 	mul	r2,r2,r19
   49700:	4010d43a 	srli	r8,r8,16
   49704:	38ffffcc 	andi	r3,r7,65535
   49708:	1105883a 	add	r2,r2,r4
   4970c:	1008d43a 	srli	r4,r2,16
   49710:	44d1383a 	mul	r8,r8,r19
   49714:	198d883a 	add	r6,r3,r6
   49718:	10ffffcc 	andi	r3,r2,65535
   4971c:	30c7c83a 	sub	r3,r6,r3
   49720:	380ed43a 	srli	r7,r7,16
   49724:	4105883a 	add	r2,r8,r4
   49728:	180dd43a 	srai	r6,r3,16
   4972c:	113fffcc 	andi	r4,r2,65535
   49730:	390fc83a 	sub	r7,r7,r4
   49734:	398d883a 	add	r6,r7,r6
   49738:	300e943a 	slli	r7,r6,16
   4973c:	18ffffcc 	andi	r3,r3,65535
   49740:	1008d43a 	srli	r4,r2,16
   49744:	38ceb03a 	or	r7,r7,r3
   49748:	49c00015 	stw	r7,0(r9)
   4974c:	300dd43a 	srai	r6,r6,16
   49750:	4a400104 	addi	r9,r9,4
   49754:	a17fe52e 	bgeu	r20,r5,496ec <__alt_data_end+0xfffcaeec>
   49758:	b0800017 	ldw	r2,0(r22)
   4975c:	10000b1e 	bne	r2,zero,4978c <quorem+0x120>
   49760:	b0bfff04 	addi	r2,r22,-4
   49764:	a880082e 	bgeu	r21,r2,49788 <quorem+0x11c>
   49768:	b0ffff17 	ldw	r3,-4(r22)
   4976c:	18000326 	beq	r3,zero,4977c <quorem+0x110>
   49770:	00000506 	br	49788 <quorem+0x11c>
   49774:	10c00017 	ldw	r3,0(r2)
   49778:	1800031e 	bne	r3,zero,49788 <quorem+0x11c>
   4977c:	10bfff04 	addi	r2,r2,-4
   49780:	94bfffc4 	addi	r18,r18,-1
   49784:	a8bffb36 	bltu	r21,r2,49774 <__alt_data_end+0xfffcaf74>
   49788:	84800415 	stw	r18,16(r16)
   4978c:	b80b883a 	mov	r5,r23
   49790:	8009883a 	mov	r4,r16
   49794:	004db3c0 	call	4db3c <__mcmp>
   49798:	10002616 	blt	r2,zero,49834 <quorem+0x1c8>
   4979c:	9cc00044 	addi	r19,r19,1
   497a0:	a805883a 	mov	r2,r21
   497a4:	000b883a 	mov	r5,zero
   497a8:	11000017 	ldw	r4,0(r2)
   497ac:	89800017 	ldw	r6,0(r17)
   497b0:	10800104 	addi	r2,r2,4
   497b4:	20ffffcc 	andi	r3,r4,65535
   497b8:	194b883a 	add	r5,r3,r5
   497bc:	30ffffcc 	andi	r3,r6,65535
   497c0:	28c7c83a 	sub	r3,r5,r3
   497c4:	300cd43a 	srli	r6,r6,16
   497c8:	2008d43a 	srli	r4,r4,16
   497cc:	180bd43a 	srai	r5,r3,16
   497d0:	18ffffcc 	andi	r3,r3,65535
   497d4:	2189c83a 	sub	r4,r4,r6
   497d8:	2149883a 	add	r4,r4,r5
   497dc:	200c943a 	slli	r6,r4,16
   497e0:	8c400104 	addi	r17,r17,4
   497e4:	200bd43a 	srai	r5,r4,16
   497e8:	30c6b03a 	or	r3,r6,r3
   497ec:	10ffff15 	stw	r3,-4(r2)
   497f0:	a47fed2e 	bgeu	r20,r17,497a8 <__alt_data_end+0xfffcafa8>
   497f4:	9485883a 	add	r2,r18,r18
   497f8:	1085883a 	add	r2,r2,r2
   497fc:	a887883a 	add	r3,r21,r2
   49800:	18800017 	ldw	r2,0(r3)
   49804:	10000b1e 	bne	r2,zero,49834 <quorem+0x1c8>
   49808:	18bfff04 	addi	r2,r3,-4
   4980c:	a880082e 	bgeu	r21,r2,49830 <quorem+0x1c4>
   49810:	18ffff17 	ldw	r3,-4(r3)
   49814:	18000326 	beq	r3,zero,49824 <quorem+0x1b8>
   49818:	00000506 	br	49830 <quorem+0x1c4>
   4981c:	10c00017 	ldw	r3,0(r2)
   49820:	1800031e 	bne	r3,zero,49830 <quorem+0x1c4>
   49824:	10bfff04 	addi	r2,r2,-4
   49828:	94bfffc4 	addi	r18,r18,-1
   4982c:	a8bffb36 	bltu	r21,r2,4981c <__alt_data_end+0xfffcb01c>
   49830:	84800415 	stw	r18,16(r16)
   49834:	9805883a 	mov	r2,r19
   49838:	dfc00817 	ldw	ra,32(sp)
   4983c:	ddc00717 	ldw	r23,28(sp)
   49840:	dd800617 	ldw	r22,24(sp)
   49844:	dd400517 	ldw	r21,20(sp)
   49848:	dd000417 	ldw	r20,16(sp)
   4984c:	dcc00317 	ldw	r19,12(sp)
   49850:	dc800217 	ldw	r18,8(sp)
   49854:	dc400117 	ldw	r17,4(sp)
   49858:	dc000017 	ldw	r16,0(sp)
   4985c:	dec00904 	addi	sp,sp,36
   49860:	f800283a 	ret
   49864:	0005883a 	mov	r2,zero
   49868:	003ff306 	br	49838 <__alt_data_end+0xfffcb038>

0004986c <_dtoa_r>:
   4986c:	20801017 	ldw	r2,64(r4)
   49870:	deffde04 	addi	sp,sp,-136
   49874:	df002015 	stw	fp,128(sp)
   49878:	dcc01b15 	stw	r19,108(sp)
   4987c:	dc801a15 	stw	r18,104(sp)
   49880:	dc401915 	stw	r17,100(sp)
   49884:	dc001815 	stw	r16,96(sp)
   49888:	dfc02115 	stw	ra,132(sp)
   4988c:	ddc01f15 	stw	r23,124(sp)
   49890:	dd801e15 	stw	r22,120(sp)
   49894:	dd401d15 	stw	r21,116(sp)
   49898:	dd001c15 	stw	r20,112(sp)
   4989c:	d9c00315 	stw	r7,12(sp)
   498a0:	2039883a 	mov	fp,r4
   498a4:	3023883a 	mov	r17,r6
   498a8:	2825883a 	mov	r18,r5
   498ac:	dc002417 	ldw	r16,144(sp)
   498b0:	3027883a 	mov	r19,r6
   498b4:	10000826 	beq	r2,zero,498d8 <_dtoa_r+0x6c>
   498b8:	21801117 	ldw	r6,68(r4)
   498bc:	00c00044 	movi	r3,1
   498c0:	100b883a 	mov	r5,r2
   498c4:	1986983a 	sll	r3,r3,r6
   498c8:	11800115 	stw	r6,4(r2)
   498cc:	10c00215 	stw	r3,8(r2)
   498d0:	004d31c0 	call	4d31c <_Bfree>
   498d4:	e0001015 	stw	zero,64(fp)
   498d8:	88002e16 	blt	r17,zero,49994 <_dtoa_r+0x128>
   498dc:	80000015 	stw	zero,0(r16)
   498e0:	889ffc2c 	andhi	r2,r17,32752
   498e4:	00dffc34 	movhi	r3,32752
   498e8:	10c01c26 	beq	r2,r3,4995c <_dtoa_r+0xf0>
   498ec:	000d883a 	mov	r6,zero
   498f0:	000f883a 	mov	r7,zero
   498f4:	9009883a 	mov	r4,r18
   498f8:	980b883a 	mov	r5,r19
   498fc:	00581100 	call	58110 <__eqdf2>
   49900:	10002b1e 	bne	r2,zero,499b0 <_dtoa_r+0x144>
   49904:	d9c02317 	ldw	r7,140(sp)
   49908:	00800044 	movi	r2,1
   4990c:	38800015 	stw	r2,0(r7)
   49910:	d8802517 	ldw	r2,148(sp)
   49914:	10019e26 	beq	r2,zero,49f90 <_dtoa_r+0x724>
   49918:	d8c02517 	ldw	r3,148(sp)
   4991c:	008001b4 	movhi	r2,6
   49920:	10ac9344 	addi	r2,r2,-19891
   49924:	18800015 	stw	r2,0(r3)
   49928:	10bfffc4 	addi	r2,r2,-1
   4992c:	dfc02117 	ldw	ra,132(sp)
   49930:	df002017 	ldw	fp,128(sp)
   49934:	ddc01f17 	ldw	r23,124(sp)
   49938:	dd801e17 	ldw	r22,120(sp)
   4993c:	dd401d17 	ldw	r21,116(sp)
   49940:	dd001c17 	ldw	r20,112(sp)
   49944:	dcc01b17 	ldw	r19,108(sp)
   49948:	dc801a17 	ldw	r18,104(sp)
   4994c:	dc401917 	ldw	r17,100(sp)
   49950:	dc001817 	ldw	r16,96(sp)
   49954:	dec02204 	addi	sp,sp,136
   49958:	f800283a 	ret
   4995c:	d8c02317 	ldw	r3,140(sp)
   49960:	0089c3c4 	movi	r2,9999
   49964:	18800015 	stw	r2,0(r3)
   49968:	90017726 	beq	r18,zero,49f48 <_dtoa_r+0x6dc>
   4996c:	008001b4 	movhi	r2,6
   49970:	10ad4a04 	addi	r2,r2,-19160
   49974:	d9002517 	ldw	r4,148(sp)
   49978:	203fec26 	beq	r4,zero,4992c <__alt_data_end+0xfffcb12c>
   4997c:	10c000c7 	ldb	r3,3(r2)
   49980:	1801781e 	bne	r3,zero,49f64 <_dtoa_r+0x6f8>
   49984:	10c000c4 	addi	r3,r2,3
   49988:	d9802517 	ldw	r6,148(sp)
   4998c:	30c00015 	stw	r3,0(r6)
   49990:	003fe606 	br	4992c <__alt_data_end+0xfffcb12c>
   49994:	04e00034 	movhi	r19,32768
   49998:	9cffffc4 	addi	r19,r19,-1
   4999c:	00800044 	movi	r2,1
   499a0:	8ce6703a 	and	r19,r17,r19
   499a4:	80800015 	stw	r2,0(r16)
   499a8:	9823883a 	mov	r17,r19
   499ac:	003fcc06 	br	498e0 <__alt_data_end+0xfffcb0e0>
   499b0:	d8800204 	addi	r2,sp,8
   499b4:	d8800015 	stw	r2,0(sp)
   499b8:	d9c00104 	addi	r7,sp,4
   499bc:	900b883a 	mov	r5,r18
   499c0:	980d883a 	mov	r6,r19
   499c4:	e009883a 	mov	r4,fp
   499c8:	8820d53a 	srli	r16,r17,20
   499cc:	004df080 	call	4df08 <__d2b>
   499d0:	d8800915 	stw	r2,36(sp)
   499d4:	8001651e 	bne	r16,zero,49f6c <_dtoa_r+0x700>
   499d8:	dd800217 	ldw	r22,8(sp)
   499dc:	dc000117 	ldw	r16,4(sp)
   499e0:	00800804 	movi	r2,32
   499e4:	b421883a 	add	r16,r22,r16
   499e8:	80c10c84 	addi	r3,r16,1074
   499ec:	10c2d10e 	bge	r2,r3,4a534 <_dtoa_r+0xcc8>
   499f0:	00801004 	movi	r2,64
   499f4:	81010484 	addi	r4,r16,1042
   499f8:	10c7c83a 	sub	r3,r2,r3
   499fc:	9108d83a 	srl	r4,r18,r4
   49a00:	88e2983a 	sll	r17,r17,r3
   49a04:	2448b03a 	or	r4,r4,r17
   49a08:	00451ec0 	call	451ec <__floatunsidf>
   49a0c:	017f8434 	movhi	r5,65040
   49a10:	01800044 	movi	r6,1
   49a14:	1009883a 	mov	r4,r2
   49a18:	194b883a 	add	r5,r3,r5
   49a1c:	843fffc4 	addi	r16,r16,-1
   49a20:	d9801115 	stw	r6,68(sp)
   49a24:	000d883a 	mov	r6,zero
   49a28:	01cffe34 	movhi	r7,16376
   49a2c:	00447940 	call	44794 <__subdf3>
   49a30:	0198dbf4 	movhi	r6,25455
   49a34:	01cff4f4 	movhi	r7,16339
   49a38:	3190d844 	addi	r6,r6,17249
   49a3c:	39e1e9c4 	addi	r7,r7,-30809
   49a40:	1009883a 	mov	r4,r2
   49a44:	180b883a 	mov	r5,r3
   49a48:	004407c0 	call	4407c <__muldf3>
   49a4c:	01a2d874 	movhi	r6,35681
   49a50:	01cff1f4 	movhi	r7,16327
   49a54:	31b22cc4 	addi	r6,r6,-14157
   49a58:	39e28a04 	addi	r7,r7,-30168
   49a5c:	180b883a 	mov	r5,r3
   49a60:	1009883a 	mov	r4,r2
   49a64:	0042d180 	call	42d18 <__adddf3>
   49a68:	8009883a 	mov	r4,r16
   49a6c:	1029883a 	mov	r20,r2
   49a70:	1823883a 	mov	r17,r3
   49a74:	00451100 	call	45110 <__floatsidf>
   49a78:	019427f4 	movhi	r6,20639
   49a7c:	01cff4f4 	movhi	r7,16339
   49a80:	319e7ec4 	addi	r6,r6,31227
   49a84:	39d104c4 	addi	r7,r7,17427
   49a88:	1009883a 	mov	r4,r2
   49a8c:	180b883a 	mov	r5,r3
   49a90:	004407c0 	call	4407c <__muldf3>
   49a94:	100d883a 	mov	r6,r2
   49a98:	180f883a 	mov	r7,r3
   49a9c:	a009883a 	mov	r4,r20
   49aa0:	880b883a 	mov	r5,r17
   49aa4:	0042d180 	call	42d18 <__adddf3>
   49aa8:	1009883a 	mov	r4,r2
   49aac:	180b883a 	mov	r5,r3
   49ab0:	1029883a 	mov	r20,r2
   49ab4:	1823883a 	mov	r17,r3
   49ab8:	00450900 	call	45090 <__fixdfsi>
   49abc:	000d883a 	mov	r6,zero
   49ac0:	000f883a 	mov	r7,zero
   49ac4:	a009883a 	mov	r4,r20
   49ac8:	880b883a 	mov	r5,r17
   49acc:	d8800515 	stw	r2,20(sp)
   49ad0:	0043f880 	call	43f88 <__ledf2>
   49ad4:	10028716 	blt	r2,zero,4a4f4 <_dtoa_r+0xc88>
   49ad8:	d8c00517 	ldw	r3,20(sp)
   49adc:	00800584 	movi	r2,22
   49ae0:	10c27536 	bltu	r2,r3,4a4b8 <_dtoa_r+0xc4c>
   49ae4:	180490fa 	slli	r2,r3,3
   49ae8:	00c001b4 	movhi	r3,6
   49aec:	18ed6604 	addi	r3,r3,-19048
   49af0:	1885883a 	add	r2,r3,r2
   49af4:	11000017 	ldw	r4,0(r2)
   49af8:	11400117 	ldw	r5,4(r2)
   49afc:	900d883a 	mov	r6,r18
   49b00:	980f883a 	mov	r7,r19
   49b04:	0043eac0 	call	43eac <__gedf2>
   49b08:	00828d0e 	bge	zero,r2,4a540 <_dtoa_r+0xcd4>
   49b0c:	d9000517 	ldw	r4,20(sp)
   49b10:	d8000e15 	stw	zero,56(sp)
   49b14:	213fffc4 	addi	r4,r4,-1
   49b18:	d9000515 	stw	r4,20(sp)
   49b1c:	b42dc83a 	sub	r22,r22,r16
   49b20:	b5bfffc4 	addi	r22,r22,-1
   49b24:	b0026f16 	blt	r22,zero,4a4e4 <_dtoa_r+0xc78>
   49b28:	d8000815 	stw	zero,32(sp)
   49b2c:	d9c00517 	ldw	r7,20(sp)
   49b30:	38026416 	blt	r7,zero,4a4c4 <_dtoa_r+0xc58>
   49b34:	b1ed883a 	add	r22,r22,r7
   49b38:	d9c00d15 	stw	r7,52(sp)
   49b3c:	d8000a15 	stw	zero,40(sp)
   49b40:	d9800317 	ldw	r6,12(sp)
   49b44:	00800244 	movi	r2,9
   49b48:	11811436 	bltu	r2,r6,49f9c <_dtoa_r+0x730>
   49b4c:	00800144 	movi	r2,5
   49b50:	1184e10e 	bge	r2,r6,4aed8 <_dtoa_r+0x166c>
   49b54:	31bfff04 	addi	r6,r6,-4
   49b58:	d9800315 	stw	r6,12(sp)
   49b5c:	0023883a 	mov	r17,zero
   49b60:	d9800317 	ldw	r6,12(sp)
   49b64:	008000c4 	movi	r2,3
   49b68:	30836726 	beq	r6,r2,4a908 <_dtoa_r+0x109c>
   49b6c:	1183410e 	bge	r2,r6,4a874 <_dtoa_r+0x1008>
   49b70:	d9c00317 	ldw	r7,12(sp)
   49b74:	00800104 	movi	r2,4
   49b78:	38827c26 	beq	r7,r2,4a56c <_dtoa_r+0xd00>
   49b7c:	00800144 	movi	r2,5
   49b80:	3884c41e 	bne	r7,r2,4ae94 <_dtoa_r+0x1628>
   49b84:	00800044 	movi	r2,1
   49b88:	d8800b15 	stw	r2,44(sp)
   49b8c:	d8c00517 	ldw	r3,20(sp)
   49b90:	d9002217 	ldw	r4,136(sp)
   49b94:	1907883a 	add	r3,r3,r4
   49b98:	19800044 	addi	r6,r3,1
   49b9c:	d8c00c15 	stw	r3,48(sp)
   49ba0:	d9800615 	stw	r6,24(sp)
   49ba4:	0183a40e 	bge	zero,r6,4aa38 <_dtoa_r+0x11cc>
   49ba8:	d9800617 	ldw	r6,24(sp)
   49bac:	3021883a 	mov	r16,r6
   49bb0:	e0001115 	stw	zero,68(fp)
   49bb4:	008005c4 	movi	r2,23
   49bb8:	1184c92e 	bgeu	r2,r6,4aee0 <_dtoa_r+0x1674>
   49bbc:	00c00044 	movi	r3,1
   49bc0:	00800104 	movi	r2,4
   49bc4:	1085883a 	add	r2,r2,r2
   49bc8:	11000504 	addi	r4,r2,20
   49bcc:	180b883a 	mov	r5,r3
   49bd0:	18c00044 	addi	r3,r3,1
   49bd4:	313ffb2e 	bgeu	r6,r4,49bc4 <__alt_data_end+0xfffcb3c4>
   49bd8:	e1401115 	stw	r5,68(fp)
   49bdc:	e009883a 	mov	r4,fp
   49be0:	004d2740 	call	4d274 <_Balloc>
   49be4:	d8800715 	stw	r2,28(sp)
   49be8:	e0801015 	stw	r2,64(fp)
   49bec:	00800384 	movi	r2,14
   49bf0:	1400f736 	bltu	r2,r16,49fd0 <_dtoa_r+0x764>
   49bf4:	8800f626 	beq	r17,zero,49fd0 <_dtoa_r+0x764>
   49bf8:	d9c00517 	ldw	r7,20(sp)
   49bfc:	01c39a0e 	bge	zero,r7,4aa68 <_dtoa_r+0x11fc>
   49c00:	388003cc 	andi	r2,r7,15
   49c04:	100490fa 	slli	r2,r2,3
   49c08:	382bd13a 	srai	r21,r7,4
   49c0c:	00c001b4 	movhi	r3,6
   49c10:	18ed6604 	addi	r3,r3,-19048
   49c14:	1885883a 	add	r2,r3,r2
   49c18:	a8c0040c 	andi	r3,r21,16
   49c1c:	12400017 	ldw	r9,0(r2)
   49c20:	12000117 	ldw	r8,4(r2)
   49c24:	18037926 	beq	r3,zero,4aa0c <_dtoa_r+0x11a0>
   49c28:	008001b4 	movhi	r2,6
   49c2c:	10ad5c04 	addi	r2,r2,-19088
   49c30:	11800817 	ldw	r6,32(r2)
   49c34:	11c00917 	ldw	r7,36(r2)
   49c38:	9009883a 	mov	r4,r18
   49c3c:	980b883a 	mov	r5,r19
   49c40:	da001715 	stw	r8,92(sp)
   49c44:	da401615 	stw	r9,88(sp)
   49c48:	00435c40 	call	435c4 <__divdf3>
   49c4c:	da001717 	ldw	r8,92(sp)
   49c50:	da401617 	ldw	r9,88(sp)
   49c54:	ad4003cc 	andi	r21,r21,15
   49c58:	040000c4 	movi	r16,3
   49c5c:	1023883a 	mov	r17,r2
   49c60:	1829883a 	mov	r20,r3
   49c64:	a8001126 	beq	r21,zero,49cac <_dtoa_r+0x440>
   49c68:	05c001b4 	movhi	r23,6
   49c6c:	bded5c04 	addi	r23,r23,-19088
   49c70:	4805883a 	mov	r2,r9
   49c74:	4007883a 	mov	r3,r8
   49c78:	a980004c 	andi	r6,r21,1
   49c7c:	1009883a 	mov	r4,r2
   49c80:	a82bd07a 	srai	r21,r21,1
   49c84:	180b883a 	mov	r5,r3
   49c88:	30000426 	beq	r6,zero,49c9c <_dtoa_r+0x430>
   49c8c:	b9800017 	ldw	r6,0(r23)
   49c90:	b9c00117 	ldw	r7,4(r23)
   49c94:	84000044 	addi	r16,r16,1
   49c98:	004407c0 	call	4407c <__muldf3>
   49c9c:	bdc00204 	addi	r23,r23,8
   49ca0:	a83ff51e 	bne	r21,zero,49c78 <__alt_data_end+0xfffcb478>
   49ca4:	1013883a 	mov	r9,r2
   49ca8:	1811883a 	mov	r8,r3
   49cac:	480d883a 	mov	r6,r9
   49cb0:	400f883a 	mov	r7,r8
   49cb4:	8809883a 	mov	r4,r17
   49cb8:	a00b883a 	mov	r5,r20
   49cbc:	00435c40 	call	435c4 <__divdf3>
   49cc0:	d8800f15 	stw	r2,60(sp)
   49cc4:	d8c01015 	stw	r3,64(sp)
   49cc8:	d8c00e17 	ldw	r3,56(sp)
   49ccc:	18000626 	beq	r3,zero,49ce8 <_dtoa_r+0x47c>
   49cd0:	d9000f17 	ldw	r4,60(sp)
   49cd4:	d9401017 	ldw	r5,64(sp)
   49cd8:	000d883a 	mov	r6,zero
   49cdc:	01cffc34 	movhi	r7,16368
   49ce0:	0043f880 	call	43f88 <__ledf2>
   49ce4:	10040b16 	blt	r2,zero,4ad14 <_dtoa_r+0x14a8>
   49ce8:	8009883a 	mov	r4,r16
   49cec:	00451100 	call	45110 <__floatsidf>
   49cf0:	d9800f17 	ldw	r6,60(sp)
   49cf4:	d9c01017 	ldw	r7,64(sp)
   49cf8:	1009883a 	mov	r4,r2
   49cfc:	180b883a 	mov	r5,r3
   49d00:	004407c0 	call	4407c <__muldf3>
   49d04:	000d883a 	mov	r6,zero
   49d08:	01d00734 	movhi	r7,16412
   49d0c:	1009883a 	mov	r4,r2
   49d10:	180b883a 	mov	r5,r3
   49d14:	0042d180 	call	42d18 <__adddf3>
   49d18:	1021883a 	mov	r16,r2
   49d1c:	d8800617 	ldw	r2,24(sp)
   49d20:	047f3034 	movhi	r17,64704
   49d24:	1c63883a 	add	r17,r3,r17
   49d28:	10031826 	beq	r2,zero,4a98c <_dtoa_r+0x1120>
   49d2c:	d8c00517 	ldw	r3,20(sp)
   49d30:	db000617 	ldw	r12,24(sp)
   49d34:	d8c01315 	stw	r3,76(sp)
   49d38:	d9000b17 	ldw	r4,44(sp)
   49d3c:	20038f26 	beq	r4,zero,4ab7c <_dtoa_r+0x1310>
   49d40:	60bfffc4 	addi	r2,r12,-1
   49d44:	100490fa 	slli	r2,r2,3
   49d48:	00c001b4 	movhi	r3,6
   49d4c:	18ed6604 	addi	r3,r3,-19048
   49d50:	1885883a 	add	r2,r3,r2
   49d54:	11800017 	ldw	r6,0(r2)
   49d58:	11c00117 	ldw	r7,4(r2)
   49d5c:	d8800717 	ldw	r2,28(sp)
   49d60:	0009883a 	mov	r4,zero
   49d64:	014ff834 	movhi	r5,16352
   49d68:	db001615 	stw	r12,88(sp)
   49d6c:	15c00044 	addi	r23,r2,1
   49d70:	00435c40 	call	435c4 <__divdf3>
   49d74:	800d883a 	mov	r6,r16
   49d78:	880f883a 	mov	r7,r17
   49d7c:	1009883a 	mov	r4,r2
   49d80:	180b883a 	mov	r5,r3
   49d84:	00447940 	call	44794 <__subdf3>
   49d88:	d9401017 	ldw	r5,64(sp)
   49d8c:	d9000f17 	ldw	r4,60(sp)
   49d90:	102b883a 	mov	r21,r2
   49d94:	d8c01215 	stw	r3,72(sp)
   49d98:	00450900 	call	45090 <__fixdfsi>
   49d9c:	1009883a 	mov	r4,r2
   49da0:	1029883a 	mov	r20,r2
   49da4:	00451100 	call	45110 <__floatsidf>
   49da8:	d9000f17 	ldw	r4,60(sp)
   49dac:	d9401017 	ldw	r5,64(sp)
   49db0:	100d883a 	mov	r6,r2
   49db4:	180f883a 	mov	r7,r3
   49db8:	00447940 	call	44794 <__subdf3>
   49dbc:	1823883a 	mov	r17,r3
   49dc0:	d8c00717 	ldw	r3,28(sp)
   49dc4:	d9401217 	ldw	r5,72(sp)
   49dc8:	a2000c04 	addi	r8,r20,48
   49dcc:	1021883a 	mov	r16,r2
   49dd0:	1a000005 	stb	r8,0(r3)
   49dd4:	800d883a 	mov	r6,r16
   49dd8:	880f883a 	mov	r7,r17
   49ddc:	a809883a 	mov	r4,r21
   49de0:	4029883a 	mov	r20,r8
   49de4:	0043eac0 	call	43eac <__gedf2>
   49de8:	00841d16 	blt	zero,r2,4ae60 <_dtoa_r+0x15f4>
   49dec:	800d883a 	mov	r6,r16
   49df0:	880f883a 	mov	r7,r17
   49df4:	0009883a 	mov	r4,zero
   49df8:	014ffc34 	movhi	r5,16368
   49dfc:	00447940 	call	44794 <__subdf3>
   49e00:	d9401217 	ldw	r5,72(sp)
   49e04:	100d883a 	mov	r6,r2
   49e08:	180f883a 	mov	r7,r3
   49e0c:	a809883a 	mov	r4,r21
   49e10:	0043eac0 	call	43eac <__gedf2>
   49e14:	db001617 	ldw	r12,88(sp)
   49e18:	00840e16 	blt	zero,r2,4ae54 <_dtoa_r+0x15e8>
   49e1c:	00800044 	movi	r2,1
   49e20:	13006b0e 	bge	r2,r12,49fd0 <_dtoa_r+0x764>
   49e24:	d9000717 	ldw	r4,28(sp)
   49e28:	dd800f15 	stw	r22,60(sp)
   49e2c:	dcc01015 	stw	r19,64(sp)
   49e30:	2319883a 	add	r12,r4,r12
   49e34:	dcc01217 	ldw	r19,72(sp)
   49e38:	602d883a 	mov	r22,r12
   49e3c:	dc801215 	stw	r18,72(sp)
   49e40:	b825883a 	mov	r18,r23
   49e44:	00000906 	br	49e6c <_dtoa_r+0x600>
   49e48:	00447940 	call	44794 <__subdf3>
   49e4c:	a80d883a 	mov	r6,r21
   49e50:	980f883a 	mov	r7,r19
   49e54:	1009883a 	mov	r4,r2
   49e58:	180b883a 	mov	r5,r3
   49e5c:	0043f880 	call	43f88 <__ledf2>
   49e60:	1003e816 	blt	r2,zero,4ae04 <_dtoa_r+0x1598>
   49e64:	b825883a 	mov	r18,r23
   49e68:	bd83e926 	beq	r23,r22,4ae10 <_dtoa_r+0x15a4>
   49e6c:	a809883a 	mov	r4,r21
   49e70:	980b883a 	mov	r5,r19
   49e74:	000d883a 	mov	r6,zero
   49e78:	01d00934 	movhi	r7,16420
   49e7c:	004407c0 	call	4407c <__muldf3>
   49e80:	000d883a 	mov	r6,zero
   49e84:	01d00934 	movhi	r7,16420
   49e88:	8009883a 	mov	r4,r16
   49e8c:	880b883a 	mov	r5,r17
   49e90:	102b883a 	mov	r21,r2
   49e94:	1827883a 	mov	r19,r3
   49e98:	004407c0 	call	4407c <__muldf3>
   49e9c:	180b883a 	mov	r5,r3
   49ea0:	1009883a 	mov	r4,r2
   49ea4:	1821883a 	mov	r16,r3
   49ea8:	1023883a 	mov	r17,r2
   49eac:	00450900 	call	45090 <__fixdfsi>
   49eb0:	1009883a 	mov	r4,r2
   49eb4:	1029883a 	mov	r20,r2
   49eb8:	00451100 	call	45110 <__floatsidf>
   49ebc:	8809883a 	mov	r4,r17
   49ec0:	800b883a 	mov	r5,r16
   49ec4:	100d883a 	mov	r6,r2
   49ec8:	180f883a 	mov	r7,r3
   49ecc:	00447940 	call	44794 <__subdf3>
   49ed0:	a5000c04 	addi	r20,r20,48
   49ed4:	a80d883a 	mov	r6,r21
   49ed8:	980f883a 	mov	r7,r19
   49edc:	1009883a 	mov	r4,r2
   49ee0:	180b883a 	mov	r5,r3
   49ee4:	95000005 	stb	r20,0(r18)
   49ee8:	1021883a 	mov	r16,r2
   49eec:	1823883a 	mov	r17,r3
   49ef0:	0043f880 	call	43f88 <__ledf2>
   49ef4:	bdc00044 	addi	r23,r23,1
   49ef8:	800d883a 	mov	r6,r16
   49efc:	880f883a 	mov	r7,r17
   49f00:	0009883a 	mov	r4,zero
   49f04:	014ffc34 	movhi	r5,16368
   49f08:	103fcf0e 	bge	r2,zero,49e48 <__alt_data_end+0xfffcb648>
   49f0c:	d8c01317 	ldw	r3,76(sp)
   49f10:	d8c00515 	stw	r3,20(sp)
   49f14:	d9400917 	ldw	r5,36(sp)
   49f18:	e009883a 	mov	r4,fp
   49f1c:	004d31c0 	call	4d31c <_Bfree>
   49f20:	d9000517 	ldw	r4,20(sp)
   49f24:	d9802317 	ldw	r6,140(sp)
   49f28:	d9c02517 	ldw	r7,148(sp)
   49f2c:	b8000005 	stb	zero,0(r23)
   49f30:	20800044 	addi	r2,r4,1
   49f34:	30800015 	stw	r2,0(r6)
   49f38:	3802aa26 	beq	r7,zero,4a9e4 <_dtoa_r+0x1178>
   49f3c:	3dc00015 	stw	r23,0(r7)
   49f40:	d8800717 	ldw	r2,28(sp)
   49f44:	003e7906 	br	4992c <__alt_data_end+0xfffcb12c>
   49f48:	00800434 	movhi	r2,16
   49f4c:	10bfffc4 	addi	r2,r2,-1
   49f50:	88a2703a 	and	r17,r17,r2
   49f54:	883e851e 	bne	r17,zero,4996c <__alt_data_end+0xfffcb16c>
   49f58:	008001b4 	movhi	r2,6
   49f5c:	10ad4704 	addi	r2,r2,-19172
   49f60:	003e8406 	br	49974 <__alt_data_end+0xfffcb174>
   49f64:	10c00204 	addi	r3,r2,8
   49f68:	003e8706 	br	49988 <__alt_data_end+0xfffcb188>
   49f6c:	01400434 	movhi	r5,16
   49f70:	297fffc4 	addi	r5,r5,-1
   49f74:	994a703a 	and	r5,r19,r5
   49f78:	9009883a 	mov	r4,r18
   49f7c:	843f0044 	addi	r16,r16,-1023
   49f80:	294ffc34 	orhi	r5,r5,16368
   49f84:	dd800217 	ldw	r22,8(sp)
   49f88:	d8001115 	stw	zero,68(sp)
   49f8c:	003ea506 	br	49a24 <__alt_data_end+0xfffcb224>
   49f90:	008001b4 	movhi	r2,6
   49f94:	10ac9304 	addi	r2,r2,-19892
   49f98:	003e6406 	br	4992c <__alt_data_end+0xfffcb12c>
   49f9c:	e0001115 	stw	zero,68(fp)
   49fa0:	000b883a 	mov	r5,zero
   49fa4:	e009883a 	mov	r4,fp
   49fa8:	004d2740 	call	4d274 <_Balloc>
   49fac:	01bfffc4 	movi	r6,-1
   49fb0:	01c00044 	movi	r7,1
   49fb4:	d8800715 	stw	r2,28(sp)
   49fb8:	d9800c15 	stw	r6,48(sp)
   49fbc:	e0801015 	stw	r2,64(fp)
   49fc0:	d8000315 	stw	zero,12(sp)
   49fc4:	d9c00b15 	stw	r7,44(sp)
   49fc8:	d9800615 	stw	r6,24(sp)
   49fcc:	d8002215 	stw	zero,136(sp)
   49fd0:	d8800117 	ldw	r2,4(sp)
   49fd4:	10008916 	blt	r2,zero,4a1fc <_dtoa_r+0x990>
   49fd8:	d9000517 	ldw	r4,20(sp)
   49fdc:	00c00384 	movi	r3,14
   49fe0:	19008616 	blt	r3,r4,4a1fc <_dtoa_r+0x990>
   49fe4:	200490fa 	slli	r2,r4,3
   49fe8:	00c001b4 	movhi	r3,6
   49fec:	d9802217 	ldw	r6,136(sp)
   49ff0:	18ed6604 	addi	r3,r3,-19048
   49ff4:	1885883a 	add	r2,r3,r2
   49ff8:	14000017 	ldw	r16,0(r2)
   49ffc:	14400117 	ldw	r17,4(r2)
   4a000:	30016316 	blt	r6,zero,4a590 <_dtoa_r+0xd24>
   4a004:	800d883a 	mov	r6,r16
   4a008:	880f883a 	mov	r7,r17
   4a00c:	9009883a 	mov	r4,r18
   4a010:	980b883a 	mov	r5,r19
   4a014:	00435c40 	call	435c4 <__divdf3>
   4a018:	180b883a 	mov	r5,r3
   4a01c:	1009883a 	mov	r4,r2
   4a020:	00450900 	call	45090 <__fixdfsi>
   4a024:	1009883a 	mov	r4,r2
   4a028:	102b883a 	mov	r21,r2
   4a02c:	00451100 	call	45110 <__floatsidf>
   4a030:	800d883a 	mov	r6,r16
   4a034:	880f883a 	mov	r7,r17
   4a038:	1009883a 	mov	r4,r2
   4a03c:	180b883a 	mov	r5,r3
   4a040:	004407c0 	call	4407c <__muldf3>
   4a044:	100d883a 	mov	r6,r2
   4a048:	180f883a 	mov	r7,r3
   4a04c:	9009883a 	mov	r4,r18
   4a050:	980b883a 	mov	r5,r19
   4a054:	00447940 	call	44794 <__subdf3>
   4a058:	d9c00717 	ldw	r7,28(sp)
   4a05c:	1009883a 	mov	r4,r2
   4a060:	a8800c04 	addi	r2,r21,48
   4a064:	38800005 	stb	r2,0(r7)
   4a068:	3dc00044 	addi	r23,r7,1
   4a06c:	d9c00617 	ldw	r7,24(sp)
   4a070:	01800044 	movi	r6,1
   4a074:	180b883a 	mov	r5,r3
   4a078:	2005883a 	mov	r2,r4
   4a07c:	39803826 	beq	r7,r6,4a160 <_dtoa_r+0x8f4>
   4a080:	000d883a 	mov	r6,zero
   4a084:	01d00934 	movhi	r7,16420
   4a088:	004407c0 	call	4407c <__muldf3>
   4a08c:	000d883a 	mov	r6,zero
   4a090:	000f883a 	mov	r7,zero
   4a094:	1009883a 	mov	r4,r2
   4a098:	180b883a 	mov	r5,r3
   4a09c:	1025883a 	mov	r18,r2
   4a0a0:	1827883a 	mov	r19,r3
   4a0a4:	00581100 	call	58110 <__eqdf2>
   4a0a8:	103f9a26 	beq	r2,zero,49f14 <__alt_data_end+0xfffcb714>
   4a0ac:	d9c00617 	ldw	r7,24(sp)
   4a0b0:	d8c00717 	ldw	r3,28(sp)
   4a0b4:	b829883a 	mov	r20,r23
   4a0b8:	38bfffc4 	addi	r2,r7,-1
   4a0bc:	18ad883a 	add	r22,r3,r2
   4a0c0:	00000a06 	br	4a0ec <_dtoa_r+0x880>
   4a0c4:	004407c0 	call	4407c <__muldf3>
   4a0c8:	000d883a 	mov	r6,zero
   4a0cc:	000f883a 	mov	r7,zero
   4a0d0:	1009883a 	mov	r4,r2
   4a0d4:	180b883a 	mov	r5,r3
   4a0d8:	1025883a 	mov	r18,r2
   4a0dc:	1827883a 	mov	r19,r3
   4a0e0:	b829883a 	mov	r20,r23
   4a0e4:	00581100 	call	58110 <__eqdf2>
   4a0e8:	103f8a26 	beq	r2,zero,49f14 <__alt_data_end+0xfffcb714>
   4a0ec:	800d883a 	mov	r6,r16
   4a0f0:	880f883a 	mov	r7,r17
   4a0f4:	9009883a 	mov	r4,r18
   4a0f8:	980b883a 	mov	r5,r19
   4a0fc:	00435c40 	call	435c4 <__divdf3>
   4a100:	180b883a 	mov	r5,r3
   4a104:	1009883a 	mov	r4,r2
   4a108:	00450900 	call	45090 <__fixdfsi>
   4a10c:	1009883a 	mov	r4,r2
   4a110:	102b883a 	mov	r21,r2
   4a114:	00451100 	call	45110 <__floatsidf>
   4a118:	800d883a 	mov	r6,r16
   4a11c:	880f883a 	mov	r7,r17
   4a120:	1009883a 	mov	r4,r2
   4a124:	180b883a 	mov	r5,r3
   4a128:	004407c0 	call	4407c <__muldf3>
   4a12c:	100d883a 	mov	r6,r2
   4a130:	180f883a 	mov	r7,r3
   4a134:	9009883a 	mov	r4,r18
   4a138:	980b883a 	mov	r5,r19
   4a13c:	00447940 	call	44794 <__subdf3>
   4a140:	aa000c04 	addi	r8,r21,48
   4a144:	a2000005 	stb	r8,0(r20)
   4a148:	000d883a 	mov	r6,zero
   4a14c:	01d00934 	movhi	r7,16420
   4a150:	1009883a 	mov	r4,r2
   4a154:	180b883a 	mov	r5,r3
   4a158:	a5c00044 	addi	r23,r20,1
   4a15c:	b53fd91e 	bne	r22,r20,4a0c4 <__alt_data_end+0xfffcb8c4>
   4a160:	100d883a 	mov	r6,r2
   4a164:	180f883a 	mov	r7,r3
   4a168:	1009883a 	mov	r4,r2
   4a16c:	180b883a 	mov	r5,r3
   4a170:	0042d180 	call	42d18 <__adddf3>
   4a174:	100d883a 	mov	r6,r2
   4a178:	180f883a 	mov	r7,r3
   4a17c:	8009883a 	mov	r4,r16
   4a180:	880b883a 	mov	r5,r17
   4a184:	1027883a 	mov	r19,r2
   4a188:	1825883a 	mov	r18,r3
   4a18c:	0043f880 	call	43f88 <__ledf2>
   4a190:	10000816 	blt	r2,zero,4a1b4 <_dtoa_r+0x948>
   4a194:	980d883a 	mov	r6,r19
   4a198:	900f883a 	mov	r7,r18
   4a19c:	8009883a 	mov	r4,r16
   4a1a0:	880b883a 	mov	r5,r17
   4a1a4:	00581100 	call	58110 <__eqdf2>
   4a1a8:	103f5a1e 	bne	r2,zero,49f14 <__alt_data_end+0xfffcb714>
   4a1ac:	ad40004c 	andi	r21,r21,1
   4a1b0:	a83f5826 	beq	r21,zero,49f14 <__alt_data_end+0xfffcb714>
   4a1b4:	bd3fffc3 	ldbu	r20,-1(r23)
   4a1b8:	b8bfffc4 	addi	r2,r23,-1
   4a1bc:	1007883a 	mov	r3,r2
   4a1c0:	01400e44 	movi	r5,57
   4a1c4:	d9800717 	ldw	r6,28(sp)
   4a1c8:	00000506 	br	4a1e0 <_dtoa_r+0x974>
   4a1cc:	18ffffc4 	addi	r3,r3,-1
   4a1d0:	11824726 	beq	r2,r6,4aaf0 <_dtoa_r+0x1284>
   4a1d4:	1d000003 	ldbu	r20,0(r3)
   4a1d8:	102f883a 	mov	r23,r2
   4a1dc:	10bfffc4 	addi	r2,r2,-1
   4a1e0:	a1003fcc 	andi	r4,r20,255
   4a1e4:	2100201c 	xori	r4,r4,128
   4a1e8:	213fe004 	addi	r4,r4,-128
   4a1ec:	217ff726 	beq	r4,r5,4a1cc <__alt_data_end+0xfffcb9cc>
   4a1f0:	a2000044 	addi	r8,r20,1
   4a1f4:	12000005 	stb	r8,0(r2)
   4a1f8:	003f4606 	br	49f14 <__alt_data_end+0xfffcb714>
   4a1fc:	d9000b17 	ldw	r4,44(sp)
   4a200:	2000c826 	beq	r4,zero,4a524 <_dtoa_r+0xcb8>
   4a204:	d9800317 	ldw	r6,12(sp)
   4a208:	00c00044 	movi	r3,1
   4a20c:	1980f90e 	bge	r3,r6,4a5f4 <_dtoa_r+0xd88>
   4a210:	d8800617 	ldw	r2,24(sp)
   4a214:	d8c00a17 	ldw	r3,40(sp)
   4a218:	157fffc4 	addi	r21,r2,-1
   4a21c:	1d41f316 	blt	r3,r21,4a9ec <_dtoa_r+0x1180>
   4a220:	1d6bc83a 	sub	r21,r3,r21
   4a224:	d9c00617 	ldw	r7,24(sp)
   4a228:	3802aa16 	blt	r7,zero,4acd4 <_dtoa_r+0x1468>
   4a22c:	dd000817 	ldw	r20,32(sp)
   4a230:	d8800617 	ldw	r2,24(sp)
   4a234:	d8c00817 	ldw	r3,32(sp)
   4a238:	01400044 	movi	r5,1
   4a23c:	e009883a 	mov	r4,fp
   4a240:	1887883a 	add	r3,r3,r2
   4a244:	d8c00815 	stw	r3,32(sp)
   4a248:	b0ad883a 	add	r22,r22,r2
   4a24c:	004d6800 	call	4d680 <__i2b>
   4a250:	1023883a 	mov	r17,r2
   4a254:	a0000826 	beq	r20,zero,4a278 <_dtoa_r+0xa0c>
   4a258:	0580070e 	bge	zero,r22,4a278 <_dtoa_r+0xa0c>
   4a25c:	a005883a 	mov	r2,r20
   4a260:	b500b916 	blt	r22,r20,4a548 <_dtoa_r+0xcdc>
   4a264:	d9000817 	ldw	r4,32(sp)
   4a268:	a0a9c83a 	sub	r20,r20,r2
   4a26c:	b0adc83a 	sub	r22,r22,r2
   4a270:	2089c83a 	sub	r4,r4,r2
   4a274:	d9000815 	stw	r4,32(sp)
   4a278:	d9800a17 	ldw	r6,40(sp)
   4a27c:	0181810e 	bge	zero,r6,4a884 <_dtoa_r+0x1018>
   4a280:	d9c00b17 	ldw	r7,44(sp)
   4a284:	3800b326 	beq	r7,zero,4a554 <_dtoa_r+0xce8>
   4a288:	a800b226 	beq	r21,zero,4a554 <_dtoa_r+0xce8>
   4a28c:	880b883a 	mov	r5,r17
   4a290:	a80d883a 	mov	r6,r21
   4a294:	e009883a 	mov	r4,fp
   4a298:	004d8b40 	call	4d8b4 <__pow5mult>
   4a29c:	d9800917 	ldw	r6,36(sp)
   4a2a0:	100b883a 	mov	r5,r2
   4a2a4:	e009883a 	mov	r4,fp
   4a2a8:	1023883a 	mov	r17,r2
   4a2ac:	004d6bc0 	call	4d6bc <__multiply>
   4a2b0:	1021883a 	mov	r16,r2
   4a2b4:	d8800a17 	ldw	r2,40(sp)
   4a2b8:	d9400917 	ldw	r5,36(sp)
   4a2bc:	e009883a 	mov	r4,fp
   4a2c0:	1545c83a 	sub	r2,r2,r21
   4a2c4:	d8800a15 	stw	r2,40(sp)
   4a2c8:	004d31c0 	call	4d31c <_Bfree>
   4a2cc:	d8c00a17 	ldw	r3,40(sp)
   4a2d0:	18009f1e 	bne	r3,zero,4a550 <_dtoa_r+0xce4>
   4a2d4:	05c00044 	movi	r23,1
   4a2d8:	e009883a 	mov	r4,fp
   4a2dc:	b80b883a 	mov	r5,r23
   4a2e0:	004d6800 	call	4d680 <__i2b>
   4a2e4:	d9000d17 	ldw	r4,52(sp)
   4a2e8:	102b883a 	mov	r21,r2
   4a2ec:	2000ce26 	beq	r4,zero,4a628 <_dtoa_r+0xdbc>
   4a2f0:	200d883a 	mov	r6,r4
   4a2f4:	100b883a 	mov	r5,r2
   4a2f8:	e009883a 	mov	r4,fp
   4a2fc:	004d8b40 	call	4d8b4 <__pow5mult>
   4a300:	d9800317 	ldw	r6,12(sp)
   4a304:	102b883a 	mov	r21,r2
   4a308:	b981810e 	bge	r23,r6,4a910 <_dtoa_r+0x10a4>
   4a30c:	0027883a 	mov	r19,zero
   4a310:	a8800417 	ldw	r2,16(r21)
   4a314:	05c00804 	movi	r23,32
   4a318:	10800104 	addi	r2,r2,4
   4a31c:	1085883a 	add	r2,r2,r2
   4a320:	1085883a 	add	r2,r2,r2
   4a324:	a885883a 	add	r2,r21,r2
   4a328:	11000017 	ldw	r4,0(r2)
   4a32c:	004d5680 	call	4d568 <__hi0bits>
   4a330:	b885c83a 	sub	r2,r23,r2
   4a334:	1585883a 	add	r2,r2,r22
   4a338:	108007cc 	andi	r2,r2,31
   4a33c:	1000b326 	beq	r2,zero,4a60c <_dtoa_r+0xda0>
   4a340:	00c00804 	movi	r3,32
   4a344:	1887c83a 	sub	r3,r3,r2
   4a348:	01000104 	movi	r4,4
   4a34c:	20c2cd0e 	bge	r4,r3,4ae84 <_dtoa_r+0x1618>
   4a350:	00c00704 	movi	r3,28
   4a354:	1885c83a 	sub	r2,r3,r2
   4a358:	d8c00817 	ldw	r3,32(sp)
   4a35c:	a0a9883a 	add	r20,r20,r2
   4a360:	b0ad883a 	add	r22,r22,r2
   4a364:	1887883a 	add	r3,r3,r2
   4a368:	d8c00815 	stw	r3,32(sp)
   4a36c:	d9800817 	ldw	r6,32(sp)
   4a370:	0180040e 	bge	zero,r6,4a384 <_dtoa_r+0xb18>
   4a374:	800b883a 	mov	r5,r16
   4a378:	e009883a 	mov	r4,fp
   4a37c:	004d9f40 	call	4d9f4 <__lshift>
   4a380:	1021883a 	mov	r16,r2
   4a384:	0580050e 	bge	zero,r22,4a39c <_dtoa_r+0xb30>
   4a388:	a80b883a 	mov	r5,r21
   4a38c:	b00d883a 	mov	r6,r22
   4a390:	e009883a 	mov	r4,fp
   4a394:	004d9f40 	call	4d9f4 <__lshift>
   4a398:	102b883a 	mov	r21,r2
   4a39c:	d9c00e17 	ldw	r7,56(sp)
   4a3a0:	3801211e 	bne	r7,zero,4a828 <_dtoa_r+0xfbc>
   4a3a4:	d9800617 	ldw	r6,24(sp)
   4a3a8:	0181380e 	bge	zero,r6,4a88c <_dtoa_r+0x1020>
   4a3ac:	d8c00b17 	ldw	r3,44(sp)
   4a3b0:	1800ab1e 	bne	r3,zero,4a660 <_dtoa_r+0xdf4>
   4a3b4:	dc800717 	ldw	r18,28(sp)
   4a3b8:	dcc00617 	ldw	r19,24(sp)
   4a3bc:	9029883a 	mov	r20,r18
   4a3c0:	00000206 	br	4a3cc <_dtoa_r+0xb60>
   4a3c4:	004d3440 	call	4d344 <__multadd>
   4a3c8:	1021883a 	mov	r16,r2
   4a3cc:	a80b883a 	mov	r5,r21
   4a3d0:	8009883a 	mov	r4,r16
   4a3d4:	004966c0 	call	4966c <quorem>
   4a3d8:	10800c04 	addi	r2,r2,48
   4a3dc:	90800005 	stb	r2,0(r18)
   4a3e0:	94800044 	addi	r18,r18,1
   4a3e4:	9507c83a 	sub	r3,r18,r20
   4a3e8:	000f883a 	mov	r7,zero
   4a3ec:	01800284 	movi	r6,10
   4a3f0:	800b883a 	mov	r5,r16
   4a3f4:	e009883a 	mov	r4,fp
   4a3f8:	1cfff216 	blt	r3,r19,4a3c4 <__alt_data_end+0xfffcbbc4>
   4a3fc:	1011883a 	mov	r8,r2
   4a400:	d8800617 	ldw	r2,24(sp)
   4a404:	0082370e 	bge	zero,r2,4ace4 <_dtoa_r+0x1478>
   4a408:	d9000717 	ldw	r4,28(sp)
   4a40c:	0025883a 	mov	r18,zero
   4a410:	20af883a 	add	r23,r4,r2
   4a414:	01800044 	movi	r6,1
   4a418:	800b883a 	mov	r5,r16
   4a41c:	e009883a 	mov	r4,fp
   4a420:	da001715 	stw	r8,92(sp)
   4a424:	004d9f40 	call	4d9f4 <__lshift>
   4a428:	a80b883a 	mov	r5,r21
   4a42c:	1009883a 	mov	r4,r2
   4a430:	d8800915 	stw	r2,36(sp)
   4a434:	004db3c0 	call	4db3c <__mcmp>
   4a438:	da001717 	ldw	r8,92(sp)
   4a43c:	0081800e 	bge	zero,r2,4aa40 <_dtoa_r+0x11d4>
   4a440:	b93fffc3 	ldbu	r4,-1(r23)
   4a444:	b8bfffc4 	addi	r2,r23,-1
   4a448:	1007883a 	mov	r3,r2
   4a44c:	01800e44 	movi	r6,57
   4a450:	d9c00717 	ldw	r7,28(sp)
   4a454:	00000506 	br	4a46c <_dtoa_r+0xc00>
   4a458:	18ffffc4 	addi	r3,r3,-1
   4a45c:	11c12326 	beq	r2,r7,4a8ec <_dtoa_r+0x1080>
   4a460:	19000003 	ldbu	r4,0(r3)
   4a464:	102f883a 	mov	r23,r2
   4a468:	10bfffc4 	addi	r2,r2,-1
   4a46c:	21403fcc 	andi	r5,r4,255
   4a470:	2940201c 	xori	r5,r5,128
   4a474:	297fe004 	addi	r5,r5,-128
   4a478:	29bff726 	beq	r5,r6,4a458 <__alt_data_end+0xfffcbc58>
   4a47c:	21000044 	addi	r4,r4,1
   4a480:	11000005 	stb	r4,0(r2)
   4a484:	a80b883a 	mov	r5,r21
   4a488:	e009883a 	mov	r4,fp
   4a48c:	004d31c0 	call	4d31c <_Bfree>
   4a490:	883ea026 	beq	r17,zero,49f14 <__alt_data_end+0xfffcb714>
   4a494:	90000426 	beq	r18,zero,4a4a8 <_dtoa_r+0xc3c>
   4a498:	94400326 	beq	r18,r17,4a4a8 <_dtoa_r+0xc3c>
   4a49c:	900b883a 	mov	r5,r18
   4a4a0:	e009883a 	mov	r4,fp
   4a4a4:	004d31c0 	call	4d31c <_Bfree>
   4a4a8:	880b883a 	mov	r5,r17
   4a4ac:	e009883a 	mov	r4,fp
   4a4b0:	004d31c0 	call	4d31c <_Bfree>
   4a4b4:	003e9706 	br	49f14 <__alt_data_end+0xfffcb714>
   4a4b8:	01800044 	movi	r6,1
   4a4bc:	d9800e15 	stw	r6,56(sp)
   4a4c0:	003d9606 	br	49b1c <__alt_data_end+0xfffcb31c>
   4a4c4:	d8800817 	ldw	r2,32(sp)
   4a4c8:	d8c00517 	ldw	r3,20(sp)
   4a4cc:	d8000d15 	stw	zero,52(sp)
   4a4d0:	10c5c83a 	sub	r2,r2,r3
   4a4d4:	00c9c83a 	sub	r4,zero,r3
   4a4d8:	d8800815 	stw	r2,32(sp)
   4a4dc:	d9000a15 	stw	r4,40(sp)
   4a4e0:	003d9706 	br	49b40 <__alt_data_end+0xfffcb340>
   4a4e4:	05adc83a 	sub	r22,zero,r22
   4a4e8:	dd800815 	stw	r22,32(sp)
   4a4ec:	002d883a 	mov	r22,zero
   4a4f0:	003d8e06 	br	49b2c <__alt_data_end+0xfffcb32c>
   4a4f4:	d9000517 	ldw	r4,20(sp)
   4a4f8:	00451100 	call	45110 <__floatsidf>
   4a4fc:	100d883a 	mov	r6,r2
   4a500:	180f883a 	mov	r7,r3
   4a504:	a009883a 	mov	r4,r20
   4a508:	880b883a 	mov	r5,r17
   4a50c:	00581100 	call	58110 <__eqdf2>
   4a510:	103d7126 	beq	r2,zero,49ad8 <__alt_data_end+0xfffcb2d8>
   4a514:	d9c00517 	ldw	r7,20(sp)
   4a518:	39ffffc4 	addi	r7,r7,-1
   4a51c:	d9c00515 	stw	r7,20(sp)
   4a520:	003d6d06 	br	49ad8 <__alt_data_end+0xfffcb2d8>
   4a524:	dd400a17 	ldw	r21,40(sp)
   4a528:	dd000817 	ldw	r20,32(sp)
   4a52c:	0023883a 	mov	r17,zero
   4a530:	003f4806 	br	4a254 <__alt_data_end+0xfffcba54>
   4a534:	10e3c83a 	sub	r17,r2,r3
   4a538:	9448983a 	sll	r4,r18,r17
   4a53c:	003d3206 	br	49a08 <__alt_data_end+0xfffcb208>
   4a540:	d8000e15 	stw	zero,56(sp)
   4a544:	003d7506 	br	49b1c <__alt_data_end+0xfffcb31c>
   4a548:	b005883a 	mov	r2,r22
   4a54c:	003f4506 	br	4a264 <__alt_data_end+0xfffcba64>
   4a550:	dc000915 	stw	r16,36(sp)
   4a554:	d9800a17 	ldw	r6,40(sp)
   4a558:	d9400917 	ldw	r5,36(sp)
   4a55c:	e009883a 	mov	r4,fp
   4a560:	004d8b40 	call	4d8b4 <__pow5mult>
   4a564:	1021883a 	mov	r16,r2
   4a568:	003f5a06 	br	4a2d4 <__alt_data_end+0xfffcbad4>
   4a56c:	01c00044 	movi	r7,1
   4a570:	d9c00b15 	stw	r7,44(sp)
   4a574:	d8802217 	ldw	r2,136(sp)
   4a578:	0081280e 	bge	zero,r2,4aa1c <_dtoa_r+0x11b0>
   4a57c:	100d883a 	mov	r6,r2
   4a580:	1021883a 	mov	r16,r2
   4a584:	d8800c15 	stw	r2,48(sp)
   4a588:	d8800615 	stw	r2,24(sp)
   4a58c:	003d8806 	br	49bb0 <__alt_data_end+0xfffcb3b0>
   4a590:	d8800617 	ldw	r2,24(sp)
   4a594:	00be9b16 	blt	zero,r2,4a004 <__alt_data_end+0xfffcb804>
   4a598:	10010f1e 	bne	r2,zero,4a9d8 <_dtoa_r+0x116c>
   4a59c:	880b883a 	mov	r5,r17
   4a5a0:	000d883a 	mov	r6,zero
   4a5a4:	01d00534 	movhi	r7,16404
   4a5a8:	8009883a 	mov	r4,r16
   4a5ac:	004407c0 	call	4407c <__muldf3>
   4a5b0:	900d883a 	mov	r6,r18
   4a5b4:	980f883a 	mov	r7,r19
   4a5b8:	1009883a 	mov	r4,r2
   4a5bc:	180b883a 	mov	r5,r3
   4a5c0:	0043eac0 	call	43eac <__gedf2>
   4a5c4:	002b883a 	mov	r21,zero
   4a5c8:	0023883a 	mov	r17,zero
   4a5cc:	1000bf16 	blt	r2,zero,4a8cc <_dtoa_r+0x1060>
   4a5d0:	d9802217 	ldw	r6,136(sp)
   4a5d4:	ddc00717 	ldw	r23,28(sp)
   4a5d8:	018c303a 	nor	r6,zero,r6
   4a5dc:	d9800515 	stw	r6,20(sp)
   4a5e0:	a80b883a 	mov	r5,r21
   4a5e4:	e009883a 	mov	r4,fp
   4a5e8:	004d31c0 	call	4d31c <_Bfree>
   4a5ec:	883e4926 	beq	r17,zero,49f14 <__alt_data_end+0xfffcb714>
   4a5f0:	003fad06 	br	4a4a8 <__alt_data_end+0xfffcbca8>
   4a5f4:	d9c01117 	ldw	r7,68(sp)
   4a5f8:	3801bc26 	beq	r7,zero,4acec <_dtoa_r+0x1480>
   4a5fc:	10810cc4 	addi	r2,r2,1075
   4a600:	dd400a17 	ldw	r21,40(sp)
   4a604:	dd000817 	ldw	r20,32(sp)
   4a608:	003f0a06 	br	4a234 <__alt_data_end+0xfffcba34>
   4a60c:	00800704 	movi	r2,28
   4a610:	d9000817 	ldw	r4,32(sp)
   4a614:	a0a9883a 	add	r20,r20,r2
   4a618:	b0ad883a 	add	r22,r22,r2
   4a61c:	2089883a 	add	r4,r4,r2
   4a620:	d9000815 	stw	r4,32(sp)
   4a624:	003f5106 	br	4a36c <__alt_data_end+0xfffcbb6c>
   4a628:	d8c00317 	ldw	r3,12(sp)
   4a62c:	b8c1fc0e 	bge	r23,r3,4ae20 <_dtoa_r+0x15b4>
   4a630:	0027883a 	mov	r19,zero
   4a634:	b805883a 	mov	r2,r23
   4a638:	003f3e06 	br	4a334 <__alt_data_end+0xfffcbb34>
   4a63c:	880b883a 	mov	r5,r17
   4a640:	e009883a 	mov	r4,fp
   4a644:	000f883a 	mov	r7,zero
   4a648:	01800284 	movi	r6,10
   4a64c:	004d3440 	call	4d344 <__multadd>
   4a650:	d9000c17 	ldw	r4,48(sp)
   4a654:	1023883a 	mov	r17,r2
   4a658:	0102040e 	bge	zero,r4,4ae6c <_dtoa_r+0x1600>
   4a65c:	d9000615 	stw	r4,24(sp)
   4a660:	0500050e 	bge	zero,r20,4a678 <_dtoa_r+0xe0c>
   4a664:	880b883a 	mov	r5,r17
   4a668:	a00d883a 	mov	r6,r20
   4a66c:	e009883a 	mov	r4,fp
   4a670:	004d9f40 	call	4d9f4 <__lshift>
   4a674:	1023883a 	mov	r17,r2
   4a678:	9801241e 	bne	r19,zero,4ab0c <_dtoa_r+0x12a0>
   4a67c:	8829883a 	mov	r20,r17
   4a680:	d9000617 	ldw	r4,24(sp)
   4a684:	dcc00717 	ldw	r19,28(sp)
   4a688:	9480004c 	andi	r18,r18,1
   4a68c:	20bfffc4 	addi	r2,r4,-1
   4a690:	9885883a 	add	r2,r19,r2
   4a694:	d8800415 	stw	r2,16(sp)
   4a698:	dc800615 	stw	r18,24(sp)
   4a69c:	a80b883a 	mov	r5,r21
   4a6a0:	8009883a 	mov	r4,r16
   4a6a4:	004966c0 	call	4966c <quorem>
   4a6a8:	880b883a 	mov	r5,r17
   4a6ac:	8009883a 	mov	r4,r16
   4a6b0:	102f883a 	mov	r23,r2
   4a6b4:	004db3c0 	call	4db3c <__mcmp>
   4a6b8:	a80b883a 	mov	r5,r21
   4a6bc:	a00d883a 	mov	r6,r20
   4a6c0:	e009883a 	mov	r4,fp
   4a6c4:	102d883a 	mov	r22,r2
   4a6c8:	004db9c0 	call	4db9c <__mdiff>
   4a6cc:	1007883a 	mov	r3,r2
   4a6d0:	10800317 	ldw	r2,12(r2)
   4a6d4:	bc800c04 	addi	r18,r23,48
   4a6d8:	180b883a 	mov	r5,r3
   4a6dc:	10004e1e 	bne	r2,zero,4a818 <_dtoa_r+0xfac>
   4a6e0:	8009883a 	mov	r4,r16
   4a6e4:	d8c01615 	stw	r3,88(sp)
   4a6e8:	004db3c0 	call	4db3c <__mcmp>
   4a6ec:	d8c01617 	ldw	r3,88(sp)
   4a6f0:	e009883a 	mov	r4,fp
   4a6f4:	d8801615 	stw	r2,88(sp)
   4a6f8:	180b883a 	mov	r5,r3
   4a6fc:	004d31c0 	call	4d31c <_Bfree>
   4a700:	d8801617 	ldw	r2,88(sp)
   4a704:	1000041e 	bne	r2,zero,4a718 <_dtoa_r+0xeac>
   4a708:	d9800317 	ldw	r6,12(sp)
   4a70c:	3000021e 	bne	r6,zero,4a718 <_dtoa_r+0xeac>
   4a710:	d8c00617 	ldw	r3,24(sp)
   4a714:	18003726 	beq	r3,zero,4a7f4 <_dtoa_r+0xf88>
   4a718:	b0002016 	blt	r22,zero,4a79c <_dtoa_r+0xf30>
   4a71c:	b000041e 	bne	r22,zero,4a730 <_dtoa_r+0xec4>
   4a720:	d9000317 	ldw	r4,12(sp)
   4a724:	2000021e 	bne	r4,zero,4a730 <_dtoa_r+0xec4>
   4a728:	d8c00617 	ldw	r3,24(sp)
   4a72c:	18001b26 	beq	r3,zero,4a79c <_dtoa_r+0xf30>
   4a730:	00810716 	blt	zero,r2,4ab50 <_dtoa_r+0x12e4>
   4a734:	d8c00417 	ldw	r3,16(sp)
   4a738:	9d800044 	addi	r22,r19,1
   4a73c:	9c800005 	stb	r18,0(r19)
   4a740:	b02f883a 	mov	r23,r22
   4a744:	98c10626 	beq	r19,r3,4ab60 <_dtoa_r+0x12f4>
   4a748:	800b883a 	mov	r5,r16
   4a74c:	000f883a 	mov	r7,zero
   4a750:	01800284 	movi	r6,10
   4a754:	e009883a 	mov	r4,fp
   4a758:	004d3440 	call	4d344 <__multadd>
   4a75c:	1021883a 	mov	r16,r2
   4a760:	000f883a 	mov	r7,zero
   4a764:	01800284 	movi	r6,10
   4a768:	880b883a 	mov	r5,r17
   4a76c:	e009883a 	mov	r4,fp
   4a770:	8d002526 	beq	r17,r20,4a808 <_dtoa_r+0xf9c>
   4a774:	004d3440 	call	4d344 <__multadd>
   4a778:	a00b883a 	mov	r5,r20
   4a77c:	000f883a 	mov	r7,zero
   4a780:	01800284 	movi	r6,10
   4a784:	e009883a 	mov	r4,fp
   4a788:	1023883a 	mov	r17,r2
   4a78c:	004d3440 	call	4d344 <__multadd>
   4a790:	1029883a 	mov	r20,r2
   4a794:	b027883a 	mov	r19,r22
   4a798:	003fc006 	br	4a69c <__alt_data_end+0xfffcbe9c>
   4a79c:	9011883a 	mov	r8,r18
   4a7a0:	00800e0e 	bge	zero,r2,4a7dc <_dtoa_r+0xf70>
   4a7a4:	800b883a 	mov	r5,r16
   4a7a8:	01800044 	movi	r6,1
   4a7ac:	e009883a 	mov	r4,fp
   4a7b0:	da001715 	stw	r8,92(sp)
   4a7b4:	004d9f40 	call	4d9f4 <__lshift>
   4a7b8:	a80b883a 	mov	r5,r21
   4a7bc:	1009883a 	mov	r4,r2
   4a7c0:	1021883a 	mov	r16,r2
   4a7c4:	004db3c0 	call	4db3c <__mcmp>
   4a7c8:	da001717 	ldw	r8,92(sp)
   4a7cc:	0081960e 	bge	zero,r2,4ae28 <_dtoa_r+0x15bc>
   4a7d0:	00800e44 	movi	r2,57
   4a7d4:	40817026 	beq	r8,r2,4ad98 <_dtoa_r+0x152c>
   4a7d8:	ba000c44 	addi	r8,r23,49
   4a7dc:	8825883a 	mov	r18,r17
   4a7e0:	9dc00044 	addi	r23,r19,1
   4a7e4:	9a000005 	stb	r8,0(r19)
   4a7e8:	a023883a 	mov	r17,r20
   4a7ec:	dc000915 	stw	r16,36(sp)
   4a7f0:	003f2406 	br	4a484 <__alt_data_end+0xfffcbc84>
   4a7f4:	00800e44 	movi	r2,57
   4a7f8:	9011883a 	mov	r8,r18
   4a7fc:	90816626 	beq	r18,r2,4ad98 <_dtoa_r+0x152c>
   4a800:	05bff516 	blt	zero,r22,4a7d8 <__alt_data_end+0xfffcbfd8>
   4a804:	003ff506 	br	4a7dc <__alt_data_end+0xfffcbfdc>
   4a808:	004d3440 	call	4d344 <__multadd>
   4a80c:	1023883a 	mov	r17,r2
   4a810:	1029883a 	mov	r20,r2
   4a814:	003fdf06 	br	4a794 <__alt_data_end+0xfffcbf94>
   4a818:	e009883a 	mov	r4,fp
   4a81c:	004d31c0 	call	4d31c <_Bfree>
   4a820:	00800044 	movi	r2,1
   4a824:	003fbc06 	br	4a718 <__alt_data_end+0xfffcbf18>
   4a828:	a80b883a 	mov	r5,r21
   4a82c:	8009883a 	mov	r4,r16
   4a830:	004db3c0 	call	4db3c <__mcmp>
   4a834:	103edb0e 	bge	r2,zero,4a3a4 <__alt_data_end+0xfffcbba4>
   4a838:	800b883a 	mov	r5,r16
   4a83c:	000f883a 	mov	r7,zero
   4a840:	01800284 	movi	r6,10
   4a844:	e009883a 	mov	r4,fp
   4a848:	004d3440 	call	4d344 <__multadd>
   4a84c:	1021883a 	mov	r16,r2
   4a850:	d8800517 	ldw	r2,20(sp)
   4a854:	d8c00b17 	ldw	r3,44(sp)
   4a858:	10bfffc4 	addi	r2,r2,-1
   4a85c:	d8800515 	stw	r2,20(sp)
   4a860:	183f761e 	bne	r3,zero,4a63c <__alt_data_end+0xfffcbe3c>
   4a864:	d9000c17 	ldw	r4,48(sp)
   4a868:	0101730e 	bge	zero,r4,4ae38 <_dtoa_r+0x15cc>
   4a86c:	d9000615 	stw	r4,24(sp)
   4a870:	003ed006 	br	4a3b4 <__alt_data_end+0xfffcbbb4>
   4a874:	00800084 	movi	r2,2
   4a878:	3081861e 	bne	r6,r2,4ae94 <_dtoa_r+0x1628>
   4a87c:	d8000b15 	stw	zero,44(sp)
   4a880:	003f3c06 	br	4a574 <__alt_data_end+0xfffcbd74>
   4a884:	dc000917 	ldw	r16,36(sp)
   4a888:	003e9206 	br	4a2d4 <__alt_data_end+0xfffcbad4>
   4a88c:	d9c00317 	ldw	r7,12(sp)
   4a890:	00800084 	movi	r2,2
   4a894:	11fec50e 	bge	r2,r7,4a3ac <__alt_data_end+0xfffcbbac>
   4a898:	d9000617 	ldw	r4,24(sp)
   4a89c:	20013c1e 	bne	r4,zero,4ad90 <_dtoa_r+0x1524>
   4a8a0:	a80b883a 	mov	r5,r21
   4a8a4:	000f883a 	mov	r7,zero
   4a8a8:	01800144 	movi	r6,5
   4a8ac:	e009883a 	mov	r4,fp
   4a8b0:	004d3440 	call	4d344 <__multadd>
   4a8b4:	100b883a 	mov	r5,r2
   4a8b8:	8009883a 	mov	r4,r16
   4a8bc:	102b883a 	mov	r21,r2
   4a8c0:	004db3c0 	call	4db3c <__mcmp>
   4a8c4:	dc000915 	stw	r16,36(sp)
   4a8c8:	00bf410e 	bge	zero,r2,4a5d0 <__alt_data_end+0xfffcbdd0>
   4a8cc:	d9c00717 	ldw	r7,28(sp)
   4a8d0:	00800c44 	movi	r2,49
   4a8d4:	38800005 	stb	r2,0(r7)
   4a8d8:	d8800517 	ldw	r2,20(sp)
   4a8dc:	3dc00044 	addi	r23,r7,1
   4a8e0:	10800044 	addi	r2,r2,1
   4a8e4:	d8800515 	stw	r2,20(sp)
   4a8e8:	003f3d06 	br	4a5e0 <__alt_data_end+0xfffcbde0>
   4a8ec:	d9800517 	ldw	r6,20(sp)
   4a8f0:	d9c00717 	ldw	r7,28(sp)
   4a8f4:	00800c44 	movi	r2,49
   4a8f8:	31800044 	addi	r6,r6,1
   4a8fc:	d9800515 	stw	r6,20(sp)
   4a900:	38800005 	stb	r2,0(r7)
   4a904:	003edf06 	br	4a484 <__alt_data_end+0xfffcbc84>
   4a908:	d8000b15 	stw	zero,44(sp)
   4a90c:	003c9f06 	br	49b8c <__alt_data_end+0xfffcb38c>
   4a910:	903e7e1e 	bne	r18,zero,4a30c <__alt_data_end+0xfffcbb0c>
   4a914:	00800434 	movhi	r2,16
   4a918:	10bfffc4 	addi	r2,r2,-1
   4a91c:	9884703a 	and	r2,r19,r2
   4a920:	1000ea1e 	bne	r2,zero,4accc <_dtoa_r+0x1460>
   4a924:	9cdffc2c 	andhi	r19,r19,32752
   4a928:	9800e826 	beq	r19,zero,4accc <_dtoa_r+0x1460>
   4a92c:	d9c00817 	ldw	r7,32(sp)
   4a930:	b5800044 	addi	r22,r22,1
   4a934:	04c00044 	movi	r19,1
   4a938:	39c00044 	addi	r7,r7,1
   4a93c:	d9c00815 	stw	r7,32(sp)
   4a940:	d8800d17 	ldw	r2,52(sp)
   4a944:	103e721e 	bne	r2,zero,4a310 <__alt_data_end+0xfffcbb10>
   4a948:	00800044 	movi	r2,1
   4a94c:	003e7906 	br	4a334 <__alt_data_end+0xfffcbb34>
   4a950:	8009883a 	mov	r4,r16
   4a954:	00451100 	call	45110 <__floatsidf>
   4a958:	d9800f17 	ldw	r6,60(sp)
   4a95c:	d9c01017 	ldw	r7,64(sp)
   4a960:	1009883a 	mov	r4,r2
   4a964:	180b883a 	mov	r5,r3
   4a968:	004407c0 	call	4407c <__muldf3>
   4a96c:	000d883a 	mov	r6,zero
   4a970:	01d00734 	movhi	r7,16412
   4a974:	1009883a 	mov	r4,r2
   4a978:	180b883a 	mov	r5,r3
   4a97c:	0042d180 	call	42d18 <__adddf3>
   4a980:	047f3034 	movhi	r17,64704
   4a984:	1021883a 	mov	r16,r2
   4a988:	1c63883a 	add	r17,r3,r17
   4a98c:	d9000f17 	ldw	r4,60(sp)
   4a990:	d9401017 	ldw	r5,64(sp)
   4a994:	000d883a 	mov	r6,zero
   4a998:	01d00534 	movhi	r7,16404
   4a99c:	00447940 	call	44794 <__subdf3>
   4a9a0:	800d883a 	mov	r6,r16
   4a9a4:	880f883a 	mov	r7,r17
   4a9a8:	1009883a 	mov	r4,r2
   4a9ac:	180b883a 	mov	r5,r3
   4a9b0:	102b883a 	mov	r21,r2
   4a9b4:	1829883a 	mov	r20,r3
   4a9b8:	0043eac0 	call	43eac <__gedf2>
   4a9bc:	00806c16 	blt	zero,r2,4ab70 <_dtoa_r+0x1304>
   4a9c0:	89e0003c 	xorhi	r7,r17,32768
   4a9c4:	800d883a 	mov	r6,r16
   4a9c8:	a809883a 	mov	r4,r21
   4a9cc:	a00b883a 	mov	r5,r20
   4a9d0:	0043f880 	call	43f88 <__ledf2>
   4a9d4:	103d7e0e 	bge	r2,zero,49fd0 <__alt_data_end+0xfffcb7d0>
   4a9d8:	002b883a 	mov	r21,zero
   4a9dc:	0023883a 	mov	r17,zero
   4a9e0:	003efb06 	br	4a5d0 <__alt_data_end+0xfffcbdd0>
   4a9e4:	d8800717 	ldw	r2,28(sp)
   4a9e8:	003bd006 	br	4992c <__alt_data_end+0xfffcb12c>
   4a9ec:	d9000a17 	ldw	r4,40(sp)
   4a9f0:	d9800d17 	ldw	r6,52(sp)
   4a9f4:	dd400a15 	stw	r21,40(sp)
   4a9f8:	a905c83a 	sub	r2,r21,r4
   4a9fc:	308d883a 	add	r6,r6,r2
   4aa00:	d9800d15 	stw	r6,52(sp)
   4aa04:	002b883a 	mov	r21,zero
   4aa08:	003e0606 	br	4a224 <__alt_data_end+0xfffcba24>
   4aa0c:	9023883a 	mov	r17,r18
   4aa10:	9829883a 	mov	r20,r19
   4aa14:	04000084 	movi	r16,2
   4aa18:	003c9206 	br	49c64 <__alt_data_end+0xfffcb464>
   4aa1c:	04000044 	movi	r16,1
   4aa20:	dc000c15 	stw	r16,48(sp)
   4aa24:	dc000615 	stw	r16,24(sp)
   4aa28:	dc002215 	stw	r16,136(sp)
   4aa2c:	e0001115 	stw	zero,68(fp)
   4aa30:	000b883a 	mov	r5,zero
   4aa34:	003c6906 	br	49bdc <__alt_data_end+0xfffcb3dc>
   4aa38:	3021883a 	mov	r16,r6
   4aa3c:	003ffb06 	br	4aa2c <__alt_data_end+0xfffcc22c>
   4aa40:	1000021e 	bne	r2,zero,4aa4c <_dtoa_r+0x11e0>
   4aa44:	4200004c 	andi	r8,r8,1
   4aa48:	403e7d1e 	bne	r8,zero,4a440 <__alt_data_end+0xfffcbc40>
   4aa4c:	01000c04 	movi	r4,48
   4aa50:	00000106 	br	4aa58 <_dtoa_r+0x11ec>
   4aa54:	102f883a 	mov	r23,r2
   4aa58:	b8bfffc4 	addi	r2,r23,-1
   4aa5c:	10c00007 	ldb	r3,0(r2)
   4aa60:	193ffc26 	beq	r3,r4,4aa54 <__alt_data_end+0xfffcc254>
   4aa64:	003e8706 	br	4a484 <__alt_data_end+0xfffcbc84>
   4aa68:	d8800517 	ldw	r2,20(sp)
   4aa6c:	00a3c83a 	sub	r17,zero,r2
   4aa70:	8800a426 	beq	r17,zero,4ad04 <_dtoa_r+0x1498>
   4aa74:	888003cc 	andi	r2,r17,15
   4aa78:	100490fa 	slli	r2,r2,3
   4aa7c:	00c001b4 	movhi	r3,6
   4aa80:	18ed6604 	addi	r3,r3,-19048
   4aa84:	1885883a 	add	r2,r3,r2
   4aa88:	11800017 	ldw	r6,0(r2)
   4aa8c:	11c00117 	ldw	r7,4(r2)
   4aa90:	9009883a 	mov	r4,r18
   4aa94:	980b883a 	mov	r5,r19
   4aa98:	8823d13a 	srai	r17,r17,4
   4aa9c:	004407c0 	call	4407c <__muldf3>
   4aaa0:	d8800f15 	stw	r2,60(sp)
   4aaa4:	d8c01015 	stw	r3,64(sp)
   4aaa8:	8800e826 	beq	r17,zero,4ae4c <_dtoa_r+0x15e0>
   4aaac:	050001b4 	movhi	r20,6
   4aab0:	a52d5c04 	addi	r20,r20,-19088
   4aab4:	04000084 	movi	r16,2
   4aab8:	8980004c 	andi	r6,r17,1
   4aabc:	1009883a 	mov	r4,r2
   4aac0:	8823d07a 	srai	r17,r17,1
   4aac4:	180b883a 	mov	r5,r3
   4aac8:	30000426 	beq	r6,zero,4aadc <_dtoa_r+0x1270>
   4aacc:	a1800017 	ldw	r6,0(r20)
   4aad0:	a1c00117 	ldw	r7,4(r20)
   4aad4:	84000044 	addi	r16,r16,1
   4aad8:	004407c0 	call	4407c <__muldf3>
   4aadc:	a5000204 	addi	r20,r20,8
   4aae0:	883ff51e 	bne	r17,zero,4aab8 <__alt_data_end+0xfffcc2b8>
   4aae4:	d8800f15 	stw	r2,60(sp)
   4aae8:	d8c01015 	stw	r3,64(sp)
   4aaec:	003c7606 	br	49cc8 <__alt_data_end+0xfffcb4c8>
   4aaf0:	00c00c04 	movi	r3,48
   4aaf4:	10c00005 	stb	r3,0(r2)
   4aaf8:	d8c00517 	ldw	r3,20(sp)
   4aafc:	bd3fffc3 	ldbu	r20,-1(r23)
   4ab00:	18c00044 	addi	r3,r3,1
   4ab04:	d8c00515 	stw	r3,20(sp)
   4ab08:	003db906 	br	4a1f0 <__alt_data_end+0xfffcb9f0>
   4ab0c:	89400117 	ldw	r5,4(r17)
   4ab10:	e009883a 	mov	r4,fp
   4ab14:	004d2740 	call	4d274 <_Balloc>
   4ab18:	89800417 	ldw	r6,16(r17)
   4ab1c:	89400304 	addi	r5,r17,12
   4ab20:	11000304 	addi	r4,r2,12
   4ab24:	31800084 	addi	r6,r6,2
   4ab28:	318d883a 	add	r6,r6,r6
   4ab2c:	318d883a 	add	r6,r6,r6
   4ab30:	1027883a 	mov	r19,r2
   4ab34:	00456300 	call	45630 <memcpy>
   4ab38:	01800044 	movi	r6,1
   4ab3c:	980b883a 	mov	r5,r19
   4ab40:	e009883a 	mov	r4,fp
   4ab44:	004d9f40 	call	4d9f4 <__lshift>
   4ab48:	1029883a 	mov	r20,r2
   4ab4c:	003ecc06 	br	4a680 <__alt_data_end+0xfffcbe80>
   4ab50:	00800e44 	movi	r2,57
   4ab54:	90809026 	beq	r18,r2,4ad98 <_dtoa_r+0x152c>
   4ab58:	92000044 	addi	r8,r18,1
   4ab5c:	003f1f06 	br	4a7dc <__alt_data_end+0xfffcbfdc>
   4ab60:	9011883a 	mov	r8,r18
   4ab64:	8825883a 	mov	r18,r17
   4ab68:	a023883a 	mov	r17,r20
   4ab6c:	003e2906 	br	4a414 <__alt_data_end+0xfffcbc14>
   4ab70:	002b883a 	mov	r21,zero
   4ab74:	0023883a 	mov	r17,zero
   4ab78:	003f5406 	br	4a8cc <__alt_data_end+0xfffcc0cc>
   4ab7c:	61bfffc4 	addi	r6,r12,-1
   4ab80:	300490fa 	slli	r2,r6,3
   4ab84:	00c001b4 	movhi	r3,6
   4ab88:	18ed6604 	addi	r3,r3,-19048
   4ab8c:	1885883a 	add	r2,r3,r2
   4ab90:	11000017 	ldw	r4,0(r2)
   4ab94:	11400117 	ldw	r5,4(r2)
   4ab98:	d8800717 	ldw	r2,28(sp)
   4ab9c:	880f883a 	mov	r7,r17
   4aba0:	d9801215 	stw	r6,72(sp)
   4aba4:	800d883a 	mov	r6,r16
   4aba8:	db001615 	stw	r12,88(sp)
   4abac:	15c00044 	addi	r23,r2,1
   4abb0:	004407c0 	call	4407c <__muldf3>
   4abb4:	d9401017 	ldw	r5,64(sp)
   4abb8:	d9000f17 	ldw	r4,60(sp)
   4abbc:	d8c01515 	stw	r3,84(sp)
   4abc0:	d8801415 	stw	r2,80(sp)
   4abc4:	00450900 	call	45090 <__fixdfsi>
   4abc8:	1009883a 	mov	r4,r2
   4abcc:	1021883a 	mov	r16,r2
   4abd0:	00451100 	call	45110 <__floatsidf>
   4abd4:	d9000f17 	ldw	r4,60(sp)
   4abd8:	d9401017 	ldw	r5,64(sp)
   4abdc:	100d883a 	mov	r6,r2
   4abe0:	180f883a 	mov	r7,r3
   4abe4:	00447940 	call	44794 <__subdf3>
   4abe8:	1829883a 	mov	r20,r3
   4abec:	d8c00717 	ldw	r3,28(sp)
   4abf0:	84000c04 	addi	r16,r16,48
   4abf4:	1023883a 	mov	r17,r2
   4abf8:	1c000005 	stb	r16,0(r3)
   4abfc:	db001617 	ldw	r12,88(sp)
   4ac00:	00800044 	movi	r2,1
   4ac04:	60802226 	beq	r12,r2,4ac90 <_dtoa_r+0x1424>
   4ac08:	d9c00717 	ldw	r7,28(sp)
   4ac0c:	8805883a 	mov	r2,r17
   4ac10:	b82b883a 	mov	r21,r23
   4ac14:	3b19883a 	add	r12,r7,r12
   4ac18:	6023883a 	mov	r17,r12
   4ac1c:	a007883a 	mov	r3,r20
   4ac20:	dc800f15 	stw	r18,60(sp)
   4ac24:	000d883a 	mov	r6,zero
   4ac28:	01d00934 	movhi	r7,16420
   4ac2c:	1009883a 	mov	r4,r2
   4ac30:	180b883a 	mov	r5,r3
   4ac34:	004407c0 	call	4407c <__muldf3>
   4ac38:	180b883a 	mov	r5,r3
   4ac3c:	1009883a 	mov	r4,r2
   4ac40:	1829883a 	mov	r20,r3
   4ac44:	1025883a 	mov	r18,r2
   4ac48:	00450900 	call	45090 <__fixdfsi>
   4ac4c:	1009883a 	mov	r4,r2
   4ac50:	1021883a 	mov	r16,r2
   4ac54:	00451100 	call	45110 <__floatsidf>
   4ac58:	100d883a 	mov	r6,r2
   4ac5c:	180f883a 	mov	r7,r3
   4ac60:	9009883a 	mov	r4,r18
   4ac64:	a00b883a 	mov	r5,r20
   4ac68:	84000c04 	addi	r16,r16,48
   4ac6c:	00447940 	call	44794 <__subdf3>
   4ac70:	ad400044 	addi	r21,r21,1
   4ac74:	ac3fffc5 	stb	r16,-1(r21)
   4ac78:	ac7fea1e 	bne	r21,r17,4ac24 <__alt_data_end+0xfffcc424>
   4ac7c:	1023883a 	mov	r17,r2
   4ac80:	d8801217 	ldw	r2,72(sp)
   4ac84:	dc800f17 	ldw	r18,60(sp)
   4ac88:	1829883a 	mov	r20,r3
   4ac8c:	b8af883a 	add	r23,r23,r2
   4ac90:	d9001417 	ldw	r4,80(sp)
   4ac94:	d9401517 	ldw	r5,84(sp)
   4ac98:	000d883a 	mov	r6,zero
   4ac9c:	01cff834 	movhi	r7,16352
   4aca0:	0042d180 	call	42d18 <__adddf3>
   4aca4:	880d883a 	mov	r6,r17
   4aca8:	a00f883a 	mov	r7,r20
   4acac:	1009883a 	mov	r4,r2
   4acb0:	180b883a 	mov	r5,r3
   4acb4:	0043f880 	call	43f88 <__ledf2>
   4acb8:	10003e0e 	bge	r2,zero,4adb4 <_dtoa_r+0x1548>
   4acbc:	d9001317 	ldw	r4,76(sp)
   4acc0:	bd3fffc3 	ldbu	r20,-1(r23)
   4acc4:	d9000515 	stw	r4,20(sp)
   4acc8:	003d3b06 	br	4a1b8 <__alt_data_end+0xfffcb9b8>
   4accc:	0027883a 	mov	r19,zero
   4acd0:	003f1b06 	br	4a940 <__alt_data_end+0xfffcc140>
   4acd4:	d8800817 	ldw	r2,32(sp)
   4acd8:	11e9c83a 	sub	r20,r2,r7
   4acdc:	0005883a 	mov	r2,zero
   4ace0:	003d5406 	br	4a234 <__alt_data_end+0xfffcba34>
   4ace4:	00800044 	movi	r2,1
   4ace8:	003dc706 	br	4a408 <__alt_data_end+0xfffcbc08>
   4acec:	d8c00217 	ldw	r3,8(sp)
   4acf0:	00800d84 	movi	r2,54
   4acf4:	dd400a17 	ldw	r21,40(sp)
   4acf8:	10c5c83a 	sub	r2,r2,r3
   4acfc:	dd000817 	ldw	r20,32(sp)
   4ad00:	003d4c06 	br	4a234 <__alt_data_end+0xfffcba34>
   4ad04:	dc800f15 	stw	r18,60(sp)
   4ad08:	dcc01015 	stw	r19,64(sp)
   4ad0c:	04000084 	movi	r16,2
   4ad10:	003bed06 	br	49cc8 <__alt_data_end+0xfffcb4c8>
   4ad14:	d9000617 	ldw	r4,24(sp)
   4ad18:	203f0d26 	beq	r4,zero,4a950 <__alt_data_end+0xfffcc150>
   4ad1c:	d9800c17 	ldw	r6,48(sp)
   4ad20:	01bcab0e 	bge	zero,r6,49fd0 <__alt_data_end+0xfffcb7d0>
   4ad24:	d9401017 	ldw	r5,64(sp)
   4ad28:	d9000f17 	ldw	r4,60(sp)
   4ad2c:	000d883a 	mov	r6,zero
   4ad30:	01d00934 	movhi	r7,16420
   4ad34:	004407c0 	call	4407c <__muldf3>
   4ad38:	81000044 	addi	r4,r16,1
   4ad3c:	d8800f15 	stw	r2,60(sp)
   4ad40:	d8c01015 	stw	r3,64(sp)
   4ad44:	00451100 	call	45110 <__floatsidf>
   4ad48:	d9800f17 	ldw	r6,60(sp)
   4ad4c:	d9c01017 	ldw	r7,64(sp)
   4ad50:	1009883a 	mov	r4,r2
   4ad54:	180b883a 	mov	r5,r3
   4ad58:	004407c0 	call	4407c <__muldf3>
   4ad5c:	01d00734 	movhi	r7,16412
   4ad60:	000d883a 	mov	r6,zero
   4ad64:	1009883a 	mov	r4,r2
   4ad68:	180b883a 	mov	r5,r3
   4ad6c:	0042d180 	call	42d18 <__adddf3>
   4ad70:	d9c00517 	ldw	r7,20(sp)
   4ad74:	047f3034 	movhi	r17,64704
   4ad78:	1021883a 	mov	r16,r2
   4ad7c:	39ffffc4 	addi	r7,r7,-1
   4ad80:	d9c01315 	stw	r7,76(sp)
   4ad84:	1c63883a 	add	r17,r3,r17
   4ad88:	db000c17 	ldw	r12,48(sp)
   4ad8c:	003bea06 	br	49d38 <__alt_data_end+0xfffcb538>
   4ad90:	dc000915 	stw	r16,36(sp)
   4ad94:	003e0e06 	br	4a5d0 <__alt_data_end+0xfffcbdd0>
   4ad98:	01000e44 	movi	r4,57
   4ad9c:	8825883a 	mov	r18,r17
   4ada0:	9dc00044 	addi	r23,r19,1
   4ada4:	99000005 	stb	r4,0(r19)
   4ada8:	a023883a 	mov	r17,r20
   4adac:	dc000915 	stw	r16,36(sp)
   4adb0:	003da406 	br	4a444 <__alt_data_end+0xfffcbc44>
   4adb4:	d9801417 	ldw	r6,80(sp)
   4adb8:	d9c01517 	ldw	r7,84(sp)
   4adbc:	0009883a 	mov	r4,zero
   4adc0:	014ff834 	movhi	r5,16352
   4adc4:	00447940 	call	44794 <__subdf3>
   4adc8:	880d883a 	mov	r6,r17
   4adcc:	a00f883a 	mov	r7,r20
   4add0:	1009883a 	mov	r4,r2
   4add4:	180b883a 	mov	r5,r3
   4add8:	0043eac0 	call	43eac <__gedf2>
   4addc:	00bc7c0e 	bge	zero,r2,49fd0 <__alt_data_end+0xfffcb7d0>
   4ade0:	01000c04 	movi	r4,48
   4ade4:	00000106 	br	4adec <_dtoa_r+0x1580>
   4ade8:	102f883a 	mov	r23,r2
   4adec:	b8bfffc4 	addi	r2,r23,-1
   4adf0:	10c00007 	ldb	r3,0(r2)
   4adf4:	193ffc26 	beq	r3,r4,4ade8 <__alt_data_end+0xfffcc5e8>
   4adf8:	d9801317 	ldw	r6,76(sp)
   4adfc:	d9800515 	stw	r6,20(sp)
   4ae00:	003c4406 	br	49f14 <__alt_data_end+0xfffcb714>
   4ae04:	d9801317 	ldw	r6,76(sp)
   4ae08:	d9800515 	stw	r6,20(sp)
   4ae0c:	003cea06 	br	4a1b8 <__alt_data_end+0xfffcb9b8>
   4ae10:	dd800f17 	ldw	r22,60(sp)
   4ae14:	dcc01017 	ldw	r19,64(sp)
   4ae18:	dc801217 	ldw	r18,72(sp)
   4ae1c:	003c6c06 	br	49fd0 <__alt_data_end+0xfffcb7d0>
   4ae20:	903e031e 	bne	r18,zero,4a630 <__alt_data_end+0xfffcbe30>
   4ae24:	003ebb06 	br	4a914 <__alt_data_end+0xfffcc114>
   4ae28:	103e6c1e 	bne	r2,zero,4a7dc <__alt_data_end+0xfffcbfdc>
   4ae2c:	4080004c 	andi	r2,r8,1
   4ae30:	103e6a26 	beq	r2,zero,4a7dc <__alt_data_end+0xfffcbfdc>
   4ae34:	003e6606 	br	4a7d0 <__alt_data_end+0xfffcbfd0>
   4ae38:	d8c00317 	ldw	r3,12(sp)
   4ae3c:	00800084 	movi	r2,2
   4ae40:	10c02916 	blt	r2,r3,4aee8 <_dtoa_r+0x167c>
   4ae44:	d9000c17 	ldw	r4,48(sp)
   4ae48:	003e8806 	br	4a86c <__alt_data_end+0xfffcc06c>
   4ae4c:	04000084 	movi	r16,2
   4ae50:	003b9d06 	br	49cc8 <__alt_data_end+0xfffcb4c8>
   4ae54:	d9001317 	ldw	r4,76(sp)
   4ae58:	d9000515 	stw	r4,20(sp)
   4ae5c:	003cd606 	br	4a1b8 <__alt_data_end+0xfffcb9b8>
   4ae60:	d8801317 	ldw	r2,76(sp)
   4ae64:	d8800515 	stw	r2,20(sp)
   4ae68:	003c2a06 	br	49f14 <__alt_data_end+0xfffcb714>
   4ae6c:	d9800317 	ldw	r6,12(sp)
   4ae70:	00800084 	movi	r2,2
   4ae74:	11801516 	blt	r2,r6,4aecc <_dtoa_r+0x1660>
   4ae78:	d9c00c17 	ldw	r7,48(sp)
   4ae7c:	d9c00615 	stw	r7,24(sp)
   4ae80:	003df706 	br	4a660 <__alt_data_end+0xfffcbe60>
   4ae84:	193d3926 	beq	r3,r4,4a36c <__alt_data_end+0xfffcbb6c>
   4ae88:	00c00f04 	movi	r3,60
   4ae8c:	1885c83a 	sub	r2,r3,r2
   4ae90:	003ddf06 	br	4a610 <__alt_data_end+0xfffcbe10>
   4ae94:	e009883a 	mov	r4,fp
   4ae98:	e0001115 	stw	zero,68(fp)
   4ae9c:	000b883a 	mov	r5,zero
   4aea0:	004d2740 	call	4d274 <_Balloc>
   4aea4:	d8800715 	stw	r2,28(sp)
   4aea8:	d8c00717 	ldw	r3,28(sp)
   4aeac:	00bfffc4 	movi	r2,-1
   4aeb0:	01000044 	movi	r4,1
   4aeb4:	d8800c15 	stw	r2,48(sp)
   4aeb8:	e0c01015 	stw	r3,64(fp)
   4aebc:	d9000b15 	stw	r4,44(sp)
   4aec0:	d8800615 	stw	r2,24(sp)
   4aec4:	d8002215 	stw	zero,136(sp)
   4aec8:	003c4106 	br	49fd0 <__alt_data_end+0xfffcb7d0>
   4aecc:	d8c00c17 	ldw	r3,48(sp)
   4aed0:	d8c00615 	stw	r3,24(sp)
   4aed4:	003e7006 	br	4a898 <__alt_data_end+0xfffcc098>
   4aed8:	04400044 	movi	r17,1
   4aedc:	003b2006 	br	49b60 <__alt_data_end+0xfffcb360>
   4aee0:	000b883a 	mov	r5,zero
   4aee4:	003b3d06 	br	49bdc <__alt_data_end+0xfffcb3dc>
   4aee8:	d8800c17 	ldw	r2,48(sp)
   4aeec:	d8800615 	stw	r2,24(sp)
   4aef0:	003e6906 	br	4a898 <__alt_data_end+0xfffcc098>

0004aef4 <__sflush_r>:
   4aef4:	2880030b 	ldhu	r2,12(r5)
   4aef8:	defffb04 	addi	sp,sp,-20
   4aefc:	dcc00315 	stw	r19,12(sp)
   4af00:	dc400115 	stw	r17,4(sp)
   4af04:	dfc00415 	stw	ra,16(sp)
   4af08:	dc800215 	stw	r18,8(sp)
   4af0c:	dc000015 	stw	r16,0(sp)
   4af10:	10c0020c 	andi	r3,r2,8
   4af14:	2823883a 	mov	r17,r5
   4af18:	2027883a 	mov	r19,r4
   4af1c:	1800311e 	bne	r3,zero,4afe4 <__sflush_r+0xf0>
   4af20:	28c00117 	ldw	r3,4(r5)
   4af24:	10820014 	ori	r2,r2,2048
   4af28:	2880030d 	sth	r2,12(r5)
   4af2c:	00c04b0e 	bge	zero,r3,4b05c <__sflush_r+0x168>
   4af30:	8a000a17 	ldw	r8,40(r17)
   4af34:	40002326 	beq	r8,zero,4afc4 <__sflush_r+0xd0>
   4af38:	9c000017 	ldw	r16,0(r19)
   4af3c:	10c4000c 	andi	r3,r2,4096
   4af40:	98000015 	stw	zero,0(r19)
   4af44:	18004826 	beq	r3,zero,4b068 <__sflush_r+0x174>
   4af48:	89801417 	ldw	r6,80(r17)
   4af4c:	10c0010c 	andi	r3,r2,4
   4af50:	18000626 	beq	r3,zero,4af6c <__sflush_r+0x78>
   4af54:	88c00117 	ldw	r3,4(r17)
   4af58:	88800c17 	ldw	r2,48(r17)
   4af5c:	30cdc83a 	sub	r6,r6,r3
   4af60:	10000226 	beq	r2,zero,4af6c <__sflush_r+0x78>
   4af64:	88800f17 	ldw	r2,60(r17)
   4af68:	308dc83a 	sub	r6,r6,r2
   4af6c:	89400717 	ldw	r5,28(r17)
   4af70:	000f883a 	mov	r7,zero
   4af74:	9809883a 	mov	r4,r19
   4af78:	403ee83a 	callr	r8
   4af7c:	00ffffc4 	movi	r3,-1
   4af80:	10c04426 	beq	r2,r3,4b094 <__sflush_r+0x1a0>
   4af84:	88c0030b 	ldhu	r3,12(r17)
   4af88:	89000417 	ldw	r4,16(r17)
   4af8c:	88000115 	stw	zero,4(r17)
   4af90:	197dffcc 	andi	r5,r3,63487
   4af94:	8940030d 	sth	r5,12(r17)
   4af98:	89000015 	stw	r4,0(r17)
   4af9c:	18c4000c 	andi	r3,r3,4096
   4afa0:	18002c1e 	bne	r3,zero,4b054 <__sflush_r+0x160>
   4afa4:	89400c17 	ldw	r5,48(r17)
   4afa8:	9c000015 	stw	r16,0(r19)
   4afac:	28000526 	beq	r5,zero,4afc4 <__sflush_r+0xd0>
   4afb0:	88801004 	addi	r2,r17,64
   4afb4:	28800226 	beq	r5,r2,4afc0 <__sflush_r+0xcc>
   4afb8:	9809883a 	mov	r4,r19
   4afbc:	004b8c00 	call	4b8c0 <_free_r>
   4afc0:	88000c15 	stw	zero,48(r17)
   4afc4:	0005883a 	mov	r2,zero
   4afc8:	dfc00417 	ldw	ra,16(sp)
   4afcc:	dcc00317 	ldw	r19,12(sp)
   4afd0:	dc800217 	ldw	r18,8(sp)
   4afd4:	dc400117 	ldw	r17,4(sp)
   4afd8:	dc000017 	ldw	r16,0(sp)
   4afdc:	dec00504 	addi	sp,sp,20
   4afe0:	f800283a 	ret
   4afe4:	2c800417 	ldw	r18,16(r5)
   4afe8:	903ff626 	beq	r18,zero,4afc4 <__alt_data_end+0xfffcc7c4>
   4afec:	2c000017 	ldw	r16,0(r5)
   4aff0:	108000cc 	andi	r2,r2,3
   4aff4:	2c800015 	stw	r18,0(r5)
   4aff8:	84a1c83a 	sub	r16,r16,r18
   4affc:	1000131e 	bne	r2,zero,4b04c <__sflush_r+0x158>
   4b000:	28800517 	ldw	r2,20(r5)
   4b004:	88800215 	stw	r2,8(r17)
   4b008:	04000316 	blt	zero,r16,4b018 <__sflush_r+0x124>
   4b00c:	003fed06 	br	4afc4 <__alt_data_end+0xfffcc7c4>
   4b010:	90a5883a 	add	r18,r18,r2
   4b014:	043feb0e 	bge	zero,r16,4afc4 <__alt_data_end+0xfffcc7c4>
   4b018:	88800917 	ldw	r2,36(r17)
   4b01c:	89400717 	ldw	r5,28(r17)
   4b020:	800f883a 	mov	r7,r16
   4b024:	900d883a 	mov	r6,r18
   4b028:	9809883a 	mov	r4,r19
   4b02c:	103ee83a 	callr	r2
   4b030:	80a1c83a 	sub	r16,r16,r2
   4b034:	00bff616 	blt	zero,r2,4b010 <__alt_data_end+0xfffcc810>
   4b038:	88c0030b 	ldhu	r3,12(r17)
   4b03c:	00bfffc4 	movi	r2,-1
   4b040:	18c01014 	ori	r3,r3,64
   4b044:	88c0030d 	sth	r3,12(r17)
   4b048:	003fdf06 	br	4afc8 <__alt_data_end+0xfffcc7c8>
   4b04c:	0005883a 	mov	r2,zero
   4b050:	003fec06 	br	4b004 <__alt_data_end+0xfffcc804>
   4b054:	88801415 	stw	r2,80(r17)
   4b058:	003fd206 	br	4afa4 <__alt_data_end+0xfffcc7a4>
   4b05c:	28c00f17 	ldw	r3,60(r5)
   4b060:	00ffb316 	blt	zero,r3,4af30 <__alt_data_end+0xfffcc730>
   4b064:	003fd706 	br	4afc4 <__alt_data_end+0xfffcc7c4>
   4b068:	89400717 	ldw	r5,28(r17)
   4b06c:	000d883a 	mov	r6,zero
   4b070:	01c00044 	movi	r7,1
   4b074:	9809883a 	mov	r4,r19
   4b078:	403ee83a 	callr	r8
   4b07c:	100d883a 	mov	r6,r2
   4b080:	00bfffc4 	movi	r2,-1
   4b084:	30801426 	beq	r6,r2,4b0d8 <__sflush_r+0x1e4>
   4b088:	8880030b 	ldhu	r2,12(r17)
   4b08c:	8a000a17 	ldw	r8,40(r17)
   4b090:	003fae06 	br	4af4c <__alt_data_end+0xfffcc74c>
   4b094:	98c00017 	ldw	r3,0(r19)
   4b098:	183fba26 	beq	r3,zero,4af84 <__alt_data_end+0xfffcc784>
   4b09c:	01000744 	movi	r4,29
   4b0a0:	19000626 	beq	r3,r4,4b0bc <__sflush_r+0x1c8>
   4b0a4:	01000584 	movi	r4,22
   4b0a8:	19000426 	beq	r3,r4,4b0bc <__sflush_r+0x1c8>
   4b0ac:	88c0030b 	ldhu	r3,12(r17)
   4b0b0:	18c01014 	ori	r3,r3,64
   4b0b4:	88c0030d 	sth	r3,12(r17)
   4b0b8:	003fc306 	br	4afc8 <__alt_data_end+0xfffcc7c8>
   4b0bc:	8880030b 	ldhu	r2,12(r17)
   4b0c0:	88c00417 	ldw	r3,16(r17)
   4b0c4:	88000115 	stw	zero,4(r17)
   4b0c8:	10bdffcc 	andi	r2,r2,63487
   4b0cc:	8880030d 	sth	r2,12(r17)
   4b0d0:	88c00015 	stw	r3,0(r17)
   4b0d4:	003fb306 	br	4afa4 <__alt_data_end+0xfffcc7a4>
   4b0d8:	98800017 	ldw	r2,0(r19)
   4b0dc:	103fea26 	beq	r2,zero,4b088 <__alt_data_end+0xfffcc888>
   4b0e0:	00c00744 	movi	r3,29
   4b0e4:	10c00226 	beq	r2,r3,4b0f0 <__sflush_r+0x1fc>
   4b0e8:	00c00584 	movi	r3,22
   4b0ec:	10c0031e 	bne	r2,r3,4b0fc <__sflush_r+0x208>
   4b0f0:	9c000015 	stw	r16,0(r19)
   4b0f4:	0005883a 	mov	r2,zero
   4b0f8:	003fb306 	br	4afc8 <__alt_data_end+0xfffcc7c8>
   4b0fc:	88c0030b 	ldhu	r3,12(r17)
   4b100:	3005883a 	mov	r2,r6
   4b104:	18c01014 	ori	r3,r3,64
   4b108:	88c0030d 	sth	r3,12(r17)
   4b10c:	003fae06 	br	4afc8 <__alt_data_end+0xfffcc7c8>

0004b110 <_fflush_r>:
   4b110:	defffd04 	addi	sp,sp,-12
   4b114:	dc000115 	stw	r16,4(sp)
   4b118:	dfc00215 	stw	ra,8(sp)
   4b11c:	2021883a 	mov	r16,r4
   4b120:	20000226 	beq	r4,zero,4b12c <_fflush_r+0x1c>
   4b124:	20800e17 	ldw	r2,56(r4)
   4b128:	10000c26 	beq	r2,zero,4b15c <_fflush_r+0x4c>
   4b12c:	2880030f 	ldh	r2,12(r5)
   4b130:	1000051e 	bne	r2,zero,4b148 <_fflush_r+0x38>
   4b134:	0005883a 	mov	r2,zero
   4b138:	dfc00217 	ldw	ra,8(sp)
   4b13c:	dc000117 	ldw	r16,4(sp)
   4b140:	dec00304 	addi	sp,sp,12
   4b144:	f800283a 	ret
   4b148:	8009883a 	mov	r4,r16
   4b14c:	dfc00217 	ldw	ra,8(sp)
   4b150:	dc000117 	ldw	r16,4(sp)
   4b154:	dec00304 	addi	sp,sp,12
   4b158:	004aef41 	jmpi	4aef4 <__sflush_r>
   4b15c:	d9400015 	stw	r5,0(sp)
   4b160:	004b4ec0 	call	4b4ec <__sinit>
   4b164:	d9400017 	ldw	r5,0(sp)
   4b168:	003ff006 	br	4b12c <__alt_data_end+0xfffcc92c>

0004b16c <fflush>:
   4b16c:	20000526 	beq	r4,zero,4b184 <fflush+0x18>
   4b170:	008001b4 	movhi	r2,6
   4b174:	10b55004 	addi	r2,r2,-10944
   4b178:	200b883a 	mov	r5,r4
   4b17c:	11000017 	ldw	r4,0(r2)
   4b180:	004b1101 	jmpi	4b110 <_fflush_r>
   4b184:	008001b4 	movhi	r2,6
   4b188:	10b54f04 	addi	r2,r2,-10948
   4b18c:	11000017 	ldw	r4,0(r2)
   4b190:	01400174 	movhi	r5,5
   4b194:	296c4404 	addi	r5,r5,-20208
   4b198:	004c1501 	jmpi	4c150 <_fwalk_reent>

0004b19c <__fp_unlock>:
   4b19c:	0005883a 	mov	r2,zero
   4b1a0:	f800283a 	ret

0004b1a4 <_cleanup_r>:
   4b1a4:	01400174 	movhi	r5,5
   4b1a8:	29531004 	addi	r5,r5,19520
   4b1ac:	004c1501 	jmpi	4c150 <_fwalk_reent>

0004b1b0 <__sinit.part.1>:
   4b1b0:	defff704 	addi	sp,sp,-36
   4b1b4:	00c00174 	movhi	r3,5
   4b1b8:	dfc00815 	stw	ra,32(sp)
   4b1bc:	ddc00715 	stw	r23,28(sp)
   4b1c0:	dd800615 	stw	r22,24(sp)
   4b1c4:	dd400515 	stw	r21,20(sp)
   4b1c8:	dd000415 	stw	r20,16(sp)
   4b1cc:	dcc00315 	stw	r19,12(sp)
   4b1d0:	dc800215 	stw	r18,8(sp)
   4b1d4:	dc400115 	stw	r17,4(sp)
   4b1d8:	dc000015 	stw	r16,0(sp)
   4b1dc:	18ec6904 	addi	r3,r3,-20060
   4b1e0:	24000117 	ldw	r16,4(r4)
   4b1e4:	20c00f15 	stw	r3,60(r4)
   4b1e8:	2080bb04 	addi	r2,r4,748
   4b1ec:	00c000c4 	movi	r3,3
   4b1f0:	20c0b915 	stw	r3,740(r4)
   4b1f4:	2080ba15 	stw	r2,744(r4)
   4b1f8:	2000b815 	stw	zero,736(r4)
   4b1fc:	05c00204 	movi	r23,8
   4b200:	00800104 	movi	r2,4
   4b204:	2025883a 	mov	r18,r4
   4b208:	b80d883a 	mov	r6,r23
   4b20c:	81001704 	addi	r4,r16,92
   4b210:	000b883a 	mov	r5,zero
   4b214:	80000015 	stw	zero,0(r16)
   4b218:	80000115 	stw	zero,4(r16)
   4b21c:	80000215 	stw	zero,8(r16)
   4b220:	8080030d 	sth	r2,12(r16)
   4b224:	80001915 	stw	zero,100(r16)
   4b228:	8000038d 	sth	zero,14(r16)
   4b22c:	80000415 	stw	zero,16(r16)
   4b230:	80000515 	stw	zero,20(r16)
   4b234:	80000615 	stw	zero,24(r16)
   4b238:	004d14c0 	call	4d14c <memset>
   4b23c:	05800174 	movhi	r22,5
   4b240:	94400217 	ldw	r17,8(r18)
   4b244:	05400174 	movhi	r21,5
   4b248:	05000174 	movhi	r20,5
   4b24c:	04c00174 	movhi	r19,5
   4b250:	b5bb0a04 	addi	r22,r22,-5080
   4b254:	ad7b2104 	addi	r21,r21,-4988
   4b258:	a53b4004 	addi	r20,r20,-4864
   4b25c:	9cfb5704 	addi	r19,r19,-4772
   4b260:	85800815 	stw	r22,32(r16)
   4b264:	85400915 	stw	r21,36(r16)
   4b268:	85000a15 	stw	r20,40(r16)
   4b26c:	84c00b15 	stw	r19,44(r16)
   4b270:	84000715 	stw	r16,28(r16)
   4b274:	00800284 	movi	r2,10
   4b278:	8880030d 	sth	r2,12(r17)
   4b27c:	00800044 	movi	r2,1
   4b280:	b80d883a 	mov	r6,r23
   4b284:	89001704 	addi	r4,r17,92
   4b288:	000b883a 	mov	r5,zero
   4b28c:	88000015 	stw	zero,0(r17)
   4b290:	88000115 	stw	zero,4(r17)
   4b294:	88000215 	stw	zero,8(r17)
   4b298:	88001915 	stw	zero,100(r17)
   4b29c:	8880038d 	sth	r2,14(r17)
   4b2a0:	88000415 	stw	zero,16(r17)
   4b2a4:	88000515 	stw	zero,20(r17)
   4b2a8:	88000615 	stw	zero,24(r17)
   4b2ac:	004d14c0 	call	4d14c <memset>
   4b2b0:	94000317 	ldw	r16,12(r18)
   4b2b4:	00800484 	movi	r2,18
   4b2b8:	8c400715 	stw	r17,28(r17)
   4b2bc:	8d800815 	stw	r22,32(r17)
   4b2c0:	8d400915 	stw	r21,36(r17)
   4b2c4:	8d000a15 	stw	r20,40(r17)
   4b2c8:	8cc00b15 	stw	r19,44(r17)
   4b2cc:	8080030d 	sth	r2,12(r16)
   4b2d0:	00800084 	movi	r2,2
   4b2d4:	80000015 	stw	zero,0(r16)
   4b2d8:	80000115 	stw	zero,4(r16)
   4b2dc:	80000215 	stw	zero,8(r16)
   4b2e0:	80001915 	stw	zero,100(r16)
   4b2e4:	8080038d 	sth	r2,14(r16)
   4b2e8:	80000415 	stw	zero,16(r16)
   4b2ec:	80000515 	stw	zero,20(r16)
   4b2f0:	80000615 	stw	zero,24(r16)
   4b2f4:	b80d883a 	mov	r6,r23
   4b2f8:	000b883a 	mov	r5,zero
   4b2fc:	81001704 	addi	r4,r16,92
   4b300:	004d14c0 	call	4d14c <memset>
   4b304:	00800044 	movi	r2,1
   4b308:	84000715 	stw	r16,28(r16)
   4b30c:	85800815 	stw	r22,32(r16)
   4b310:	85400915 	stw	r21,36(r16)
   4b314:	85000a15 	stw	r20,40(r16)
   4b318:	84c00b15 	stw	r19,44(r16)
   4b31c:	90800e15 	stw	r2,56(r18)
   4b320:	dfc00817 	ldw	ra,32(sp)
   4b324:	ddc00717 	ldw	r23,28(sp)
   4b328:	dd800617 	ldw	r22,24(sp)
   4b32c:	dd400517 	ldw	r21,20(sp)
   4b330:	dd000417 	ldw	r20,16(sp)
   4b334:	dcc00317 	ldw	r19,12(sp)
   4b338:	dc800217 	ldw	r18,8(sp)
   4b33c:	dc400117 	ldw	r17,4(sp)
   4b340:	dc000017 	ldw	r16,0(sp)
   4b344:	dec00904 	addi	sp,sp,36
   4b348:	f800283a 	ret

0004b34c <__fp_lock>:
   4b34c:	0005883a 	mov	r2,zero
   4b350:	f800283a 	ret

0004b354 <__sfmoreglue>:
   4b354:	defffc04 	addi	sp,sp,-16
   4b358:	dc400115 	stw	r17,4(sp)
   4b35c:	2c7fffc4 	addi	r17,r5,-1
   4b360:	8c401a24 	muli	r17,r17,104
   4b364:	dc800215 	stw	r18,8(sp)
   4b368:	2825883a 	mov	r18,r5
   4b36c:	89401d04 	addi	r5,r17,116
   4b370:	dc000015 	stw	r16,0(sp)
   4b374:	dfc00315 	stw	ra,12(sp)
   4b378:	004c4dc0 	call	4c4dc <_malloc_r>
   4b37c:	1021883a 	mov	r16,r2
   4b380:	10000726 	beq	r2,zero,4b3a0 <__sfmoreglue+0x4c>
   4b384:	11000304 	addi	r4,r2,12
   4b388:	10000015 	stw	zero,0(r2)
   4b38c:	14800115 	stw	r18,4(r2)
   4b390:	11000215 	stw	r4,8(r2)
   4b394:	89801a04 	addi	r6,r17,104
   4b398:	000b883a 	mov	r5,zero
   4b39c:	004d14c0 	call	4d14c <memset>
   4b3a0:	8005883a 	mov	r2,r16
   4b3a4:	dfc00317 	ldw	ra,12(sp)
   4b3a8:	dc800217 	ldw	r18,8(sp)
   4b3ac:	dc400117 	ldw	r17,4(sp)
   4b3b0:	dc000017 	ldw	r16,0(sp)
   4b3b4:	dec00404 	addi	sp,sp,16
   4b3b8:	f800283a 	ret

0004b3bc <__sfp>:
   4b3bc:	defffb04 	addi	sp,sp,-20
   4b3c0:	dc000015 	stw	r16,0(sp)
   4b3c4:	040001b4 	movhi	r16,6
   4b3c8:	84354f04 	addi	r16,r16,-10948
   4b3cc:	dcc00315 	stw	r19,12(sp)
   4b3d0:	2027883a 	mov	r19,r4
   4b3d4:	81000017 	ldw	r4,0(r16)
   4b3d8:	dfc00415 	stw	ra,16(sp)
   4b3dc:	dc800215 	stw	r18,8(sp)
   4b3e0:	20800e17 	ldw	r2,56(r4)
   4b3e4:	dc400115 	stw	r17,4(sp)
   4b3e8:	1000021e 	bne	r2,zero,4b3f4 <__sfp+0x38>
   4b3ec:	004b1b00 	call	4b1b0 <__sinit.part.1>
   4b3f0:	81000017 	ldw	r4,0(r16)
   4b3f4:	2480b804 	addi	r18,r4,736
   4b3f8:	047fffc4 	movi	r17,-1
   4b3fc:	91000117 	ldw	r4,4(r18)
   4b400:	94000217 	ldw	r16,8(r18)
   4b404:	213fffc4 	addi	r4,r4,-1
   4b408:	20000a16 	blt	r4,zero,4b434 <__sfp+0x78>
   4b40c:	8080030f 	ldh	r2,12(r16)
   4b410:	10000c26 	beq	r2,zero,4b444 <__sfp+0x88>
   4b414:	80c01d04 	addi	r3,r16,116
   4b418:	00000206 	br	4b424 <__sfp+0x68>
   4b41c:	18bfe60f 	ldh	r2,-104(r3)
   4b420:	10000826 	beq	r2,zero,4b444 <__sfp+0x88>
   4b424:	213fffc4 	addi	r4,r4,-1
   4b428:	1c3ffd04 	addi	r16,r3,-12
   4b42c:	18c01a04 	addi	r3,r3,104
   4b430:	247ffa1e 	bne	r4,r17,4b41c <__alt_data_end+0xfffccc1c>
   4b434:	90800017 	ldw	r2,0(r18)
   4b438:	10001d26 	beq	r2,zero,4b4b0 <__sfp+0xf4>
   4b43c:	1025883a 	mov	r18,r2
   4b440:	003fee06 	br	4b3fc <__alt_data_end+0xfffccbfc>
   4b444:	00bfffc4 	movi	r2,-1
   4b448:	8080038d 	sth	r2,14(r16)
   4b44c:	00800044 	movi	r2,1
   4b450:	8080030d 	sth	r2,12(r16)
   4b454:	80001915 	stw	zero,100(r16)
   4b458:	80000015 	stw	zero,0(r16)
   4b45c:	80000215 	stw	zero,8(r16)
   4b460:	80000115 	stw	zero,4(r16)
   4b464:	80000415 	stw	zero,16(r16)
   4b468:	80000515 	stw	zero,20(r16)
   4b46c:	80000615 	stw	zero,24(r16)
   4b470:	01800204 	movi	r6,8
   4b474:	000b883a 	mov	r5,zero
   4b478:	81001704 	addi	r4,r16,92
   4b47c:	004d14c0 	call	4d14c <memset>
   4b480:	8005883a 	mov	r2,r16
   4b484:	80000c15 	stw	zero,48(r16)
   4b488:	80000d15 	stw	zero,52(r16)
   4b48c:	80001115 	stw	zero,68(r16)
   4b490:	80001215 	stw	zero,72(r16)
   4b494:	dfc00417 	ldw	ra,16(sp)
   4b498:	dcc00317 	ldw	r19,12(sp)
   4b49c:	dc800217 	ldw	r18,8(sp)
   4b4a0:	dc400117 	ldw	r17,4(sp)
   4b4a4:	dc000017 	ldw	r16,0(sp)
   4b4a8:	dec00504 	addi	sp,sp,20
   4b4ac:	f800283a 	ret
   4b4b0:	01400104 	movi	r5,4
   4b4b4:	9809883a 	mov	r4,r19
   4b4b8:	004b3540 	call	4b354 <__sfmoreglue>
   4b4bc:	90800015 	stw	r2,0(r18)
   4b4c0:	103fde1e 	bne	r2,zero,4b43c <__alt_data_end+0xfffccc3c>
   4b4c4:	00800304 	movi	r2,12
   4b4c8:	98800015 	stw	r2,0(r19)
   4b4cc:	0005883a 	mov	r2,zero
   4b4d0:	003ff006 	br	4b494 <__alt_data_end+0xfffccc94>

0004b4d4 <_cleanup>:
   4b4d4:	008001b4 	movhi	r2,6
   4b4d8:	10b54f04 	addi	r2,r2,-10948
   4b4dc:	11000017 	ldw	r4,0(r2)
   4b4e0:	01400174 	movhi	r5,5
   4b4e4:	29531004 	addi	r5,r5,19520
   4b4e8:	004c1501 	jmpi	4c150 <_fwalk_reent>

0004b4ec <__sinit>:
   4b4ec:	20800e17 	ldw	r2,56(r4)
   4b4f0:	10000126 	beq	r2,zero,4b4f8 <__sinit+0xc>
   4b4f4:	f800283a 	ret
   4b4f8:	004b1b01 	jmpi	4b1b0 <__sinit.part.1>

0004b4fc <__sfp_lock_acquire>:
   4b4fc:	f800283a 	ret

0004b500 <__sfp_lock_release>:
   4b500:	f800283a 	ret

0004b504 <__sinit_lock_acquire>:
   4b504:	f800283a 	ret

0004b508 <__sinit_lock_release>:
   4b508:	f800283a 	ret

0004b50c <__fp_lock_all>:
   4b50c:	008001b4 	movhi	r2,6
   4b510:	10b55004 	addi	r2,r2,-10944
   4b514:	11000017 	ldw	r4,0(r2)
   4b518:	01400174 	movhi	r5,5
   4b51c:	296cd304 	addi	r5,r5,-19636
   4b520:	004c08c1 	jmpi	4c08c <_fwalk>

0004b524 <__fp_unlock_all>:
   4b524:	008001b4 	movhi	r2,6
   4b528:	10b55004 	addi	r2,r2,-10944
   4b52c:	11000017 	ldw	r4,0(r2)
   4b530:	01400174 	movhi	r5,5
   4b534:	296c6704 	addi	r5,r5,-20068
   4b538:	004c08c1 	jmpi	4c08c <_fwalk>

0004b53c <_fread_r>:
   4b53c:	defff404 	addi	sp,sp,-48
   4b540:	dd800815 	stw	r22,32(sp)
   4b544:	39ad383a 	mul	r22,r7,r6
   4b548:	dc000215 	stw	r16,8(sp)
   4b54c:	dfc00b15 	stw	ra,44(sp)
   4b550:	df000a15 	stw	fp,40(sp)
   4b554:	ddc00915 	stw	r23,36(sp)
   4b558:	dd400715 	stw	r21,28(sp)
   4b55c:	dd000615 	stw	r20,24(sp)
   4b560:	dcc00515 	stw	r19,20(sp)
   4b564:	dc800415 	stw	r18,16(sp)
   4b568:	dc400315 	stw	r17,12(sp)
   4b56c:	dc000c17 	ldw	r16,48(sp)
   4b570:	b0003b26 	beq	r22,zero,4b660 <_fread_r+0x124>
   4b574:	302f883a 	mov	r23,r6
   4b578:	382b883a 	mov	r21,r7
   4b57c:	2029883a 	mov	r20,r4
   4b580:	2827883a 	mov	r19,r5
   4b584:	20000226 	beq	r4,zero,4b590 <_fread_r+0x54>
   4b588:	20800e17 	ldw	r2,56(r4)
   4b58c:	10006e26 	beq	r2,zero,4b748 <_fread_r+0x20c>
   4b590:	8080030b 	ldhu	r2,12(r16)
   4b594:	10c8000c 	andi	r3,r2,8192
   4b598:	1800061e 	bne	r3,zero,4b5b4 <_fread_r+0x78>
   4b59c:	81001917 	ldw	r4,100(r16)
   4b5a0:	00f7ffc4 	movi	r3,-8193
   4b5a4:	10880014 	ori	r2,r2,8192
   4b5a8:	20c6703a 	and	r3,r4,r3
   4b5ac:	8080030d 	sth	r2,12(r16)
   4b5b0:	80c01915 	stw	r3,100(r16)
   4b5b4:	84400117 	ldw	r17,4(r16)
   4b5b8:	88005f16 	blt	r17,zero,4b738 <_fread_r+0x1fc>
   4b5bc:	8809883a 	mov	r4,r17
   4b5c0:	1080008c 	andi	r2,r2,2
   4b5c4:	1000281e 	bne	r2,zero,4b668 <_fread_r+0x12c>
   4b5c8:	b025883a 	mov	r18,r22
   4b5cc:	00000b06 	br	4b5fc <_fread_r+0xc0>
   4b5d0:	00456300 	call	45630 <memcpy>
   4b5d4:	80800017 	ldw	r2,0(r16)
   4b5d8:	9c67883a 	add	r19,r19,r17
   4b5dc:	9465c83a 	sub	r18,r18,r17
   4b5e0:	1463883a 	add	r17,r2,r17
   4b5e4:	800b883a 	mov	r5,r16
   4b5e8:	a009883a 	mov	r4,r20
   4b5ec:	84400015 	stw	r17,0(r16)
   4b5f0:	004e7f00 	call	4e7f0 <__srefill_r>
   4b5f4:	10004c1e 	bne	r2,zero,4b728 <_fread_r+0x1ec>
   4b5f8:	84400117 	ldw	r17,4(r16)
   4b5fc:	880d883a 	mov	r6,r17
   4b600:	9809883a 	mov	r4,r19
   4b604:	81400017 	ldw	r5,0(r16)
   4b608:	8cbff136 	bltu	r17,r18,4b5d0 <__alt_data_end+0xfffccdd0>
   4b60c:	900d883a 	mov	r6,r18
   4b610:	00456300 	call	45630 <memcpy>
   4b614:	80c00117 	ldw	r3,4(r16)
   4b618:	81000017 	ldw	r4,0(r16)
   4b61c:	a805883a 	mov	r2,r21
   4b620:	1c87c83a 	sub	r3,r3,r18
   4b624:	24a5883a 	add	r18,r4,r18
   4b628:	80c00115 	stw	r3,4(r16)
   4b62c:	84800015 	stw	r18,0(r16)
   4b630:	dfc00b17 	ldw	ra,44(sp)
   4b634:	df000a17 	ldw	fp,40(sp)
   4b638:	ddc00917 	ldw	r23,36(sp)
   4b63c:	dd800817 	ldw	r22,32(sp)
   4b640:	dd400717 	ldw	r21,28(sp)
   4b644:	dd000617 	ldw	r20,24(sp)
   4b648:	dcc00517 	ldw	r19,20(sp)
   4b64c:	dc800417 	ldw	r18,16(sp)
   4b650:	dc400317 	ldw	r17,12(sp)
   4b654:	dc000217 	ldw	r16,8(sp)
   4b658:	dec00c04 	addi	sp,sp,48
   4b65c:	f800283a 	ret
   4b660:	0005883a 	mov	r2,zero
   4b664:	003ff206 	br	4b630 <__alt_data_end+0xfffcce30>
   4b668:	b007883a 	mov	r3,r22
   4b66c:	2580012e 	bgeu	r4,r22,4b674 <_fread_r+0x138>
   4b670:	2007883a 	mov	r3,r4
   4b674:	81400017 	ldw	r5,0(r16)
   4b678:	180d883a 	mov	r6,r3
   4b67c:	9809883a 	mov	r4,r19
   4b680:	d8c00115 	stw	r3,4(sp)
   4b684:	00456300 	call	45630 <memcpy>
   4b688:	d8c00117 	ldw	r3,4(sp)
   4b68c:	84400017 	ldw	r17,0(r16)
   4b690:	80800117 	ldw	r2,4(r16)
   4b694:	81400c17 	ldw	r5,48(r16)
   4b698:	88e3883a 	add	r17,r17,r3
   4b69c:	10c5c83a 	sub	r2,r2,r3
   4b6a0:	84400015 	stw	r17,0(r16)
   4b6a4:	80800115 	stw	r2,4(r16)
   4b6a8:	b0e5c83a 	sub	r18,r22,r3
   4b6ac:	28002b26 	beq	r5,zero,4b75c <_fread_r+0x220>
   4b6b0:	90002b26 	beq	r18,zero,4b760 <_fread_r+0x224>
   4b6b4:	80801004 	addi	r2,r16,64
   4b6b8:	28800526 	beq	r5,r2,4b6d0 <_fread_r+0x194>
   4b6bc:	a009883a 	mov	r4,r20
   4b6c0:	d8c00115 	stw	r3,4(sp)
   4b6c4:	004b8c00 	call	4b8c0 <_free_r>
   4b6c8:	d8c00117 	ldw	r3,4(sp)
   4b6cc:	84400017 	ldw	r17,0(r16)
   4b6d0:	80000c15 	stw	zero,48(r16)
   4b6d4:	80800517 	ldw	r2,20(r16)
   4b6d8:	87000417 	ldw	fp,16(r16)
   4b6dc:	98e7883a 	add	r19,r19,r3
   4b6e0:	d8800015 	stw	r2,0(sp)
   4b6e4:	00000106 	br	4b6ec <_fread_r+0x1b0>
   4b6e8:	90001d26 	beq	r18,zero,4b760 <_fread_r+0x224>
   4b6ec:	84c00415 	stw	r19,16(r16)
   4b6f0:	84800515 	stw	r18,20(r16)
   4b6f4:	84c00015 	stw	r19,0(r16)
   4b6f8:	a009883a 	mov	r4,r20
   4b6fc:	800b883a 	mov	r5,r16
   4b700:	004e7f00 	call	4e7f0 <__srefill_r>
   4b704:	d9000017 	ldw	r4,0(sp)
   4b708:	80c00117 	ldw	r3,4(r16)
   4b70c:	87000415 	stw	fp,16(r16)
   4b710:	81000515 	stw	r4,20(r16)
   4b714:	84400015 	stw	r17,0(r16)
   4b718:	80000115 	stw	zero,4(r16)
   4b71c:	90e5c83a 	sub	r18,r18,r3
   4b720:	98e7883a 	add	r19,r19,r3
   4b724:	103ff026 	beq	r2,zero,4b6e8 <__alt_data_end+0xfffccee8>
   4b728:	b80b883a 	mov	r5,r23
   4b72c:	b489c83a 	sub	r4,r22,r18
   4b730:	00455740 	call	45574 <__udivsi3>
   4b734:	003fbe06 	br	4b630 <__alt_data_end+0xfffcce30>
   4b738:	80000115 	stw	zero,4(r16)
   4b73c:	0009883a 	mov	r4,zero
   4b740:	0023883a 	mov	r17,zero
   4b744:	003f9e06 	br	4b5c0 <__alt_data_end+0xfffccdc0>
   4b748:	004b4ec0 	call	4b4ec <__sinit>
   4b74c:	8080030b 	ldhu	r2,12(r16)
   4b750:	10c8000c 	andi	r3,r2,8192
   4b754:	183f971e 	bne	r3,zero,4b5b4 <__alt_data_end+0xfffccdb4>
   4b758:	003f9006 	br	4b59c <__alt_data_end+0xfffccd9c>
   4b75c:	903fdd1e 	bne	r18,zero,4b6d4 <__alt_data_end+0xfffcced4>
   4b760:	a805883a 	mov	r2,r21
   4b764:	003fb206 	br	4b630 <__alt_data_end+0xfffcce30>

0004b768 <fread>:
   4b768:	defffe04 	addi	sp,sp,-8
   4b76c:	008001b4 	movhi	r2,6
   4b770:	d9c00015 	stw	r7,0(sp)
   4b774:	10b55004 	addi	r2,r2,-10944
   4b778:	300f883a 	mov	r7,r6
   4b77c:	280d883a 	mov	r6,r5
   4b780:	200b883a 	mov	r5,r4
   4b784:	11000017 	ldw	r4,0(r2)
   4b788:	dfc00115 	stw	ra,4(sp)
   4b78c:	004b53c0 	call	4b53c <_fread_r>
   4b790:	dfc00117 	ldw	ra,4(sp)
   4b794:	dec00204 	addi	sp,sp,8
   4b798:	f800283a 	ret

0004b79c <_malloc_trim_r>:
   4b79c:	defffb04 	addi	sp,sp,-20
   4b7a0:	dcc00315 	stw	r19,12(sp)
   4b7a4:	04c001b4 	movhi	r19,6
   4b7a8:	dc800215 	stw	r18,8(sp)
   4b7ac:	dc400115 	stw	r17,4(sp)
   4b7b0:	dc000015 	stw	r16,0(sp)
   4b7b4:	dfc00415 	stw	ra,16(sp)
   4b7b8:	2821883a 	mov	r16,r5
   4b7bc:	9cefca04 	addi	r19,r19,-16600
   4b7c0:	2025883a 	mov	r18,r4
   4b7c4:	00588bc0 	call	588bc <__malloc_lock>
   4b7c8:	98800217 	ldw	r2,8(r19)
   4b7cc:	14400117 	ldw	r17,4(r2)
   4b7d0:	00bfff04 	movi	r2,-4
   4b7d4:	88a2703a 	and	r17,r17,r2
   4b7d8:	8c21c83a 	sub	r16,r17,r16
   4b7dc:	8403fbc4 	addi	r16,r16,4079
   4b7e0:	8020d33a 	srli	r16,r16,12
   4b7e4:	0083ffc4 	movi	r2,4095
   4b7e8:	843fffc4 	addi	r16,r16,-1
   4b7ec:	8020933a 	slli	r16,r16,12
   4b7f0:	1400060e 	bge	r2,r16,4b80c <_malloc_trim_r+0x70>
   4b7f4:	000b883a 	mov	r5,zero
   4b7f8:	9009883a 	mov	r4,r18
   4b7fc:	004ea380 	call	4ea38 <_sbrk_r>
   4b800:	98c00217 	ldw	r3,8(r19)
   4b804:	1c47883a 	add	r3,r3,r17
   4b808:	10c00a26 	beq	r2,r3,4b834 <_malloc_trim_r+0x98>
   4b80c:	9009883a 	mov	r4,r18
   4b810:	00588e00 	call	588e0 <__malloc_unlock>
   4b814:	0005883a 	mov	r2,zero
   4b818:	dfc00417 	ldw	ra,16(sp)
   4b81c:	dcc00317 	ldw	r19,12(sp)
   4b820:	dc800217 	ldw	r18,8(sp)
   4b824:	dc400117 	ldw	r17,4(sp)
   4b828:	dc000017 	ldw	r16,0(sp)
   4b82c:	dec00504 	addi	sp,sp,20
   4b830:	f800283a 	ret
   4b834:	040bc83a 	sub	r5,zero,r16
   4b838:	9009883a 	mov	r4,r18
   4b83c:	004ea380 	call	4ea38 <_sbrk_r>
   4b840:	00ffffc4 	movi	r3,-1
   4b844:	10c00d26 	beq	r2,r3,4b87c <_malloc_trim_r+0xe0>
   4b848:	00c001b4 	movhi	r3,6
   4b84c:	18fcba04 	addi	r3,r3,-3352
   4b850:	18800017 	ldw	r2,0(r3)
   4b854:	99000217 	ldw	r4,8(r19)
   4b858:	8c23c83a 	sub	r17,r17,r16
   4b85c:	8c400054 	ori	r17,r17,1
   4b860:	1421c83a 	sub	r16,r2,r16
   4b864:	24400115 	stw	r17,4(r4)
   4b868:	9009883a 	mov	r4,r18
   4b86c:	1c000015 	stw	r16,0(r3)
   4b870:	00588e00 	call	588e0 <__malloc_unlock>
   4b874:	00800044 	movi	r2,1
   4b878:	003fe706 	br	4b818 <__alt_data_end+0xfffcd018>
   4b87c:	000b883a 	mov	r5,zero
   4b880:	9009883a 	mov	r4,r18
   4b884:	004ea380 	call	4ea38 <_sbrk_r>
   4b888:	99000217 	ldw	r4,8(r19)
   4b88c:	014003c4 	movi	r5,15
   4b890:	1107c83a 	sub	r3,r2,r4
   4b894:	28ffdd0e 	bge	r5,r3,4b80c <__alt_data_end+0xfffcd00c>
   4b898:	014001b4 	movhi	r5,6
   4b89c:	29755204 	addi	r5,r5,-10936
   4b8a0:	29400017 	ldw	r5,0(r5)
   4b8a4:	18c00054 	ori	r3,r3,1
   4b8a8:	20c00115 	stw	r3,4(r4)
   4b8ac:	00c001b4 	movhi	r3,6
   4b8b0:	1145c83a 	sub	r2,r2,r5
   4b8b4:	18fcba04 	addi	r3,r3,-3352
   4b8b8:	18800015 	stw	r2,0(r3)
   4b8bc:	003fd306 	br	4b80c <__alt_data_end+0xfffcd00c>

0004b8c0 <_free_r>:
   4b8c0:	28004126 	beq	r5,zero,4b9c8 <_free_r+0x108>
   4b8c4:	defffd04 	addi	sp,sp,-12
   4b8c8:	dc400115 	stw	r17,4(sp)
   4b8cc:	dc000015 	stw	r16,0(sp)
   4b8d0:	2023883a 	mov	r17,r4
   4b8d4:	2821883a 	mov	r16,r5
   4b8d8:	dfc00215 	stw	ra,8(sp)
   4b8dc:	00588bc0 	call	588bc <__malloc_lock>
   4b8e0:	81ffff17 	ldw	r7,-4(r16)
   4b8e4:	00bfff84 	movi	r2,-2
   4b8e8:	010001b4 	movhi	r4,6
   4b8ec:	81bffe04 	addi	r6,r16,-8
   4b8f0:	3884703a 	and	r2,r7,r2
   4b8f4:	212fca04 	addi	r4,r4,-16600
   4b8f8:	308b883a 	add	r5,r6,r2
   4b8fc:	2a400117 	ldw	r9,4(r5)
   4b900:	22000217 	ldw	r8,8(r4)
   4b904:	00ffff04 	movi	r3,-4
   4b908:	48c6703a 	and	r3,r9,r3
   4b90c:	2a005726 	beq	r5,r8,4ba6c <_free_r+0x1ac>
   4b910:	28c00115 	stw	r3,4(r5)
   4b914:	39c0004c 	andi	r7,r7,1
   4b918:	3800091e 	bne	r7,zero,4b940 <_free_r+0x80>
   4b91c:	823ffe17 	ldw	r8,-8(r16)
   4b920:	22400204 	addi	r9,r4,8
   4b924:	320dc83a 	sub	r6,r6,r8
   4b928:	31c00217 	ldw	r7,8(r6)
   4b92c:	1205883a 	add	r2,r2,r8
   4b930:	3a406526 	beq	r7,r9,4bac8 <_free_r+0x208>
   4b934:	32000317 	ldw	r8,12(r6)
   4b938:	3a000315 	stw	r8,12(r7)
   4b93c:	41c00215 	stw	r7,8(r8)
   4b940:	28cf883a 	add	r7,r5,r3
   4b944:	39c00117 	ldw	r7,4(r7)
   4b948:	39c0004c 	andi	r7,r7,1
   4b94c:	38003a26 	beq	r7,zero,4ba38 <_free_r+0x178>
   4b950:	10c00054 	ori	r3,r2,1
   4b954:	30c00115 	stw	r3,4(r6)
   4b958:	3087883a 	add	r3,r6,r2
   4b95c:	18800015 	stw	r2,0(r3)
   4b960:	00c07fc4 	movi	r3,511
   4b964:	18801936 	bltu	r3,r2,4b9cc <_free_r+0x10c>
   4b968:	1004d0fa 	srli	r2,r2,3
   4b96c:	01c00044 	movi	r7,1
   4b970:	21400117 	ldw	r5,4(r4)
   4b974:	10c00044 	addi	r3,r2,1
   4b978:	18c7883a 	add	r3,r3,r3
   4b97c:	1005d0ba 	srai	r2,r2,2
   4b980:	18c7883a 	add	r3,r3,r3
   4b984:	18c7883a 	add	r3,r3,r3
   4b988:	1907883a 	add	r3,r3,r4
   4b98c:	3884983a 	sll	r2,r7,r2
   4b990:	19c00017 	ldw	r7,0(r3)
   4b994:	1a3ffe04 	addi	r8,r3,-8
   4b998:	1144b03a 	or	r2,r2,r5
   4b99c:	32000315 	stw	r8,12(r6)
   4b9a0:	31c00215 	stw	r7,8(r6)
   4b9a4:	20800115 	stw	r2,4(r4)
   4b9a8:	19800015 	stw	r6,0(r3)
   4b9ac:	39800315 	stw	r6,12(r7)
   4b9b0:	8809883a 	mov	r4,r17
   4b9b4:	dfc00217 	ldw	ra,8(sp)
   4b9b8:	dc400117 	ldw	r17,4(sp)
   4b9bc:	dc000017 	ldw	r16,0(sp)
   4b9c0:	dec00304 	addi	sp,sp,12
   4b9c4:	00588e01 	jmpi	588e0 <__malloc_unlock>
   4b9c8:	f800283a 	ret
   4b9cc:	100ad27a 	srli	r5,r2,9
   4b9d0:	00c00104 	movi	r3,4
   4b9d4:	19404a36 	bltu	r3,r5,4bb00 <_free_r+0x240>
   4b9d8:	100ad1ba 	srli	r5,r2,6
   4b9dc:	28c00e44 	addi	r3,r5,57
   4b9e0:	18c7883a 	add	r3,r3,r3
   4b9e4:	29400e04 	addi	r5,r5,56
   4b9e8:	18c7883a 	add	r3,r3,r3
   4b9ec:	18c7883a 	add	r3,r3,r3
   4b9f0:	1909883a 	add	r4,r3,r4
   4b9f4:	20c00017 	ldw	r3,0(r4)
   4b9f8:	01c001b4 	movhi	r7,6
   4b9fc:	213ffe04 	addi	r4,r4,-8
   4ba00:	39efca04 	addi	r7,r7,-16600
   4ba04:	20c04426 	beq	r4,r3,4bb18 <_free_r+0x258>
   4ba08:	01ffff04 	movi	r7,-4
   4ba0c:	19400117 	ldw	r5,4(r3)
   4ba10:	29ca703a 	and	r5,r5,r7
   4ba14:	1140022e 	bgeu	r2,r5,4ba20 <_free_r+0x160>
   4ba18:	18c00217 	ldw	r3,8(r3)
   4ba1c:	20fffb1e 	bne	r4,r3,4ba0c <__alt_data_end+0xfffcd20c>
   4ba20:	19000317 	ldw	r4,12(r3)
   4ba24:	31000315 	stw	r4,12(r6)
   4ba28:	30c00215 	stw	r3,8(r6)
   4ba2c:	21800215 	stw	r6,8(r4)
   4ba30:	19800315 	stw	r6,12(r3)
   4ba34:	003fde06 	br	4b9b0 <__alt_data_end+0xfffcd1b0>
   4ba38:	29c00217 	ldw	r7,8(r5)
   4ba3c:	10c5883a 	add	r2,r2,r3
   4ba40:	00c001b4 	movhi	r3,6
   4ba44:	18efcc04 	addi	r3,r3,-16592
   4ba48:	38c03b26 	beq	r7,r3,4bb38 <_free_r+0x278>
   4ba4c:	2a000317 	ldw	r8,12(r5)
   4ba50:	11400054 	ori	r5,r2,1
   4ba54:	3087883a 	add	r3,r6,r2
   4ba58:	3a000315 	stw	r8,12(r7)
   4ba5c:	41c00215 	stw	r7,8(r8)
   4ba60:	31400115 	stw	r5,4(r6)
   4ba64:	18800015 	stw	r2,0(r3)
   4ba68:	003fbd06 	br	4b960 <__alt_data_end+0xfffcd160>
   4ba6c:	39c0004c 	andi	r7,r7,1
   4ba70:	10c5883a 	add	r2,r2,r3
   4ba74:	3800071e 	bne	r7,zero,4ba94 <_free_r+0x1d4>
   4ba78:	81fffe17 	ldw	r7,-8(r16)
   4ba7c:	31cdc83a 	sub	r6,r6,r7
   4ba80:	30c00317 	ldw	r3,12(r6)
   4ba84:	31400217 	ldw	r5,8(r6)
   4ba88:	11c5883a 	add	r2,r2,r7
   4ba8c:	28c00315 	stw	r3,12(r5)
   4ba90:	19400215 	stw	r5,8(r3)
   4ba94:	10c00054 	ori	r3,r2,1
   4ba98:	30c00115 	stw	r3,4(r6)
   4ba9c:	00c001b4 	movhi	r3,6
   4baa0:	18f55304 	addi	r3,r3,-10932
   4baa4:	18c00017 	ldw	r3,0(r3)
   4baa8:	21800215 	stw	r6,8(r4)
   4baac:	10ffc036 	bltu	r2,r3,4b9b0 <__alt_data_end+0xfffcd1b0>
   4bab0:	008001b4 	movhi	r2,6
   4bab4:	10bcb204 	addi	r2,r2,-3384
   4bab8:	11400017 	ldw	r5,0(r2)
   4babc:	8809883a 	mov	r4,r17
   4bac0:	004b79c0 	call	4b79c <_malloc_trim_r>
   4bac4:	003fba06 	br	4b9b0 <__alt_data_end+0xfffcd1b0>
   4bac8:	28c9883a 	add	r4,r5,r3
   4bacc:	21000117 	ldw	r4,4(r4)
   4bad0:	2100004c 	andi	r4,r4,1
   4bad4:	2000391e 	bne	r4,zero,4bbbc <_free_r+0x2fc>
   4bad8:	29c00217 	ldw	r7,8(r5)
   4badc:	29000317 	ldw	r4,12(r5)
   4bae0:	1885883a 	add	r2,r3,r2
   4bae4:	10c00054 	ori	r3,r2,1
   4bae8:	39000315 	stw	r4,12(r7)
   4baec:	21c00215 	stw	r7,8(r4)
   4baf0:	30c00115 	stw	r3,4(r6)
   4baf4:	308d883a 	add	r6,r6,r2
   4baf8:	30800015 	stw	r2,0(r6)
   4bafc:	003fac06 	br	4b9b0 <__alt_data_end+0xfffcd1b0>
   4bb00:	00c00504 	movi	r3,20
   4bb04:	19401536 	bltu	r3,r5,4bb5c <_free_r+0x29c>
   4bb08:	28c01704 	addi	r3,r5,92
   4bb0c:	18c7883a 	add	r3,r3,r3
   4bb10:	294016c4 	addi	r5,r5,91
   4bb14:	003fb406 	br	4b9e8 <__alt_data_end+0xfffcd1e8>
   4bb18:	280bd0ba 	srai	r5,r5,2
   4bb1c:	00c00044 	movi	r3,1
   4bb20:	38800117 	ldw	r2,4(r7)
   4bb24:	194a983a 	sll	r5,r3,r5
   4bb28:	2007883a 	mov	r3,r4
   4bb2c:	2884b03a 	or	r2,r5,r2
   4bb30:	38800115 	stw	r2,4(r7)
   4bb34:	003fbb06 	br	4ba24 <__alt_data_end+0xfffcd224>
   4bb38:	21800515 	stw	r6,20(r4)
   4bb3c:	21800415 	stw	r6,16(r4)
   4bb40:	10c00054 	ori	r3,r2,1
   4bb44:	31c00315 	stw	r7,12(r6)
   4bb48:	31c00215 	stw	r7,8(r6)
   4bb4c:	30c00115 	stw	r3,4(r6)
   4bb50:	308d883a 	add	r6,r6,r2
   4bb54:	30800015 	stw	r2,0(r6)
   4bb58:	003f9506 	br	4b9b0 <__alt_data_end+0xfffcd1b0>
   4bb5c:	00c01504 	movi	r3,84
   4bb60:	19400536 	bltu	r3,r5,4bb78 <_free_r+0x2b8>
   4bb64:	100ad33a 	srli	r5,r2,12
   4bb68:	28c01bc4 	addi	r3,r5,111
   4bb6c:	18c7883a 	add	r3,r3,r3
   4bb70:	29401b84 	addi	r5,r5,110
   4bb74:	003f9c06 	br	4b9e8 <__alt_data_end+0xfffcd1e8>
   4bb78:	00c05504 	movi	r3,340
   4bb7c:	19400536 	bltu	r3,r5,4bb94 <_free_r+0x2d4>
   4bb80:	100ad3fa 	srli	r5,r2,15
   4bb84:	28c01e04 	addi	r3,r5,120
   4bb88:	18c7883a 	add	r3,r3,r3
   4bb8c:	29401dc4 	addi	r5,r5,119
   4bb90:	003f9506 	br	4b9e8 <__alt_data_end+0xfffcd1e8>
   4bb94:	00c15504 	movi	r3,1364
   4bb98:	19400536 	bltu	r3,r5,4bbb0 <_free_r+0x2f0>
   4bb9c:	100ad4ba 	srli	r5,r2,18
   4bba0:	28c01f44 	addi	r3,r5,125
   4bba4:	18c7883a 	add	r3,r3,r3
   4bba8:	29401f04 	addi	r5,r5,124
   4bbac:	003f8e06 	br	4b9e8 <__alt_data_end+0xfffcd1e8>
   4bbb0:	00c03f84 	movi	r3,254
   4bbb4:	01401f84 	movi	r5,126
   4bbb8:	003f8b06 	br	4b9e8 <__alt_data_end+0xfffcd1e8>
   4bbbc:	10c00054 	ori	r3,r2,1
   4bbc0:	30c00115 	stw	r3,4(r6)
   4bbc4:	308d883a 	add	r6,r6,r2
   4bbc8:	30800015 	stw	r2,0(r6)
   4bbcc:	003f7806 	br	4b9b0 <__alt_data_end+0xfffcd1b0>

0004bbd0 <__sfvwrite_r>:
   4bbd0:	30800217 	ldw	r2,8(r6)
   4bbd4:	10006726 	beq	r2,zero,4bd74 <__sfvwrite_r+0x1a4>
   4bbd8:	28c0030b 	ldhu	r3,12(r5)
   4bbdc:	defff404 	addi	sp,sp,-48
   4bbe0:	dd400715 	stw	r21,28(sp)
   4bbe4:	dd000615 	stw	r20,24(sp)
   4bbe8:	dc000215 	stw	r16,8(sp)
   4bbec:	dfc00b15 	stw	ra,44(sp)
   4bbf0:	df000a15 	stw	fp,40(sp)
   4bbf4:	ddc00915 	stw	r23,36(sp)
   4bbf8:	dd800815 	stw	r22,32(sp)
   4bbfc:	dcc00515 	stw	r19,20(sp)
   4bc00:	dc800415 	stw	r18,16(sp)
   4bc04:	dc400315 	stw	r17,12(sp)
   4bc08:	1880020c 	andi	r2,r3,8
   4bc0c:	2821883a 	mov	r16,r5
   4bc10:	202b883a 	mov	r21,r4
   4bc14:	3029883a 	mov	r20,r6
   4bc18:	10002726 	beq	r2,zero,4bcb8 <__sfvwrite_r+0xe8>
   4bc1c:	28800417 	ldw	r2,16(r5)
   4bc20:	10002526 	beq	r2,zero,4bcb8 <__sfvwrite_r+0xe8>
   4bc24:	1880008c 	andi	r2,r3,2
   4bc28:	a4400017 	ldw	r17,0(r20)
   4bc2c:	10002a26 	beq	r2,zero,4bcd8 <__sfvwrite_r+0x108>
   4bc30:	05a00034 	movhi	r22,32768
   4bc34:	0027883a 	mov	r19,zero
   4bc38:	0025883a 	mov	r18,zero
   4bc3c:	b5bf0004 	addi	r22,r22,-1024
   4bc40:	980d883a 	mov	r6,r19
   4bc44:	a809883a 	mov	r4,r21
   4bc48:	90004626 	beq	r18,zero,4bd64 <__sfvwrite_r+0x194>
   4bc4c:	900f883a 	mov	r7,r18
   4bc50:	b480022e 	bgeu	r22,r18,4bc5c <__sfvwrite_r+0x8c>
   4bc54:	01e00034 	movhi	r7,32768
   4bc58:	39ff0004 	addi	r7,r7,-1024
   4bc5c:	80800917 	ldw	r2,36(r16)
   4bc60:	81400717 	ldw	r5,28(r16)
   4bc64:	103ee83a 	callr	r2
   4bc68:	0080570e 	bge	zero,r2,4bdc8 <__sfvwrite_r+0x1f8>
   4bc6c:	a0c00217 	ldw	r3,8(r20)
   4bc70:	98a7883a 	add	r19,r19,r2
   4bc74:	90a5c83a 	sub	r18,r18,r2
   4bc78:	1885c83a 	sub	r2,r3,r2
   4bc7c:	a0800215 	stw	r2,8(r20)
   4bc80:	103fef1e 	bne	r2,zero,4bc40 <__alt_data_end+0xfffcd440>
   4bc84:	0005883a 	mov	r2,zero
   4bc88:	dfc00b17 	ldw	ra,44(sp)
   4bc8c:	df000a17 	ldw	fp,40(sp)
   4bc90:	ddc00917 	ldw	r23,36(sp)
   4bc94:	dd800817 	ldw	r22,32(sp)
   4bc98:	dd400717 	ldw	r21,28(sp)
   4bc9c:	dd000617 	ldw	r20,24(sp)
   4bca0:	dcc00517 	ldw	r19,20(sp)
   4bca4:	dc800417 	ldw	r18,16(sp)
   4bca8:	dc400317 	ldw	r17,12(sp)
   4bcac:	dc000217 	ldw	r16,8(sp)
   4bcb0:	dec00c04 	addi	sp,sp,48
   4bcb4:	f800283a 	ret
   4bcb8:	800b883a 	mov	r5,r16
   4bcbc:	a809883a 	mov	r4,r21
   4bcc0:	00495180 	call	49518 <__swsetup_r>
   4bcc4:	1000eb1e 	bne	r2,zero,4c074 <__sfvwrite_r+0x4a4>
   4bcc8:	80c0030b 	ldhu	r3,12(r16)
   4bccc:	a4400017 	ldw	r17,0(r20)
   4bcd0:	1880008c 	andi	r2,r3,2
   4bcd4:	103fd61e 	bne	r2,zero,4bc30 <__alt_data_end+0xfffcd430>
   4bcd8:	1880004c 	andi	r2,r3,1
   4bcdc:	10003f1e 	bne	r2,zero,4bddc <__sfvwrite_r+0x20c>
   4bce0:	0039883a 	mov	fp,zero
   4bce4:	0025883a 	mov	r18,zero
   4bce8:	90001a26 	beq	r18,zero,4bd54 <__sfvwrite_r+0x184>
   4bcec:	1880800c 	andi	r2,r3,512
   4bcf0:	84c00217 	ldw	r19,8(r16)
   4bcf4:	10002126 	beq	r2,zero,4bd7c <__sfvwrite_r+0x1ac>
   4bcf8:	982f883a 	mov	r23,r19
   4bcfc:	94c09336 	bltu	r18,r19,4bf4c <__sfvwrite_r+0x37c>
   4bd00:	1881200c 	andi	r2,r3,1152
   4bd04:	10009e1e 	bne	r2,zero,4bf80 <__sfvwrite_r+0x3b0>
   4bd08:	81000017 	ldw	r4,0(r16)
   4bd0c:	b80d883a 	mov	r6,r23
   4bd10:	e00b883a 	mov	r5,fp
   4bd14:	004cff00 	call	4cff0 <memmove>
   4bd18:	80c00217 	ldw	r3,8(r16)
   4bd1c:	81000017 	ldw	r4,0(r16)
   4bd20:	9005883a 	mov	r2,r18
   4bd24:	1ce7c83a 	sub	r19,r3,r19
   4bd28:	25cf883a 	add	r7,r4,r23
   4bd2c:	84c00215 	stw	r19,8(r16)
   4bd30:	81c00015 	stw	r7,0(r16)
   4bd34:	a0c00217 	ldw	r3,8(r20)
   4bd38:	e0b9883a 	add	fp,fp,r2
   4bd3c:	90a5c83a 	sub	r18,r18,r2
   4bd40:	18a7c83a 	sub	r19,r3,r2
   4bd44:	a4c00215 	stw	r19,8(r20)
   4bd48:	983fce26 	beq	r19,zero,4bc84 <__alt_data_end+0xfffcd484>
   4bd4c:	80c0030b 	ldhu	r3,12(r16)
   4bd50:	903fe61e 	bne	r18,zero,4bcec <__alt_data_end+0xfffcd4ec>
   4bd54:	8f000017 	ldw	fp,0(r17)
   4bd58:	8c800117 	ldw	r18,4(r17)
   4bd5c:	8c400204 	addi	r17,r17,8
   4bd60:	003fe106 	br	4bce8 <__alt_data_end+0xfffcd4e8>
   4bd64:	8cc00017 	ldw	r19,0(r17)
   4bd68:	8c800117 	ldw	r18,4(r17)
   4bd6c:	8c400204 	addi	r17,r17,8
   4bd70:	003fb306 	br	4bc40 <__alt_data_end+0xfffcd440>
   4bd74:	0005883a 	mov	r2,zero
   4bd78:	f800283a 	ret
   4bd7c:	81000017 	ldw	r4,0(r16)
   4bd80:	80800417 	ldw	r2,16(r16)
   4bd84:	11005736 	bltu	r2,r4,4bee4 <__sfvwrite_r+0x314>
   4bd88:	85c00517 	ldw	r23,20(r16)
   4bd8c:	95c05536 	bltu	r18,r23,4bee4 <__sfvwrite_r+0x314>
   4bd90:	00a00034 	movhi	r2,32768
   4bd94:	10bfffc4 	addi	r2,r2,-1
   4bd98:	9009883a 	mov	r4,r18
   4bd9c:	1480012e 	bgeu	r2,r18,4bda4 <__sfvwrite_r+0x1d4>
   4bda0:	1009883a 	mov	r4,r2
   4bda4:	b80b883a 	mov	r5,r23
   4bda8:	004547c0 	call	4547c <__divsi3>
   4bdac:	15cf383a 	mul	r7,r2,r23
   4bdb0:	81400717 	ldw	r5,28(r16)
   4bdb4:	80800917 	ldw	r2,36(r16)
   4bdb8:	e00d883a 	mov	r6,fp
   4bdbc:	a809883a 	mov	r4,r21
   4bdc0:	103ee83a 	callr	r2
   4bdc4:	00bfdb16 	blt	zero,r2,4bd34 <__alt_data_end+0xfffcd534>
   4bdc8:	8080030b 	ldhu	r2,12(r16)
   4bdcc:	10801014 	ori	r2,r2,64
   4bdd0:	8080030d 	sth	r2,12(r16)
   4bdd4:	00bfffc4 	movi	r2,-1
   4bdd8:	003fab06 	br	4bc88 <__alt_data_end+0xfffcd488>
   4bddc:	0027883a 	mov	r19,zero
   4bde0:	0011883a 	mov	r8,zero
   4bde4:	0039883a 	mov	fp,zero
   4bde8:	0025883a 	mov	r18,zero
   4bdec:	90001f26 	beq	r18,zero,4be6c <__sfvwrite_r+0x29c>
   4bdf0:	40005a26 	beq	r8,zero,4bf5c <__sfvwrite_r+0x38c>
   4bdf4:	982d883a 	mov	r22,r19
   4bdf8:	94c0012e 	bgeu	r18,r19,4be00 <__sfvwrite_r+0x230>
   4bdfc:	902d883a 	mov	r22,r18
   4be00:	81000017 	ldw	r4,0(r16)
   4be04:	80800417 	ldw	r2,16(r16)
   4be08:	b02f883a 	mov	r23,r22
   4be0c:	81c00517 	ldw	r7,20(r16)
   4be10:	1100032e 	bgeu	r2,r4,4be20 <__sfvwrite_r+0x250>
   4be14:	80c00217 	ldw	r3,8(r16)
   4be18:	38c7883a 	add	r3,r7,r3
   4be1c:	1d801816 	blt	r3,r22,4be80 <__sfvwrite_r+0x2b0>
   4be20:	b1c03e16 	blt	r22,r7,4bf1c <__sfvwrite_r+0x34c>
   4be24:	80800917 	ldw	r2,36(r16)
   4be28:	81400717 	ldw	r5,28(r16)
   4be2c:	e00d883a 	mov	r6,fp
   4be30:	da000115 	stw	r8,4(sp)
   4be34:	a809883a 	mov	r4,r21
   4be38:	103ee83a 	callr	r2
   4be3c:	102f883a 	mov	r23,r2
   4be40:	da000117 	ldw	r8,4(sp)
   4be44:	00bfe00e 	bge	zero,r2,4bdc8 <__alt_data_end+0xfffcd5c8>
   4be48:	9de7c83a 	sub	r19,r19,r23
   4be4c:	98001f26 	beq	r19,zero,4becc <__sfvwrite_r+0x2fc>
   4be50:	a0800217 	ldw	r2,8(r20)
   4be54:	e5f9883a 	add	fp,fp,r23
   4be58:	95e5c83a 	sub	r18,r18,r23
   4be5c:	15efc83a 	sub	r23,r2,r23
   4be60:	a5c00215 	stw	r23,8(r20)
   4be64:	b83f8726 	beq	r23,zero,4bc84 <__alt_data_end+0xfffcd484>
   4be68:	903fe11e 	bne	r18,zero,4bdf0 <__alt_data_end+0xfffcd5f0>
   4be6c:	8f000017 	ldw	fp,0(r17)
   4be70:	8c800117 	ldw	r18,4(r17)
   4be74:	0011883a 	mov	r8,zero
   4be78:	8c400204 	addi	r17,r17,8
   4be7c:	003fdb06 	br	4bdec <__alt_data_end+0xfffcd5ec>
   4be80:	180d883a 	mov	r6,r3
   4be84:	e00b883a 	mov	r5,fp
   4be88:	da000115 	stw	r8,4(sp)
   4be8c:	d8c00015 	stw	r3,0(sp)
   4be90:	004cff00 	call	4cff0 <memmove>
   4be94:	d8c00017 	ldw	r3,0(sp)
   4be98:	80800017 	ldw	r2,0(r16)
   4be9c:	800b883a 	mov	r5,r16
   4bea0:	a809883a 	mov	r4,r21
   4bea4:	10c5883a 	add	r2,r2,r3
   4bea8:	80800015 	stw	r2,0(r16)
   4beac:	d8c00015 	stw	r3,0(sp)
   4beb0:	004b1100 	call	4b110 <_fflush_r>
   4beb4:	d8c00017 	ldw	r3,0(sp)
   4beb8:	da000117 	ldw	r8,4(sp)
   4bebc:	103fc21e 	bne	r2,zero,4bdc8 <__alt_data_end+0xfffcd5c8>
   4bec0:	182f883a 	mov	r23,r3
   4bec4:	9de7c83a 	sub	r19,r19,r23
   4bec8:	983fe11e 	bne	r19,zero,4be50 <__alt_data_end+0xfffcd650>
   4becc:	800b883a 	mov	r5,r16
   4bed0:	a809883a 	mov	r4,r21
   4bed4:	004b1100 	call	4b110 <_fflush_r>
   4bed8:	103fbb1e 	bne	r2,zero,4bdc8 <__alt_data_end+0xfffcd5c8>
   4bedc:	0011883a 	mov	r8,zero
   4bee0:	003fdb06 	br	4be50 <__alt_data_end+0xfffcd650>
   4bee4:	94c0012e 	bgeu	r18,r19,4beec <__sfvwrite_r+0x31c>
   4bee8:	9027883a 	mov	r19,r18
   4beec:	980d883a 	mov	r6,r19
   4bef0:	e00b883a 	mov	r5,fp
   4bef4:	004cff00 	call	4cff0 <memmove>
   4bef8:	80800217 	ldw	r2,8(r16)
   4befc:	80c00017 	ldw	r3,0(r16)
   4bf00:	14c5c83a 	sub	r2,r2,r19
   4bf04:	1cc7883a 	add	r3,r3,r19
   4bf08:	80800215 	stw	r2,8(r16)
   4bf0c:	80c00015 	stw	r3,0(r16)
   4bf10:	10004326 	beq	r2,zero,4c020 <__sfvwrite_r+0x450>
   4bf14:	9805883a 	mov	r2,r19
   4bf18:	003f8606 	br	4bd34 <__alt_data_end+0xfffcd534>
   4bf1c:	b00d883a 	mov	r6,r22
   4bf20:	e00b883a 	mov	r5,fp
   4bf24:	da000115 	stw	r8,4(sp)
   4bf28:	004cff00 	call	4cff0 <memmove>
   4bf2c:	80800217 	ldw	r2,8(r16)
   4bf30:	80c00017 	ldw	r3,0(r16)
   4bf34:	da000117 	ldw	r8,4(sp)
   4bf38:	1585c83a 	sub	r2,r2,r22
   4bf3c:	1dad883a 	add	r22,r3,r22
   4bf40:	80800215 	stw	r2,8(r16)
   4bf44:	85800015 	stw	r22,0(r16)
   4bf48:	003fbf06 	br	4be48 <__alt_data_end+0xfffcd648>
   4bf4c:	81000017 	ldw	r4,0(r16)
   4bf50:	9027883a 	mov	r19,r18
   4bf54:	902f883a 	mov	r23,r18
   4bf58:	003f6c06 	br	4bd0c <__alt_data_end+0xfffcd50c>
   4bf5c:	900d883a 	mov	r6,r18
   4bf60:	01400284 	movi	r5,10
   4bf64:	e009883a 	mov	r4,fp
   4bf68:	004cf0c0 	call	4cf0c <memchr>
   4bf6c:	10003e26 	beq	r2,zero,4c068 <__sfvwrite_r+0x498>
   4bf70:	10800044 	addi	r2,r2,1
   4bf74:	1727c83a 	sub	r19,r2,fp
   4bf78:	02000044 	movi	r8,1
   4bf7c:	003f9d06 	br	4bdf4 <__alt_data_end+0xfffcd5f4>
   4bf80:	80800517 	ldw	r2,20(r16)
   4bf84:	81400417 	ldw	r5,16(r16)
   4bf88:	81c00017 	ldw	r7,0(r16)
   4bf8c:	10a7883a 	add	r19,r2,r2
   4bf90:	9885883a 	add	r2,r19,r2
   4bf94:	1026d7fa 	srli	r19,r2,31
   4bf98:	396dc83a 	sub	r22,r7,r5
   4bf9c:	b1000044 	addi	r4,r22,1
   4bfa0:	9885883a 	add	r2,r19,r2
   4bfa4:	1027d07a 	srai	r19,r2,1
   4bfa8:	2485883a 	add	r2,r4,r18
   4bfac:	980d883a 	mov	r6,r19
   4bfb0:	9880022e 	bgeu	r19,r2,4bfbc <__sfvwrite_r+0x3ec>
   4bfb4:	1027883a 	mov	r19,r2
   4bfb8:	100d883a 	mov	r6,r2
   4bfbc:	18c1000c 	andi	r3,r3,1024
   4bfc0:	18001c26 	beq	r3,zero,4c034 <__sfvwrite_r+0x464>
   4bfc4:	300b883a 	mov	r5,r6
   4bfc8:	a809883a 	mov	r4,r21
   4bfcc:	004c4dc0 	call	4c4dc <_malloc_r>
   4bfd0:	102f883a 	mov	r23,r2
   4bfd4:	10002926 	beq	r2,zero,4c07c <__sfvwrite_r+0x4ac>
   4bfd8:	81400417 	ldw	r5,16(r16)
   4bfdc:	b00d883a 	mov	r6,r22
   4bfe0:	1009883a 	mov	r4,r2
   4bfe4:	00456300 	call	45630 <memcpy>
   4bfe8:	8080030b 	ldhu	r2,12(r16)
   4bfec:	00fedfc4 	movi	r3,-1153
   4bff0:	10c4703a 	and	r2,r2,r3
   4bff4:	10802014 	ori	r2,r2,128
   4bff8:	8080030d 	sth	r2,12(r16)
   4bffc:	bd89883a 	add	r4,r23,r22
   4c000:	9d8fc83a 	sub	r7,r19,r22
   4c004:	85c00415 	stw	r23,16(r16)
   4c008:	84c00515 	stw	r19,20(r16)
   4c00c:	81000015 	stw	r4,0(r16)
   4c010:	9027883a 	mov	r19,r18
   4c014:	81c00215 	stw	r7,8(r16)
   4c018:	902f883a 	mov	r23,r18
   4c01c:	003f3b06 	br	4bd0c <__alt_data_end+0xfffcd50c>
   4c020:	800b883a 	mov	r5,r16
   4c024:	a809883a 	mov	r4,r21
   4c028:	004b1100 	call	4b110 <_fflush_r>
   4c02c:	103fb926 	beq	r2,zero,4bf14 <__alt_data_end+0xfffcd714>
   4c030:	003f6506 	br	4bdc8 <__alt_data_end+0xfffcd5c8>
   4c034:	a809883a 	mov	r4,r21
   4c038:	004e2700 	call	4e270 <_realloc_r>
   4c03c:	102f883a 	mov	r23,r2
   4c040:	103fee1e 	bne	r2,zero,4bffc <__alt_data_end+0xfffcd7fc>
   4c044:	81400417 	ldw	r5,16(r16)
   4c048:	a809883a 	mov	r4,r21
   4c04c:	004b8c00 	call	4b8c0 <_free_r>
   4c050:	8080030b 	ldhu	r2,12(r16)
   4c054:	00ffdfc4 	movi	r3,-129
   4c058:	1884703a 	and	r2,r3,r2
   4c05c:	00c00304 	movi	r3,12
   4c060:	a8c00015 	stw	r3,0(r21)
   4c064:	003f5906 	br	4bdcc <__alt_data_end+0xfffcd5cc>
   4c068:	94c00044 	addi	r19,r18,1
   4c06c:	02000044 	movi	r8,1
   4c070:	003f6006 	br	4bdf4 <__alt_data_end+0xfffcd5f4>
   4c074:	00bfffc4 	movi	r2,-1
   4c078:	003f0306 	br	4bc88 <__alt_data_end+0xfffcd488>
   4c07c:	00800304 	movi	r2,12
   4c080:	a8800015 	stw	r2,0(r21)
   4c084:	8080030b 	ldhu	r2,12(r16)
   4c088:	003f5006 	br	4bdcc <__alt_data_end+0xfffcd5cc>

0004c08c <_fwalk>:
   4c08c:	defff704 	addi	sp,sp,-36
   4c090:	dd000415 	stw	r20,16(sp)
   4c094:	dfc00815 	stw	ra,32(sp)
   4c098:	ddc00715 	stw	r23,28(sp)
   4c09c:	dd800615 	stw	r22,24(sp)
   4c0a0:	dd400515 	stw	r21,20(sp)
   4c0a4:	dcc00315 	stw	r19,12(sp)
   4c0a8:	dc800215 	stw	r18,8(sp)
   4c0ac:	dc400115 	stw	r17,4(sp)
   4c0b0:	dc000015 	stw	r16,0(sp)
   4c0b4:	2500b804 	addi	r20,r4,736
   4c0b8:	a0002326 	beq	r20,zero,4c148 <_fwalk+0xbc>
   4c0bc:	282b883a 	mov	r21,r5
   4c0c0:	002f883a 	mov	r23,zero
   4c0c4:	05800044 	movi	r22,1
   4c0c8:	04ffffc4 	movi	r19,-1
   4c0cc:	a4400117 	ldw	r17,4(r20)
   4c0d0:	a4800217 	ldw	r18,8(r20)
   4c0d4:	8c7fffc4 	addi	r17,r17,-1
   4c0d8:	88000d16 	blt	r17,zero,4c110 <_fwalk+0x84>
   4c0dc:	94000304 	addi	r16,r18,12
   4c0e0:	94800384 	addi	r18,r18,14
   4c0e4:	8080000b 	ldhu	r2,0(r16)
   4c0e8:	8c7fffc4 	addi	r17,r17,-1
   4c0ec:	813ffd04 	addi	r4,r16,-12
   4c0f0:	b080042e 	bgeu	r22,r2,4c104 <_fwalk+0x78>
   4c0f4:	9080000f 	ldh	r2,0(r18)
   4c0f8:	14c00226 	beq	r2,r19,4c104 <_fwalk+0x78>
   4c0fc:	a83ee83a 	callr	r21
   4c100:	b8aeb03a 	or	r23,r23,r2
   4c104:	84001a04 	addi	r16,r16,104
   4c108:	94801a04 	addi	r18,r18,104
   4c10c:	8cfff51e 	bne	r17,r19,4c0e4 <__alt_data_end+0xfffcd8e4>
   4c110:	a5000017 	ldw	r20,0(r20)
   4c114:	a03fed1e 	bne	r20,zero,4c0cc <__alt_data_end+0xfffcd8cc>
   4c118:	b805883a 	mov	r2,r23
   4c11c:	dfc00817 	ldw	ra,32(sp)
   4c120:	ddc00717 	ldw	r23,28(sp)
   4c124:	dd800617 	ldw	r22,24(sp)
   4c128:	dd400517 	ldw	r21,20(sp)
   4c12c:	dd000417 	ldw	r20,16(sp)
   4c130:	dcc00317 	ldw	r19,12(sp)
   4c134:	dc800217 	ldw	r18,8(sp)
   4c138:	dc400117 	ldw	r17,4(sp)
   4c13c:	dc000017 	ldw	r16,0(sp)
   4c140:	dec00904 	addi	sp,sp,36
   4c144:	f800283a 	ret
   4c148:	002f883a 	mov	r23,zero
   4c14c:	003ff206 	br	4c118 <__alt_data_end+0xfffcd918>

0004c150 <_fwalk_reent>:
   4c150:	defff704 	addi	sp,sp,-36
   4c154:	dd000415 	stw	r20,16(sp)
   4c158:	dfc00815 	stw	ra,32(sp)
   4c15c:	ddc00715 	stw	r23,28(sp)
   4c160:	dd800615 	stw	r22,24(sp)
   4c164:	dd400515 	stw	r21,20(sp)
   4c168:	dcc00315 	stw	r19,12(sp)
   4c16c:	dc800215 	stw	r18,8(sp)
   4c170:	dc400115 	stw	r17,4(sp)
   4c174:	dc000015 	stw	r16,0(sp)
   4c178:	2500b804 	addi	r20,r4,736
   4c17c:	a0002326 	beq	r20,zero,4c20c <_fwalk_reent+0xbc>
   4c180:	282b883a 	mov	r21,r5
   4c184:	2027883a 	mov	r19,r4
   4c188:	002f883a 	mov	r23,zero
   4c18c:	05800044 	movi	r22,1
   4c190:	04bfffc4 	movi	r18,-1
   4c194:	a4400117 	ldw	r17,4(r20)
   4c198:	a4000217 	ldw	r16,8(r20)
   4c19c:	8c7fffc4 	addi	r17,r17,-1
   4c1a0:	88000c16 	blt	r17,zero,4c1d4 <_fwalk_reent+0x84>
   4c1a4:	84000304 	addi	r16,r16,12
   4c1a8:	8080000b 	ldhu	r2,0(r16)
   4c1ac:	8c7fffc4 	addi	r17,r17,-1
   4c1b0:	817ffd04 	addi	r5,r16,-12
   4c1b4:	b080052e 	bgeu	r22,r2,4c1cc <_fwalk_reent+0x7c>
   4c1b8:	8080008f 	ldh	r2,2(r16)
   4c1bc:	9809883a 	mov	r4,r19
   4c1c0:	14800226 	beq	r2,r18,4c1cc <_fwalk_reent+0x7c>
   4c1c4:	a83ee83a 	callr	r21
   4c1c8:	b8aeb03a 	or	r23,r23,r2
   4c1cc:	84001a04 	addi	r16,r16,104
   4c1d0:	8cbff51e 	bne	r17,r18,4c1a8 <__alt_data_end+0xfffcd9a8>
   4c1d4:	a5000017 	ldw	r20,0(r20)
   4c1d8:	a03fee1e 	bne	r20,zero,4c194 <__alt_data_end+0xfffcd994>
   4c1dc:	b805883a 	mov	r2,r23
   4c1e0:	dfc00817 	ldw	ra,32(sp)
   4c1e4:	ddc00717 	ldw	r23,28(sp)
   4c1e8:	dd800617 	ldw	r22,24(sp)
   4c1ec:	dd400517 	ldw	r21,20(sp)
   4c1f0:	dd000417 	ldw	r20,16(sp)
   4c1f4:	dcc00317 	ldw	r19,12(sp)
   4c1f8:	dc800217 	ldw	r18,8(sp)
   4c1fc:	dc400117 	ldw	r17,4(sp)
   4c200:	dc000017 	ldw	r16,0(sp)
   4c204:	dec00904 	addi	sp,sp,36
   4c208:	f800283a 	ret
   4c20c:	002f883a 	mov	r23,zero
   4c210:	003ff206 	br	4c1dc <__alt_data_end+0xfffcd9dc>

0004c214 <iswspace>:
   4c214:	00803fc4 	movi	r2,255
   4c218:	11000836 	bltu	r2,r4,4c23c <iswspace+0x28>
   4c21c:	008001b4 	movhi	r2,6
   4c220:	10b54e04 	addi	r2,r2,-10952
   4c224:	10800017 	ldw	r2,0(r2)
   4c228:	1109883a 	add	r4,r2,r4
   4c22c:	20800043 	ldbu	r2,1(r4)
   4c230:	1080020c 	andi	r2,r2,8
   4c234:	10803fcc 	andi	r2,r2,255
   4c238:	f800283a 	ret
   4c23c:	0005883a 	mov	r2,zero
   4c240:	f800283a 	ret

0004c244 <_setlocale_r>:
   4c244:	30001b26 	beq	r6,zero,4c2b4 <_setlocale_r+0x70>
   4c248:	014001b4 	movhi	r5,6
   4c24c:	defffe04 	addi	sp,sp,-8
   4c250:	296d4c04 	addi	r5,r5,-19152
   4c254:	3009883a 	mov	r4,r6
   4c258:	dc000015 	stw	r16,0(sp)
   4c25c:	dfc00115 	stw	ra,4(sp)
   4c260:	3021883a 	mov	r16,r6
   4c264:	004ed640 	call	4ed64 <strcmp>
   4c268:	1000061e 	bne	r2,zero,4c284 <_setlocale_r+0x40>
   4c26c:	008001b4 	movhi	r2,6
   4c270:	10ad4b04 	addi	r2,r2,-19156
   4c274:	dfc00117 	ldw	ra,4(sp)
   4c278:	dc000017 	ldw	r16,0(sp)
   4c27c:	dec00204 	addi	sp,sp,8
   4c280:	f800283a 	ret
   4c284:	014001b4 	movhi	r5,6
   4c288:	296d4b04 	addi	r5,r5,-19156
   4c28c:	8009883a 	mov	r4,r16
   4c290:	004ed640 	call	4ed64 <strcmp>
   4c294:	103ff526 	beq	r2,zero,4c26c <__alt_data_end+0xfffcda6c>
   4c298:	014001b4 	movhi	r5,6
   4c29c:	296c8b04 	addi	r5,r5,-19924
   4c2a0:	8009883a 	mov	r4,r16
   4c2a4:	004ed640 	call	4ed64 <strcmp>
   4c2a8:	103ff026 	beq	r2,zero,4c26c <__alt_data_end+0xfffcda6c>
   4c2ac:	0005883a 	mov	r2,zero
   4c2b0:	003ff006 	br	4c274 <__alt_data_end+0xfffcda74>
   4c2b4:	008001b4 	movhi	r2,6
   4c2b8:	10ad4b04 	addi	r2,r2,-19156
   4c2bc:	f800283a 	ret

0004c2c0 <__locale_charset>:
   4c2c0:	008001b4 	movhi	r2,6
   4c2c4:	10afb404 	addi	r2,r2,-16688
   4c2c8:	f800283a 	ret

0004c2cc <__locale_mb_cur_max>:
   4c2cc:	008001b4 	movhi	r2,6
   4c2d0:	10b55104 	addi	r2,r2,-10940
   4c2d4:	10800017 	ldw	r2,0(r2)
   4c2d8:	f800283a 	ret

0004c2dc <__locale_msgcharset>:
   4c2dc:	008001b4 	movhi	r2,6
   4c2e0:	10afac04 	addi	r2,r2,-16720
   4c2e4:	f800283a 	ret

0004c2e8 <__locale_cjk_lang>:
   4c2e8:	0005883a 	mov	r2,zero
   4c2ec:	f800283a 	ret

0004c2f0 <_localeconv_r>:
   4c2f0:	008001b4 	movhi	r2,6
   4c2f4:	10afbc04 	addi	r2,r2,-16656
   4c2f8:	f800283a 	ret

0004c2fc <setlocale>:
   4c2fc:	008001b4 	movhi	r2,6
   4c300:	10b55004 	addi	r2,r2,-10944
   4c304:	280d883a 	mov	r6,r5
   4c308:	200b883a 	mov	r5,r4
   4c30c:	11000017 	ldw	r4,0(r2)
   4c310:	004c2441 	jmpi	4c244 <_setlocale_r>

0004c314 <localeconv>:
   4c314:	008001b4 	movhi	r2,6
   4c318:	10afbc04 	addi	r2,r2,-16656
   4c31c:	f800283a 	ret

0004c320 <__smakebuf_r>:
   4c320:	2880030b 	ldhu	r2,12(r5)
   4c324:	10c0008c 	andi	r3,r2,2
   4c328:	1800411e 	bne	r3,zero,4c430 <__smakebuf_r+0x110>
   4c32c:	deffec04 	addi	sp,sp,-80
   4c330:	dc000f15 	stw	r16,60(sp)
   4c334:	2821883a 	mov	r16,r5
   4c338:	2940038f 	ldh	r5,14(r5)
   4c33c:	dc401015 	stw	r17,64(sp)
   4c340:	dfc01315 	stw	ra,76(sp)
   4c344:	dcc01215 	stw	r19,72(sp)
   4c348:	dc801115 	stw	r18,68(sp)
   4c34c:	2023883a 	mov	r17,r4
   4c350:	28001c16 	blt	r5,zero,4c3c4 <__smakebuf_r+0xa4>
   4c354:	d80d883a 	mov	r6,sp
   4c358:	0054f4c0 	call	54f4c <_fstat_r>
   4c35c:	10001816 	blt	r2,zero,4c3c0 <__smakebuf_r+0xa0>
   4c360:	d8800117 	ldw	r2,4(sp)
   4c364:	00e00014 	movui	r3,32768
   4c368:	10bc000c 	andi	r2,r2,61440
   4c36c:	14c80020 	cmpeqi	r19,r2,8192
   4c370:	10c03726 	beq	r2,r3,4c450 <__smakebuf_r+0x130>
   4c374:	80c0030b 	ldhu	r3,12(r16)
   4c378:	18c20014 	ori	r3,r3,2048
   4c37c:	80c0030d 	sth	r3,12(r16)
   4c380:	00c80004 	movi	r3,8192
   4c384:	10c0521e 	bne	r2,r3,4c4d0 <__smakebuf_r+0x1b0>
   4c388:	8140038f 	ldh	r5,14(r16)
   4c38c:	8809883a 	mov	r4,r17
   4c390:	0055b340 	call	55b34 <_isatty_r>
   4c394:	10004c26 	beq	r2,zero,4c4c8 <__smakebuf_r+0x1a8>
   4c398:	8080030b 	ldhu	r2,12(r16)
   4c39c:	80c010c4 	addi	r3,r16,67
   4c3a0:	80c00015 	stw	r3,0(r16)
   4c3a4:	10800054 	ori	r2,r2,1
   4c3a8:	8080030d 	sth	r2,12(r16)
   4c3ac:	00800044 	movi	r2,1
   4c3b0:	80c00415 	stw	r3,16(r16)
   4c3b4:	80800515 	stw	r2,20(r16)
   4c3b8:	04810004 	movi	r18,1024
   4c3bc:	00000706 	br	4c3dc <__smakebuf_r+0xbc>
   4c3c0:	8080030b 	ldhu	r2,12(r16)
   4c3c4:	10c0200c 	andi	r3,r2,128
   4c3c8:	18001f1e 	bne	r3,zero,4c448 <__smakebuf_r+0x128>
   4c3cc:	04810004 	movi	r18,1024
   4c3d0:	10820014 	ori	r2,r2,2048
   4c3d4:	8080030d 	sth	r2,12(r16)
   4c3d8:	0027883a 	mov	r19,zero
   4c3dc:	900b883a 	mov	r5,r18
   4c3e0:	8809883a 	mov	r4,r17
   4c3e4:	004c4dc0 	call	4c4dc <_malloc_r>
   4c3e8:	10002c26 	beq	r2,zero,4c49c <__smakebuf_r+0x17c>
   4c3ec:	80c0030b 	ldhu	r3,12(r16)
   4c3f0:	01000174 	movhi	r4,5
   4c3f4:	212c6904 	addi	r4,r4,-20060
   4c3f8:	89000f15 	stw	r4,60(r17)
   4c3fc:	18c02014 	ori	r3,r3,128
   4c400:	80c0030d 	sth	r3,12(r16)
   4c404:	80800015 	stw	r2,0(r16)
   4c408:	80800415 	stw	r2,16(r16)
   4c40c:	84800515 	stw	r18,20(r16)
   4c410:	98001a1e 	bne	r19,zero,4c47c <__smakebuf_r+0x15c>
   4c414:	dfc01317 	ldw	ra,76(sp)
   4c418:	dcc01217 	ldw	r19,72(sp)
   4c41c:	dc801117 	ldw	r18,68(sp)
   4c420:	dc401017 	ldw	r17,64(sp)
   4c424:	dc000f17 	ldw	r16,60(sp)
   4c428:	dec01404 	addi	sp,sp,80
   4c42c:	f800283a 	ret
   4c430:	288010c4 	addi	r2,r5,67
   4c434:	28800015 	stw	r2,0(r5)
   4c438:	28800415 	stw	r2,16(r5)
   4c43c:	00800044 	movi	r2,1
   4c440:	28800515 	stw	r2,20(r5)
   4c444:	f800283a 	ret
   4c448:	04801004 	movi	r18,64
   4c44c:	003fe006 	br	4c3d0 <__alt_data_end+0xfffcdbd0>
   4c450:	81000a17 	ldw	r4,40(r16)
   4c454:	00c00174 	movhi	r3,5
   4c458:	18fb4004 	addi	r3,r3,-4864
   4c45c:	20ffc51e 	bne	r4,r3,4c374 <__alt_data_end+0xfffcdb74>
   4c460:	8080030b 	ldhu	r2,12(r16)
   4c464:	04810004 	movi	r18,1024
   4c468:	84801315 	stw	r18,76(r16)
   4c46c:	1484b03a 	or	r2,r2,r18
   4c470:	8080030d 	sth	r2,12(r16)
   4c474:	0027883a 	mov	r19,zero
   4c478:	003fd806 	br	4c3dc <__alt_data_end+0xfffcdbdc>
   4c47c:	8140038f 	ldh	r5,14(r16)
   4c480:	8809883a 	mov	r4,r17
   4c484:	0055b340 	call	55b34 <_isatty_r>
   4c488:	103fe226 	beq	r2,zero,4c414 <__alt_data_end+0xfffcdc14>
   4c48c:	8080030b 	ldhu	r2,12(r16)
   4c490:	10800054 	ori	r2,r2,1
   4c494:	8080030d 	sth	r2,12(r16)
   4c498:	003fde06 	br	4c414 <__alt_data_end+0xfffcdc14>
   4c49c:	8080030b 	ldhu	r2,12(r16)
   4c4a0:	10c0800c 	andi	r3,r2,512
   4c4a4:	183fdb1e 	bne	r3,zero,4c414 <__alt_data_end+0xfffcdc14>
   4c4a8:	10800094 	ori	r2,r2,2
   4c4ac:	80c010c4 	addi	r3,r16,67
   4c4b0:	8080030d 	sth	r2,12(r16)
   4c4b4:	00800044 	movi	r2,1
   4c4b8:	80c00015 	stw	r3,0(r16)
   4c4bc:	80c00415 	stw	r3,16(r16)
   4c4c0:	80800515 	stw	r2,20(r16)
   4c4c4:	003fd306 	br	4c414 <__alt_data_end+0xfffcdc14>
   4c4c8:	04810004 	movi	r18,1024
   4c4cc:	003fc306 	br	4c3dc <__alt_data_end+0xfffcdbdc>
   4c4d0:	0027883a 	mov	r19,zero
   4c4d4:	04810004 	movi	r18,1024
   4c4d8:	003fc006 	br	4c3dc <__alt_data_end+0xfffcdbdc>

0004c4dc <_malloc_r>:
   4c4dc:	defff504 	addi	sp,sp,-44
   4c4e0:	dc800315 	stw	r18,12(sp)
   4c4e4:	dfc00a15 	stw	ra,40(sp)
   4c4e8:	df000915 	stw	fp,36(sp)
   4c4ec:	ddc00815 	stw	r23,32(sp)
   4c4f0:	dd800715 	stw	r22,28(sp)
   4c4f4:	dd400615 	stw	r21,24(sp)
   4c4f8:	dd000515 	stw	r20,20(sp)
   4c4fc:	dcc00415 	stw	r19,16(sp)
   4c500:	dc400215 	stw	r17,8(sp)
   4c504:	dc000115 	stw	r16,4(sp)
   4c508:	288002c4 	addi	r2,r5,11
   4c50c:	00c00584 	movi	r3,22
   4c510:	2025883a 	mov	r18,r4
   4c514:	18807f2e 	bgeu	r3,r2,4c714 <_malloc_r+0x238>
   4c518:	047ffe04 	movi	r17,-8
   4c51c:	1462703a 	and	r17,r2,r17
   4c520:	8800a316 	blt	r17,zero,4c7b0 <_malloc_r+0x2d4>
   4c524:	8940a236 	bltu	r17,r5,4c7b0 <_malloc_r+0x2d4>
   4c528:	00588bc0 	call	588bc <__malloc_lock>
   4c52c:	00807dc4 	movi	r2,503
   4c530:	1441e92e 	bgeu	r2,r17,4ccd8 <_malloc_r+0x7fc>
   4c534:	8804d27a 	srli	r2,r17,9
   4c538:	1000a126 	beq	r2,zero,4c7c0 <_malloc_r+0x2e4>
   4c53c:	00c00104 	movi	r3,4
   4c540:	18811e36 	bltu	r3,r2,4c9bc <_malloc_r+0x4e0>
   4c544:	8804d1ba 	srli	r2,r17,6
   4c548:	12000e44 	addi	r8,r2,57
   4c54c:	11c00e04 	addi	r7,r2,56
   4c550:	4209883a 	add	r4,r8,r8
   4c554:	04c001b4 	movhi	r19,6
   4c558:	2109883a 	add	r4,r4,r4
   4c55c:	9cefca04 	addi	r19,r19,-16600
   4c560:	2109883a 	add	r4,r4,r4
   4c564:	9909883a 	add	r4,r19,r4
   4c568:	24000117 	ldw	r16,4(r4)
   4c56c:	213ffe04 	addi	r4,r4,-8
   4c570:	24009726 	beq	r4,r16,4c7d0 <_malloc_r+0x2f4>
   4c574:	80800117 	ldw	r2,4(r16)
   4c578:	01bfff04 	movi	r6,-4
   4c57c:	014003c4 	movi	r5,15
   4c580:	1184703a 	and	r2,r2,r6
   4c584:	1447c83a 	sub	r3,r2,r17
   4c588:	28c00716 	blt	r5,r3,4c5a8 <_malloc_r+0xcc>
   4c58c:	1800920e 	bge	r3,zero,4c7d8 <_malloc_r+0x2fc>
   4c590:	84000317 	ldw	r16,12(r16)
   4c594:	24008e26 	beq	r4,r16,4c7d0 <_malloc_r+0x2f4>
   4c598:	80800117 	ldw	r2,4(r16)
   4c59c:	1184703a 	and	r2,r2,r6
   4c5a0:	1447c83a 	sub	r3,r2,r17
   4c5a4:	28fff90e 	bge	r5,r3,4c58c <__alt_data_end+0xfffcdd8c>
   4c5a8:	3809883a 	mov	r4,r7
   4c5ac:	018001b4 	movhi	r6,6
   4c5b0:	9c000417 	ldw	r16,16(r19)
   4c5b4:	31afca04 	addi	r6,r6,-16600
   4c5b8:	32000204 	addi	r8,r6,8
   4c5bc:	82013426 	beq	r16,r8,4ca90 <_malloc_r+0x5b4>
   4c5c0:	80c00117 	ldw	r3,4(r16)
   4c5c4:	00bfff04 	movi	r2,-4
   4c5c8:	188e703a 	and	r7,r3,r2
   4c5cc:	3c45c83a 	sub	r2,r7,r17
   4c5d0:	00c003c4 	movi	r3,15
   4c5d4:	18811f16 	blt	r3,r2,4ca54 <_malloc_r+0x578>
   4c5d8:	32000515 	stw	r8,20(r6)
   4c5dc:	32000415 	stw	r8,16(r6)
   4c5e0:	10007f0e 	bge	r2,zero,4c7e0 <_malloc_r+0x304>
   4c5e4:	00807fc4 	movi	r2,511
   4c5e8:	11c0fd36 	bltu	r2,r7,4c9e0 <_malloc_r+0x504>
   4c5ec:	3806d0fa 	srli	r3,r7,3
   4c5f0:	01c00044 	movi	r7,1
   4c5f4:	30800117 	ldw	r2,4(r6)
   4c5f8:	19400044 	addi	r5,r3,1
   4c5fc:	294b883a 	add	r5,r5,r5
   4c600:	1807d0ba 	srai	r3,r3,2
   4c604:	294b883a 	add	r5,r5,r5
   4c608:	294b883a 	add	r5,r5,r5
   4c60c:	298b883a 	add	r5,r5,r6
   4c610:	38c6983a 	sll	r3,r7,r3
   4c614:	29c00017 	ldw	r7,0(r5)
   4c618:	2a7ffe04 	addi	r9,r5,-8
   4c61c:	1886b03a 	or	r3,r3,r2
   4c620:	82400315 	stw	r9,12(r16)
   4c624:	81c00215 	stw	r7,8(r16)
   4c628:	30c00115 	stw	r3,4(r6)
   4c62c:	2c000015 	stw	r16,0(r5)
   4c630:	3c000315 	stw	r16,12(r7)
   4c634:	2005d0ba 	srai	r2,r4,2
   4c638:	01400044 	movi	r5,1
   4c63c:	288a983a 	sll	r5,r5,r2
   4c640:	19406f36 	bltu	r3,r5,4c800 <_malloc_r+0x324>
   4c644:	28c4703a 	and	r2,r5,r3
   4c648:	10000a1e 	bne	r2,zero,4c674 <_malloc_r+0x198>
   4c64c:	00bfff04 	movi	r2,-4
   4c650:	294b883a 	add	r5,r5,r5
   4c654:	2088703a 	and	r4,r4,r2
   4c658:	28c4703a 	and	r2,r5,r3
   4c65c:	21000104 	addi	r4,r4,4
   4c660:	1000041e 	bne	r2,zero,4c674 <_malloc_r+0x198>
   4c664:	294b883a 	add	r5,r5,r5
   4c668:	28c4703a 	and	r2,r5,r3
   4c66c:	21000104 	addi	r4,r4,4
   4c670:	103ffc26 	beq	r2,zero,4c664 <__alt_data_end+0xfffcde64>
   4c674:	02bfff04 	movi	r10,-4
   4c678:	024003c4 	movi	r9,15
   4c67c:	21800044 	addi	r6,r4,1
   4c680:	318d883a 	add	r6,r6,r6
   4c684:	318d883a 	add	r6,r6,r6
   4c688:	318d883a 	add	r6,r6,r6
   4c68c:	998d883a 	add	r6,r19,r6
   4c690:	333ffe04 	addi	r12,r6,-8
   4c694:	2017883a 	mov	r11,r4
   4c698:	31800104 	addi	r6,r6,4
   4c69c:	34000017 	ldw	r16,0(r6)
   4c6a0:	31fffd04 	addi	r7,r6,-12
   4c6a4:	81c0041e 	bne	r16,r7,4c6b8 <_malloc_r+0x1dc>
   4c6a8:	0000fb06 	br	4ca98 <_malloc_r+0x5bc>
   4c6ac:	1801030e 	bge	r3,zero,4cabc <_malloc_r+0x5e0>
   4c6b0:	84000317 	ldw	r16,12(r16)
   4c6b4:	81c0f826 	beq	r16,r7,4ca98 <_malloc_r+0x5bc>
   4c6b8:	80800117 	ldw	r2,4(r16)
   4c6bc:	1284703a 	and	r2,r2,r10
   4c6c0:	1447c83a 	sub	r3,r2,r17
   4c6c4:	48fff90e 	bge	r9,r3,4c6ac <__alt_data_end+0xfffcdeac>
   4c6c8:	80800317 	ldw	r2,12(r16)
   4c6cc:	81000217 	ldw	r4,8(r16)
   4c6d0:	89400054 	ori	r5,r17,1
   4c6d4:	81400115 	stw	r5,4(r16)
   4c6d8:	20800315 	stw	r2,12(r4)
   4c6dc:	11000215 	stw	r4,8(r2)
   4c6e0:	8463883a 	add	r17,r16,r17
   4c6e4:	9c400515 	stw	r17,20(r19)
   4c6e8:	9c400415 	stw	r17,16(r19)
   4c6ec:	18800054 	ori	r2,r3,1
   4c6f0:	88800115 	stw	r2,4(r17)
   4c6f4:	8a000315 	stw	r8,12(r17)
   4c6f8:	8a000215 	stw	r8,8(r17)
   4c6fc:	88e3883a 	add	r17,r17,r3
   4c700:	88c00015 	stw	r3,0(r17)
   4c704:	9009883a 	mov	r4,r18
   4c708:	00588e00 	call	588e0 <__malloc_unlock>
   4c70c:	80800204 	addi	r2,r16,8
   4c710:	00001b06 	br	4c780 <_malloc_r+0x2a4>
   4c714:	04400404 	movi	r17,16
   4c718:	89402536 	bltu	r17,r5,4c7b0 <_malloc_r+0x2d4>
   4c71c:	00588bc0 	call	588bc <__malloc_lock>
   4c720:	00800184 	movi	r2,6
   4c724:	01000084 	movi	r4,2
   4c728:	04c001b4 	movhi	r19,6
   4c72c:	1085883a 	add	r2,r2,r2
   4c730:	9cefca04 	addi	r19,r19,-16600
   4c734:	1085883a 	add	r2,r2,r2
   4c738:	9885883a 	add	r2,r19,r2
   4c73c:	14000117 	ldw	r16,4(r2)
   4c740:	10fffe04 	addi	r3,r2,-8
   4c744:	80c0d926 	beq	r16,r3,4caac <_malloc_r+0x5d0>
   4c748:	80c00117 	ldw	r3,4(r16)
   4c74c:	81000317 	ldw	r4,12(r16)
   4c750:	00bfff04 	movi	r2,-4
   4c754:	1884703a 	and	r2,r3,r2
   4c758:	81400217 	ldw	r5,8(r16)
   4c75c:	8085883a 	add	r2,r16,r2
   4c760:	10c00117 	ldw	r3,4(r2)
   4c764:	29000315 	stw	r4,12(r5)
   4c768:	21400215 	stw	r5,8(r4)
   4c76c:	18c00054 	ori	r3,r3,1
   4c770:	10c00115 	stw	r3,4(r2)
   4c774:	9009883a 	mov	r4,r18
   4c778:	00588e00 	call	588e0 <__malloc_unlock>
   4c77c:	80800204 	addi	r2,r16,8
   4c780:	dfc00a17 	ldw	ra,40(sp)
   4c784:	df000917 	ldw	fp,36(sp)
   4c788:	ddc00817 	ldw	r23,32(sp)
   4c78c:	dd800717 	ldw	r22,28(sp)
   4c790:	dd400617 	ldw	r21,24(sp)
   4c794:	dd000517 	ldw	r20,20(sp)
   4c798:	dcc00417 	ldw	r19,16(sp)
   4c79c:	dc800317 	ldw	r18,12(sp)
   4c7a0:	dc400217 	ldw	r17,8(sp)
   4c7a4:	dc000117 	ldw	r16,4(sp)
   4c7a8:	dec00b04 	addi	sp,sp,44
   4c7ac:	f800283a 	ret
   4c7b0:	00800304 	movi	r2,12
   4c7b4:	90800015 	stw	r2,0(r18)
   4c7b8:	0005883a 	mov	r2,zero
   4c7bc:	003ff006 	br	4c780 <__alt_data_end+0xfffcdf80>
   4c7c0:	01002004 	movi	r4,128
   4c7c4:	02001004 	movi	r8,64
   4c7c8:	01c00fc4 	movi	r7,63
   4c7cc:	003f6106 	br	4c554 <__alt_data_end+0xfffcdd54>
   4c7d0:	4009883a 	mov	r4,r8
   4c7d4:	003f7506 	br	4c5ac <__alt_data_end+0xfffcddac>
   4c7d8:	81000317 	ldw	r4,12(r16)
   4c7dc:	003fde06 	br	4c758 <__alt_data_end+0xfffcdf58>
   4c7e0:	81c5883a 	add	r2,r16,r7
   4c7e4:	11400117 	ldw	r5,4(r2)
   4c7e8:	9009883a 	mov	r4,r18
   4c7ec:	29400054 	ori	r5,r5,1
   4c7f0:	11400115 	stw	r5,4(r2)
   4c7f4:	00588e00 	call	588e0 <__malloc_unlock>
   4c7f8:	80800204 	addi	r2,r16,8
   4c7fc:	003fe006 	br	4c780 <__alt_data_end+0xfffcdf80>
   4c800:	9c000217 	ldw	r16,8(r19)
   4c804:	00bfff04 	movi	r2,-4
   4c808:	85800117 	ldw	r22,4(r16)
   4c80c:	b0ac703a 	and	r22,r22,r2
   4c810:	b4400336 	bltu	r22,r17,4c820 <_malloc_r+0x344>
   4c814:	b445c83a 	sub	r2,r22,r17
   4c818:	00c003c4 	movi	r3,15
   4c81c:	18805d16 	blt	r3,r2,4c994 <_malloc_r+0x4b8>
   4c820:	05c001b4 	movhi	r23,6
   4c824:	008001b4 	movhi	r2,6
   4c828:	10bcb204 	addi	r2,r2,-3384
   4c82c:	bdf55204 	addi	r23,r23,-10936
   4c830:	15400017 	ldw	r21,0(r2)
   4c834:	b8c00017 	ldw	r3,0(r23)
   4c838:	00bfffc4 	movi	r2,-1
   4c83c:	858d883a 	add	r6,r16,r22
   4c840:	8d6b883a 	add	r21,r17,r21
   4c844:	1880ea26 	beq	r3,r2,4cbf0 <_malloc_r+0x714>
   4c848:	ad4403c4 	addi	r21,r21,4111
   4c84c:	00bc0004 	movi	r2,-4096
   4c850:	a8aa703a 	and	r21,r21,r2
   4c854:	a80b883a 	mov	r5,r21
   4c858:	9009883a 	mov	r4,r18
   4c85c:	d9800015 	stw	r6,0(sp)
   4c860:	004ea380 	call	4ea38 <_sbrk_r>
   4c864:	1029883a 	mov	r20,r2
   4c868:	00bfffc4 	movi	r2,-1
   4c86c:	d9800017 	ldw	r6,0(sp)
   4c870:	a080e826 	beq	r20,r2,4cc14 <_malloc_r+0x738>
   4c874:	a180a636 	bltu	r20,r6,4cb10 <_malloc_r+0x634>
   4c878:	070001b4 	movhi	fp,6
   4c87c:	e73cba04 	addi	fp,fp,-3352
   4c880:	e0800017 	ldw	r2,0(fp)
   4c884:	a887883a 	add	r3,r21,r2
   4c888:	e0c00015 	stw	r3,0(fp)
   4c88c:	3500e626 	beq	r6,r20,4cc28 <_malloc_r+0x74c>
   4c890:	b9000017 	ldw	r4,0(r23)
   4c894:	00bfffc4 	movi	r2,-1
   4c898:	2080ee26 	beq	r4,r2,4cc54 <_malloc_r+0x778>
   4c89c:	a185c83a 	sub	r2,r20,r6
   4c8a0:	10c5883a 	add	r2,r2,r3
   4c8a4:	e0800015 	stw	r2,0(fp)
   4c8a8:	a0c001cc 	andi	r3,r20,7
   4c8ac:	1800bc26 	beq	r3,zero,4cba0 <_malloc_r+0x6c4>
   4c8b0:	a0e9c83a 	sub	r20,r20,r3
   4c8b4:	00840204 	movi	r2,4104
   4c8b8:	a5000204 	addi	r20,r20,8
   4c8bc:	10c7c83a 	sub	r3,r2,r3
   4c8c0:	a545883a 	add	r2,r20,r21
   4c8c4:	1083ffcc 	andi	r2,r2,4095
   4c8c8:	18abc83a 	sub	r21,r3,r2
   4c8cc:	a80b883a 	mov	r5,r21
   4c8d0:	9009883a 	mov	r4,r18
   4c8d4:	004ea380 	call	4ea38 <_sbrk_r>
   4c8d8:	00ffffc4 	movi	r3,-1
   4c8dc:	10c0e126 	beq	r2,r3,4cc64 <_malloc_r+0x788>
   4c8e0:	1505c83a 	sub	r2,r2,r20
   4c8e4:	1545883a 	add	r2,r2,r21
   4c8e8:	10800054 	ori	r2,r2,1
   4c8ec:	e0c00017 	ldw	r3,0(fp)
   4c8f0:	9d000215 	stw	r20,8(r19)
   4c8f4:	a0800115 	stw	r2,4(r20)
   4c8f8:	a8c7883a 	add	r3,r21,r3
   4c8fc:	e0c00015 	stw	r3,0(fp)
   4c900:	84c00e26 	beq	r16,r19,4c93c <_malloc_r+0x460>
   4c904:	018003c4 	movi	r6,15
   4c908:	3580a72e 	bgeu	r6,r22,4cba8 <_malloc_r+0x6cc>
   4c90c:	81400117 	ldw	r5,4(r16)
   4c910:	013ffe04 	movi	r4,-8
   4c914:	b0bffd04 	addi	r2,r22,-12
   4c918:	1104703a 	and	r2,r2,r4
   4c91c:	2900004c 	andi	r4,r5,1
   4c920:	2088b03a 	or	r4,r4,r2
   4c924:	81000115 	stw	r4,4(r16)
   4c928:	01400144 	movi	r5,5
   4c92c:	8089883a 	add	r4,r16,r2
   4c930:	21400115 	stw	r5,4(r4)
   4c934:	21400215 	stw	r5,8(r4)
   4c938:	3080cd36 	bltu	r6,r2,4cc70 <_malloc_r+0x794>
   4c93c:	008001b4 	movhi	r2,6
   4c940:	10bcb104 	addi	r2,r2,-3388
   4c944:	11000017 	ldw	r4,0(r2)
   4c948:	20c0012e 	bgeu	r4,r3,4c950 <_malloc_r+0x474>
   4c94c:	10c00015 	stw	r3,0(r2)
   4c950:	008001b4 	movhi	r2,6
   4c954:	10bcb004 	addi	r2,r2,-3392
   4c958:	11000017 	ldw	r4,0(r2)
   4c95c:	9c000217 	ldw	r16,8(r19)
   4c960:	20c0012e 	bgeu	r4,r3,4c968 <_malloc_r+0x48c>
   4c964:	10c00015 	stw	r3,0(r2)
   4c968:	80c00117 	ldw	r3,4(r16)
   4c96c:	00bfff04 	movi	r2,-4
   4c970:	1886703a 	and	r3,r3,r2
   4c974:	1c45c83a 	sub	r2,r3,r17
   4c978:	1c400236 	bltu	r3,r17,4c984 <_malloc_r+0x4a8>
   4c97c:	00c003c4 	movi	r3,15
   4c980:	18800416 	blt	r3,r2,4c994 <_malloc_r+0x4b8>
   4c984:	9009883a 	mov	r4,r18
   4c988:	00588e00 	call	588e0 <__malloc_unlock>
   4c98c:	0005883a 	mov	r2,zero
   4c990:	003f7b06 	br	4c780 <__alt_data_end+0xfffcdf80>
   4c994:	88c00054 	ori	r3,r17,1
   4c998:	80c00115 	stw	r3,4(r16)
   4c99c:	8463883a 	add	r17,r16,r17
   4c9a0:	10800054 	ori	r2,r2,1
   4c9a4:	9c400215 	stw	r17,8(r19)
   4c9a8:	88800115 	stw	r2,4(r17)
   4c9ac:	9009883a 	mov	r4,r18
   4c9b0:	00588e00 	call	588e0 <__malloc_unlock>
   4c9b4:	80800204 	addi	r2,r16,8
   4c9b8:	003f7106 	br	4c780 <__alt_data_end+0xfffcdf80>
   4c9bc:	00c00504 	movi	r3,20
   4c9c0:	18804a2e 	bgeu	r3,r2,4caec <_malloc_r+0x610>
   4c9c4:	00c01504 	movi	r3,84
   4c9c8:	18806e36 	bltu	r3,r2,4cb84 <_malloc_r+0x6a8>
   4c9cc:	8804d33a 	srli	r2,r17,12
   4c9d0:	12001bc4 	addi	r8,r2,111
   4c9d4:	11c01b84 	addi	r7,r2,110
   4c9d8:	4209883a 	add	r4,r8,r8
   4c9dc:	003edd06 	br	4c554 <__alt_data_end+0xfffcdd54>
   4c9e0:	3804d27a 	srli	r2,r7,9
   4c9e4:	00c00104 	movi	r3,4
   4c9e8:	1880442e 	bgeu	r3,r2,4cafc <_malloc_r+0x620>
   4c9ec:	00c00504 	movi	r3,20
   4c9f0:	18808136 	bltu	r3,r2,4cbf8 <_malloc_r+0x71c>
   4c9f4:	11401704 	addi	r5,r2,92
   4c9f8:	10c016c4 	addi	r3,r2,91
   4c9fc:	294b883a 	add	r5,r5,r5
   4ca00:	294b883a 	add	r5,r5,r5
   4ca04:	294b883a 	add	r5,r5,r5
   4ca08:	994b883a 	add	r5,r19,r5
   4ca0c:	28800017 	ldw	r2,0(r5)
   4ca10:	018001b4 	movhi	r6,6
   4ca14:	297ffe04 	addi	r5,r5,-8
   4ca18:	31afca04 	addi	r6,r6,-16600
   4ca1c:	28806526 	beq	r5,r2,4cbb4 <_malloc_r+0x6d8>
   4ca20:	01bfff04 	movi	r6,-4
   4ca24:	10c00117 	ldw	r3,4(r2)
   4ca28:	1986703a 	and	r3,r3,r6
   4ca2c:	38c0022e 	bgeu	r7,r3,4ca38 <_malloc_r+0x55c>
   4ca30:	10800217 	ldw	r2,8(r2)
   4ca34:	28bffb1e 	bne	r5,r2,4ca24 <__alt_data_end+0xfffce224>
   4ca38:	11400317 	ldw	r5,12(r2)
   4ca3c:	98c00117 	ldw	r3,4(r19)
   4ca40:	81400315 	stw	r5,12(r16)
   4ca44:	80800215 	stw	r2,8(r16)
   4ca48:	2c000215 	stw	r16,8(r5)
   4ca4c:	14000315 	stw	r16,12(r2)
   4ca50:	003ef806 	br	4c634 <__alt_data_end+0xfffcde34>
   4ca54:	88c00054 	ori	r3,r17,1
   4ca58:	80c00115 	stw	r3,4(r16)
   4ca5c:	8463883a 	add	r17,r16,r17
   4ca60:	34400515 	stw	r17,20(r6)
   4ca64:	34400415 	stw	r17,16(r6)
   4ca68:	10c00054 	ori	r3,r2,1
   4ca6c:	8a000315 	stw	r8,12(r17)
   4ca70:	8a000215 	stw	r8,8(r17)
   4ca74:	88c00115 	stw	r3,4(r17)
   4ca78:	88a3883a 	add	r17,r17,r2
   4ca7c:	88800015 	stw	r2,0(r17)
   4ca80:	9009883a 	mov	r4,r18
   4ca84:	00588e00 	call	588e0 <__malloc_unlock>
   4ca88:	80800204 	addi	r2,r16,8
   4ca8c:	003f3c06 	br	4c780 <__alt_data_end+0xfffcdf80>
   4ca90:	30c00117 	ldw	r3,4(r6)
   4ca94:	003ee706 	br	4c634 <__alt_data_end+0xfffcde34>
   4ca98:	5ac00044 	addi	r11,r11,1
   4ca9c:	588000cc 	andi	r2,r11,3
   4caa0:	31800204 	addi	r6,r6,8
   4caa4:	103efd1e 	bne	r2,zero,4c69c <__alt_data_end+0xfffcde9c>
   4caa8:	00002406 	br	4cb3c <_malloc_r+0x660>
   4caac:	14000317 	ldw	r16,12(r2)
   4cab0:	143f251e 	bne	r2,r16,4c748 <__alt_data_end+0xfffcdf48>
   4cab4:	21000084 	addi	r4,r4,2
   4cab8:	003ebc06 	br	4c5ac <__alt_data_end+0xfffcddac>
   4cabc:	8085883a 	add	r2,r16,r2
   4cac0:	10c00117 	ldw	r3,4(r2)
   4cac4:	81000317 	ldw	r4,12(r16)
   4cac8:	81400217 	ldw	r5,8(r16)
   4cacc:	18c00054 	ori	r3,r3,1
   4cad0:	10c00115 	stw	r3,4(r2)
   4cad4:	29000315 	stw	r4,12(r5)
   4cad8:	21400215 	stw	r5,8(r4)
   4cadc:	9009883a 	mov	r4,r18
   4cae0:	00588e00 	call	588e0 <__malloc_unlock>
   4cae4:	80800204 	addi	r2,r16,8
   4cae8:	003f2506 	br	4c780 <__alt_data_end+0xfffcdf80>
   4caec:	12001704 	addi	r8,r2,92
   4caf0:	11c016c4 	addi	r7,r2,91
   4caf4:	4209883a 	add	r4,r8,r8
   4caf8:	003e9606 	br	4c554 <__alt_data_end+0xfffcdd54>
   4cafc:	3804d1ba 	srli	r2,r7,6
   4cb00:	11400e44 	addi	r5,r2,57
   4cb04:	10c00e04 	addi	r3,r2,56
   4cb08:	294b883a 	add	r5,r5,r5
   4cb0c:	003fbc06 	br	4ca00 <__alt_data_end+0xfffce200>
   4cb10:	84ff5926 	beq	r16,r19,4c878 <__alt_data_end+0xfffce078>
   4cb14:	008001b4 	movhi	r2,6
   4cb18:	10afca04 	addi	r2,r2,-16600
   4cb1c:	14000217 	ldw	r16,8(r2)
   4cb20:	00bfff04 	movi	r2,-4
   4cb24:	80c00117 	ldw	r3,4(r16)
   4cb28:	1886703a 	and	r3,r3,r2
   4cb2c:	003f9106 	br	4c974 <__alt_data_end+0xfffce174>
   4cb30:	60800217 	ldw	r2,8(r12)
   4cb34:	213fffc4 	addi	r4,r4,-1
   4cb38:	1300651e 	bne	r2,r12,4ccd0 <_malloc_r+0x7f4>
   4cb3c:	208000cc 	andi	r2,r4,3
   4cb40:	633ffe04 	addi	r12,r12,-8
   4cb44:	103ffa1e 	bne	r2,zero,4cb30 <__alt_data_end+0xfffce330>
   4cb48:	98800117 	ldw	r2,4(r19)
   4cb4c:	0146303a 	nor	r3,zero,r5
   4cb50:	1884703a 	and	r2,r3,r2
   4cb54:	98800115 	stw	r2,4(r19)
   4cb58:	294b883a 	add	r5,r5,r5
   4cb5c:	117f2836 	bltu	r2,r5,4c800 <__alt_data_end+0xfffce000>
   4cb60:	283f2726 	beq	r5,zero,4c800 <__alt_data_end+0xfffce000>
   4cb64:	2886703a 	and	r3,r5,r2
   4cb68:	5809883a 	mov	r4,r11
   4cb6c:	183ec31e 	bne	r3,zero,4c67c <__alt_data_end+0xfffcde7c>
   4cb70:	294b883a 	add	r5,r5,r5
   4cb74:	2886703a 	and	r3,r5,r2
   4cb78:	21000104 	addi	r4,r4,4
   4cb7c:	183ffc26 	beq	r3,zero,4cb70 <__alt_data_end+0xfffce370>
   4cb80:	003ebe06 	br	4c67c <__alt_data_end+0xfffcde7c>
   4cb84:	00c05504 	movi	r3,340
   4cb88:	18801236 	bltu	r3,r2,4cbd4 <_malloc_r+0x6f8>
   4cb8c:	8804d3fa 	srli	r2,r17,15
   4cb90:	12001e04 	addi	r8,r2,120
   4cb94:	11c01dc4 	addi	r7,r2,119
   4cb98:	4209883a 	add	r4,r8,r8
   4cb9c:	003e6d06 	br	4c554 <__alt_data_end+0xfffcdd54>
   4cba0:	00c40004 	movi	r3,4096
   4cba4:	003f4606 	br	4c8c0 <__alt_data_end+0xfffce0c0>
   4cba8:	00800044 	movi	r2,1
   4cbac:	a0800115 	stw	r2,4(r20)
   4cbb0:	003f7406 	br	4c984 <__alt_data_end+0xfffce184>
   4cbb4:	1805d0ba 	srai	r2,r3,2
   4cbb8:	01c00044 	movi	r7,1
   4cbbc:	30c00117 	ldw	r3,4(r6)
   4cbc0:	388e983a 	sll	r7,r7,r2
   4cbc4:	2805883a 	mov	r2,r5
   4cbc8:	38c6b03a 	or	r3,r7,r3
   4cbcc:	30c00115 	stw	r3,4(r6)
   4cbd0:	003f9b06 	br	4ca40 <__alt_data_end+0xfffce240>
   4cbd4:	00c15504 	movi	r3,1364
   4cbd8:	18801a36 	bltu	r3,r2,4cc44 <_malloc_r+0x768>
   4cbdc:	8804d4ba 	srli	r2,r17,18
   4cbe0:	12001f44 	addi	r8,r2,125
   4cbe4:	11c01f04 	addi	r7,r2,124
   4cbe8:	4209883a 	add	r4,r8,r8
   4cbec:	003e5906 	br	4c554 <__alt_data_end+0xfffcdd54>
   4cbf0:	ad400404 	addi	r21,r21,16
   4cbf4:	003f1706 	br	4c854 <__alt_data_end+0xfffce054>
   4cbf8:	00c01504 	movi	r3,84
   4cbfc:	18802336 	bltu	r3,r2,4cc8c <_malloc_r+0x7b0>
   4cc00:	3804d33a 	srli	r2,r7,12
   4cc04:	11401bc4 	addi	r5,r2,111
   4cc08:	10c01b84 	addi	r3,r2,110
   4cc0c:	294b883a 	add	r5,r5,r5
   4cc10:	003f7b06 	br	4ca00 <__alt_data_end+0xfffce200>
   4cc14:	9c000217 	ldw	r16,8(r19)
   4cc18:	00bfff04 	movi	r2,-4
   4cc1c:	80c00117 	ldw	r3,4(r16)
   4cc20:	1886703a 	and	r3,r3,r2
   4cc24:	003f5306 	br	4c974 <__alt_data_end+0xfffce174>
   4cc28:	3083ffcc 	andi	r2,r6,4095
   4cc2c:	103f181e 	bne	r2,zero,4c890 <__alt_data_end+0xfffce090>
   4cc30:	99000217 	ldw	r4,8(r19)
   4cc34:	b545883a 	add	r2,r22,r21
   4cc38:	10800054 	ori	r2,r2,1
   4cc3c:	20800115 	stw	r2,4(r4)
   4cc40:	003f3e06 	br	4c93c <__alt_data_end+0xfffce13c>
   4cc44:	01003f84 	movi	r4,254
   4cc48:	02001fc4 	movi	r8,127
   4cc4c:	01c01f84 	movi	r7,126
   4cc50:	003e4006 	br	4c554 <__alt_data_end+0xfffcdd54>
   4cc54:	008001b4 	movhi	r2,6
   4cc58:	10b55204 	addi	r2,r2,-10936
   4cc5c:	15000015 	stw	r20,0(r2)
   4cc60:	003f1106 	br	4c8a8 <__alt_data_end+0xfffce0a8>
   4cc64:	00800044 	movi	r2,1
   4cc68:	002b883a 	mov	r21,zero
   4cc6c:	003f1f06 	br	4c8ec <__alt_data_end+0xfffce0ec>
   4cc70:	81400204 	addi	r5,r16,8
   4cc74:	9009883a 	mov	r4,r18
   4cc78:	004b8c00 	call	4b8c0 <_free_r>
   4cc7c:	008001b4 	movhi	r2,6
   4cc80:	10bcba04 	addi	r2,r2,-3352
   4cc84:	10c00017 	ldw	r3,0(r2)
   4cc88:	003f2c06 	br	4c93c <__alt_data_end+0xfffce13c>
   4cc8c:	00c05504 	movi	r3,340
   4cc90:	18800536 	bltu	r3,r2,4cca8 <_malloc_r+0x7cc>
   4cc94:	3804d3fa 	srli	r2,r7,15
   4cc98:	11401e04 	addi	r5,r2,120
   4cc9c:	10c01dc4 	addi	r3,r2,119
   4cca0:	294b883a 	add	r5,r5,r5
   4cca4:	003f5606 	br	4ca00 <__alt_data_end+0xfffce200>
   4cca8:	00c15504 	movi	r3,1364
   4ccac:	18800536 	bltu	r3,r2,4ccc4 <_malloc_r+0x7e8>
   4ccb0:	3804d4ba 	srli	r2,r7,18
   4ccb4:	11401f44 	addi	r5,r2,125
   4ccb8:	10c01f04 	addi	r3,r2,124
   4ccbc:	294b883a 	add	r5,r5,r5
   4ccc0:	003f4f06 	br	4ca00 <__alt_data_end+0xfffce200>
   4ccc4:	01403f84 	movi	r5,254
   4ccc8:	00c01f84 	movi	r3,126
   4cccc:	003f4c06 	br	4ca00 <__alt_data_end+0xfffce200>
   4ccd0:	98800117 	ldw	r2,4(r19)
   4ccd4:	003fa006 	br	4cb58 <__alt_data_end+0xfffce358>
   4ccd8:	8808d0fa 	srli	r4,r17,3
   4ccdc:	20800044 	addi	r2,r4,1
   4cce0:	1085883a 	add	r2,r2,r2
   4cce4:	003e9006 	br	4c728 <__alt_data_end+0xfffcdf28>

0004cce8 <_mbrtowc_r>:
   4cce8:	defff704 	addi	sp,sp,-36
   4ccec:	008001b4 	movhi	r2,6
   4ccf0:	dc800715 	stw	r18,28(sp)
   4ccf4:	dc400615 	stw	r17,24(sp)
   4ccf8:	dc000515 	stw	r16,20(sp)
   4ccfc:	10b55404 	addi	r2,r2,-10928
   4cd00:	dfc00815 	stw	ra,32(sp)
   4cd04:	2021883a 	mov	r16,r4
   4cd08:	dc400917 	ldw	r17,36(sp)
   4cd0c:	14800017 	ldw	r18,0(r2)
   4cd10:	30001626 	beq	r6,zero,4cd6c <_mbrtowc_r+0x84>
   4cd14:	d9400215 	stw	r5,8(sp)
   4cd18:	d9800315 	stw	r6,12(sp)
   4cd1c:	d9c00415 	stw	r7,16(sp)
   4cd20:	004c2c00 	call	4c2c0 <__locale_charset>
   4cd24:	d9c00417 	ldw	r7,16(sp)
   4cd28:	d9800317 	ldw	r6,12(sp)
   4cd2c:	d9400217 	ldw	r5,8(sp)
   4cd30:	d8800015 	stw	r2,0(sp)
   4cd34:	dc400115 	stw	r17,4(sp)
   4cd38:	8009883a 	mov	r4,r16
   4cd3c:	903ee83a 	callr	r18
   4cd40:	00ffffc4 	movi	r3,-1
   4cd44:	10c0031e 	bne	r2,r3,4cd54 <_mbrtowc_r+0x6c>
   4cd48:	88000015 	stw	zero,0(r17)
   4cd4c:	00c02284 	movi	r3,138
   4cd50:	80c00015 	stw	r3,0(r16)
   4cd54:	dfc00817 	ldw	ra,32(sp)
   4cd58:	dc800717 	ldw	r18,28(sp)
   4cd5c:	dc400617 	ldw	r17,24(sp)
   4cd60:	dc000517 	ldw	r16,20(sp)
   4cd64:	dec00904 	addi	sp,sp,36
   4cd68:	f800283a 	ret
   4cd6c:	004c2c00 	call	4c2c0 <__locale_charset>
   4cd70:	018001b4 	movhi	r6,6
   4cd74:	31ac8b04 	addi	r6,r6,-19924
   4cd78:	dc400115 	stw	r17,4(sp)
   4cd7c:	d8800015 	stw	r2,0(sp)
   4cd80:	01c00044 	movi	r7,1
   4cd84:	000b883a 	mov	r5,zero
   4cd88:	8009883a 	mov	r4,r16
   4cd8c:	903ee83a 	callr	r18
   4cd90:	003feb06 	br	4cd40 <__alt_data_end+0xfffce540>

0004cd94 <mbrtowc>:
   4cd94:	defff704 	addi	sp,sp,-36
   4cd98:	008001b4 	movhi	r2,6
   4cd9c:	dc800415 	stw	r18,16(sp)
   4cda0:	dc400315 	stw	r17,12(sp)
   4cda4:	10b55004 	addi	r2,r2,-10944
   4cda8:	dfc00815 	stw	ra,32(sp)
   4cdac:	dd400715 	stw	r21,28(sp)
   4cdb0:	dd000615 	stw	r20,24(sp)
   4cdb4:	dcc00515 	stw	r19,20(sp)
   4cdb8:	dc000215 	stw	r16,8(sp)
   4cdbc:	3825883a 	mov	r18,r7
   4cdc0:	14400017 	ldw	r17,0(r2)
   4cdc4:	28001c26 	beq	r5,zero,4ce38 <mbrtowc+0xa4>
   4cdc8:	008001b4 	movhi	r2,6
   4cdcc:	10b55404 	addi	r2,r2,-10928
   4cdd0:	15400017 	ldw	r21,0(r2)
   4cdd4:	2821883a 	mov	r16,r5
   4cdd8:	2027883a 	mov	r19,r4
   4cddc:	3029883a 	mov	r20,r6
   4cde0:	004c2c00 	call	4c2c0 <__locale_charset>
   4cde4:	d8800015 	stw	r2,0(sp)
   4cde8:	dc800115 	stw	r18,4(sp)
   4cdec:	a00f883a 	mov	r7,r20
   4cdf0:	800d883a 	mov	r6,r16
   4cdf4:	980b883a 	mov	r5,r19
   4cdf8:	8809883a 	mov	r4,r17
   4cdfc:	a83ee83a 	callr	r21
   4ce00:	00ffffc4 	movi	r3,-1
   4ce04:	10c0031e 	bne	r2,r3,4ce14 <mbrtowc+0x80>
   4ce08:	90000015 	stw	zero,0(r18)
   4ce0c:	00c02284 	movi	r3,138
   4ce10:	88c00015 	stw	r3,0(r17)
   4ce14:	dfc00817 	ldw	ra,32(sp)
   4ce18:	dd400717 	ldw	r21,28(sp)
   4ce1c:	dd000617 	ldw	r20,24(sp)
   4ce20:	dcc00517 	ldw	r19,20(sp)
   4ce24:	dc800417 	ldw	r18,16(sp)
   4ce28:	dc400317 	ldw	r17,12(sp)
   4ce2c:	dc000217 	ldw	r16,8(sp)
   4ce30:	dec00904 	addi	sp,sp,36
   4ce34:	f800283a 	ret
   4ce38:	008001b4 	movhi	r2,6
   4ce3c:	10b55404 	addi	r2,r2,-10928
   4ce40:	14000017 	ldw	r16,0(r2)
   4ce44:	004c2c00 	call	4c2c0 <__locale_charset>
   4ce48:	018001b4 	movhi	r6,6
   4ce4c:	31ac8b04 	addi	r6,r6,-19924
   4ce50:	dc800115 	stw	r18,4(sp)
   4ce54:	d8800015 	stw	r2,0(sp)
   4ce58:	01c00044 	movi	r7,1
   4ce5c:	000b883a 	mov	r5,zero
   4ce60:	8809883a 	mov	r4,r17
   4ce64:	803ee83a 	callr	r16
   4ce68:	003fe506 	br	4ce00 <__alt_data_end+0xfffce600>

0004ce6c <__ascii_mbtowc>:
   4ce6c:	deffff04 	addi	sp,sp,-4
   4ce70:	28000826 	beq	r5,zero,4ce94 <__ascii_mbtowc+0x28>
   4ce74:	30000926 	beq	r6,zero,4ce9c <__ascii_mbtowc+0x30>
   4ce78:	38000b26 	beq	r7,zero,4cea8 <__ascii_mbtowc+0x3c>
   4ce7c:	30800003 	ldbu	r2,0(r6)
   4ce80:	28800015 	stw	r2,0(r5)
   4ce84:	30800003 	ldbu	r2,0(r6)
   4ce88:	1004c03a 	cmpne	r2,r2,zero
   4ce8c:	dec00104 	addi	sp,sp,4
   4ce90:	f800283a 	ret
   4ce94:	d80b883a 	mov	r5,sp
   4ce98:	303ff71e 	bne	r6,zero,4ce78 <__alt_data_end+0xfffce678>
   4ce9c:	0005883a 	mov	r2,zero
   4cea0:	dec00104 	addi	sp,sp,4
   4cea4:	f800283a 	ret
   4cea8:	00bfff84 	movi	r2,-2
   4ceac:	003ff706 	br	4ce8c <__alt_data_end+0xfffce68c>

0004ceb0 <_mbtowc_r>:
   4ceb0:	008001b4 	movhi	r2,6
   4ceb4:	defff804 	addi	sp,sp,-32
   4ceb8:	10b55404 	addi	r2,r2,-10928
   4cebc:	dfc00715 	stw	ra,28(sp)
   4cec0:	dc000615 	stw	r16,24(sp)
   4cec4:	14000017 	ldw	r16,0(r2)
   4cec8:	d9000215 	stw	r4,8(sp)
   4cecc:	d9400315 	stw	r5,12(sp)
   4ced0:	d9800415 	stw	r6,16(sp)
   4ced4:	d9c00515 	stw	r7,20(sp)
   4ced8:	004c2c00 	call	4c2c0 <__locale_charset>
   4cedc:	d8800015 	stw	r2,0(sp)
   4cee0:	d8800817 	ldw	r2,32(sp)
   4cee4:	d9c00517 	ldw	r7,20(sp)
   4cee8:	d9800417 	ldw	r6,16(sp)
   4ceec:	d9400317 	ldw	r5,12(sp)
   4cef0:	d9000217 	ldw	r4,8(sp)
   4cef4:	d8800115 	stw	r2,4(sp)
   4cef8:	803ee83a 	callr	r16
   4cefc:	dfc00717 	ldw	ra,28(sp)
   4cf00:	dc000617 	ldw	r16,24(sp)
   4cf04:	dec00804 	addi	sp,sp,32
   4cf08:	f800283a 	ret

0004cf0c <memchr>:
   4cf0c:	208000cc 	andi	r2,r4,3
   4cf10:	280f883a 	mov	r7,r5
   4cf14:	10003426 	beq	r2,zero,4cfe8 <memchr+0xdc>
   4cf18:	30bfffc4 	addi	r2,r6,-1
   4cf1c:	30001a26 	beq	r6,zero,4cf88 <memchr+0x7c>
   4cf20:	20c00003 	ldbu	r3,0(r4)
   4cf24:	29803fcc 	andi	r6,r5,255
   4cf28:	30c0051e 	bne	r6,r3,4cf40 <memchr+0x34>
   4cf2c:	00001806 	br	4cf90 <memchr+0x84>
   4cf30:	10001526 	beq	r2,zero,4cf88 <memchr+0x7c>
   4cf34:	20c00003 	ldbu	r3,0(r4)
   4cf38:	10bfffc4 	addi	r2,r2,-1
   4cf3c:	30c01426 	beq	r6,r3,4cf90 <memchr+0x84>
   4cf40:	21000044 	addi	r4,r4,1
   4cf44:	20c000cc 	andi	r3,r4,3
   4cf48:	183ff91e 	bne	r3,zero,4cf30 <__alt_data_end+0xfffce730>
   4cf4c:	020000c4 	movi	r8,3
   4cf50:	40801136 	bltu	r8,r2,4cf98 <memchr+0x8c>
   4cf54:	10000c26 	beq	r2,zero,4cf88 <memchr+0x7c>
   4cf58:	20c00003 	ldbu	r3,0(r4)
   4cf5c:	29403fcc 	andi	r5,r5,255
   4cf60:	28c00b26 	beq	r5,r3,4cf90 <memchr+0x84>
   4cf64:	20c00044 	addi	r3,r4,1
   4cf68:	39803fcc 	andi	r6,r7,255
   4cf6c:	2089883a 	add	r4,r4,r2
   4cf70:	00000306 	br	4cf80 <memchr+0x74>
   4cf74:	18c00044 	addi	r3,r3,1
   4cf78:	197fffc3 	ldbu	r5,-1(r3)
   4cf7c:	31400526 	beq	r6,r5,4cf94 <memchr+0x88>
   4cf80:	1805883a 	mov	r2,r3
   4cf84:	20fffb1e 	bne	r4,r3,4cf74 <__alt_data_end+0xfffce774>
   4cf88:	0005883a 	mov	r2,zero
   4cf8c:	f800283a 	ret
   4cf90:	2005883a 	mov	r2,r4
   4cf94:	f800283a 	ret
   4cf98:	28c03fcc 	andi	r3,r5,255
   4cf9c:	1812923a 	slli	r9,r3,8
   4cfa0:	02ffbff4 	movhi	r11,65279
   4cfa4:	02a02074 	movhi	r10,32897
   4cfa8:	48d2b03a 	or	r9,r9,r3
   4cfac:	4806943a 	slli	r3,r9,16
   4cfb0:	5affbfc4 	addi	r11,r11,-257
   4cfb4:	52a02004 	addi	r10,r10,-32640
   4cfb8:	48d2b03a 	or	r9,r9,r3
   4cfbc:	20c00017 	ldw	r3,0(r4)
   4cfc0:	48c6f03a 	xor	r3,r9,r3
   4cfc4:	1acd883a 	add	r6,r3,r11
   4cfc8:	00c6303a 	nor	r3,zero,r3
   4cfcc:	30c6703a 	and	r3,r6,r3
   4cfd0:	1a86703a 	and	r3,r3,r10
   4cfd4:	183fe01e 	bne	r3,zero,4cf58 <__alt_data_end+0xfffce758>
   4cfd8:	10bfff04 	addi	r2,r2,-4
   4cfdc:	21000104 	addi	r4,r4,4
   4cfe0:	40bff636 	bltu	r8,r2,4cfbc <__alt_data_end+0xfffce7bc>
   4cfe4:	003fdb06 	br	4cf54 <__alt_data_end+0xfffce754>
   4cfe8:	3005883a 	mov	r2,r6
   4cfec:	003fd706 	br	4cf4c <__alt_data_end+0xfffce74c>

0004cff0 <memmove>:
   4cff0:	2005883a 	mov	r2,r4
   4cff4:	29000b2e 	bgeu	r5,r4,4d024 <memmove+0x34>
   4cff8:	298f883a 	add	r7,r5,r6
   4cffc:	21c0092e 	bgeu	r4,r7,4d024 <memmove+0x34>
   4d000:	2187883a 	add	r3,r4,r6
   4d004:	198bc83a 	sub	r5,r3,r6
   4d008:	30004826 	beq	r6,zero,4d12c <memmove+0x13c>
   4d00c:	39ffffc4 	addi	r7,r7,-1
   4d010:	39000003 	ldbu	r4,0(r7)
   4d014:	18ffffc4 	addi	r3,r3,-1
   4d018:	19000005 	stb	r4,0(r3)
   4d01c:	28fffb1e 	bne	r5,r3,4d00c <__alt_data_end+0xfffce80c>
   4d020:	f800283a 	ret
   4d024:	00c003c4 	movi	r3,15
   4d028:	1980412e 	bgeu	r3,r6,4d130 <memmove+0x140>
   4d02c:	2886b03a 	or	r3,r5,r2
   4d030:	18c000cc 	andi	r3,r3,3
   4d034:	1800401e 	bne	r3,zero,4d138 <memmove+0x148>
   4d038:	33fffc04 	addi	r15,r6,-16
   4d03c:	781ed13a 	srli	r15,r15,4
   4d040:	28c00104 	addi	r3,r5,4
   4d044:	13400104 	addi	r13,r2,4
   4d048:	781c913a 	slli	r14,r15,4
   4d04c:	2b000204 	addi	r12,r5,8
   4d050:	12c00204 	addi	r11,r2,8
   4d054:	73800504 	addi	r14,r14,20
   4d058:	2a800304 	addi	r10,r5,12
   4d05c:	12400304 	addi	r9,r2,12
   4d060:	2b9d883a 	add	r14,r5,r14
   4d064:	2811883a 	mov	r8,r5
   4d068:	100f883a 	mov	r7,r2
   4d06c:	41000017 	ldw	r4,0(r8)
   4d070:	39c00404 	addi	r7,r7,16
   4d074:	18c00404 	addi	r3,r3,16
   4d078:	393ffc15 	stw	r4,-16(r7)
   4d07c:	193ffc17 	ldw	r4,-16(r3)
   4d080:	6b400404 	addi	r13,r13,16
   4d084:	5ac00404 	addi	r11,r11,16
   4d088:	693ffc15 	stw	r4,-16(r13)
   4d08c:	61000017 	ldw	r4,0(r12)
   4d090:	4a400404 	addi	r9,r9,16
   4d094:	42000404 	addi	r8,r8,16
   4d098:	593ffc15 	stw	r4,-16(r11)
   4d09c:	51000017 	ldw	r4,0(r10)
   4d0a0:	63000404 	addi	r12,r12,16
   4d0a4:	52800404 	addi	r10,r10,16
   4d0a8:	493ffc15 	stw	r4,-16(r9)
   4d0ac:	1bbfef1e 	bne	r3,r14,4d06c <__alt_data_end+0xfffce86c>
   4d0b0:	79000044 	addi	r4,r15,1
   4d0b4:	2008913a 	slli	r4,r4,4
   4d0b8:	328003cc 	andi	r10,r6,15
   4d0bc:	02c000c4 	movi	r11,3
   4d0c0:	1107883a 	add	r3,r2,r4
   4d0c4:	290b883a 	add	r5,r5,r4
   4d0c8:	5a801e2e 	bgeu	r11,r10,4d144 <memmove+0x154>
   4d0cc:	1813883a 	mov	r9,r3
   4d0d0:	2811883a 	mov	r8,r5
   4d0d4:	500f883a 	mov	r7,r10
   4d0d8:	41000017 	ldw	r4,0(r8)
   4d0dc:	4a400104 	addi	r9,r9,4
   4d0e0:	39ffff04 	addi	r7,r7,-4
   4d0e4:	493fff15 	stw	r4,-4(r9)
   4d0e8:	42000104 	addi	r8,r8,4
   4d0ec:	59fffa36 	bltu	r11,r7,4d0d8 <__alt_data_end+0xfffce8d8>
   4d0f0:	513fff04 	addi	r4,r10,-4
   4d0f4:	2008d0ba 	srli	r4,r4,2
   4d0f8:	318000cc 	andi	r6,r6,3
   4d0fc:	21000044 	addi	r4,r4,1
   4d100:	2109883a 	add	r4,r4,r4
   4d104:	2109883a 	add	r4,r4,r4
   4d108:	1907883a 	add	r3,r3,r4
   4d10c:	290b883a 	add	r5,r5,r4
   4d110:	30000b26 	beq	r6,zero,4d140 <memmove+0x150>
   4d114:	198d883a 	add	r6,r3,r6
   4d118:	29c00003 	ldbu	r7,0(r5)
   4d11c:	18c00044 	addi	r3,r3,1
   4d120:	29400044 	addi	r5,r5,1
   4d124:	19ffffc5 	stb	r7,-1(r3)
   4d128:	19bffb1e 	bne	r3,r6,4d118 <__alt_data_end+0xfffce918>
   4d12c:	f800283a 	ret
   4d130:	1007883a 	mov	r3,r2
   4d134:	003ff606 	br	4d110 <__alt_data_end+0xfffce910>
   4d138:	1007883a 	mov	r3,r2
   4d13c:	003ff506 	br	4d114 <__alt_data_end+0xfffce914>
   4d140:	f800283a 	ret
   4d144:	500d883a 	mov	r6,r10
   4d148:	003ff106 	br	4d110 <__alt_data_end+0xfffce910>

0004d14c <memset>:
   4d14c:	20c000cc 	andi	r3,r4,3
   4d150:	2005883a 	mov	r2,r4
   4d154:	18004426 	beq	r3,zero,4d268 <memset+0x11c>
   4d158:	31ffffc4 	addi	r7,r6,-1
   4d15c:	30004026 	beq	r6,zero,4d260 <memset+0x114>
   4d160:	2813883a 	mov	r9,r5
   4d164:	200d883a 	mov	r6,r4
   4d168:	2007883a 	mov	r3,r4
   4d16c:	00000406 	br	4d180 <memset+0x34>
   4d170:	3a3fffc4 	addi	r8,r7,-1
   4d174:	31800044 	addi	r6,r6,1
   4d178:	38003926 	beq	r7,zero,4d260 <memset+0x114>
   4d17c:	400f883a 	mov	r7,r8
   4d180:	18c00044 	addi	r3,r3,1
   4d184:	32400005 	stb	r9,0(r6)
   4d188:	1a0000cc 	andi	r8,r3,3
   4d18c:	403ff81e 	bne	r8,zero,4d170 <__alt_data_end+0xfffce970>
   4d190:	010000c4 	movi	r4,3
   4d194:	21c02d2e 	bgeu	r4,r7,4d24c <memset+0x100>
   4d198:	29003fcc 	andi	r4,r5,255
   4d19c:	200c923a 	slli	r6,r4,8
   4d1a0:	3108b03a 	or	r4,r6,r4
   4d1a4:	200c943a 	slli	r6,r4,16
   4d1a8:	218cb03a 	or	r6,r4,r6
   4d1ac:	010003c4 	movi	r4,15
   4d1b0:	21c0182e 	bgeu	r4,r7,4d214 <memset+0xc8>
   4d1b4:	3b3ffc04 	addi	r12,r7,-16
   4d1b8:	6018d13a 	srli	r12,r12,4
   4d1bc:	1a000104 	addi	r8,r3,4
   4d1c0:	1ac00204 	addi	r11,r3,8
   4d1c4:	6008913a 	slli	r4,r12,4
   4d1c8:	1a800304 	addi	r10,r3,12
   4d1cc:	1813883a 	mov	r9,r3
   4d1d0:	21000504 	addi	r4,r4,20
   4d1d4:	1909883a 	add	r4,r3,r4
   4d1d8:	49800015 	stw	r6,0(r9)
   4d1dc:	41800015 	stw	r6,0(r8)
   4d1e0:	59800015 	stw	r6,0(r11)
   4d1e4:	51800015 	stw	r6,0(r10)
   4d1e8:	42000404 	addi	r8,r8,16
   4d1ec:	4a400404 	addi	r9,r9,16
   4d1f0:	5ac00404 	addi	r11,r11,16
   4d1f4:	52800404 	addi	r10,r10,16
   4d1f8:	413ff71e 	bne	r8,r4,4d1d8 <__alt_data_end+0xfffce9d8>
   4d1fc:	63000044 	addi	r12,r12,1
   4d200:	6018913a 	slli	r12,r12,4
   4d204:	39c003cc 	andi	r7,r7,15
   4d208:	010000c4 	movi	r4,3
   4d20c:	1b07883a 	add	r3,r3,r12
   4d210:	21c00e2e 	bgeu	r4,r7,4d24c <memset+0x100>
   4d214:	1813883a 	mov	r9,r3
   4d218:	3811883a 	mov	r8,r7
   4d21c:	010000c4 	movi	r4,3
   4d220:	49800015 	stw	r6,0(r9)
   4d224:	423fff04 	addi	r8,r8,-4
   4d228:	4a400104 	addi	r9,r9,4
   4d22c:	223ffc36 	bltu	r4,r8,4d220 <__alt_data_end+0xfffcea20>
   4d230:	393fff04 	addi	r4,r7,-4
   4d234:	2008d0ba 	srli	r4,r4,2
   4d238:	39c000cc 	andi	r7,r7,3
   4d23c:	21000044 	addi	r4,r4,1
   4d240:	2109883a 	add	r4,r4,r4
   4d244:	2109883a 	add	r4,r4,r4
   4d248:	1907883a 	add	r3,r3,r4
   4d24c:	38000526 	beq	r7,zero,4d264 <memset+0x118>
   4d250:	19cf883a 	add	r7,r3,r7
   4d254:	19400005 	stb	r5,0(r3)
   4d258:	18c00044 	addi	r3,r3,1
   4d25c:	38fffd1e 	bne	r7,r3,4d254 <__alt_data_end+0xfffcea54>
   4d260:	f800283a 	ret
   4d264:	f800283a 	ret
   4d268:	2007883a 	mov	r3,r4
   4d26c:	300f883a 	mov	r7,r6
   4d270:	003fc706 	br	4d190 <__alt_data_end+0xfffce990>

0004d274 <_Balloc>:
   4d274:	20801317 	ldw	r2,76(r4)
   4d278:	defffc04 	addi	sp,sp,-16
   4d27c:	dc400115 	stw	r17,4(sp)
   4d280:	dc000015 	stw	r16,0(sp)
   4d284:	dfc00315 	stw	ra,12(sp)
   4d288:	dc800215 	stw	r18,8(sp)
   4d28c:	2023883a 	mov	r17,r4
   4d290:	2821883a 	mov	r16,r5
   4d294:	10000f26 	beq	r2,zero,4d2d4 <_Balloc+0x60>
   4d298:	8407883a 	add	r3,r16,r16
   4d29c:	18c7883a 	add	r3,r3,r3
   4d2a0:	10c7883a 	add	r3,r2,r3
   4d2a4:	18800017 	ldw	r2,0(r3)
   4d2a8:	10001126 	beq	r2,zero,4d2f0 <_Balloc+0x7c>
   4d2ac:	11000017 	ldw	r4,0(r2)
   4d2b0:	19000015 	stw	r4,0(r3)
   4d2b4:	10000415 	stw	zero,16(r2)
   4d2b8:	10000315 	stw	zero,12(r2)
   4d2bc:	dfc00317 	ldw	ra,12(sp)
   4d2c0:	dc800217 	ldw	r18,8(sp)
   4d2c4:	dc400117 	ldw	r17,4(sp)
   4d2c8:	dc000017 	ldw	r16,0(sp)
   4d2cc:	dec00404 	addi	sp,sp,16
   4d2d0:	f800283a 	ret
   4d2d4:	01800844 	movi	r6,33
   4d2d8:	01400104 	movi	r5,4
   4d2dc:	0054b7c0 	call	54b7c <_calloc_r>
   4d2e0:	88801315 	stw	r2,76(r17)
   4d2e4:	103fec1e 	bne	r2,zero,4d298 <__alt_data_end+0xfffcea98>
   4d2e8:	0005883a 	mov	r2,zero
   4d2ec:	003ff306 	br	4d2bc <__alt_data_end+0xfffceabc>
   4d2f0:	01400044 	movi	r5,1
   4d2f4:	2c24983a 	sll	r18,r5,r16
   4d2f8:	8809883a 	mov	r4,r17
   4d2fc:	91800144 	addi	r6,r18,5
   4d300:	318d883a 	add	r6,r6,r6
   4d304:	318d883a 	add	r6,r6,r6
   4d308:	0054b7c0 	call	54b7c <_calloc_r>
   4d30c:	103ff626 	beq	r2,zero,4d2e8 <__alt_data_end+0xfffceae8>
   4d310:	14000115 	stw	r16,4(r2)
   4d314:	14800215 	stw	r18,8(r2)
   4d318:	003fe606 	br	4d2b4 <__alt_data_end+0xfffceab4>

0004d31c <_Bfree>:
   4d31c:	28000826 	beq	r5,zero,4d340 <_Bfree+0x24>
   4d320:	28c00117 	ldw	r3,4(r5)
   4d324:	20801317 	ldw	r2,76(r4)
   4d328:	18c7883a 	add	r3,r3,r3
   4d32c:	18c7883a 	add	r3,r3,r3
   4d330:	10c5883a 	add	r2,r2,r3
   4d334:	10c00017 	ldw	r3,0(r2)
   4d338:	28c00015 	stw	r3,0(r5)
   4d33c:	11400015 	stw	r5,0(r2)
   4d340:	f800283a 	ret

0004d344 <__multadd>:
   4d344:	defffa04 	addi	sp,sp,-24
   4d348:	dc800315 	stw	r18,12(sp)
   4d34c:	dc400215 	stw	r17,8(sp)
   4d350:	dc000115 	stw	r16,4(sp)
   4d354:	2823883a 	mov	r17,r5
   4d358:	2c000417 	ldw	r16,16(r5)
   4d35c:	dfc00515 	stw	ra,20(sp)
   4d360:	dcc00415 	stw	r19,16(sp)
   4d364:	2025883a 	mov	r18,r4
   4d368:	29400504 	addi	r5,r5,20
   4d36c:	0011883a 	mov	r8,zero
   4d370:	28c00017 	ldw	r3,0(r5)
   4d374:	29400104 	addi	r5,r5,4
   4d378:	42000044 	addi	r8,r8,1
   4d37c:	18bfffcc 	andi	r2,r3,65535
   4d380:	1185383a 	mul	r2,r2,r6
   4d384:	1806d43a 	srli	r3,r3,16
   4d388:	11cf883a 	add	r7,r2,r7
   4d38c:	3808d43a 	srli	r4,r7,16
   4d390:	1987383a 	mul	r3,r3,r6
   4d394:	38bfffcc 	andi	r2,r7,65535
   4d398:	1907883a 	add	r3,r3,r4
   4d39c:	1808943a 	slli	r4,r3,16
   4d3a0:	180ed43a 	srli	r7,r3,16
   4d3a4:	2085883a 	add	r2,r4,r2
   4d3a8:	28bfff15 	stw	r2,-4(r5)
   4d3ac:	443ff016 	blt	r8,r16,4d370 <__alt_data_end+0xfffceb70>
   4d3b0:	38000926 	beq	r7,zero,4d3d8 <__multadd+0x94>
   4d3b4:	88800217 	ldw	r2,8(r17)
   4d3b8:	80800f0e 	bge	r16,r2,4d3f8 <__multadd+0xb4>
   4d3bc:	80800144 	addi	r2,r16,5
   4d3c0:	1085883a 	add	r2,r2,r2
   4d3c4:	1085883a 	add	r2,r2,r2
   4d3c8:	8885883a 	add	r2,r17,r2
   4d3cc:	11c00015 	stw	r7,0(r2)
   4d3d0:	84000044 	addi	r16,r16,1
   4d3d4:	8c000415 	stw	r16,16(r17)
   4d3d8:	8805883a 	mov	r2,r17
   4d3dc:	dfc00517 	ldw	ra,20(sp)
   4d3e0:	dcc00417 	ldw	r19,16(sp)
   4d3e4:	dc800317 	ldw	r18,12(sp)
   4d3e8:	dc400217 	ldw	r17,8(sp)
   4d3ec:	dc000117 	ldw	r16,4(sp)
   4d3f0:	dec00604 	addi	sp,sp,24
   4d3f4:	f800283a 	ret
   4d3f8:	89400117 	ldw	r5,4(r17)
   4d3fc:	9009883a 	mov	r4,r18
   4d400:	d9c00015 	stw	r7,0(sp)
   4d404:	29400044 	addi	r5,r5,1
   4d408:	004d2740 	call	4d274 <_Balloc>
   4d40c:	89800417 	ldw	r6,16(r17)
   4d410:	89400304 	addi	r5,r17,12
   4d414:	11000304 	addi	r4,r2,12
   4d418:	31800084 	addi	r6,r6,2
   4d41c:	318d883a 	add	r6,r6,r6
   4d420:	318d883a 	add	r6,r6,r6
   4d424:	1027883a 	mov	r19,r2
   4d428:	00456300 	call	45630 <memcpy>
   4d42c:	d9c00017 	ldw	r7,0(sp)
   4d430:	88000a26 	beq	r17,zero,4d45c <__multadd+0x118>
   4d434:	88c00117 	ldw	r3,4(r17)
   4d438:	90801317 	ldw	r2,76(r18)
   4d43c:	18c7883a 	add	r3,r3,r3
   4d440:	18c7883a 	add	r3,r3,r3
   4d444:	10c5883a 	add	r2,r2,r3
   4d448:	10c00017 	ldw	r3,0(r2)
   4d44c:	88c00015 	stw	r3,0(r17)
   4d450:	14400015 	stw	r17,0(r2)
   4d454:	9823883a 	mov	r17,r19
   4d458:	003fd806 	br	4d3bc <__alt_data_end+0xfffcebbc>
   4d45c:	9823883a 	mov	r17,r19
   4d460:	003fd606 	br	4d3bc <__alt_data_end+0xfffcebbc>

0004d464 <__s2b>:
   4d464:	defff904 	addi	sp,sp,-28
   4d468:	dc400115 	stw	r17,4(sp)
   4d46c:	dc000015 	stw	r16,0(sp)
   4d470:	2023883a 	mov	r17,r4
   4d474:	2821883a 	mov	r16,r5
   4d478:	39000204 	addi	r4,r7,8
   4d47c:	01400244 	movi	r5,9
   4d480:	dcc00315 	stw	r19,12(sp)
   4d484:	dc800215 	stw	r18,8(sp)
   4d488:	dfc00615 	stw	ra,24(sp)
   4d48c:	dd400515 	stw	r21,20(sp)
   4d490:	dd000415 	stw	r20,16(sp)
   4d494:	3825883a 	mov	r18,r7
   4d498:	3027883a 	mov	r19,r6
   4d49c:	004547c0 	call	4547c <__divsi3>
   4d4a0:	00c00044 	movi	r3,1
   4d4a4:	000b883a 	mov	r5,zero
   4d4a8:	1880030e 	bge	r3,r2,4d4b8 <__s2b+0x54>
   4d4ac:	18c7883a 	add	r3,r3,r3
   4d4b0:	29400044 	addi	r5,r5,1
   4d4b4:	18bffd16 	blt	r3,r2,4d4ac <__alt_data_end+0xfffcecac>
   4d4b8:	8809883a 	mov	r4,r17
   4d4bc:	004d2740 	call	4d274 <_Balloc>
   4d4c0:	d8c00717 	ldw	r3,28(sp)
   4d4c4:	10c00515 	stw	r3,20(r2)
   4d4c8:	00c00044 	movi	r3,1
   4d4cc:	10c00415 	stw	r3,16(r2)
   4d4d0:	00c00244 	movi	r3,9
   4d4d4:	1cc0210e 	bge	r3,r19,4d55c <__s2b+0xf8>
   4d4d8:	80eb883a 	add	r21,r16,r3
   4d4dc:	a829883a 	mov	r20,r21
   4d4e0:	84e1883a 	add	r16,r16,r19
   4d4e4:	a1c00007 	ldb	r7,0(r20)
   4d4e8:	01800284 	movi	r6,10
   4d4ec:	a5000044 	addi	r20,r20,1
   4d4f0:	100b883a 	mov	r5,r2
   4d4f4:	39fff404 	addi	r7,r7,-48
   4d4f8:	8809883a 	mov	r4,r17
   4d4fc:	004d3440 	call	4d344 <__multadd>
   4d500:	a43ff81e 	bne	r20,r16,4d4e4 <__alt_data_end+0xfffcece4>
   4d504:	ace1883a 	add	r16,r21,r19
   4d508:	843ffe04 	addi	r16,r16,-8
   4d50c:	9c800a0e 	bge	r19,r18,4d538 <__s2b+0xd4>
   4d510:	94e5c83a 	sub	r18,r18,r19
   4d514:	84a5883a 	add	r18,r16,r18
   4d518:	81c00007 	ldb	r7,0(r16)
   4d51c:	01800284 	movi	r6,10
   4d520:	84000044 	addi	r16,r16,1
   4d524:	100b883a 	mov	r5,r2
   4d528:	39fff404 	addi	r7,r7,-48
   4d52c:	8809883a 	mov	r4,r17
   4d530:	004d3440 	call	4d344 <__multadd>
   4d534:	84bff81e 	bne	r16,r18,4d518 <__alt_data_end+0xfffced18>
   4d538:	dfc00617 	ldw	ra,24(sp)
   4d53c:	dd400517 	ldw	r21,20(sp)
   4d540:	dd000417 	ldw	r20,16(sp)
   4d544:	dcc00317 	ldw	r19,12(sp)
   4d548:	dc800217 	ldw	r18,8(sp)
   4d54c:	dc400117 	ldw	r17,4(sp)
   4d550:	dc000017 	ldw	r16,0(sp)
   4d554:	dec00704 	addi	sp,sp,28
   4d558:	f800283a 	ret
   4d55c:	84000284 	addi	r16,r16,10
   4d560:	1827883a 	mov	r19,r3
   4d564:	003fe906 	br	4d50c <__alt_data_end+0xfffced0c>

0004d568 <__hi0bits>:
   4d568:	20bfffec 	andhi	r2,r4,65535
   4d56c:	1000141e 	bne	r2,zero,4d5c0 <__hi0bits+0x58>
   4d570:	2008943a 	slli	r4,r4,16
   4d574:	00800404 	movi	r2,16
   4d578:	20ffc02c 	andhi	r3,r4,65280
   4d57c:	1800021e 	bne	r3,zero,4d588 <__hi0bits+0x20>
   4d580:	2008923a 	slli	r4,r4,8
   4d584:	10800204 	addi	r2,r2,8
   4d588:	20fc002c 	andhi	r3,r4,61440
   4d58c:	1800021e 	bne	r3,zero,4d598 <__hi0bits+0x30>
   4d590:	2008913a 	slli	r4,r4,4
   4d594:	10800104 	addi	r2,r2,4
   4d598:	20f0002c 	andhi	r3,r4,49152
   4d59c:	1800031e 	bne	r3,zero,4d5ac <__hi0bits+0x44>
   4d5a0:	2109883a 	add	r4,r4,r4
   4d5a4:	10800084 	addi	r2,r2,2
   4d5a8:	2109883a 	add	r4,r4,r4
   4d5ac:	20000316 	blt	r4,zero,4d5bc <__hi0bits+0x54>
   4d5b0:	2110002c 	andhi	r4,r4,16384
   4d5b4:	2000041e 	bne	r4,zero,4d5c8 <__hi0bits+0x60>
   4d5b8:	00800804 	movi	r2,32
   4d5bc:	f800283a 	ret
   4d5c0:	0005883a 	mov	r2,zero
   4d5c4:	003fec06 	br	4d578 <__alt_data_end+0xfffced78>
   4d5c8:	10800044 	addi	r2,r2,1
   4d5cc:	f800283a 	ret

0004d5d0 <__lo0bits>:
   4d5d0:	20c00017 	ldw	r3,0(r4)
   4d5d4:	188001cc 	andi	r2,r3,7
   4d5d8:	10000826 	beq	r2,zero,4d5fc <__lo0bits+0x2c>
   4d5dc:	1880004c 	andi	r2,r3,1
   4d5e0:	1000211e 	bne	r2,zero,4d668 <__lo0bits+0x98>
   4d5e4:	1880008c 	andi	r2,r3,2
   4d5e8:	1000211e 	bne	r2,zero,4d670 <__lo0bits+0xa0>
   4d5ec:	1806d0ba 	srli	r3,r3,2
   4d5f0:	00800084 	movi	r2,2
   4d5f4:	20c00015 	stw	r3,0(r4)
   4d5f8:	f800283a 	ret
   4d5fc:	18bfffcc 	andi	r2,r3,65535
   4d600:	10001326 	beq	r2,zero,4d650 <__lo0bits+0x80>
   4d604:	0005883a 	mov	r2,zero
   4d608:	19403fcc 	andi	r5,r3,255
   4d60c:	2800021e 	bne	r5,zero,4d618 <__lo0bits+0x48>
   4d610:	1806d23a 	srli	r3,r3,8
   4d614:	10800204 	addi	r2,r2,8
   4d618:	194003cc 	andi	r5,r3,15
   4d61c:	2800021e 	bne	r5,zero,4d628 <__lo0bits+0x58>
   4d620:	1806d13a 	srli	r3,r3,4
   4d624:	10800104 	addi	r2,r2,4
   4d628:	194000cc 	andi	r5,r3,3
   4d62c:	2800021e 	bne	r5,zero,4d638 <__lo0bits+0x68>
   4d630:	1806d0ba 	srli	r3,r3,2
   4d634:	10800084 	addi	r2,r2,2
   4d638:	1940004c 	andi	r5,r3,1
   4d63c:	2800081e 	bne	r5,zero,4d660 <__lo0bits+0x90>
   4d640:	1806d07a 	srli	r3,r3,1
   4d644:	1800051e 	bne	r3,zero,4d65c <__lo0bits+0x8c>
   4d648:	00800804 	movi	r2,32
   4d64c:	f800283a 	ret
   4d650:	1806d43a 	srli	r3,r3,16
   4d654:	00800404 	movi	r2,16
   4d658:	003feb06 	br	4d608 <__alt_data_end+0xfffcee08>
   4d65c:	10800044 	addi	r2,r2,1
   4d660:	20c00015 	stw	r3,0(r4)
   4d664:	f800283a 	ret
   4d668:	0005883a 	mov	r2,zero
   4d66c:	f800283a 	ret
   4d670:	1806d07a 	srli	r3,r3,1
   4d674:	00800044 	movi	r2,1
   4d678:	20c00015 	stw	r3,0(r4)
   4d67c:	f800283a 	ret

0004d680 <__i2b>:
   4d680:	defffd04 	addi	sp,sp,-12
   4d684:	dc000015 	stw	r16,0(sp)
   4d688:	04000044 	movi	r16,1
   4d68c:	dc400115 	stw	r17,4(sp)
   4d690:	2823883a 	mov	r17,r5
   4d694:	800b883a 	mov	r5,r16
   4d698:	dfc00215 	stw	ra,8(sp)
   4d69c:	004d2740 	call	4d274 <_Balloc>
   4d6a0:	14400515 	stw	r17,20(r2)
   4d6a4:	14000415 	stw	r16,16(r2)
   4d6a8:	dfc00217 	ldw	ra,8(sp)
   4d6ac:	dc400117 	ldw	r17,4(sp)
   4d6b0:	dc000017 	ldw	r16,0(sp)
   4d6b4:	dec00304 	addi	sp,sp,12
   4d6b8:	f800283a 	ret

0004d6bc <__multiply>:
   4d6bc:	defffa04 	addi	sp,sp,-24
   4d6c0:	dcc00315 	stw	r19,12(sp)
   4d6c4:	dc800215 	stw	r18,8(sp)
   4d6c8:	34c00417 	ldw	r19,16(r6)
   4d6cc:	2c800417 	ldw	r18,16(r5)
   4d6d0:	dd000415 	stw	r20,16(sp)
   4d6d4:	dc400115 	stw	r17,4(sp)
   4d6d8:	dfc00515 	stw	ra,20(sp)
   4d6dc:	dc000015 	stw	r16,0(sp)
   4d6e0:	2829883a 	mov	r20,r5
   4d6e4:	3023883a 	mov	r17,r6
   4d6e8:	94c0050e 	bge	r18,r19,4d700 <__multiply+0x44>
   4d6ec:	9007883a 	mov	r3,r18
   4d6f0:	3029883a 	mov	r20,r6
   4d6f4:	9825883a 	mov	r18,r19
   4d6f8:	2823883a 	mov	r17,r5
   4d6fc:	1827883a 	mov	r19,r3
   4d700:	a0800217 	ldw	r2,8(r20)
   4d704:	94e1883a 	add	r16,r18,r19
   4d708:	a1400117 	ldw	r5,4(r20)
   4d70c:	1400010e 	bge	r2,r16,4d714 <__multiply+0x58>
   4d710:	29400044 	addi	r5,r5,1
   4d714:	004d2740 	call	4d274 <_Balloc>
   4d718:	8415883a 	add	r10,r16,r16
   4d71c:	12c00504 	addi	r11,r2,20
   4d720:	5295883a 	add	r10,r10,r10
   4d724:	5a95883a 	add	r10,r11,r10
   4d728:	5807883a 	mov	r3,r11
   4d72c:	5a80032e 	bgeu	r11,r10,4d73c <__multiply+0x80>
   4d730:	18000015 	stw	zero,0(r3)
   4d734:	18c00104 	addi	r3,r3,4
   4d738:	1abffd36 	bltu	r3,r10,4d730 <__alt_data_end+0xfffcef30>
   4d73c:	9ce7883a 	add	r19,r19,r19
   4d740:	94a5883a 	add	r18,r18,r18
   4d744:	89800504 	addi	r6,r17,20
   4d748:	9ce7883a 	add	r19,r19,r19
   4d74c:	a3400504 	addi	r13,r20,20
   4d750:	94a5883a 	add	r18,r18,r18
   4d754:	34d9883a 	add	r12,r6,r19
   4d758:	6c93883a 	add	r9,r13,r18
   4d75c:	3300422e 	bgeu	r6,r12,4d868 <__multiply+0x1ac>
   4d760:	37c00017 	ldw	ra,0(r6)
   4d764:	fbffffcc 	andi	r15,ra,65535
   4d768:	78001b26 	beq	r15,zero,4d7d8 <__multiply+0x11c>
   4d76c:	5811883a 	mov	r8,r11
   4d770:	681d883a 	mov	r14,r13
   4d774:	000f883a 	mov	r7,zero
   4d778:	71000017 	ldw	r4,0(r14)
   4d77c:	40c00017 	ldw	r3,0(r8)
   4d780:	73800104 	addi	r14,r14,4
   4d784:	217fffcc 	andi	r5,r4,65535
   4d788:	2bcb383a 	mul	r5,r5,r15
   4d78c:	2008d43a 	srli	r4,r4,16
   4d790:	1c7fffcc 	andi	r17,r3,65535
   4d794:	2c4b883a 	add	r5,r5,r17
   4d798:	29cb883a 	add	r5,r5,r7
   4d79c:	23c9383a 	mul	r4,r4,r15
   4d7a0:	1806d43a 	srli	r3,r3,16
   4d7a4:	280ed43a 	srli	r7,r5,16
   4d7a8:	297fffcc 	andi	r5,r5,65535
   4d7ac:	20c7883a 	add	r3,r4,r3
   4d7b0:	19c7883a 	add	r3,r3,r7
   4d7b4:	1808943a 	slli	r4,r3,16
   4d7b8:	4023883a 	mov	r17,r8
   4d7bc:	180ed43a 	srli	r7,r3,16
   4d7c0:	214ab03a 	or	r5,r4,r5
   4d7c4:	41400015 	stw	r5,0(r8)
   4d7c8:	42000104 	addi	r8,r8,4
   4d7cc:	727fea36 	bltu	r14,r9,4d778 <__alt_data_end+0xfffcef78>
   4d7d0:	89c00115 	stw	r7,4(r17)
   4d7d4:	37c00017 	ldw	ra,0(r6)
   4d7d8:	f83ed43a 	srli	ra,ra,16
   4d7dc:	f8001f26 	beq	ra,zero,4d85c <__multiply+0x1a0>
   4d7e0:	58c00017 	ldw	r3,0(r11)
   4d7e4:	681d883a 	mov	r14,r13
   4d7e8:	581f883a 	mov	r15,r11
   4d7ec:	1811883a 	mov	r8,r3
   4d7f0:	5825883a 	mov	r18,r11
   4d7f4:	000f883a 	mov	r7,zero
   4d7f8:	00000106 	br	4d800 <__multiply+0x144>
   4d7fc:	8825883a 	mov	r18,r17
   4d800:	7140000b 	ldhu	r5,0(r14)
   4d804:	4010d43a 	srli	r8,r8,16
   4d808:	193fffcc 	andi	r4,r3,65535
   4d80c:	2fcb383a 	mul	r5,r5,ra
   4d810:	7bc00104 	addi	r15,r15,4
   4d814:	73800104 	addi	r14,r14,4
   4d818:	2a0b883a 	add	r5,r5,r8
   4d81c:	29cb883a 	add	r5,r5,r7
   4d820:	2806943a 	slli	r3,r5,16
   4d824:	94400104 	addi	r17,r18,4
   4d828:	280ad43a 	srli	r5,r5,16
   4d82c:	1908b03a 	or	r4,r3,r4
   4d830:	793fff15 	stw	r4,-4(r15)
   4d834:	70ffff17 	ldw	r3,-4(r14)
   4d838:	8a000017 	ldw	r8,0(r17)
   4d83c:	1806d43a 	srli	r3,r3,16
   4d840:	413fffcc 	andi	r4,r8,65535
   4d844:	1fc7383a 	mul	r3,r3,ra
   4d848:	1907883a 	add	r3,r3,r4
   4d84c:	1947883a 	add	r3,r3,r5
   4d850:	180ed43a 	srli	r7,r3,16
   4d854:	727fe936 	bltu	r14,r9,4d7fc <__alt_data_end+0xfffceffc>
   4d858:	90c00115 	stw	r3,4(r18)
   4d85c:	31800104 	addi	r6,r6,4
   4d860:	5ac00104 	addi	r11,r11,4
   4d864:	333fbe36 	bltu	r6,r12,4d760 <__alt_data_end+0xfffcef60>
   4d868:	0400090e 	bge	zero,r16,4d890 <__multiply+0x1d4>
   4d86c:	50ffff17 	ldw	r3,-4(r10)
   4d870:	52bfff04 	addi	r10,r10,-4
   4d874:	18000326 	beq	r3,zero,4d884 <__multiply+0x1c8>
   4d878:	00000506 	br	4d890 <__multiply+0x1d4>
   4d87c:	50c00017 	ldw	r3,0(r10)
   4d880:	1800031e 	bne	r3,zero,4d890 <__multiply+0x1d4>
   4d884:	843fffc4 	addi	r16,r16,-1
   4d888:	52bfff04 	addi	r10,r10,-4
   4d88c:	803ffb1e 	bne	r16,zero,4d87c <__alt_data_end+0xfffcf07c>
   4d890:	14000415 	stw	r16,16(r2)
   4d894:	dfc00517 	ldw	ra,20(sp)
   4d898:	dd000417 	ldw	r20,16(sp)
   4d89c:	dcc00317 	ldw	r19,12(sp)
   4d8a0:	dc800217 	ldw	r18,8(sp)
   4d8a4:	dc400117 	ldw	r17,4(sp)
   4d8a8:	dc000017 	ldw	r16,0(sp)
   4d8ac:	dec00604 	addi	sp,sp,24
   4d8b0:	f800283a 	ret

0004d8b4 <__pow5mult>:
   4d8b4:	defffa04 	addi	sp,sp,-24
   4d8b8:	dcc00315 	stw	r19,12(sp)
   4d8bc:	dc000015 	stw	r16,0(sp)
   4d8c0:	dfc00515 	stw	ra,20(sp)
   4d8c4:	dd000415 	stw	r20,16(sp)
   4d8c8:	dc800215 	stw	r18,8(sp)
   4d8cc:	dc400115 	stw	r17,4(sp)
   4d8d0:	308000cc 	andi	r2,r6,3
   4d8d4:	3021883a 	mov	r16,r6
   4d8d8:	2027883a 	mov	r19,r4
   4d8dc:	10002f1e 	bne	r2,zero,4d99c <__pow5mult+0xe8>
   4d8e0:	2825883a 	mov	r18,r5
   4d8e4:	8021d0ba 	srai	r16,r16,2
   4d8e8:	80001a26 	beq	r16,zero,4d954 <__pow5mult+0xa0>
   4d8ec:	9c401217 	ldw	r17,72(r19)
   4d8f0:	8800061e 	bne	r17,zero,4d90c <__pow5mult+0x58>
   4d8f4:	00003406 	br	4d9c8 <__pow5mult+0x114>
   4d8f8:	8021d07a 	srai	r16,r16,1
   4d8fc:	80001526 	beq	r16,zero,4d954 <__pow5mult+0xa0>
   4d900:	88800017 	ldw	r2,0(r17)
   4d904:	10001c26 	beq	r2,zero,4d978 <__pow5mult+0xc4>
   4d908:	1023883a 	mov	r17,r2
   4d90c:	8080004c 	andi	r2,r16,1
   4d910:	103ff926 	beq	r2,zero,4d8f8 <__alt_data_end+0xfffcf0f8>
   4d914:	880d883a 	mov	r6,r17
   4d918:	900b883a 	mov	r5,r18
   4d91c:	9809883a 	mov	r4,r19
   4d920:	004d6bc0 	call	4d6bc <__multiply>
   4d924:	90001b26 	beq	r18,zero,4d994 <__pow5mult+0xe0>
   4d928:	91000117 	ldw	r4,4(r18)
   4d92c:	98c01317 	ldw	r3,76(r19)
   4d930:	8021d07a 	srai	r16,r16,1
   4d934:	2109883a 	add	r4,r4,r4
   4d938:	2109883a 	add	r4,r4,r4
   4d93c:	1907883a 	add	r3,r3,r4
   4d940:	19000017 	ldw	r4,0(r3)
   4d944:	91000015 	stw	r4,0(r18)
   4d948:	1c800015 	stw	r18,0(r3)
   4d94c:	1025883a 	mov	r18,r2
   4d950:	803feb1e 	bne	r16,zero,4d900 <__alt_data_end+0xfffcf100>
   4d954:	9005883a 	mov	r2,r18
   4d958:	dfc00517 	ldw	ra,20(sp)
   4d95c:	dd000417 	ldw	r20,16(sp)
   4d960:	dcc00317 	ldw	r19,12(sp)
   4d964:	dc800217 	ldw	r18,8(sp)
   4d968:	dc400117 	ldw	r17,4(sp)
   4d96c:	dc000017 	ldw	r16,0(sp)
   4d970:	dec00604 	addi	sp,sp,24
   4d974:	f800283a 	ret
   4d978:	880d883a 	mov	r6,r17
   4d97c:	880b883a 	mov	r5,r17
   4d980:	9809883a 	mov	r4,r19
   4d984:	004d6bc0 	call	4d6bc <__multiply>
   4d988:	88800015 	stw	r2,0(r17)
   4d98c:	10000015 	stw	zero,0(r2)
   4d990:	003fdd06 	br	4d908 <__alt_data_end+0xfffcf108>
   4d994:	1025883a 	mov	r18,r2
   4d998:	003fd706 	br	4d8f8 <__alt_data_end+0xfffcf0f8>
   4d99c:	10bfffc4 	addi	r2,r2,-1
   4d9a0:	1085883a 	add	r2,r2,r2
   4d9a4:	00c001b4 	movhi	r3,6
   4d9a8:	18ed4f04 	addi	r3,r3,-19140
   4d9ac:	1085883a 	add	r2,r2,r2
   4d9b0:	1885883a 	add	r2,r3,r2
   4d9b4:	11800017 	ldw	r6,0(r2)
   4d9b8:	000f883a 	mov	r7,zero
   4d9bc:	004d3440 	call	4d344 <__multadd>
   4d9c0:	1025883a 	mov	r18,r2
   4d9c4:	003fc706 	br	4d8e4 <__alt_data_end+0xfffcf0e4>
   4d9c8:	05000044 	movi	r20,1
   4d9cc:	a00b883a 	mov	r5,r20
   4d9d0:	9809883a 	mov	r4,r19
   4d9d4:	004d2740 	call	4d274 <_Balloc>
   4d9d8:	1023883a 	mov	r17,r2
   4d9dc:	00809c44 	movi	r2,625
   4d9e0:	88800515 	stw	r2,20(r17)
   4d9e4:	8d000415 	stw	r20,16(r17)
   4d9e8:	9c401215 	stw	r17,72(r19)
   4d9ec:	88000015 	stw	zero,0(r17)
   4d9f0:	003fc606 	br	4d90c <__alt_data_end+0xfffcf10c>

0004d9f4 <__lshift>:
   4d9f4:	defff904 	addi	sp,sp,-28
   4d9f8:	dd400515 	stw	r21,20(sp)
   4d9fc:	dcc00315 	stw	r19,12(sp)
   4da00:	302bd17a 	srai	r21,r6,5
   4da04:	2cc00417 	ldw	r19,16(r5)
   4da08:	28800217 	ldw	r2,8(r5)
   4da0c:	dd000415 	stw	r20,16(sp)
   4da10:	ace7883a 	add	r19,r21,r19
   4da14:	dc800215 	stw	r18,8(sp)
   4da18:	dc400115 	stw	r17,4(sp)
   4da1c:	dc000015 	stw	r16,0(sp)
   4da20:	dfc00615 	stw	ra,24(sp)
   4da24:	9c000044 	addi	r16,r19,1
   4da28:	2823883a 	mov	r17,r5
   4da2c:	3029883a 	mov	r20,r6
   4da30:	2025883a 	mov	r18,r4
   4da34:	29400117 	ldw	r5,4(r5)
   4da38:	1400030e 	bge	r2,r16,4da48 <__lshift+0x54>
   4da3c:	1085883a 	add	r2,r2,r2
   4da40:	29400044 	addi	r5,r5,1
   4da44:	143ffd16 	blt	r2,r16,4da3c <__alt_data_end+0xfffcf23c>
   4da48:	9009883a 	mov	r4,r18
   4da4c:	004d2740 	call	4d274 <_Balloc>
   4da50:	10c00504 	addi	r3,r2,20
   4da54:	0540070e 	bge	zero,r21,4da74 <__lshift+0x80>
   4da58:	ad6b883a 	add	r21,r21,r21
   4da5c:	ad6b883a 	add	r21,r21,r21
   4da60:	1809883a 	mov	r4,r3
   4da64:	1d47883a 	add	r3,r3,r21
   4da68:	20000015 	stw	zero,0(r4)
   4da6c:	21000104 	addi	r4,r4,4
   4da70:	193ffd1e 	bne	r3,r4,4da68 <__alt_data_end+0xfffcf268>
   4da74:	8a000417 	ldw	r8,16(r17)
   4da78:	89000504 	addi	r4,r17,20
   4da7c:	a18007cc 	andi	r6,r20,31
   4da80:	4211883a 	add	r8,r8,r8
   4da84:	4211883a 	add	r8,r8,r8
   4da88:	2211883a 	add	r8,r4,r8
   4da8c:	30002326 	beq	r6,zero,4db1c <__lshift+0x128>
   4da90:	02400804 	movi	r9,32
   4da94:	4993c83a 	sub	r9,r9,r6
   4da98:	000b883a 	mov	r5,zero
   4da9c:	21c00017 	ldw	r7,0(r4)
   4daa0:	1815883a 	mov	r10,r3
   4daa4:	18c00104 	addi	r3,r3,4
   4daa8:	398e983a 	sll	r7,r7,r6
   4daac:	21000104 	addi	r4,r4,4
   4dab0:	394ab03a 	or	r5,r7,r5
   4dab4:	197fff15 	stw	r5,-4(r3)
   4dab8:	217fff17 	ldw	r5,-4(r4)
   4dabc:	2a4ad83a 	srl	r5,r5,r9
   4dac0:	223ff636 	bltu	r4,r8,4da9c <__alt_data_end+0xfffcf29c>
   4dac4:	51400115 	stw	r5,4(r10)
   4dac8:	28001a1e 	bne	r5,zero,4db34 <__lshift+0x140>
   4dacc:	843fffc4 	addi	r16,r16,-1
   4dad0:	14000415 	stw	r16,16(r2)
   4dad4:	88000826 	beq	r17,zero,4daf8 <__lshift+0x104>
   4dad8:	89000117 	ldw	r4,4(r17)
   4dadc:	90c01317 	ldw	r3,76(r18)
   4dae0:	2109883a 	add	r4,r4,r4
   4dae4:	2109883a 	add	r4,r4,r4
   4dae8:	1907883a 	add	r3,r3,r4
   4daec:	19000017 	ldw	r4,0(r3)
   4daf0:	89000015 	stw	r4,0(r17)
   4daf4:	1c400015 	stw	r17,0(r3)
   4daf8:	dfc00617 	ldw	ra,24(sp)
   4dafc:	dd400517 	ldw	r21,20(sp)
   4db00:	dd000417 	ldw	r20,16(sp)
   4db04:	dcc00317 	ldw	r19,12(sp)
   4db08:	dc800217 	ldw	r18,8(sp)
   4db0c:	dc400117 	ldw	r17,4(sp)
   4db10:	dc000017 	ldw	r16,0(sp)
   4db14:	dec00704 	addi	sp,sp,28
   4db18:	f800283a 	ret
   4db1c:	21400017 	ldw	r5,0(r4)
   4db20:	18c00104 	addi	r3,r3,4
   4db24:	21000104 	addi	r4,r4,4
   4db28:	197fff15 	stw	r5,-4(r3)
   4db2c:	223ffb36 	bltu	r4,r8,4db1c <__alt_data_end+0xfffcf31c>
   4db30:	003fe606 	br	4dacc <__alt_data_end+0xfffcf2cc>
   4db34:	9c000084 	addi	r16,r19,2
   4db38:	003fe406 	br	4dacc <__alt_data_end+0xfffcf2cc>

0004db3c <__mcmp>:
   4db3c:	20800417 	ldw	r2,16(r4)
   4db40:	28c00417 	ldw	r3,16(r5)
   4db44:	10c5c83a 	sub	r2,r2,r3
   4db48:	1000111e 	bne	r2,zero,4db90 <__mcmp+0x54>
   4db4c:	18c7883a 	add	r3,r3,r3
   4db50:	18c7883a 	add	r3,r3,r3
   4db54:	21000504 	addi	r4,r4,20
   4db58:	29400504 	addi	r5,r5,20
   4db5c:	20c5883a 	add	r2,r4,r3
   4db60:	28cb883a 	add	r5,r5,r3
   4db64:	00000106 	br	4db6c <__mcmp+0x30>
   4db68:	20800a2e 	bgeu	r4,r2,4db94 <__mcmp+0x58>
   4db6c:	10bfff04 	addi	r2,r2,-4
   4db70:	297fff04 	addi	r5,r5,-4
   4db74:	11800017 	ldw	r6,0(r2)
   4db78:	28c00017 	ldw	r3,0(r5)
   4db7c:	30fffa26 	beq	r6,r3,4db68 <__alt_data_end+0xfffcf368>
   4db80:	30c00236 	bltu	r6,r3,4db8c <__mcmp+0x50>
   4db84:	00800044 	movi	r2,1
   4db88:	f800283a 	ret
   4db8c:	00bfffc4 	movi	r2,-1
   4db90:	f800283a 	ret
   4db94:	0005883a 	mov	r2,zero
   4db98:	f800283a 	ret

0004db9c <__mdiff>:
   4db9c:	28c00417 	ldw	r3,16(r5)
   4dba0:	30800417 	ldw	r2,16(r6)
   4dba4:	defffa04 	addi	sp,sp,-24
   4dba8:	dcc00315 	stw	r19,12(sp)
   4dbac:	dc800215 	stw	r18,8(sp)
   4dbb0:	dfc00515 	stw	ra,20(sp)
   4dbb4:	dd000415 	stw	r20,16(sp)
   4dbb8:	dc400115 	stw	r17,4(sp)
   4dbbc:	dc000015 	stw	r16,0(sp)
   4dbc0:	1887c83a 	sub	r3,r3,r2
   4dbc4:	2825883a 	mov	r18,r5
   4dbc8:	3027883a 	mov	r19,r6
   4dbcc:	1800141e 	bne	r3,zero,4dc20 <__mdiff+0x84>
   4dbd0:	1085883a 	add	r2,r2,r2
   4dbd4:	1085883a 	add	r2,r2,r2
   4dbd8:	2a000504 	addi	r8,r5,20
   4dbdc:	34000504 	addi	r16,r6,20
   4dbe0:	4087883a 	add	r3,r8,r2
   4dbe4:	8085883a 	add	r2,r16,r2
   4dbe8:	00000106 	br	4dbf0 <__mdiff+0x54>
   4dbec:	40c0592e 	bgeu	r8,r3,4dd54 <__mdiff+0x1b8>
   4dbf0:	18ffff04 	addi	r3,r3,-4
   4dbf4:	10bfff04 	addi	r2,r2,-4
   4dbf8:	19c00017 	ldw	r7,0(r3)
   4dbfc:	11400017 	ldw	r5,0(r2)
   4dc00:	397ffa26 	beq	r7,r5,4dbec <__alt_data_end+0xfffcf3ec>
   4dc04:	3940592e 	bgeu	r7,r5,4dd6c <__mdiff+0x1d0>
   4dc08:	9005883a 	mov	r2,r18
   4dc0c:	4023883a 	mov	r17,r8
   4dc10:	9825883a 	mov	r18,r19
   4dc14:	05000044 	movi	r20,1
   4dc18:	1027883a 	mov	r19,r2
   4dc1c:	00000406 	br	4dc30 <__mdiff+0x94>
   4dc20:	18005616 	blt	r3,zero,4dd7c <__mdiff+0x1e0>
   4dc24:	34400504 	addi	r17,r6,20
   4dc28:	2c000504 	addi	r16,r5,20
   4dc2c:	0029883a 	mov	r20,zero
   4dc30:	91400117 	ldw	r5,4(r18)
   4dc34:	004d2740 	call	4d274 <_Balloc>
   4dc38:	92400417 	ldw	r9,16(r18)
   4dc3c:	9b000417 	ldw	r12,16(r19)
   4dc40:	12c00504 	addi	r11,r2,20
   4dc44:	4a51883a 	add	r8,r9,r9
   4dc48:	6319883a 	add	r12,r12,r12
   4dc4c:	4211883a 	add	r8,r8,r8
   4dc50:	6319883a 	add	r12,r12,r12
   4dc54:	15000315 	stw	r20,12(r2)
   4dc58:	8211883a 	add	r8,r16,r8
   4dc5c:	8b19883a 	add	r12,r17,r12
   4dc60:	0007883a 	mov	r3,zero
   4dc64:	81400017 	ldw	r5,0(r16)
   4dc68:	89c00017 	ldw	r7,0(r17)
   4dc6c:	59800104 	addi	r6,r11,4
   4dc70:	293fffcc 	andi	r4,r5,65535
   4dc74:	20c7883a 	add	r3,r4,r3
   4dc78:	393fffcc 	andi	r4,r7,65535
   4dc7c:	1909c83a 	sub	r4,r3,r4
   4dc80:	280ad43a 	srli	r5,r5,16
   4dc84:	380ed43a 	srli	r7,r7,16
   4dc88:	2007d43a 	srai	r3,r4,16
   4dc8c:	213fffcc 	andi	r4,r4,65535
   4dc90:	29cbc83a 	sub	r5,r5,r7
   4dc94:	28c7883a 	add	r3,r5,r3
   4dc98:	180a943a 	slli	r5,r3,16
   4dc9c:	8c400104 	addi	r17,r17,4
   4dca0:	84000104 	addi	r16,r16,4
   4dca4:	2908b03a 	or	r4,r5,r4
   4dca8:	59000015 	stw	r4,0(r11)
   4dcac:	1807d43a 	srai	r3,r3,16
   4dcb0:	3015883a 	mov	r10,r6
   4dcb4:	3017883a 	mov	r11,r6
   4dcb8:	8b3fea36 	bltu	r17,r12,4dc64 <__alt_data_end+0xfffcf464>
   4dcbc:	8200162e 	bgeu	r16,r8,4dd18 <__mdiff+0x17c>
   4dcc0:	8017883a 	mov	r11,r16
   4dcc4:	59400017 	ldw	r5,0(r11)
   4dcc8:	31800104 	addi	r6,r6,4
   4dccc:	5ac00104 	addi	r11,r11,4
   4dcd0:	293fffcc 	andi	r4,r5,65535
   4dcd4:	20c7883a 	add	r3,r4,r3
   4dcd8:	280ed43a 	srli	r7,r5,16
   4dcdc:	180bd43a 	srai	r5,r3,16
   4dce0:	193fffcc 	andi	r4,r3,65535
   4dce4:	3947883a 	add	r3,r7,r5
   4dce8:	180a943a 	slli	r5,r3,16
   4dcec:	1807d43a 	srai	r3,r3,16
   4dcf0:	2908b03a 	or	r4,r5,r4
   4dcf4:	313fff15 	stw	r4,-4(r6)
   4dcf8:	5a3ff236 	bltu	r11,r8,4dcc4 <__alt_data_end+0xfffcf4c4>
   4dcfc:	0406303a 	nor	r3,zero,r16
   4dd00:	1a07883a 	add	r3,r3,r8
   4dd04:	1806d0ba 	srli	r3,r3,2
   4dd08:	18c00044 	addi	r3,r3,1
   4dd0c:	18c7883a 	add	r3,r3,r3
   4dd10:	18c7883a 	add	r3,r3,r3
   4dd14:	50d5883a 	add	r10,r10,r3
   4dd18:	50ffff04 	addi	r3,r10,-4
   4dd1c:	2000041e 	bne	r4,zero,4dd30 <__mdiff+0x194>
   4dd20:	18ffff04 	addi	r3,r3,-4
   4dd24:	19000017 	ldw	r4,0(r3)
   4dd28:	4a7fffc4 	addi	r9,r9,-1
   4dd2c:	203ffc26 	beq	r4,zero,4dd20 <__alt_data_end+0xfffcf520>
   4dd30:	12400415 	stw	r9,16(r2)
   4dd34:	dfc00517 	ldw	ra,20(sp)
   4dd38:	dd000417 	ldw	r20,16(sp)
   4dd3c:	dcc00317 	ldw	r19,12(sp)
   4dd40:	dc800217 	ldw	r18,8(sp)
   4dd44:	dc400117 	ldw	r17,4(sp)
   4dd48:	dc000017 	ldw	r16,0(sp)
   4dd4c:	dec00604 	addi	sp,sp,24
   4dd50:	f800283a 	ret
   4dd54:	000b883a 	mov	r5,zero
   4dd58:	004d2740 	call	4d274 <_Balloc>
   4dd5c:	00c00044 	movi	r3,1
   4dd60:	10c00415 	stw	r3,16(r2)
   4dd64:	10000515 	stw	zero,20(r2)
   4dd68:	003ff206 	br	4dd34 <__alt_data_end+0xfffcf534>
   4dd6c:	8023883a 	mov	r17,r16
   4dd70:	0029883a 	mov	r20,zero
   4dd74:	4021883a 	mov	r16,r8
   4dd78:	003fad06 	br	4dc30 <__alt_data_end+0xfffcf430>
   4dd7c:	9005883a 	mov	r2,r18
   4dd80:	94400504 	addi	r17,r18,20
   4dd84:	9c000504 	addi	r16,r19,20
   4dd88:	9825883a 	mov	r18,r19
   4dd8c:	05000044 	movi	r20,1
   4dd90:	1027883a 	mov	r19,r2
   4dd94:	003fa606 	br	4dc30 <__alt_data_end+0xfffcf430>

0004dd98 <__ulp>:
   4dd98:	295ffc2c 	andhi	r5,r5,32752
   4dd9c:	00bf3034 	movhi	r2,64704
   4dda0:	2887883a 	add	r3,r5,r2
   4dda4:	00c0020e 	bge	zero,r3,4ddb0 <__ulp+0x18>
   4dda8:	0005883a 	mov	r2,zero
   4ddac:	f800283a 	ret
   4ddb0:	00c7c83a 	sub	r3,zero,r3
   4ddb4:	1807d53a 	srai	r3,r3,20
   4ddb8:	008004c4 	movi	r2,19
   4ddbc:	10c00b0e 	bge	r2,r3,4ddec <__ulp+0x54>
   4ddc0:	18bffb04 	addi	r2,r3,-20
   4ddc4:	01000784 	movi	r4,30
   4ddc8:	0007883a 	mov	r3,zero
   4ddcc:	20800516 	blt	r4,r2,4dde4 <__ulp+0x4c>
   4ddd0:	010007c4 	movi	r4,31
   4ddd4:	2089c83a 	sub	r4,r4,r2
   4ddd8:	00800044 	movi	r2,1
   4dddc:	1104983a 	sll	r2,r2,r4
   4dde0:	f800283a 	ret
   4dde4:	00800044 	movi	r2,1
   4dde8:	f800283a 	ret
   4ddec:	01400234 	movhi	r5,8
   4ddf0:	28c7d83a 	sra	r3,r5,r3
   4ddf4:	0005883a 	mov	r2,zero
   4ddf8:	f800283a 	ret

0004ddfc <__b2d>:
   4ddfc:	defffa04 	addi	sp,sp,-24
   4de00:	dc000015 	stw	r16,0(sp)
   4de04:	24000417 	ldw	r16,16(r4)
   4de08:	dc400115 	stw	r17,4(sp)
   4de0c:	24400504 	addi	r17,r4,20
   4de10:	8421883a 	add	r16,r16,r16
   4de14:	8421883a 	add	r16,r16,r16
   4de18:	8c21883a 	add	r16,r17,r16
   4de1c:	dc800215 	stw	r18,8(sp)
   4de20:	84bfff17 	ldw	r18,-4(r16)
   4de24:	dd000415 	stw	r20,16(sp)
   4de28:	dcc00315 	stw	r19,12(sp)
   4de2c:	9009883a 	mov	r4,r18
   4de30:	2829883a 	mov	r20,r5
   4de34:	dfc00515 	stw	ra,20(sp)
   4de38:	004d5680 	call	4d568 <__hi0bits>
   4de3c:	00c00804 	movi	r3,32
   4de40:	1889c83a 	sub	r4,r3,r2
   4de44:	a1000015 	stw	r4,0(r20)
   4de48:	01000284 	movi	r4,10
   4de4c:	84ffff04 	addi	r19,r16,-4
   4de50:	20801216 	blt	r4,r2,4de9c <__b2d+0xa0>
   4de54:	018002c4 	movi	r6,11
   4de58:	308dc83a 	sub	r6,r6,r2
   4de5c:	9186d83a 	srl	r3,r18,r6
   4de60:	18cffc34 	orhi	r3,r3,16368
   4de64:	8cc0212e 	bgeu	r17,r19,4deec <__b2d+0xf0>
   4de68:	813ffe17 	ldw	r4,-8(r16)
   4de6c:	218cd83a 	srl	r6,r4,r6
   4de70:	10800544 	addi	r2,r2,21
   4de74:	9084983a 	sll	r2,r18,r2
   4de78:	1184b03a 	or	r2,r2,r6
   4de7c:	dfc00517 	ldw	ra,20(sp)
   4de80:	dd000417 	ldw	r20,16(sp)
   4de84:	dcc00317 	ldw	r19,12(sp)
   4de88:	dc800217 	ldw	r18,8(sp)
   4de8c:	dc400117 	ldw	r17,4(sp)
   4de90:	dc000017 	ldw	r16,0(sp)
   4de94:	dec00604 	addi	sp,sp,24
   4de98:	f800283a 	ret
   4de9c:	8cc00f2e 	bgeu	r17,r19,4dedc <__b2d+0xe0>
   4dea0:	117ffd44 	addi	r5,r2,-11
   4dea4:	80bffe17 	ldw	r2,-8(r16)
   4dea8:	28000e26 	beq	r5,zero,4dee4 <__b2d+0xe8>
   4deac:	1949c83a 	sub	r4,r3,r5
   4deb0:	9164983a 	sll	r18,r18,r5
   4deb4:	1106d83a 	srl	r3,r2,r4
   4deb8:	81bffe04 	addi	r6,r16,-8
   4debc:	948ffc34 	orhi	r18,r18,16368
   4dec0:	90c6b03a 	or	r3,r18,r3
   4dec4:	89800e2e 	bgeu	r17,r6,4df00 <__b2d+0x104>
   4dec8:	81bffd17 	ldw	r6,-12(r16)
   4decc:	1144983a 	sll	r2,r2,r5
   4ded0:	310ad83a 	srl	r5,r6,r4
   4ded4:	2884b03a 	or	r2,r5,r2
   4ded8:	003fe806 	br	4de7c <__alt_data_end+0xfffcf67c>
   4dedc:	10bffd44 	addi	r2,r2,-11
   4dee0:	1000041e 	bne	r2,zero,4def4 <__b2d+0xf8>
   4dee4:	90cffc34 	orhi	r3,r18,16368
   4dee8:	003fe406 	br	4de7c <__alt_data_end+0xfffcf67c>
   4deec:	000d883a 	mov	r6,zero
   4def0:	003fdf06 	br	4de70 <__alt_data_end+0xfffcf670>
   4def4:	90a4983a 	sll	r18,r18,r2
   4def8:	0005883a 	mov	r2,zero
   4defc:	003ff906 	br	4dee4 <__alt_data_end+0xfffcf6e4>
   4df00:	1144983a 	sll	r2,r2,r5
   4df04:	003fdd06 	br	4de7c <__alt_data_end+0xfffcf67c>

0004df08 <__d2b>:
   4df08:	defff804 	addi	sp,sp,-32
   4df0c:	dc000215 	stw	r16,8(sp)
   4df10:	3021883a 	mov	r16,r6
   4df14:	dc400315 	stw	r17,12(sp)
   4df18:	8022907a 	slli	r17,r16,1
   4df1c:	dd000615 	stw	r20,24(sp)
   4df20:	2829883a 	mov	r20,r5
   4df24:	01400044 	movi	r5,1
   4df28:	dcc00515 	stw	r19,20(sp)
   4df2c:	dc800415 	stw	r18,16(sp)
   4df30:	dfc00715 	stw	ra,28(sp)
   4df34:	3825883a 	mov	r18,r7
   4df38:	8822d57a 	srli	r17,r17,21
   4df3c:	004d2740 	call	4d274 <_Balloc>
   4df40:	1027883a 	mov	r19,r2
   4df44:	00800434 	movhi	r2,16
   4df48:	10bfffc4 	addi	r2,r2,-1
   4df4c:	808c703a 	and	r6,r16,r2
   4df50:	88000126 	beq	r17,zero,4df58 <__d2b+0x50>
   4df54:	31800434 	orhi	r6,r6,16
   4df58:	d9800015 	stw	r6,0(sp)
   4df5c:	a0002426 	beq	r20,zero,4dff0 <__d2b+0xe8>
   4df60:	d9000104 	addi	r4,sp,4
   4df64:	dd000115 	stw	r20,4(sp)
   4df68:	004d5d00 	call	4d5d0 <__lo0bits>
   4df6c:	d8c00017 	ldw	r3,0(sp)
   4df70:	10002f1e 	bne	r2,zero,4e030 <__d2b+0x128>
   4df74:	d9000117 	ldw	r4,4(sp)
   4df78:	99000515 	stw	r4,20(r19)
   4df7c:	1821003a 	cmpeq	r16,r3,zero
   4df80:	01000084 	movi	r4,2
   4df84:	2421c83a 	sub	r16,r4,r16
   4df88:	98c00615 	stw	r3,24(r19)
   4df8c:	9c000415 	stw	r16,16(r19)
   4df90:	88001f1e 	bne	r17,zero,4e010 <__d2b+0x108>
   4df94:	10bef384 	addi	r2,r2,-1074
   4df98:	90800015 	stw	r2,0(r18)
   4df9c:	00900034 	movhi	r2,16384
   4dfa0:	10bfffc4 	addi	r2,r2,-1
   4dfa4:	8085883a 	add	r2,r16,r2
   4dfa8:	1085883a 	add	r2,r2,r2
   4dfac:	1085883a 	add	r2,r2,r2
   4dfb0:	9885883a 	add	r2,r19,r2
   4dfb4:	11000517 	ldw	r4,20(r2)
   4dfb8:	8020917a 	slli	r16,r16,5
   4dfbc:	004d5680 	call	4d568 <__hi0bits>
   4dfc0:	d8c00817 	ldw	r3,32(sp)
   4dfc4:	8085c83a 	sub	r2,r16,r2
   4dfc8:	18800015 	stw	r2,0(r3)
   4dfcc:	9805883a 	mov	r2,r19
   4dfd0:	dfc00717 	ldw	ra,28(sp)
   4dfd4:	dd000617 	ldw	r20,24(sp)
   4dfd8:	dcc00517 	ldw	r19,20(sp)
   4dfdc:	dc800417 	ldw	r18,16(sp)
   4dfe0:	dc400317 	ldw	r17,12(sp)
   4dfe4:	dc000217 	ldw	r16,8(sp)
   4dfe8:	dec00804 	addi	sp,sp,32
   4dfec:	f800283a 	ret
   4dff0:	d809883a 	mov	r4,sp
   4dff4:	004d5d00 	call	4d5d0 <__lo0bits>
   4dff8:	d8c00017 	ldw	r3,0(sp)
   4dffc:	04000044 	movi	r16,1
   4e000:	9c000415 	stw	r16,16(r19)
   4e004:	98c00515 	stw	r3,20(r19)
   4e008:	10800804 	addi	r2,r2,32
   4e00c:	883fe126 	beq	r17,zero,4df94 <__alt_data_end+0xfffcf794>
   4e010:	00c00d44 	movi	r3,53
   4e014:	8c7ef344 	addi	r17,r17,-1075
   4e018:	88a3883a 	add	r17,r17,r2
   4e01c:	1885c83a 	sub	r2,r3,r2
   4e020:	d8c00817 	ldw	r3,32(sp)
   4e024:	94400015 	stw	r17,0(r18)
   4e028:	18800015 	stw	r2,0(r3)
   4e02c:	003fe706 	br	4dfcc <__alt_data_end+0xfffcf7cc>
   4e030:	01000804 	movi	r4,32
   4e034:	2089c83a 	sub	r4,r4,r2
   4e038:	1908983a 	sll	r4,r3,r4
   4e03c:	d9400117 	ldw	r5,4(sp)
   4e040:	1886d83a 	srl	r3,r3,r2
   4e044:	2148b03a 	or	r4,r4,r5
   4e048:	99000515 	stw	r4,20(r19)
   4e04c:	d8c00015 	stw	r3,0(sp)
   4e050:	003fca06 	br	4df7c <__alt_data_end+0xfffcf77c>

0004e054 <__ratio>:
   4e054:	defff904 	addi	sp,sp,-28
   4e058:	dc400315 	stw	r17,12(sp)
   4e05c:	2823883a 	mov	r17,r5
   4e060:	d9400104 	addi	r5,sp,4
   4e064:	dfc00615 	stw	ra,24(sp)
   4e068:	dcc00515 	stw	r19,20(sp)
   4e06c:	dc800415 	stw	r18,16(sp)
   4e070:	2027883a 	mov	r19,r4
   4e074:	dc000215 	stw	r16,8(sp)
   4e078:	004ddfc0 	call	4ddfc <__b2d>
   4e07c:	d80b883a 	mov	r5,sp
   4e080:	8809883a 	mov	r4,r17
   4e084:	1025883a 	mov	r18,r2
   4e088:	1821883a 	mov	r16,r3
   4e08c:	004ddfc0 	call	4ddfc <__b2d>
   4e090:	8a000417 	ldw	r8,16(r17)
   4e094:	99000417 	ldw	r4,16(r19)
   4e098:	d9400117 	ldw	r5,4(sp)
   4e09c:	2209c83a 	sub	r4,r4,r8
   4e0a0:	2010917a 	slli	r8,r4,5
   4e0a4:	d9000017 	ldw	r4,0(sp)
   4e0a8:	2909c83a 	sub	r4,r5,r4
   4e0ac:	4109883a 	add	r4,r8,r4
   4e0b0:	01000e0e 	bge	zero,r4,4e0ec <__ratio+0x98>
   4e0b4:	2008953a 	slli	r4,r4,20
   4e0b8:	2421883a 	add	r16,r4,r16
   4e0bc:	100d883a 	mov	r6,r2
   4e0c0:	180f883a 	mov	r7,r3
   4e0c4:	9009883a 	mov	r4,r18
   4e0c8:	800b883a 	mov	r5,r16
   4e0cc:	00435c40 	call	435c4 <__divdf3>
   4e0d0:	dfc00617 	ldw	ra,24(sp)
   4e0d4:	dcc00517 	ldw	r19,20(sp)
   4e0d8:	dc800417 	ldw	r18,16(sp)
   4e0dc:	dc400317 	ldw	r17,12(sp)
   4e0e0:	dc000217 	ldw	r16,8(sp)
   4e0e4:	dec00704 	addi	sp,sp,28
   4e0e8:	f800283a 	ret
   4e0ec:	2008953a 	slli	r4,r4,20
   4e0f0:	1907c83a 	sub	r3,r3,r4
   4e0f4:	003ff106 	br	4e0bc <__alt_data_end+0xfffcf8bc>

0004e0f8 <_mprec_log10>:
   4e0f8:	defffe04 	addi	sp,sp,-8
   4e0fc:	dc000015 	stw	r16,0(sp)
   4e100:	dfc00115 	stw	ra,4(sp)
   4e104:	008005c4 	movi	r2,23
   4e108:	2021883a 	mov	r16,r4
   4e10c:	11000d0e 	bge	r2,r4,4e144 <_mprec_log10+0x4c>
   4e110:	0005883a 	mov	r2,zero
   4e114:	00cffc34 	movhi	r3,16368
   4e118:	843fffc4 	addi	r16,r16,-1
   4e11c:	000d883a 	mov	r6,zero
   4e120:	01d00934 	movhi	r7,16420
   4e124:	1009883a 	mov	r4,r2
   4e128:	180b883a 	mov	r5,r3
   4e12c:	004407c0 	call	4407c <__muldf3>
   4e130:	803ff91e 	bne	r16,zero,4e118 <__alt_data_end+0xfffcf918>
   4e134:	dfc00117 	ldw	ra,4(sp)
   4e138:	dc000017 	ldw	r16,0(sp)
   4e13c:	dec00204 	addi	sp,sp,8
   4e140:	f800283a 	ret
   4e144:	202090fa 	slli	r16,r4,3
   4e148:	008001b4 	movhi	r2,6
   4e14c:	10ad6604 	addi	r2,r2,-19048
   4e150:	1421883a 	add	r16,r2,r16
   4e154:	80800017 	ldw	r2,0(r16)
   4e158:	80c00117 	ldw	r3,4(r16)
   4e15c:	dfc00117 	ldw	ra,4(sp)
   4e160:	dc000017 	ldw	r16,0(sp)
   4e164:	dec00204 	addi	sp,sp,8
   4e168:	f800283a 	ret

0004e16c <__copybits>:
   4e16c:	297fffc4 	addi	r5,r5,-1
   4e170:	280fd17a 	srai	r7,r5,5
   4e174:	30c00417 	ldw	r3,16(r6)
   4e178:	30800504 	addi	r2,r6,20
   4e17c:	39c00044 	addi	r7,r7,1
   4e180:	18c7883a 	add	r3,r3,r3
   4e184:	39cf883a 	add	r7,r7,r7
   4e188:	18c7883a 	add	r3,r3,r3
   4e18c:	39cf883a 	add	r7,r7,r7
   4e190:	10c7883a 	add	r3,r2,r3
   4e194:	21cf883a 	add	r7,r4,r7
   4e198:	10c00d2e 	bgeu	r2,r3,4e1d0 <__copybits+0x64>
   4e19c:	200b883a 	mov	r5,r4
   4e1a0:	12000017 	ldw	r8,0(r2)
   4e1a4:	29400104 	addi	r5,r5,4
   4e1a8:	10800104 	addi	r2,r2,4
   4e1ac:	2a3fff15 	stw	r8,-4(r5)
   4e1b0:	10fffb36 	bltu	r2,r3,4e1a0 <__alt_data_end+0xfffcf9a0>
   4e1b4:	1985c83a 	sub	r2,r3,r6
   4e1b8:	10bffac4 	addi	r2,r2,-21
   4e1bc:	1004d0ba 	srli	r2,r2,2
   4e1c0:	10800044 	addi	r2,r2,1
   4e1c4:	1085883a 	add	r2,r2,r2
   4e1c8:	1085883a 	add	r2,r2,r2
   4e1cc:	2089883a 	add	r4,r4,r2
   4e1d0:	21c0032e 	bgeu	r4,r7,4e1e0 <__copybits+0x74>
   4e1d4:	20000015 	stw	zero,0(r4)
   4e1d8:	21000104 	addi	r4,r4,4
   4e1dc:	21fffd36 	bltu	r4,r7,4e1d4 <__alt_data_end+0xfffcf9d4>
   4e1e0:	f800283a 	ret

0004e1e4 <__any_on>:
   4e1e4:	20c00417 	ldw	r3,16(r4)
   4e1e8:	2805d17a 	srai	r2,r5,5
   4e1ec:	21000504 	addi	r4,r4,20
   4e1f0:	18800d0e 	bge	r3,r2,4e228 <__any_on+0x44>
   4e1f4:	18c7883a 	add	r3,r3,r3
   4e1f8:	18c7883a 	add	r3,r3,r3
   4e1fc:	20c7883a 	add	r3,r4,r3
   4e200:	20c0192e 	bgeu	r4,r3,4e268 <__any_on+0x84>
   4e204:	18bfff17 	ldw	r2,-4(r3)
   4e208:	18ffff04 	addi	r3,r3,-4
   4e20c:	1000041e 	bne	r2,zero,4e220 <__any_on+0x3c>
   4e210:	20c0142e 	bgeu	r4,r3,4e264 <__any_on+0x80>
   4e214:	18ffff04 	addi	r3,r3,-4
   4e218:	19400017 	ldw	r5,0(r3)
   4e21c:	283ffc26 	beq	r5,zero,4e210 <__alt_data_end+0xfffcfa10>
   4e220:	00800044 	movi	r2,1
   4e224:	f800283a 	ret
   4e228:	10c00a0e 	bge	r2,r3,4e254 <__any_on+0x70>
   4e22c:	1085883a 	add	r2,r2,r2
   4e230:	1085883a 	add	r2,r2,r2
   4e234:	294007cc 	andi	r5,r5,31
   4e238:	2087883a 	add	r3,r4,r2
   4e23c:	283ff026 	beq	r5,zero,4e200 <__alt_data_end+0xfffcfa00>
   4e240:	19800017 	ldw	r6,0(r3)
   4e244:	3144d83a 	srl	r2,r6,r5
   4e248:	114a983a 	sll	r5,r2,r5
   4e24c:	317ff41e 	bne	r6,r5,4e220 <__alt_data_end+0xfffcfa20>
   4e250:	003feb06 	br	4e200 <__alt_data_end+0xfffcfa00>
   4e254:	1085883a 	add	r2,r2,r2
   4e258:	1085883a 	add	r2,r2,r2
   4e25c:	2087883a 	add	r3,r4,r2
   4e260:	003fe706 	br	4e200 <__alt_data_end+0xfffcfa00>
   4e264:	f800283a 	ret
   4e268:	0005883a 	mov	r2,zero
   4e26c:	f800283a 	ret

0004e270 <_realloc_r>:
   4e270:	defff604 	addi	sp,sp,-40
   4e274:	dc800215 	stw	r18,8(sp)
   4e278:	dfc00915 	stw	ra,36(sp)
   4e27c:	df000815 	stw	fp,32(sp)
   4e280:	ddc00715 	stw	r23,28(sp)
   4e284:	dd800615 	stw	r22,24(sp)
   4e288:	dd400515 	stw	r21,20(sp)
   4e28c:	dd000415 	stw	r20,16(sp)
   4e290:	dcc00315 	stw	r19,12(sp)
   4e294:	dc400115 	stw	r17,4(sp)
   4e298:	dc000015 	stw	r16,0(sp)
   4e29c:	3025883a 	mov	r18,r6
   4e2a0:	2800b726 	beq	r5,zero,4e580 <_realloc_r+0x310>
   4e2a4:	282b883a 	mov	r21,r5
   4e2a8:	2029883a 	mov	r20,r4
   4e2ac:	00588bc0 	call	588bc <__malloc_lock>
   4e2b0:	a8bfff17 	ldw	r2,-4(r21)
   4e2b4:	043fff04 	movi	r16,-4
   4e2b8:	90c002c4 	addi	r3,r18,11
   4e2bc:	01000584 	movi	r4,22
   4e2c0:	acfffe04 	addi	r19,r21,-8
   4e2c4:	1420703a 	and	r16,r2,r16
   4e2c8:	20c0332e 	bgeu	r4,r3,4e398 <_realloc_r+0x128>
   4e2cc:	047ffe04 	movi	r17,-8
   4e2d0:	1c62703a 	and	r17,r3,r17
   4e2d4:	8807883a 	mov	r3,r17
   4e2d8:	88005816 	blt	r17,zero,4e43c <_realloc_r+0x1cc>
   4e2dc:	8c805736 	bltu	r17,r18,4e43c <_realloc_r+0x1cc>
   4e2e0:	80c0300e 	bge	r16,r3,4e3a4 <_realloc_r+0x134>
   4e2e4:	070001b4 	movhi	fp,6
   4e2e8:	e72fca04 	addi	fp,fp,-16600
   4e2ec:	e1c00217 	ldw	r7,8(fp)
   4e2f0:	9c09883a 	add	r4,r19,r16
   4e2f4:	22000117 	ldw	r8,4(r4)
   4e2f8:	21c06326 	beq	r4,r7,4e488 <_realloc_r+0x218>
   4e2fc:	017fff84 	movi	r5,-2
   4e300:	414a703a 	and	r5,r8,r5
   4e304:	214b883a 	add	r5,r4,r5
   4e308:	29800117 	ldw	r6,4(r5)
   4e30c:	3180004c 	andi	r6,r6,1
   4e310:	30003f26 	beq	r6,zero,4e410 <_realloc_r+0x1a0>
   4e314:	1080004c 	andi	r2,r2,1
   4e318:	10008326 	beq	r2,zero,4e528 <_realloc_r+0x2b8>
   4e31c:	900b883a 	mov	r5,r18
   4e320:	a009883a 	mov	r4,r20
   4e324:	004c4dc0 	call	4c4dc <_malloc_r>
   4e328:	1025883a 	mov	r18,r2
   4e32c:	10011e26 	beq	r2,zero,4e7a8 <_realloc_r+0x538>
   4e330:	a93fff17 	ldw	r4,-4(r21)
   4e334:	10fffe04 	addi	r3,r2,-8
   4e338:	00bfff84 	movi	r2,-2
   4e33c:	2084703a 	and	r2,r4,r2
   4e340:	9885883a 	add	r2,r19,r2
   4e344:	1880ee26 	beq	r3,r2,4e700 <_realloc_r+0x490>
   4e348:	81bfff04 	addi	r6,r16,-4
   4e34c:	00800904 	movi	r2,36
   4e350:	1180b836 	bltu	r2,r6,4e634 <_realloc_r+0x3c4>
   4e354:	00c004c4 	movi	r3,19
   4e358:	19809636 	bltu	r3,r6,4e5b4 <_realloc_r+0x344>
   4e35c:	9005883a 	mov	r2,r18
   4e360:	a807883a 	mov	r3,r21
   4e364:	19000017 	ldw	r4,0(r3)
   4e368:	11000015 	stw	r4,0(r2)
   4e36c:	19000117 	ldw	r4,4(r3)
   4e370:	11000115 	stw	r4,4(r2)
   4e374:	18c00217 	ldw	r3,8(r3)
   4e378:	10c00215 	stw	r3,8(r2)
   4e37c:	a80b883a 	mov	r5,r21
   4e380:	a009883a 	mov	r4,r20
   4e384:	004b8c00 	call	4b8c0 <_free_r>
   4e388:	a009883a 	mov	r4,r20
   4e38c:	00588e00 	call	588e0 <__malloc_unlock>
   4e390:	9005883a 	mov	r2,r18
   4e394:	00001206 	br	4e3e0 <_realloc_r+0x170>
   4e398:	00c00404 	movi	r3,16
   4e39c:	1823883a 	mov	r17,r3
   4e3a0:	003fce06 	br	4e2dc <__alt_data_end+0xfffcfadc>
   4e3a4:	a825883a 	mov	r18,r21
   4e3a8:	8445c83a 	sub	r2,r16,r17
   4e3ac:	00c003c4 	movi	r3,15
   4e3b0:	18802636 	bltu	r3,r2,4e44c <_realloc_r+0x1dc>
   4e3b4:	99800117 	ldw	r6,4(r19)
   4e3b8:	9c07883a 	add	r3,r19,r16
   4e3bc:	3180004c 	andi	r6,r6,1
   4e3c0:	3420b03a 	or	r16,r6,r16
   4e3c4:	9c000115 	stw	r16,4(r19)
   4e3c8:	18800117 	ldw	r2,4(r3)
   4e3cc:	10800054 	ori	r2,r2,1
   4e3d0:	18800115 	stw	r2,4(r3)
   4e3d4:	a009883a 	mov	r4,r20
   4e3d8:	00588e00 	call	588e0 <__malloc_unlock>
   4e3dc:	9005883a 	mov	r2,r18
   4e3e0:	dfc00917 	ldw	ra,36(sp)
   4e3e4:	df000817 	ldw	fp,32(sp)
   4e3e8:	ddc00717 	ldw	r23,28(sp)
   4e3ec:	dd800617 	ldw	r22,24(sp)
   4e3f0:	dd400517 	ldw	r21,20(sp)
   4e3f4:	dd000417 	ldw	r20,16(sp)
   4e3f8:	dcc00317 	ldw	r19,12(sp)
   4e3fc:	dc800217 	ldw	r18,8(sp)
   4e400:	dc400117 	ldw	r17,4(sp)
   4e404:	dc000017 	ldw	r16,0(sp)
   4e408:	dec00a04 	addi	sp,sp,40
   4e40c:	f800283a 	ret
   4e410:	017fff04 	movi	r5,-4
   4e414:	414a703a 	and	r5,r8,r5
   4e418:	814d883a 	add	r6,r16,r5
   4e41c:	30c01f16 	blt	r6,r3,4e49c <_realloc_r+0x22c>
   4e420:	20800317 	ldw	r2,12(r4)
   4e424:	20c00217 	ldw	r3,8(r4)
   4e428:	a825883a 	mov	r18,r21
   4e42c:	3021883a 	mov	r16,r6
   4e430:	18800315 	stw	r2,12(r3)
   4e434:	10c00215 	stw	r3,8(r2)
   4e438:	003fdb06 	br	4e3a8 <__alt_data_end+0xfffcfba8>
   4e43c:	00800304 	movi	r2,12
   4e440:	a0800015 	stw	r2,0(r20)
   4e444:	0005883a 	mov	r2,zero
   4e448:	003fe506 	br	4e3e0 <__alt_data_end+0xfffcfbe0>
   4e44c:	98c00117 	ldw	r3,4(r19)
   4e450:	9c4b883a 	add	r5,r19,r17
   4e454:	11000054 	ori	r4,r2,1
   4e458:	18c0004c 	andi	r3,r3,1
   4e45c:	1c62b03a 	or	r17,r3,r17
   4e460:	9c400115 	stw	r17,4(r19)
   4e464:	29000115 	stw	r4,4(r5)
   4e468:	2885883a 	add	r2,r5,r2
   4e46c:	10c00117 	ldw	r3,4(r2)
   4e470:	29400204 	addi	r5,r5,8
   4e474:	a009883a 	mov	r4,r20
   4e478:	18c00054 	ori	r3,r3,1
   4e47c:	10c00115 	stw	r3,4(r2)
   4e480:	004b8c00 	call	4b8c0 <_free_r>
   4e484:	003fd306 	br	4e3d4 <__alt_data_end+0xfffcfbd4>
   4e488:	017fff04 	movi	r5,-4
   4e48c:	414a703a 	and	r5,r8,r5
   4e490:	89800404 	addi	r6,r17,16
   4e494:	8151883a 	add	r8,r16,r5
   4e498:	4180590e 	bge	r8,r6,4e600 <_realloc_r+0x390>
   4e49c:	1080004c 	andi	r2,r2,1
   4e4a0:	103f9e1e 	bne	r2,zero,4e31c <__alt_data_end+0xfffcfb1c>
   4e4a4:	adbffe17 	ldw	r22,-8(r21)
   4e4a8:	00bfff04 	movi	r2,-4
   4e4ac:	9dadc83a 	sub	r22,r19,r22
   4e4b0:	b1800117 	ldw	r6,4(r22)
   4e4b4:	3084703a 	and	r2,r6,r2
   4e4b8:	20002026 	beq	r4,zero,4e53c <_realloc_r+0x2cc>
   4e4bc:	80af883a 	add	r23,r16,r2
   4e4c0:	b96f883a 	add	r23,r23,r5
   4e4c4:	21c05f26 	beq	r4,r7,4e644 <_realloc_r+0x3d4>
   4e4c8:	b8c01c16 	blt	r23,r3,4e53c <_realloc_r+0x2cc>
   4e4cc:	20800317 	ldw	r2,12(r4)
   4e4d0:	20c00217 	ldw	r3,8(r4)
   4e4d4:	81bfff04 	addi	r6,r16,-4
   4e4d8:	01000904 	movi	r4,36
   4e4dc:	18800315 	stw	r2,12(r3)
   4e4e0:	10c00215 	stw	r3,8(r2)
   4e4e4:	b0c00217 	ldw	r3,8(r22)
   4e4e8:	b0800317 	ldw	r2,12(r22)
   4e4ec:	b4800204 	addi	r18,r22,8
   4e4f0:	18800315 	stw	r2,12(r3)
   4e4f4:	10c00215 	stw	r3,8(r2)
   4e4f8:	21801b36 	bltu	r4,r6,4e568 <_realloc_r+0x2f8>
   4e4fc:	008004c4 	movi	r2,19
   4e500:	1180352e 	bgeu	r2,r6,4e5d8 <_realloc_r+0x368>
   4e504:	a8800017 	ldw	r2,0(r21)
   4e508:	b0800215 	stw	r2,8(r22)
   4e50c:	a8800117 	ldw	r2,4(r21)
   4e510:	b0800315 	stw	r2,12(r22)
   4e514:	008006c4 	movi	r2,27
   4e518:	11807f36 	bltu	r2,r6,4e718 <_realloc_r+0x4a8>
   4e51c:	b0800404 	addi	r2,r22,16
   4e520:	ad400204 	addi	r21,r21,8
   4e524:	00002d06 	br	4e5dc <_realloc_r+0x36c>
   4e528:	adbffe17 	ldw	r22,-8(r21)
   4e52c:	00bfff04 	movi	r2,-4
   4e530:	9dadc83a 	sub	r22,r19,r22
   4e534:	b1000117 	ldw	r4,4(r22)
   4e538:	2084703a 	and	r2,r4,r2
   4e53c:	b03f7726 	beq	r22,zero,4e31c <__alt_data_end+0xfffcfb1c>
   4e540:	80af883a 	add	r23,r16,r2
   4e544:	b8ff7516 	blt	r23,r3,4e31c <__alt_data_end+0xfffcfb1c>
   4e548:	b0800317 	ldw	r2,12(r22)
   4e54c:	b0c00217 	ldw	r3,8(r22)
   4e550:	81bfff04 	addi	r6,r16,-4
   4e554:	01000904 	movi	r4,36
   4e558:	18800315 	stw	r2,12(r3)
   4e55c:	10c00215 	stw	r3,8(r2)
   4e560:	b4800204 	addi	r18,r22,8
   4e564:	21bfe52e 	bgeu	r4,r6,4e4fc <__alt_data_end+0xfffcfcfc>
   4e568:	a80b883a 	mov	r5,r21
   4e56c:	9009883a 	mov	r4,r18
   4e570:	004cff00 	call	4cff0 <memmove>
   4e574:	b821883a 	mov	r16,r23
   4e578:	b027883a 	mov	r19,r22
   4e57c:	003f8a06 	br	4e3a8 <__alt_data_end+0xfffcfba8>
   4e580:	300b883a 	mov	r5,r6
   4e584:	dfc00917 	ldw	ra,36(sp)
   4e588:	df000817 	ldw	fp,32(sp)
   4e58c:	ddc00717 	ldw	r23,28(sp)
   4e590:	dd800617 	ldw	r22,24(sp)
   4e594:	dd400517 	ldw	r21,20(sp)
   4e598:	dd000417 	ldw	r20,16(sp)
   4e59c:	dcc00317 	ldw	r19,12(sp)
   4e5a0:	dc800217 	ldw	r18,8(sp)
   4e5a4:	dc400117 	ldw	r17,4(sp)
   4e5a8:	dc000017 	ldw	r16,0(sp)
   4e5ac:	dec00a04 	addi	sp,sp,40
   4e5b0:	004c4dc1 	jmpi	4c4dc <_malloc_r>
   4e5b4:	a8c00017 	ldw	r3,0(r21)
   4e5b8:	90c00015 	stw	r3,0(r18)
   4e5bc:	a8c00117 	ldw	r3,4(r21)
   4e5c0:	90c00115 	stw	r3,4(r18)
   4e5c4:	00c006c4 	movi	r3,27
   4e5c8:	19804536 	bltu	r3,r6,4e6e0 <_realloc_r+0x470>
   4e5cc:	90800204 	addi	r2,r18,8
   4e5d0:	a8c00204 	addi	r3,r21,8
   4e5d4:	003f6306 	br	4e364 <__alt_data_end+0xfffcfb64>
   4e5d8:	9005883a 	mov	r2,r18
   4e5dc:	a8c00017 	ldw	r3,0(r21)
   4e5e0:	b821883a 	mov	r16,r23
   4e5e4:	b027883a 	mov	r19,r22
   4e5e8:	10c00015 	stw	r3,0(r2)
   4e5ec:	a8c00117 	ldw	r3,4(r21)
   4e5f0:	10c00115 	stw	r3,4(r2)
   4e5f4:	a8c00217 	ldw	r3,8(r21)
   4e5f8:	10c00215 	stw	r3,8(r2)
   4e5fc:	003f6a06 	br	4e3a8 <__alt_data_end+0xfffcfba8>
   4e600:	9c67883a 	add	r19,r19,r17
   4e604:	4445c83a 	sub	r2,r8,r17
   4e608:	e4c00215 	stw	r19,8(fp)
   4e60c:	10800054 	ori	r2,r2,1
   4e610:	98800115 	stw	r2,4(r19)
   4e614:	a8bfff17 	ldw	r2,-4(r21)
   4e618:	a009883a 	mov	r4,r20
   4e61c:	1080004c 	andi	r2,r2,1
   4e620:	1462b03a 	or	r17,r2,r17
   4e624:	ac7fff15 	stw	r17,-4(r21)
   4e628:	00588e00 	call	588e0 <__malloc_unlock>
   4e62c:	a805883a 	mov	r2,r21
   4e630:	003f6b06 	br	4e3e0 <__alt_data_end+0xfffcfbe0>
   4e634:	a80b883a 	mov	r5,r21
   4e638:	9009883a 	mov	r4,r18
   4e63c:	004cff00 	call	4cff0 <memmove>
   4e640:	003f4e06 	br	4e37c <__alt_data_end+0xfffcfb7c>
   4e644:	89000404 	addi	r4,r17,16
   4e648:	b93fbc16 	blt	r23,r4,4e53c <__alt_data_end+0xfffcfd3c>
   4e64c:	b0800317 	ldw	r2,12(r22)
   4e650:	b0c00217 	ldw	r3,8(r22)
   4e654:	81bfff04 	addi	r6,r16,-4
   4e658:	01000904 	movi	r4,36
   4e65c:	18800315 	stw	r2,12(r3)
   4e660:	10c00215 	stw	r3,8(r2)
   4e664:	b4800204 	addi	r18,r22,8
   4e668:	21804336 	bltu	r4,r6,4e778 <_realloc_r+0x508>
   4e66c:	008004c4 	movi	r2,19
   4e670:	11803f2e 	bgeu	r2,r6,4e770 <_realloc_r+0x500>
   4e674:	a8800017 	ldw	r2,0(r21)
   4e678:	b0800215 	stw	r2,8(r22)
   4e67c:	a8800117 	ldw	r2,4(r21)
   4e680:	b0800315 	stw	r2,12(r22)
   4e684:	008006c4 	movi	r2,27
   4e688:	11803f36 	bltu	r2,r6,4e788 <_realloc_r+0x518>
   4e68c:	b0800404 	addi	r2,r22,16
   4e690:	ad400204 	addi	r21,r21,8
   4e694:	a8c00017 	ldw	r3,0(r21)
   4e698:	10c00015 	stw	r3,0(r2)
   4e69c:	a8c00117 	ldw	r3,4(r21)
   4e6a0:	10c00115 	stw	r3,4(r2)
   4e6a4:	a8c00217 	ldw	r3,8(r21)
   4e6a8:	10c00215 	stw	r3,8(r2)
   4e6ac:	b447883a 	add	r3,r22,r17
   4e6b0:	bc45c83a 	sub	r2,r23,r17
   4e6b4:	e0c00215 	stw	r3,8(fp)
   4e6b8:	10800054 	ori	r2,r2,1
   4e6bc:	18800115 	stw	r2,4(r3)
   4e6c0:	b0800117 	ldw	r2,4(r22)
   4e6c4:	a009883a 	mov	r4,r20
   4e6c8:	1080004c 	andi	r2,r2,1
   4e6cc:	1462b03a 	or	r17,r2,r17
   4e6d0:	b4400115 	stw	r17,4(r22)
   4e6d4:	00588e00 	call	588e0 <__malloc_unlock>
   4e6d8:	9005883a 	mov	r2,r18
   4e6dc:	003f4006 	br	4e3e0 <__alt_data_end+0xfffcfbe0>
   4e6e0:	a8c00217 	ldw	r3,8(r21)
   4e6e4:	90c00215 	stw	r3,8(r18)
   4e6e8:	a8c00317 	ldw	r3,12(r21)
   4e6ec:	90c00315 	stw	r3,12(r18)
   4e6f0:	30801126 	beq	r6,r2,4e738 <_realloc_r+0x4c8>
   4e6f4:	90800404 	addi	r2,r18,16
   4e6f8:	a8c00404 	addi	r3,r21,16
   4e6fc:	003f1906 	br	4e364 <__alt_data_end+0xfffcfb64>
   4e700:	90ffff17 	ldw	r3,-4(r18)
   4e704:	00bfff04 	movi	r2,-4
   4e708:	a825883a 	mov	r18,r21
   4e70c:	1884703a 	and	r2,r3,r2
   4e710:	80a1883a 	add	r16,r16,r2
   4e714:	003f2406 	br	4e3a8 <__alt_data_end+0xfffcfba8>
   4e718:	a8800217 	ldw	r2,8(r21)
   4e71c:	b0800415 	stw	r2,16(r22)
   4e720:	a8800317 	ldw	r2,12(r21)
   4e724:	b0800515 	stw	r2,20(r22)
   4e728:	31000a26 	beq	r6,r4,4e754 <_realloc_r+0x4e4>
   4e72c:	b0800604 	addi	r2,r22,24
   4e730:	ad400404 	addi	r21,r21,16
   4e734:	003fa906 	br	4e5dc <__alt_data_end+0xfffcfddc>
   4e738:	a9000417 	ldw	r4,16(r21)
   4e73c:	90800604 	addi	r2,r18,24
   4e740:	a8c00604 	addi	r3,r21,24
   4e744:	91000415 	stw	r4,16(r18)
   4e748:	a9000517 	ldw	r4,20(r21)
   4e74c:	91000515 	stw	r4,20(r18)
   4e750:	003f0406 	br	4e364 <__alt_data_end+0xfffcfb64>
   4e754:	a8c00417 	ldw	r3,16(r21)
   4e758:	ad400604 	addi	r21,r21,24
   4e75c:	b0800804 	addi	r2,r22,32
   4e760:	b0c00615 	stw	r3,24(r22)
   4e764:	a8ffff17 	ldw	r3,-4(r21)
   4e768:	b0c00715 	stw	r3,28(r22)
   4e76c:	003f9b06 	br	4e5dc <__alt_data_end+0xfffcfddc>
   4e770:	9005883a 	mov	r2,r18
   4e774:	003fc706 	br	4e694 <__alt_data_end+0xfffcfe94>
   4e778:	a80b883a 	mov	r5,r21
   4e77c:	9009883a 	mov	r4,r18
   4e780:	004cff00 	call	4cff0 <memmove>
   4e784:	003fc906 	br	4e6ac <__alt_data_end+0xfffcfeac>
   4e788:	a8800217 	ldw	r2,8(r21)
   4e78c:	b0800415 	stw	r2,16(r22)
   4e790:	a8800317 	ldw	r2,12(r21)
   4e794:	b0800515 	stw	r2,20(r22)
   4e798:	31000726 	beq	r6,r4,4e7b8 <_realloc_r+0x548>
   4e79c:	b0800604 	addi	r2,r22,24
   4e7a0:	ad400404 	addi	r21,r21,16
   4e7a4:	003fbb06 	br	4e694 <__alt_data_end+0xfffcfe94>
   4e7a8:	a009883a 	mov	r4,r20
   4e7ac:	00588e00 	call	588e0 <__malloc_unlock>
   4e7b0:	0005883a 	mov	r2,zero
   4e7b4:	003f0a06 	br	4e3e0 <__alt_data_end+0xfffcfbe0>
   4e7b8:	a8c00417 	ldw	r3,16(r21)
   4e7bc:	ad400604 	addi	r21,r21,24
   4e7c0:	b0800804 	addi	r2,r22,32
   4e7c4:	b0c00615 	stw	r3,24(r22)
   4e7c8:	a8ffff17 	ldw	r3,-4(r21)
   4e7cc:	b0c00715 	stw	r3,28(r22)
   4e7d0:	003fb006 	br	4e694 <__alt_data_end+0xfffcfe94>

0004e7d4 <lflush>:
   4e7d4:	2080030b 	ldhu	r2,12(r4)
   4e7d8:	00c00244 	movi	r3,9
   4e7dc:	1080024c 	andi	r2,r2,9
   4e7e0:	10c00226 	beq	r2,r3,4e7ec <lflush+0x18>
   4e7e4:	0005883a 	mov	r2,zero
   4e7e8:	f800283a 	ret
   4e7ec:	004b16c1 	jmpi	4b16c <fflush>

0004e7f0 <__srefill_r>:
   4e7f0:	defffc04 	addi	sp,sp,-16
   4e7f4:	dc400115 	stw	r17,4(sp)
   4e7f8:	dc000015 	stw	r16,0(sp)
   4e7fc:	dfc00315 	stw	ra,12(sp)
   4e800:	dc800215 	stw	r18,8(sp)
   4e804:	2023883a 	mov	r17,r4
   4e808:	2821883a 	mov	r16,r5
   4e80c:	20000226 	beq	r4,zero,4e818 <__srefill_r+0x28>
   4e810:	20800e17 	ldw	r2,56(r4)
   4e814:	10003c26 	beq	r2,zero,4e908 <__srefill_r+0x118>
   4e818:	80c0030b 	ldhu	r3,12(r16)
   4e81c:	1908000c 	andi	r4,r3,8192
   4e820:	1805883a 	mov	r2,r3
   4e824:	2000071e 	bne	r4,zero,4e844 <__srefill_r+0x54>
   4e828:	81001917 	ldw	r4,100(r16)
   4e82c:	18880014 	ori	r2,r3,8192
   4e830:	00f7ffc4 	movi	r3,-8193
   4e834:	20c8703a 	and	r4,r4,r3
   4e838:	8080030d 	sth	r2,12(r16)
   4e83c:	1007883a 	mov	r3,r2
   4e840:	81001915 	stw	r4,100(r16)
   4e844:	80000115 	stw	zero,4(r16)
   4e848:	1100080c 	andi	r4,r2,32
   4e84c:	2000571e 	bne	r4,zero,4e9ac <__srefill_r+0x1bc>
   4e850:	1100010c 	andi	r4,r2,4
   4e854:	20001f26 	beq	r4,zero,4e8d4 <__srefill_r+0xe4>
   4e858:	81400c17 	ldw	r5,48(r16)
   4e85c:	28000826 	beq	r5,zero,4e880 <__srefill_r+0x90>
   4e860:	80801004 	addi	r2,r16,64
   4e864:	28800226 	beq	r5,r2,4e870 <__srefill_r+0x80>
   4e868:	8809883a 	mov	r4,r17
   4e86c:	004b8c00 	call	4b8c0 <_free_r>
   4e870:	80800f17 	ldw	r2,60(r16)
   4e874:	80000c15 	stw	zero,48(r16)
   4e878:	80800115 	stw	r2,4(r16)
   4e87c:	1000391e 	bne	r2,zero,4e964 <__srefill_r+0x174>
   4e880:	80800417 	ldw	r2,16(r16)
   4e884:	10004b26 	beq	r2,zero,4e9b4 <__srefill_r+0x1c4>
   4e888:	8480030b 	ldhu	r18,12(r16)
   4e88c:	908000cc 	andi	r2,r18,3
   4e890:	10001f1e 	bne	r2,zero,4e910 <__srefill_r+0x120>
   4e894:	81800417 	ldw	r6,16(r16)
   4e898:	80800817 	ldw	r2,32(r16)
   4e89c:	81c00517 	ldw	r7,20(r16)
   4e8a0:	81400717 	ldw	r5,28(r16)
   4e8a4:	81800015 	stw	r6,0(r16)
   4e8a8:	8809883a 	mov	r4,r17
   4e8ac:	103ee83a 	callr	r2
   4e8b0:	80800115 	stw	r2,4(r16)
   4e8b4:	00800e0e 	bge	zero,r2,4e8f0 <__srefill_r+0x100>
   4e8b8:	0005883a 	mov	r2,zero
   4e8bc:	dfc00317 	ldw	ra,12(sp)
   4e8c0:	dc800217 	ldw	r18,8(sp)
   4e8c4:	dc400117 	ldw	r17,4(sp)
   4e8c8:	dc000017 	ldw	r16,0(sp)
   4e8cc:	dec00404 	addi	sp,sp,16
   4e8d0:	f800283a 	ret
   4e8d4:	1100040c 	andi	r4,r2,16
   4e8d8:	20003026 	beq	r4,zero,4e99c <__srefill_r+0x1ac>
   4e8dc:	1080020c 	andi	r2,r2,8
   4e8e0:	1000241e 	bne	r2,zero,4e974 <__srefill_r+0x184>
   4e8e4:	18c00114 	ori	r3,r3,4
   4e8e8:	80c0030d 	sth	r3,12(r16)
   4e8ec:	003fe406 	br	4e880 <__alt_data_end+0xfffd0080>
   4e8f0:	80c0030b 	ldhu	r3,12(r16)
   4e8f4:	1000161e 	bne	r2,zero,4e950 <__srefill_r+0x160>
   4e8f8:	18c00814 	ori	r3,r3,32
   4e8fc:	00bfffc4 	movi	r2,-1
   4e900:	80c0030d 	sth	r3,12(r16)
   4e904:	003fed06 	br	4e8bc <__alt_data_end+0xfffd00bc>
   4e908:	004b4ec0 	call	4b4ec <__sinit>
   4e90c:	003fc206 	br	4e818 <__alt_data_end+0xfffd0018>
   4e910:	008001b4 	movhi	r2,6
   4e914:	10b54f04 	addi	r2,r2,-10948
   4e918:	11000017 	ldw	r4,0(r2)
   4e91c:	01400174 	movhi	r5,5
   4e920:	00800044 	movi	r2,1
   4e924:	2979f504 	addi	r5,r5,-6188
   4e928:	8080030d 	sth	r2,12(r16)
   4e92c:	004c08c0 	call	4c08c <_fwalk>
   4e930:	00800244 	movi	r2,9
   4e934:	8480030d 	sth	r18,12(r16)
   4e938:	9480024c 	andi	r18,r18,9
   4e93c:	90bfd51e 	bne	r18,r2,4e894 <__alt_data_end+0xfffd0094>
   4e940:	800b883a 	mov	r5,r16
   4e944:	8809883a 	mov	r4,r17
   4e948:	004aef40 	call	4aef4 <__sflush_r>
   4e94c:	003fd106 	br	4e894 <__alt_data_end+0xfffd0094>
   4e950:	18c01014 	ori	r3,r3,64
   4e954:	80000115 	stw	zero,4(r16)
   4e958:	00bfffc4 	movi	r2,-1
   4e95c:	80c0030d 	sth	r3,12(r16)
   4e960:	003fd606 	br	4e8bc <__alt_data_end+0xfffd00bc>
   4e964:	80c00e17 	ldw	r3,56(r16)
   4e968:	0005883a 	mov	r2,zero
   4e96c:	80c00015 	stw	r3,0(r16)
   4e970:	003fd206 	br	4e8bc <__alt_data_end+0xfffd00bc>
   4e974:	800b883a 	mov	r5,r16
   4e978:	8809883a 	mov	r4,r17
   4e97c:	004b1100 	call	4b110 <_fflush_r>
   4e980:	10000a1e 	bne	r2,zero,4e9ac <__srefill_r+0x1bc>
   4e984:	8080030b 	ldhu	r2,12(r16)
   4e988:	00fffdc4 	movi	r3,-9
   4e98c:	80000215 	stw	zero,8(r16)
   4e990:	1886703a 	and	r3,r3,r2
   4e994:	80000615 	stw	zero,24(r16)
   4e998:	003fd206 	br	4e8e4 <__alt_data_end+0xfffd00e4>
   4e99c:	00800244 	movi	r2,9
   4e9a0:	88800015 	stw	r2,0(r17)
   4e9a4:	18c01014 	ori	r3,r3,64
   4e9a8:	80c0030d 	sth	r3,12(r16)
   4e9ac:	00bfffc4 	movi	r2,-1
   4e9b0:	003fc206 	br	4e8bc <__alt_data_end+0xfffd00bc>
   4e9b4:	800b883a 	mov	r5,r16
   4e9b8:	8809883a 	mov	r4,r17
   4e9bc:	004c3200 	call	4c320 <__smakebuf_r>
   4e9c0:	003fb106 	br	4e888 <__alt_data_end+0xfffd0088>

0004e9c4 <__fpclassifyd>:
   4e9c4:	00a00034 	movhi	r2,32768
   4e9c8:	10bfffc4 	addi	r2,r2,-1
   4e9cc:	2884703a 	and	r2,r5,r2
   4e9d0:	10000726 	beq	r2,zero,4e9f0 <__fpclassifyd+0x2c>
   4e9d4:	00fffc34 	movhi	r3,65520
   4e9d8:	019ff834 	movhi	r6,32736
   4e9dc:	28c7883a 	add	r3,r5,r3
   4e9e0:	31bfffc4 	addi	r6,r6,-1
   4e9e4:	30c00536 	bltu	r6,r3,4e9fc <__fpclassifyd+0x38>
   4e9e8:	00800104 	movi	r2,4
   4e9ec:	f800283a 	ret
   4e9f0:	2000021e 	bne	r4,zero,4e9fc <__fpclassifyd+0x38>
   4e9f4:	00800084 	movi	r2,2
   4e9f8:	f800283a 	ret
   4e9fc:	00dffc34 	movhi	r3,32752
   4ea00:	019ff834 	movhi	r6,32736
   4ea04:	28cb883a 	add	r5,r5,r3
   4ea08:	31bfffc4 	addi	r6,r6,-1
   4ea0c:	317ff62e 	bgeu	r6,r5,4e9e8 <__alt_data_end+0xfffd01e8>
   4ea10:	01400434 	movhi	r5,16
   4ea14:	297fffc4 	addi	r5,r5,-1
   4ea18:	28800236 	bltu	r5,r2,4ea24 <__fpclassifyd+0x60>
   4ea1c:	008000c4 	movi	r2,3
   4ea20:	f800283a 	ret
   4ea24:	10c00226 	beq	r2,r3,4ea30 <__fpclassifyd+0x6c>
   4ea28:	0005883a 	mov	r2,zero
   4ea2c:	f800283a 	ret
   4ea30:	2005003a 	cmpeq	r2,r4,zero
   4ea34:	f800283a 	ret

0004ea38 <_sbrk_r>:
   4ea38:	defffd04 	addi	sp,sp,-12
   4ea3c:	dc000015 	stw	r16,0(sp)
   4ea40:	040001b4 	movhi	r16,6
   4ea44:	dc400115 	stw	r17,4(sp)
   4ea48:	843cb304 	addi	r16,r16,-3380
   4ea4c:	2023883a 	mov	r17,r4
   4ea50:	2809883a 	mov	r4,r5
   4ea54:	dfc00215 	stw	ra,8(sp)
   4ea58:	80000015 	stw	zero,0(r16)
   4ea5c:	0058aa00 	call	58aa0 <sbrk>
   4ea60:	00ffffc4 	movi	r3,-1
   4ea64:	10c00526 	beq	r2,r3,4ea7c <_sbrk_r+0x44>
   4ea68:	dfc00217 	ldw	ra,8(sp)
   4ea6c:	dc400117 	ldw	r17,4(sp)
   4ea70:	dc000017 	ldw	r16,0(sp)
   4ea74:	dec00304 	addi	sp,sp,12
   4ea78:	f800283a 	ret
   4ea7c:	80c00017 	ldw	r3,0(r16)
   4ea80:	183ff926 	beq	r3,zero,4ea68 <__alt_data_end+0xfffd0268>
   4ea84:	88c00015 	stw	r3,0(r17)
   4ea88:	003ff706 	br	4ea68 <__alt_data_end+0xfffd0268>

0004ea8c <__sccl>:
   4ea8c:	2a000003 	ldbu	r8,0(r5)
   4ea90:	00801784 	movi	r2,94
   4ea94:	40802a26 	beq	r8,r2,4eb40 <__sccl+0xb4>
   4ea98:	29400044 	addi	r5,r5,1
   4ea9c:	000f883a 	mov	r7,zero
   4eaa0:	0013883a 	mov	r9,zero
   4eaa4:	2007883a 	mov	r3,r4
   4eaa8:	21804004 	addi	r6,r4,256
   4eaac:	19c00005 	stb	r7,0(r3)
   4eab0:	18c00044 	addi	r3,r3,1
   4eab4:	19bffd1e 	bne	r3,r6,4eaac <__alt_data_end+0xfffd02ac>
   4eab8:	40001126 	beq	r8,zero,4eb00 <__sccl+0x74>
   4eabc:	00800044 	movi	r2,1
   4eac0:	124fc83a 	sub	r7,r2,r9
   4eac4:	02800b44 	movi	r10,45
   4eac8:	02c01744 	movi	r11,93
   4eacc:	2205883a 	add	r2,r4,r8
   4ead0:	11c00005 	stb	r7,0(r2)
   4ead4:	28800044 	addi	r2,r5,1
   4ead8:	28c00003 	ldbu	r3,0(r5)
   4eadc:	1a800a26 	beq	r3,r10,4eb08 <__sccl+0x7c>
   4eae0:	1ac00426 	beq	r3,r11,4eaf4 <__sccl+0x68>
   4eae4:	18000426 	beq	r3,zero,4eaf8 <__sccl+0x6c>
   4eae8:	1811883a 	mov	r8,r3
   4eaec:	100b883a 	mov	r5,r2
   4eaf0:	003ff606 	br	4eacc <__alt_data_end+0xfffd02cc>
   4eaf4:	f800283a 	ret
   4eaf8:	2805883a 	mov	r2,r5
   4eafc:	f800283a 	ret
   4eb00:	28bfffc4 	addi	r2,r5,-1
   4eb04:	f800283a 	ret
   4eb08:	12400003 	ldbu	r9,0(r2)
   4eb0c:	4ac01126 	beq	r9,r11,4eb54 <__sccl+0xc8>
   4eb10:	4a001016 	blt	r9,r8,4eb54 <__sccl+0xc8>
   4eb14:	41800044 	addi	r6,r8,1
   4eb18:	29400084 	addi	r5,r5,2
   4eb1c:	2187883a 	add	r3,r4,r6
   4eb20:	00000106 	br	4eb28 <__sccl+0x9c>
   4eb24:	31800044 	addi	r6,r6,1
   4eb28:	19c00005 	stb	r7,0(r3)
   4eb2c:	3011883a 	mov	r8,r6
   4eb30:	18c00044 	addi	r3,r3,1
   4eb34:	327ffb16 	blt	r6,r9,4eb24 <__alt_data_end+0xfffd0324>
   4eb38:	10800084 	addi	r2,r2,2
   4eb3c:	003fe606 	br	4ead8 <__alt_data_end+0xfffd02d8>
   4eb40:	2a000043 	ldbu	r8,1(r5)
   4eb44:	01c00044 	movi	r7,1
   4eb48:	29400084 	addi	r5,r5,2
   4eb4c:	02400044 	movi	r9,1
   4eb50:	003fd406 	br	4eaa4 <__alt_data_end+0xfffd02a4>
   4eb54:	5011883a 	mov	r8,r10
   4eb58:	003fe406 	br	4eaec <__alt_data_end+0xfffd02ec>

0004eb5c <nanf>:
   4eb5c:	009ff034 	movhi	r2,32704
   4eb60:	f800283a 	ret

0004eb64 <_sprintf_r>:
   4eb64:	deffe404 	addi	sp,sp,-112
   4eb68:	2807883a 	mov	r3,r5
   4eb6c:	dfc01a15 	stw	ra,104(sp)
   4eb70:	d9c01b15 	stw	r7,108(sp)
   4eb74:	00a00034 	movhi	r2,32768
   4eb78:	10bfffc4 	addi	r2,r2,-1
   4eb7c:	02008204 	movi	r8,520
   4eb80:	d8800215 	stw	r2,8(sp)
   4eb84:	d8800515 	stw	r2,20(sp)
   4eb88:	d9c01b04 	addi	r7,sp,108
   4eb8c:	d80b883a 	mov	r5,sp
   4eb90:	00bfffc4 	movi	r2,-1
   4eb94:	d8c00015 	stw	r3,0(sp)
   4eb98:	d8c00415 	stw	r3,16(sp)
   4eb9c:	da00030d 	sth	r8,12(sp)
   4eba0:	d880038d 	sth	r2,14(sp)
   4eba4:	00510280 	call	51028 <___svfprintf_internal_r>
   4eba8:	d8c00017 	ldw	r3,0(sp)
   4ebac:	18000005 	stb	zero,0(r3)
   4ebb0:	dfc01a17 	ldw	ra,104(sp)
   4ebb4:	dec01c04 	addi	sp,sp,112
   4ebb8:	f800283a 	ret

0004ebbc <sprintf>:
   4ebbc:	deffe304 	addi	sp,sp,-116
   4ebc0:	2007883a 	mov	r3,r4
   4ebc4:	dfc01a15 	stw	ra,104(sp)
   4ebc8:	d9801b15 	stw	r6,108(sp)
   4ebcc:	d9c01c15 	stw	r7,112(sp)
   4ebd0:	010001b4 	movhi	r4,6
   4ebd4:	21355004 	addi	r4,r4,-10944
   4ebd8:	21000017 	ldw	r4,0(r4)
   4ebdc:	00a00034 	movhi	r2,32768
   4ebe0:	10bfffc4 	addi	r2,r2,-1
   4ebe4:	280d883a 	mov	r6,r5
   4ebe8:	02008204 	movi	r8,520
   4ebec:	d8800215 	stw	r2,8(sp)
   4ebf0:	d8800515 	stw	r2,20(sp)
   4ebf4:	d9c01b04 	addi	r7,sp,108
   4ebf8:	d80b883a 	mov	r5,sp
   4ebfc:	00bfffc4 	movi	r2,-1
   4ec00:	d8c00015 	stw	r3,0(sp)
   4ec04:	d8c00415 	stw	r3,16(sp)
   4ec08:	da00030d 	sth	r8,12(sp)
   4ec0c:	d880038d 	sth	r2,14(sp)
   4ec10:	00510280 	call	51028 <___svfprintf_internal_r>
   4ec14:	d8c00017 	ldw	r3,0(sp)
   4ec18:	18000005 	stb	zero,0(r3)
   4ec1c:	dfc01a17 	ldw	ra,104(sp)
   4ec20:	dec01d04 	addi	sp,sp,116
   4ec24:	f800283a 	ret

0004ec28 <__sread>:
   4ec28:	defffe04 	addi	sp,sp,-8
   4ec2c:	dc000015 	stw	r16,0(sp)
   4ec30:	2821883a 	mov	r16,r5
   4ec34:	2940038f 	ldh	r5,14(r5)
   4ec38:	dfc00115 	stw	ra,4(sp)
   4ec3c:	0055be80 	call	55be8 <_read_r>
   4ec40:	10000716 	blt	r2,zero,4ec60 <__sread+0x38>
   4ec44:	80c01417 	ldw	r3,80(r16)
   4ec48:	1887883a 	add	r3,r3,r2
   4ec4c:	80c01415 	stw	r3,80(r16)
   4ec50:	dfc00117 	ldw	ra,4(sp)
   4ec54:	dc000017 	ldw	r16,0(sp)
   4ec58:	dec00204 	addi	sp,sp,8
   4ec5c:	f800283a 	ret
   4ec60:	80c0030b 	ldhu	r3,12(r16)
   4ec64:	18fbffcc 	andi	r3,r3,61439
   4ec68:	80c0030d 	sth	r3,12(r16)
   4ec6c:	dfc00117 	ldw	ra,4(sp)
   4ec70:	dc000017 	ldw	r16,0(sp)
   4ec74:	dec00204 	addi	sp,sp,8
   4ec78:	f800283a 	ret

0004ec7c <__seofread>:
   4ec7c:	0005883a 	mov	r2,zero
   4ec80:	f800283a 	ret

0004ec84 <__swrite>:
   4ec84:	2880030b 	ldhu	r2,12(r5)
   4ec88:	defffb04 	addi	sp,sp,-20
   4ec8c:	dcc00315 	stw	r19,12(sp)
   4ec90:	dc800215 	stw	r18,8(sp)
   4ec94:	dc400115 	stw	r17,4(sp)
   4ec98:	dc000015 	stw	r16,0(sp)
   4ec9c:	dfc00415 	stw	ra,16(sp)
   4eca0:	10c0400c 	andi	r3,r2,256
   4eca4:	2821883a 	mov	r16,r5
   4eca8:	2023883a 	mov	r17,r4
   4ecac:	3025883a 	mov	r18,r6
   4ecb0:	3827883a 	mov	r19,r7
   4ecb4:	18000526 	beq	r3,zero,4eccc <__swrite+0x48>
   4ecb8:	2940038f 	ldh	r5,14(r5)
   4ecbc:	01c00084 	movi	r7,2
   4ecc0:	000d883a 	mov	r6,zero
   4ecc4:	0055b880 	call	55b88 <_lseek_r>
   4ecc8:	8080030b 	ldhu	r2,12(r16)
   4eccc:	8140038f 	ldh	r5,14(r16)
   4ecd0:	10bbffcc 	andi	r2,r2,61439
   4ecd4:	980f883a 	mov	r7,r19
   4ecd8:	900d883a 	mov	r6,r18
   4ecdc:	8809883a 	mov	r4,r17
   4ece0:	8080030d 	sth	r2,12(r16)
   4ece4:	dfc00417 	ldw	ra,16(sp)
   4ece8:	dcc00317 	ldw	r19,12(sp)
   4ecec:	dc800217 	ldw	r18,8(sp)
   4ecf0:	dc400117 	ldw	r17,4(sp)
   4ecf4:	dc000017 	ldw	r16,0(sp)
   4ecf8:	dec00504 	addi	sp,sp,20
   4ecfc:	0054ac81 	jmpi	54ac8 <_write_r>

0004ed00 <__sseek>:
   4ed00:	defffe04 	addi	sp,sp,-8
   4ed04:	dc000015 	stw	r16,0(sp)
   4ed08:	2821883a 	mov	r16,r5
   4ed0c:	2940038f 	ldh	r5,14(r5)
   4ed10:	dfc00115 	stw	ra,4(sp)
   4ed14:	0055b880 	call	55b88 <_lseek_r>
   4ed18:	00ffffc4 	movi	r3,-1
   4ed1c:	10c00826 	beq	r2,r3,4ed40 <__sseek+0x40>
   4ed20:	80c0030b 	ldhu	r3,12(r16)
   4ed24:	80801415 	stw	r2,80(r16)
   4ed28:	18c40014 	ori	r3,r3,4096
   4ed2c:	80c0030d 	sth	r3,12(r16)
   4ed30:	dfc00117 	ldw	ra,4(sp)
   4ed34:	dc000017 	ldw	r16,0(sp)
   4ed38:	dec00204 	addi	sp,sp,8
   4ed3c:	f800283a 	ret
   4ed40:	80c0030b 	ldhu	r3,12(r16)
   4ed44:	18fbffcc 	andi	r3,r3,61439
   4ed48:	80c0030d 	sth	r3,12(r16)
   4ed4c:	dfc00117 	ldw	ra,4(sp)
   4ed50:	dc000017 	ldw	r16,0(sp)
   4ed54:	dec00204 	addi	sp,sp,8
   4ed58:	f800283a 	ret

0004ed5c <__sclose>:
   4ed5c:	2940038f 	ldh	r5,14(r5)
   4ed60:	0054b281 	jmpi	54b28 <_close_r>

0004ed64 <strcmp>:
   4ed64:	2144b03a 	or	r2,r4,r5
   4ed68:	108000cc 	andi	r2,r2,3
   4ed6c:	1000171e 	bne	r2,zero,4edcc <strcmp+0x68>
   4ed70:	20800017 	ldw	r2,0(r4)
   4ed74:	28c00017 	ldw	r3,0(r5)
   4ed78:	10c0141e 	bne	r2,r3,4edcc <strcmp+0x68>
   4ed7c:	027fbff4 	movhi	r9,65279
   4ed80:	4a7fbfc4 	addi	r9,r9,-257
   4ed84:	0086303a 	nor	r3,zero,r2
   4ed88:	02202074 	movhi	r8,32897
   4ed8c:	1245883a 	add	r2,r2,r9
   4ed90:	42202004 	addi	r8,r8,-32640
   4ed94:	10c4703a 	and	r2,r2,r3
   4ed98:	1204703a 	and	r2,r2,r8
   4ed9c:	10000226 	beq	r2,zero,4eda8 <strcmp+0x44>
   4eda0:	00002306 	br	4ee30 <strcmp+0xcc>
   4eda4:	1000221e 	bne	r2,zero,4ee30 <strcmp+0xcc>
   4eda8:	21000104 	addi	r4,r4,4
   4edac:	20c00017 	ldw	r3,0(r4)
   4edb0:	29400104 	addi	r5,r5,4
   4edb4:	29800017 	ldw	r6,0(r5)
   4edb8:	1a4f883a 	add	r7,r3,r9
   4edbc:	00c4303a 	nor	r2,zero,r3
   4edc0:	3884703a 	and	r2,r7,r2
   4edc4:	1204703a 	and	r2,r2,r8
   4edc8:	19bff626 	beq	r3,r6,4eda4 <__alt_data_end+0xfffd05a4>
   4edcc:	20800003 	ldbu	r2,0(r4)
   4edd0:	10c03fcc 	andi	r3,r2,255
   4edd4:	18c0201c 	xori	r3,r3,128
   4edd8:	18ffe004 	addi	r3,r3,-128
   4eddc:	18000c26 	beq	r3,zero,4ee10 <strcmp+0xac>
   4ede0:	29800007 	ldb	r6,0(r5)
   4ede4:	19800326 	beq	r3,r6,4edf4 <strcmp+0x90>
   4ede8:	00001306 	br	4ee38 <strcmp+0xd4>
   4edec:	29800007 	ldb	r6,0(r5)
   4edf0:	11800b1e 	bne	r2,r6,4ee20 <strcmp+0xbc>
   4edf4:	21000044 	addi	r4,r4,1
   4edf8:	20c00003 	ldbu	r3,0(r4)
   4edfc:	29400044 	addi	r5,r5,1
   4ee00:	18803fcc 	andi	r2,r3,255
   4ee04:	1080201c 	xori	r2,r2,128
   4ee08:	10bfe004 	addi	r2,r2,-128
   4ee0c:	103ff71e 	bne	r2,zero,4edec <__alt_data_end+0xfffd05ec>
   4ee10:	0007883a 	mov	r3,zero
   4ee14:	28800003 	ldbu	r2,0(r5)
   4ee18:	1885c83a 	sub	r2,r3,r2
   4ee1c:	f800283a 	ret
   4ee20:	28800003 	ldbu	r2,0(r5)
   4ee24:	18c03fcc 	andi	r3,r3,255
   4ee28:	1885c83a 	sub	r2,r3,r2
   4ee2c:	f800283a 	ret
   4ee30:	0005883a 	mov	r2,zero
   4ee34:	f800283a 	ret
   4ee38:	10c03fcc 	andi	r3,r2,255
   4ee3c:	003ff506 	br	4ee14 <__alt_data_end+0xfffd0614>

0004ee40 <sulp>:
   4ee40:	defffd04 	addi	sp,sp,-12
   4ee44:	dc400115 	stw	r17,4(sp)
   4ee48:	3023883a 	mov	r17,r6
   4ee4c:	dc000015 	stw	r16,0(sp)
   4ee50:	dfc00215 	stw	ra,8(sp)
   4ee54:	2821883a 	mov	r16,r5
   4ee58:	004dd980 	call	4dd98 <__ulp>
   4ee5c:	88000c26 	beq	r17,zero,4ee90 <sulp+0x50>
   4ee60:	841ffc2c 	andhi	r16,r16,32752
   4ee64:	8020d53a 	srli	r16,r16,20
   4ee68:	01c01ac4 	movi	r7,107
   4ee6c:	3c21c83a 	sub	r16,r7,r16
   4ee70:	0400070e 	bge	zero,r16,4ee90 <sulp+0x50>
   4ee74:	8020953a 	slli	r16,r16,20
   4ee78:	01cffc34 	movhi	r7,16368
   4ee7c:	000d883a 	mov	r6,zero
   4ee80:	81cf883a 	add	r7,r16,r7
   4ee84:	1009883a 	mov	r4,r2
   4ee88:	180b883a 	mov	r5,r3
   4ee8c:	004407c0 	call	4407c <__muldf3>
   4ee90:	dfc00217 	ldw	ra,8(sp)
   4ee94:	dc400117 	ldw	r17,4(sp)
   4ee98:	dc000017 	ldw	r16,0(sp)
   4ee9c:	dec00304 	addi	sp,sp,12
   4eea0:	f800283a 	ret

0004eea4 <_strtod_r>:
   4eea4:	deffe204 	addi	sp,sp,-120
   4eea8:	ddc01b15 	stw	r23,108(sp)
   4eeac:	dd001815 	stw	r20,96(sp)
   4eeb0:	dc801615 	stw	r18,88(sp)
   4eeb4:	dc401515 	stw	r17,84(sp)
   4eeb8:	dc001415 	stw	r16,80(sp)
   4eebc:	d9400615 	stw	r5,24(sp)
   4eec0:	dfc01d15 	stw	ra,116(sp)
   4eec4:	df001c15 	stw	fp,112(sp)
   4eec8:	dd801a15 	stw	r22,104(sp)
   4eecc:	dd401915 	stw	r21,100(sp)
   4eed0:	dcc01715 	stw	r19,92(sp)
   4eed4:	2021883a 	mov	r16,r4
   4eed8:	d8000515 	stw	zero,20(sp)
   4eedc:	2809883a 	mov	r4,r5
   4eee0:	20800003 	ldbu	r2,0(r4)
   4eee4:	01c00174 	movhi	r7,5
   4eee8:	282f883a 	mov	r23,r5
   4eeec:	10c03fcc 	andi	r3,r2,255
   4eef0:	01400b44 	movi	r5,45
   4eef4:	39fbc604 	addi	r7,r7,-4328
   4eef8:	3029883a 	mov	r20,r6
   4eefc:	0025883a 	mov	r18,zero
   4ef00:	0023883a 	mov	r17,zero
   4ef04:	28c0ba36 	bltu	r5,r3,4f1f0 <_strtod_r+0x34c>
   4ef08:	180690ba 	slli	r3,r3,2
   4ef0c:	19c7883a 	add	r3,r3,r7
   4ef10:	18c00017 	ldw	r3,0(r3)
   4ef14:	1800683a 	jmp	r3
   4ef18:	0004efd8 	cmpnei	zero,zero,5055
   4ef1c:	0004f1f0 	cmpltui	zero,zero,5063
   4ef20:	0004f1f0 	cmpltui	zero,zero,5063
   4ef24:	0004f1f0 	cmpltui	zero,zero,5063
   4ef28:	0004f1f0 	cmpltui	zero,zero,5063
   4ef2c:	0004f1f0 	cmpltui	zero,zero,5063
   4ef30:	0004f1f0 	cmpltui	zero,zero,5063
   4ef34:	0004f1f0 	cmpltui	zero,zero,5063
   4ef38:	0004f1f0 	cmpltui	zero,zero,5063
   4ef3c:	0004f1dc 	xori	zero,zero,5063
   4ef40:	0004f1dc 	xori	zero,zero,5063
   4ef44:	0004f1dc 	xori	zero,zero,5063
   4ef48:	0004f1dc 	xori	zero,zero,5063
   4ef4c:	0004f1dc 	xori	zero,zero,5063
   4ef50:	0004f1f0 	cmpltui	zero,zero,5063
   4ef54:	0004f1f0 	cmpltui	zero,zero,5063
   4ef58:	0004f1f0 	cmpltui	zero,zero,5063
   4ef5c:	0004f1f0 	cmpltui	zero,zero,5063
   4ef60:	0004f1f0 	cmpltui	zero,zero,5063
   4ef64:	0004f1f0 	cmpltui	zero,zero,5063
   4ef68:	0004f1f0 	cmpltui	zero,zero,5063
   4ef6c:	0004f1f0 	cmpltui	zero,zero,5063
   4ef70:	0004f1f0 	cmpltui	zero,zero,5063
   4ef74:	0004f1f0 	cmpltui	zero,zero,5063
   4ef78:	0004f1f0 	cmpltui	zero,zero,5063
   4ef7c:	0004f1f0 	cmpltui	zero,zero,5063
   4ef80:	0004f1f0 	cmpltui	zero,zero,5063
   4ef84:	0004f1f0 	cmpltui	zero,zero,5063
   4ef88:	0004f1f0 	cmpltui	zero,zero,5063
   4ef8c:	0004f1f0 	cmpltui	zero,zero,5063
   4ef90:	0004f1f0 	cmpltui	zero,zero,5063
   4ef94:	0004f1f0 	cmpltui	zero,zero,5063
   4ef98:	0004f1dc 	xori	zero,zero,5063
   4ef9c:	0004f1f0 	cmpltui	zero,zero,5063
   4efa0:	0004f1f0 	cmpltui	zero,zero,5063
   4efa4:	0004f1f0 	cmpltui	zero,zero,5063
   4efa8:	0004f1f0 	cmpltui	zero,zero,5063
   4efac:	0004f1f0 	cmpltui	zero,zero,5063
   4efb0:	0004f1f0 	cmpltui	zero,zero,5063
   4efb4:	0004f1f0 	cmpltui	zero,zero,5063
   4efb8:	0004f1f0 	cmpltui	zero,zero,5063
   4efbc:	0004f1f0 	cmpltui	zero,zero,5063
   4efc0:	0004f1f0 	cmpltui	zero,zero,5063
   4efc4:	0004f030 	cmpltui	zero,zero,5056
   4efc8:	0004f1f0 	cmpltui	zero,zero,5063
   4efcc:	0004f1d0 	cmplti	zero,zero,5063
   4efd0:	00801244 	movi	r2,73
   4efd4:	88843526 	beq	r17,r2,500ac <_strtod_r+0x1208>
   4efd8:	002b883a 	mov	r21,zero
   4efdc:	002d883a 	mov	r22,zero
   4efe0:	a0000526 	beq	r20,zero,4eff8 <_strtod_r+0x154>
   4efe4:	d8000715 	stw	zero,28(sp)
   4efe8:	a5c00015 	stw	r23,0(r20)
   4efec:	d9000717 	ldw	r4,28(sp)
   4eff0:	20000126 	beq	r4,zero,4eff8 <_strtod_r+0x154>
   4eff4:	b5a0003c 	xorhi	r22,r22,32768
   4eff8:	a805883a 	mov	r2,r21
   4effc:	b007883a 	mov	r3,r22
   4f000:	dfc01d17 	ldw	ra,116(sp)
   4f004:	df001c17 	ldw	fp,112(sp)
   4f008:	ddc01b17 	ldw	r23,108(sp)
   4f00c:	dd801a17 	ldw	r22,104(sp)
   4f010:	dd401917 	ldw	r21,100(sp)
   4f014:	dd001817 	ldw	r20,96(sp)
   4f018:	dcc01717 	ldw	r19,92(sp)
   4f01c:	dc801617 	ldw	r18,88(sp)
   4f020:	dc401517 	ldw	r17,84(sp)
   4f024:	dc001417 	ldw	r16,80(sp)
   4f028:	dec01e04 	addi	sp,sp,120
   4f02c:	f800283a 	ret
   4f030:	d8000715 	stw	zero,28(sp)
   4f034:	24c00044 	addi	r19,r4,1
   4f038:	dcc00615 	stw	r19,24(sp)
   4f03c:	20800043 	ldbu	r2,1(r4)
   4f040:	10c03fcc 	andi	r3,r2,255
   4f044:	18c0201c 	xori	r3,r3,128
   4f048:	18ffe004 	addi	r3,r3,-128
   4f04c:	183fe226 	beq	r3,zero,4efd8 <__alt_data_end+0xfffd07d8>
   4f050:	11403fcc 	andi	r5,r2,255
   4f054:	2940201c 	xori	r5,r5,128
   4f058:	297fe004 	addi	r5,r5,-128
   4f05c:	00c00c04 	movi	r3,48
   4f060:	28c0e526 	beq	r5,r3,4f3f8 <_strtod_r+0x554>
   4f064:	dcc00815 	stw	r19,32(sp)
   4f068:	0025883a 	mov	r18,zero
   4f06c:	10fff404 	addi	r3,r2,-48
   4f070:	18c03fcc 	andi	r3,r3,255
   4f074:	01000244 	movi	r4,9
   4f078:	20c37536 	bltu	r4,r3,4fe50 <_strtod_r+0xfac>
   4f07c:	dd400817 	ldw	r21,32(sp)
   4f080:	0027883a 	mov	r19,zero
   4f084:	0039883a 	mov	fp,zero
   4f088:	002d883a 	mov	r22,zero
   4f08c:	01400204 	movi	r5,8
   4f090:	2d805a16 	blt	r5,r22,4f1fc <_strtod_r+0x358>
   4f094:	e70002a4 	muli	fp,fp,10
   4f098:	10c03fcc 	andi	r3,r2,255
   4f09c:	18c0201c 	xori	r3,r3,128
   4f0a0:	18ffe004 	addi	r3,r3,-128
   4f0a4:	e0f9883a 	add	fp,fp,r3
   4f0a8:	e73ff404 	addi	fp,fp,-48
   4f0ac:	ad400044 	addi	r21,r21,1
   4f0b0:	dd400615 	stw	r21,24(sp)
   4f0b4:	a8800003 	ldbu	r2,0(r21)
   4f0b8:	b5800044 	addi	r22,r22,1
   4f0bc:	10fff404 	addi	r3,r2,-48
   4f0c0:	18c03fcc 	andi	r3,r3,255
   4f0c4:	20fff22e 	bgeu	r4,r3,4f090 <__alt_data_end+0xfffd0890>
   4f0c8:	14403fcc 	andi	r17,r2,255
   4f0cc:	8c40201c 	xori	r17,r17,128
   4f0d0:	8c7fe004 	addi	r17,r17,-128
   4f0d4:	8009883a 	mov	r4,r16
   4f0d8:	004c2f00 	call	4c2f0 <_localeconv_r>
   4f0dc:	11400017 	ldw	r5,0(r2)
   4f0e0:	8009883a 	mov	r4,r16
   4f0e4:	d9401315 	stw	r5,76(sp)
   4f0e8:	004c2f00 	call	4c2f0 <_localeconv_r>
   4f0ec:	11000017 	ldw	r4,0(r2)
   4f0f0:	00459240 	call	45924 <strlen>
   4f0f4:	d9401317 	ldw	r5,76(sp)
   4f0f8:	100d883a 	mov	r6,r2
   4f0fc:	a809883a 	mov	r4,r21
   4f100:	0055c480 	call	55c48 <strncmp>
   4f104:	1000ce26 	beq	r2,zero,4f440 <_strtod_r+0x59c>
   4f108:	b013883a 	mov	r9,r22
   4f10c:	000b883a 	mov	r5,zero
   4f110:	0015883a 	mov	r10,zero
   4f114:	0017883a 	mov	r11,zero
   4f118:	00801944 	movi	r2,101
   4f11c:	88807826 	beq	r17,r2,4f300 <_strtod_r+0x45c>
   4f120:	00801144 	movi	r2,69
   4f124:	88807626 	beq	r17,r2,4f300 <_strtod_r+0x45c>
   4f128:	002b883a 	mov	r21,zero
   4f12c:	48003d1e 	bne	r9,zero,4f224 <_strtod_r+0x380>
   4f130:	2800391e 	bne	r5,zero,4f218 <_strtod_r+0x374>
   4f134:	9000381e 	bne	r18,zero,4f218 <_strtod_r+0x374>
   4f138:	583fa71e 	bne	r11,zero,4efd8 <__alt_data_end+0xfffd07d8>
   4f13c:	00801384 	movi	r2,78
   4f140:	88800526 	beq	r17,r2,4f158 <_strtod_r+0x2b4>
   4f144:	147fa20e 	bge	r2,r17,4efd0 <__alt_data_end+0xfffd07d0>
   4f148:	00801a44 	movi	r2,105
   4f14c:	8883d726 	beq	r17,r2,500ac <_strtod_r+0x1208>
   4f150:	00801b84 	movi	r2,110
   4f154:	88bfa01e 	bne	r17,r2,4efd8 <__alt_data_end+0xfffd07d8>
   4f158:	014001b4 	movhi	r5,6
   4f15c:	d9000617 	ldw	r4,24(sp)
   4f160:	296d9b04 	addi	r5,r5,-18836
   4f164:	01c00644 	movi	r7,25
   4f168:	00000b06 	br	4f198 <_strtod_r+0x2f4>
   4f16c:	21000044 	addi	r4,r4,1
   4f170:	20800003 	ldbu	r2,0(r4)
   4f174:	10ffefc4 	addi	r3,r2,-65
   4f178:	10803fcc 	andi	r2,r2,255
   4f17c:	1080201c 	xori	r2,r2,128
   4f180:	18c03fcc 	andi	r3,r3,255
   4f184:	10bfe004 	addi	r2,r2,-128
   4f188:	38c00136 	bltu	r7,r3,4f190 <_strtod_r+0x2ec>
   4f18c:	10800804 	addi	r2,r2,32
   4f190:	29400044 	addi	r5,r5,1
   4f194:	11bf901e 	bne	r2,r6,4efd8 <__alt_data_end+0xfffd07d8>
   4f198:	29800007 	ldb	r6,0(r5)
   4f19c:	303ff31e 	bne	r6,zero,4f16c <__alt_data_end+0xfffd096c>
   4f1a0:	20800044 	addi	r2,r4,1
   4f1a4:	d8800615 	stw	r2,24(sp)
   4f1a8:	20c00047 	ldb	r3,1(r4)
   4f1ac:	00800a04 	movi	r2,40
   4f1b0:	18849d26 	beq	r3,r2,50428 <_strtod_r+0x1584>
   4f1b4:	047ffe34 	movhi	r17,65528
   4f1b8:	0025883a 	mov	r18,zero
   4f1bc:	902b883a 	mov	r21,r18
   4f1c0:	882d883a 	mov	r22,r17
   4f1c4:	a03f8926 	beq	r20,zero,4efec <__alt_data_end+0xfffd07ec>
   4f1c8:	ddc00617 	ldw	r23,24(sp)
   4f1cc:	003f8606 	br	4efe8 <__alt_data_end+0xfffd07e8>
   4f1d0:	00800044 	movi	r2,1
   4f1d4:	d8800715 	stw	r2,28(sp)
   4f1d8:	003f9606 	br	4f034 <__alt_data_end+0xfffd0834>
   4f1dc:	21000044 	addi	r4,r4,1
   4f1e0:	d9000615 	stw	r4,24(sp)
   4f1e4:	20800003 	ldbu	r2,0(r4)
   4f1e8:	10c03fcc 	andi	r3,r2,255
   4f1ec:	28ff462e 	bgeu	r5,r3,4ef08 <__alt_data_end+0xfffd0708>
   4f1f0:	2027883a 	mov	r19,r4
   4f1f4:	d8000715 	stw	zero,28(sp)
   4f1f8:	003f9506 	br	4f050 <__alt_data_end+0xfffd0850>
   4f1fc:	9cc002a4 	muli	r19,r19,10
   4f200:	10803fcc 	andi	r2,r2,255
   4f204:	1080201c 	xori	r2,r2,128
   4f208:	10bfe004 	addi	r2,r2,-128
   4f20c:	9885883a 	add	r2,r19,r2
   4f210:	14fff404 	addi	r19,r2,-48
   4f214:	003fa506 	br	4f0ac <__alt_data_end+0xfffd08ac>
   4f218:	002b883a 	mov	r21,zero
   4f21c:	002d883a 	mov	r22,zero
   4f220:	003fe806 	br	4f1c4 <__alt_data_end+0xfffd09c4>
   4f224:	aaabc83a 	sub	r21,r21,r10
   4f228:	b000011e 	bne	r22,zero,4f230 <_strtod_r+0x38c>
   4f22c:	482d883a 	mov	r22,r9
   4f230:	00800404 	movi	r2,16
   4f234:	482f883a 	mov	r23,r9
   4f238:	1240010e 	bge	r2,r9,4f240 <_strtod_r+0x39c>
   4f23c:	102f883a 	mov	r23,r2
   4f240:	e009883a 	mov	r4,fp
   4f244:	da401315 	stw	r9,76(sp)
   4f248:	00451ec0 	call	451ec <__floatunsidf>
   4f24c:	1025883a 	mov	r18,r2
   4f250:	00800244 	movi	r2,9
   4f254:	1823883a 	mov	r17,r3
   4f258:	da401317 	ldw	r9,76(sp)
   4f25c:	15c0160e 	bge	r2,r23,4f2b8 <_strtod_r+0x414>
   4f260:	b8bffdc4 	addi	r2,r23,-9
   4f264:	100490fa 	slli	r2,r2,3
   4f268:	180b883a 	mov	r5,r3
   4f26c:	00c001b4 	movhi	r3,6
   4f270:	18ed6604 	addi	r3,r3,-19048
   4f274:	1885883a 	add	r2,r3,r2
   4f278:	11800017 	ldw	r6,0(r2)
   4f27c:	11c00117 	ldw	r7,4(r2)
   4f280:	9009883a 	mov	r4,r18
   4f284:	004407c0 	call	4407c <__muldf3>
   4f288:	9809883a 	mov	r4,r19
   4f28c:	1025883a 	mov	r18,r2
   4f290:	1823883a 	mov	r17,r3
   4f294:	00451ec0 	call	451ec <__floatunsidf>
   4f298:	9009883a 	mov	r4,r18
   4f29c:	880b883a 	mov	r5,r17
   4f2a0:	100d883a 	mov	r6,r2
   4f2a4:	180f883a 	mov	r7,r3
   4f2a8:	0042d180 	call	42d18 <__adddf3>
   4f2ac:	da401317 	ldw	r9,76(sp)
   4f2b0:	1025883a 	mov	r18,r2
   4f2b4:	1823883a 	mov	r17,r3
   4f2b8:	008003c4 	movi	r2,15
   4f2bc:	12407b16 	blt	r2,r9,4f4ac <_strtod_r+0x608>
   4f2c0:	a83fbe26 	beq	r21,zero,4f1bc <__alt_data_end+0xfffd09bc>
   4f2c4:	0543670e 	bge	zero,r21,50064 <_strtod_r+0x11c0>
   4f2c8:	00c00584 	movi	r3,22
   4f2cc:	1d42e816 	blt	r3,r21,4fe70 <_strtod_r+0xfcc>
   4f2d0:	a82a90fa 	slli	r21,r21,3
   4f2d4:	008001b4 	movhi	r2,6
   4f2d8:	10ad6604 	addi	r2,r2,-19048
   4f2dc:	1545883a 	add	r2,r2,r21
   4f2e0:	11000017 	ldw	r4,0(r2)
   4f2e4:	11400117 	ldw	r5,4(r2)
   4f2e8:	900d883a 	mov	r6,r18
   4f2ec:	880f883a 	mov	r7,r17
   4f2f0:	004407c0 	call	4407c <__muldf3>
   4f2f4:	102b883a 	mov	r21,r2
   4f2f8:	182d883a 	mov	r22,r3
   4f2fc:	003fb106 	br	4f1c4 <__alt_data_end+0xfffd09c4>
   4f300:	4801b526 	beq	r9,zero,4f9d8 <_strtod_r+0xb34>
   4f304:	ddc00617 	ldw	r23,24(sp)
   4f308:	00c00ac4 	movi	r3,43
   4f30c:	b8800044 	addi	r2,r23,1
   4f310:	d8800615 	stw	r2,24(sp)
   4f314:	b8800047 	ldb	r2,1(r23)
   4f318:	10c1e926 	beq	r2,r3,4fac0 <_strtod_r+0xc1c>
   4f31c:	00c00b44 	movi	r3,45
   4f320:	10c1ec26 	beq	r2,r3,4fad4 <_strtod_r+0xc30>
   4f324:	1023883a 	mov	r17,r2
   4f328:	0019883a 	mov	r12,zero
   4f32c:	88bff404 	addi	r2,r17,-48
   4f330:	00c00244 	movi	r3,9
   4f334:	1881b736 	bltu	r3,r2,4fa14 <_strtod_r+0xb70>
   4f338:	00800c04 	movi	r2,48
   4f33c:	8880071e 	bne	r17,r2,4f35c <_strtod_r+0x4b8>
   4f340:	d8800617 	ldw	r2,24(sp)
   4f344:	8807883a 	mov	r3,r17
   4f348:	10800044 	addi	r2,r2,1
   4f34c:	d8800615 	stw	r2,24(sp)
   4f350:	14400007 	ldb	r17,0(r2)
   4f354:	10800044 	addi	r2,r2,1
   4f358:	88fffc26 	beq	r17,r3,4f34c <__alt_data_end+0xfffd0b4c>
   4f35c:	88bff3c4 	addi	r2,r17,-49
   4f360:	00c00204 	movi	r3,8
   4f364:	18bf7036 	bltu	r3,r2,4f128 <__alt_data_end+0xfffd0928>
   4f368:	db800617 	ldw	r14,24(sp)
   4f36c:	88bff404 	addi	r2,r17,-48
   4f370:	03400244 	movi	r13,9
   4f374:	71c00044 	addi	r7,r14,1
   4f378:	d9c00615 	stw	r7,24(sp)
   4f37c:	74400043 	ldbu	r17,1(r14)
   4f380:	88fff404 	addi	r3,r17,-48
   4f384:	8c403fcc 	andi	r17,r17,255
   4f388:	8c40201c 	xori	r17,r17,128
   4f38c:	18c03fcc 	andi	r3,r3,255
   4f390:	8c7fe004 	addi	r17,r17,-128
   4f394:	68c00e36 	bltu	r13,r3,4f3d0 <_strtod_r+0x52c>
   4f398:	71000084 	addi	r4,r14,2
   4f39c:	d9000615 	stw	r4,24(sp)
   4f3a0:	108002a4 	muli	r2,r2,10
   4f3a4:	21800003 	ldbu	r6,0(r4)
   4f3a8:	200f883a 	mov	r7,r4
   4f3ac:	1463883a 	add	r17,r2,r17
   4f3b0:	30fff404 	addi	r3,r6,-48
   4f3b4:	88bff404 	addi	r2,r17,-48
   4f3b8:	34403fcc 	andi	r17,r6,255
   4f3bc:	8c40201c 	xori	r17,r17,128
   4f3c0:	18c03fcc 	andi	r3,r3,255
   4f3c4:	8c7fe004 	addi	r17,r17,-128
   4f3c8:	21000044 	addi	r4,r4,1
   4f3cc:	68fff32e 	bgeu	r13,r3,4f39c <__alt_data_end+0xfffd0b9c>
   4f3d0:	3b8fc83a 	sub	r7,r7,r14
   4f3d4:	00c00204 	movi	r3,8
   4f3d8:	19c29716 	blt	r3,r7,4fe38 <_strtod_r+0xf94>
   4f3dc:	102b883a 	mov	r21,r2
   4f3e0:	009387c4 	movi	r2,19999
   4f3e4:	1540010e 	bge	r2,r21,4f3ec <_strtod_r+0x548>
   4f3e8:	102b883a 	mov	r21,r2
   4f3ec:	603f4f26 	beq	r12,zero,4f12c <__alt_data_end+0xfffd092c>
   4f3f0:	056bc83a 	sub	r21,zero,r21
   4f3f4:	003f4d06 	br	4f12c <__alt_data_end+0xfffd092c>
   4f3f8:	98800047 	ldb	r2,1(r19)
   4f3fc:	00c01604 	movi	r3,88
   4f400:	10c1de26 	beq	r2,r3,4fb7c <_strtod_r+0xcd8>
   4f404:	00c01e04 	movi	r3,120
   4f408:	10c1dc26 	beq	r2,r3,4fb7c <_strtod_r+0xcd8>
   4f40c:	98c00044 	addi	r3,r19,1
   4f410:	1827883a 	mov	r19,r3
   4f414:	d8c00615 	stw	r3,24(sp)
   4f418:	18c00044 	addi	r3,r3,1
   4f41c:	18bfffc3 	ldbu	r2,-1(r3)
   4f420:	11003fcc 	andi	r4,r2,255
   4f424:	2100201c 	xori	r4,r4,128
   4f428:	213fe004 	addi	r4,r4,-128
   4f42c:	217ff826 	beq	r4,r5,4f410 <__alt_data_end+0xfffd0c10>
   4f430:	203f7926 	beq	r4,zero,4f218 <__alt_data_end+0xfffd0a18>
   4f434:	dcc00815 	stw	r19,32(sp)
   4f438:	04800044 	movi	r18,1
   4f43c:	003f0b06 	br	4f06c <__alt_data_end+0xfffd086c>
   4f440:	8009883a 	mov	r4,r16
   4f444:	004c2f00 	call	4c2f0 <_localeconv_r>
   4f448:	11000017 	ldw	r4,0(r2)
   4f44c:	00459240 	call	45924 <strlen>
   4f450:	d8c00617 	ldw	r3,24(sp)
   4f454:	1885883a 	add	r2,r3,r2
   4f458:	d8800615 	stw	r2,24(sp)
   4f45c:	14400007 	ldb	r17,0(r2)
   4f460:	b001881e 	bne	r22,zero,4fa84 <_strtod_r+0xbe0>
   4f464:	00c00c04 	movi	r3,48
   4f468:	88c3391e 	bne	r17,r3,50150 <_strtod_r+0x12ac>
   4f46c:	10c00044 	addi	r3,r2,1
   4f470:	8809883a 	mov	r4,r17
   4f474:	d8c00615 	stw	r3,24(sp)
   4f478:	1c400007 	ldb	r17,0(r3)
   4f47c:	188bc83a 	sub	r5,r3,r2
   4f480:	18c00044 	addi	r3,r3,1
   4f484:	893ffb26 	beq	r17,r4,4f474 <__alt_data_end+0xfffd0c74>
   4f488:	88bff3c4 	addi	r2,r17,-49
   4f48c:	00c00204 	movi	r3,8
   4f490:	1882e72e 	bgeu	r3,r2,50030 <_strtod_r+0x118c>
   4f494:	00801944 	movi	r2,101
   4f498:	88814d26 	beq	r17,r2,4f9d0 <_strtod_r+0xb2c>
   4f49c:	0013883a 	mov	r9,zero
   4f4a0:	0015883a 	mov	r10,zero
   4f4a4:	02c00044 	movi	r11,1
   4f4a8:	003f1d06 	br	4f120 <__alt_data_end+0xfffd0920>
   4f4ac:	4defc83a 	sub	r23,r9,r23
   4f4b0:	bd6f883a 	add	r23,r23,r21
   4f4b4:	05c21e0e 	bge	zero,r23,4fd30 <_strtod_r+0xe8c>
   4f4b8:	b88003cc 	andi	r2,r23,15
   4f4bc:	10000d26 	beq	r2,zero,4f4f4 <_strtod_r+0x650>
   4f4c0:	100490fa 	slli	r2,r2,3
   4f4c4:	00c001b4 	movhi	r3,6
   4f4c8:	18ed6604 	addi	r3,r3,-19048
   4f4cc:	1885883a 	add	r2,r3,r2
   4f4d0:	11000017 	ldw	r4,0(r2)
   4f4d4:	11400117 	ldw	r5,4(r2)
   4f4d8:	900d883a 	mov	r6,r18
   4f4dc:	880f883a 	mov	r7,r17
   4f4e0:	da401315 	stw	r9,76(sp)
   4f4e4:	004407c0 	call	4407c <__muldf3>
   4f4e8:	da401317 	ldw	r9,76(sp)
   4f4ec:	1025883a 	mov	r18,r2
   4f4f0:	1823883a 	mov	r17,r3
   4f4f4:	023ffc04 	movi	r8,-16
   4f4f8:	ba10703a 	and	r8,r23,r8
   4f4fc:	40003c26 	beq	r8,zero,4f5f0 <_strtod_r+0x74c>
   4f500:	00804d04 	movi	r2,308
   4f504:	1201cd16 	blt	r2,r8,4fc3c <_strtod_r+0xd98>
   4f508:	4011d13a 	srai	r8,r8,4
   4f50c:	03000044 	movi	r12,1
   4f510:	62037c0e 	bge	r12,r8,50304 <_strtod_r+0x1460>
   4f514:	010001b4 	movhi	r4,6
   4f518:	212d5c04 	addi	r4,r4,-19088
   4f51c:	2015883a 	mov	r10,r4
   4f520:	0027883a 	mov	r19,zero
   4f524:	d9000915 	stw	r4,36(sp)
   4f528:	9005883a 	mov	r2,r18
   4f52c:	8807883a 	mov	r3,r17
   4f530:	dc000c15 	stw	r16,48(sp)
   4f534:	dc800e15 	stw	r18,56(sp)
   4f538:	9821883a 	mov	r16,r19
   4f53c:	0009883a 	mov	r4,zero
   4f540:	8827883a 	mov	r19,r17
   4f544:	602f883a 	mov	r23,r12
   4f548:	da400a15 	stw	r9,40(sp)
   4f54c:	5025883a 	mov	r18,r10
   4f550:	4023883a 	mov	r17,r8
   4f554:	8980004c 	andi	r6,r17,1
   4f558:	30000626 	beq	r6,zero,4f574 <_strtod_r+0x6d0>
   4f55c:	91800017 	ldw	r6,0(r18)
   4f560:	91c00117 	ldw	r7,4(r18)
   4f564:	1009883a 	mov	r4,r2
   4f568:	180b883a 	mov	r5,r3
   4f56c:	004407c0 	call	4407c <__muldf3>
   4f570:	01000044 	movi	r4,1
   4f574:	8823d07a 	srai	r17,r17,1
   4f578:	84000044 	addi	r16,r16,1
   4f57c:	94800204 	addi	r18,r18,8
   4f580:	8dfff41e 	bne	r17,r23,4f554 <__alt_data_end+0xfffd0d54>
   4f584:	21003fcc 	andi	r4,r4,255
   4f588:	9823883a 	mov	r17,r19
   4f58c:	da400a17 	ldw	r9,40(sp)
   4f590:	8027883a 	mov	r19,r16
   4f594:	dc800e17 	ldw	r18,56(sp)
   4f598:	dc000c17 	ldw	r16,48(sp)
   4f59c:	2003b11e 	bne	r4,zero,50464 <_strtod_r+0x15c0>
   4f5a0:	981690fa 	slli	r11,r19,3
   4f5a4:	d8800917 	ldw	r2,36(sp)
   4f5a8:	01ff2c34 	movhi	r7,64688
   4f5ac:	900d883a 	mov	r6,r18
   4f5b0:	12ef883a 	add	r23,r2,r11
   4f5b4:	b9000017 	ldw	r4,0(r23)
   4f5b8:	b9400117 	ldw	r5,4(r23)
   4f5bc:	89cf883a 	add	r7,r17,r7
   4f5c0:	da401315 	stw	r9,76(sp)
   4f5c4:	004407c0 	call	4407c <__muldf3>
   4f5c8:	1025883a 	mov	r18,r2
   4f5cc:	011f2834 	movhi	r4,31904
   4f5d0:	189ffc2c 	andhi	r2,r3,32752
   4f5d4:	da401317 	ldw	r9,76(sp)
   4f5d8:	20819836 	bltu	r4,r2,4fc3c <_strtod_r+0xd98>
   4f5dc:	011f2434 	movhi	r4,31888
   4f5e0:	2083382e 	bgeu	r4,r2,502c4 <_strtod_r+0x1420>
   4f5e4:	045ffc34 	movhi	r17,32752
   4f5e8:	8c7fffc4 	addi	r17,r17,-1
   4f5ec:	04bfffc4 	movi	r18,-1
   4f5f0:	d8000915 	stw	zero,36(sp)
   4f5f4:	d9400817 	ldw	r5,32(sp)
   4f5f8:	df000015 	stw	fp,0(sp)
   4f5fc:	480f883a 	mov	r7,r9
   4f600:	b00d883a 	mov	r6,r22
   4f604:	8009883a 	mov	r4,r16
   4f608:	004d4640 	call	4d464 <__s2b>
   4f60c:	d8800815 	stw	r2,32(sp)
   4f610:	10018a26 	beq	r2,zero,4fc3c <_strtod_r+0xd98>
   4f614:	a807d7fa 	srai	r3,r21,31
   4f618:	0545c83a 	sub	r2,zero,r21
   4f61c:	dd400a15 	stw	r21,40(sp)
   4f620:	1886703a 	and	r3,r3,r2
   4f624:	d8c00c15 	stw	r3,48(sp)
   4f628:	a8013516 	blt	r21,zero,4fb00 <_strtod_r+0xc5c>
   4f62c:	d9400817 	ldw	r5,32(sp)
   4f630:	0011883a 	mov	r8,zero
   4f634:	0027883a 	mov	r19,zero
   4f638:	29400304 	addi	r5,r5,12
   4f63c:	d9400f15 	stw	r5,60(sp)
   4f640:	402b883a 	mov	r21,r8
   4f644:	dd001215 	stw	r20,72(sp)
   4f648:	d8800817 	ldw	r2,32(sp)
   4f64c:	8009883a 	mov	r4,r16
   4f650:	11400117 	ldw	r5,4(r2)
   4f654:	004d2740 	call	4d274 <_Balloc>
   4f658:	1029883a 	mov	r20,r2
   4f65c:	10012d26 	beq	r2,zero,4fb14 <_strtod_r+0xc70>
   4f660:	d8c00817 	ldw	r3,32(sp)
   4f664:	d9400f17 	ldw	r5,60(sp)
   4f668:	11000304 	addi	r4,r2,12
   4f66c:	19800417 	ldw	r6,16(r3)
   4f670:	31800084 	addi	r6,r6,2
   4f674:	318d883a 	add	r6,r6,r6
   4f678:	318d883a 	add	r6,r6,r6
   4f67c:	00456300 	call	45630 <memcpy>
   4f680:	d9000204 	addi	r4,sp,8
   4f684:	d9000015 	stw	r4,0(sp)
   4f688:	d9c00404 	addi	r7,sp,16
   4f68c:	900b883a 	mov	r5,r18
   4f690:	880d883a 	mov	r6,r17
   4f694:	8009883a 	mov	r4,r16
   4f698:	004df080 	call	4df08 <__d2b>
   4f69c:	d8800515 	stw	r2,20(sp)
   4f6a0:	dc801115 	stw	r18,68(sp)
   4f6a4:	dc401015 	stw	r17,64(sp)
   4f6a8:	10027c26 	beq	r2,zero,5009c <_strtod_r+0x11f8>
   4f6ac:	01400044 	movi	r5,1
   4f6b0:	8009883a 	mov	r4,r16
   4f6b4:	004d6800 	call	4d680 <__i2b>
   4f6b8:	1027883a 	mov	r19,r2
   4f6bc:	10011526 	beq	r2,zero,4fb14 <_strtod_r+0xc70>
   4f6c0:	d8800417 	ldw	r2,16(sp)
   4f6c4:	1000c816 	blt	r2,zero,4f9e8 <_strtod_r+0xb44>
   4f6c8:	d9400c17 	ldw	r5,48(sp)
   4f6cc:	d9000a17 	ldw	r4,40(sp)
   4f6d0:	28ad883a 	add	r22,r5,r2
   4f6d4:	d9400917 	ldw	r5,36(sp)
   4f6d8:	df000217 	ldw	fp,8(sp)
   4f6dc:	05ff0084 	movi	r23,-1022
   4f6e0:	1147c83a 	sub	r3,r2,r5
   4f6e4:	1f07883a 	add	r3,r3,fp
   4f6e8:	00800d84 	movi	r2,54
   4f6ec:	18ffffc4 	addi	r3,r3,-1
   4f6f0:	1739c83a 	sub	fp,r2,fp
   4f6f4:	1dc0a50e 	bge	r3,r23,4f98c <_strtod_r+0xae8>
   4f6f8:	b8efc83a 	sub	r23,r23,r3
   4f6fc:	008007c4 	movi	r2,31
   4f700:	e5f9c83a 	sub	fp,fp,r23
   4f704:	15c0bc16 	blt	r2,r23,4f9f8 <_strtod_r+0xb54>
   4f708:	00800044 	movi	r2,1
   4f70c:	15c4983a 	sll	r2,r2,r23
   4f710:	d8000b15 	stw	zero,44(sp)
   4f714:	d8800d15 	stw	r2,52(sp)
   4f718:	2707883a 	add	r3,r4,fp
   4f71c:	d9000917 	ldw	r4,36(sp)
   4f720:	b739883a 	add	fp,r22,fp
   4f724:	20ef883a 	add	r23,r4,r3
   4f728:	b009883a 	mov	r4,r22
   4f72c:	e580010e 	bge	fp,r22,4f734 <_strtod_r+0x890>
   4f730:	e009883a 	mov	r4,fp
   4f734:	b805883a 	mov	r2,r23
   4f738:	25c0010e 	bge	r4,r23,4f740 <_strtod_r+0x89c>
   4f73c:	2005883a 	mov	r2,r4
   4f740:	0080030e 	bge	zero,r2,4f750 <_strtod_r+0x8ac>
   4f744:	e0b9c83a 	sub	fp,fp,r2
   4f748:	b8afc83a 	sub	r23,r23,r2
   4f74c:	b0adc83a 	sub	r22,r22,r2
   4f750:	d9400c17 	ldw	r5,48(sp)
   4f754:	28001126 	beq	r5,zero,4f79c <_strtod_r+0x8f8>
   4f758:	280d883a 	mov	r6,r5
   4f75c:	8009883a 	mov	r4,r16
   4f760:	980b883a 	mov	r5,r19
   4f764:	004d8b40 	call	4d8b4 <__pow5mult>
   4f768:	1027883a 	mov	r19,r2
   4f76c:	1000e926 	beq	r2,zero,4fb14 <_strtod_r+0xc70>
   4f770:	d9800517 	ldw	r6,20(sp)
   4f774:	100b883a 	mov	r5,r2
   4f778:	8009883a 	mov	r4,r16
   4f77c:	004d6bc0 	call	4d6bc <__multiply>
   4f780:	1000e426 	beq	r2,zero,4fb14 <_strtod_r+0xc70>
   4f784:	d9400517 	ldw	r5,20(sp)
   4f788:	8009883a 	mov	r4,r16
   4f78c:	d8801315 	stw	r2,76(sp)
   4f790:	004d31c0 	call	4d31c <_Bfree>
   4f794:	d8801317 	ldw	r2,76(sp)
   4f798:	d8800515 	stw	r2,20(sp)
   4f79c:	0700060e 	bge	zero,fp,4f7b8 <_strtod_r+0x914>
   4f7a0:	d9400517 	ldw	r5,20(sp)
   4f7a4:	e00d883a 	mov	r6,fp
   4f7a8:	8009883a 	mov	r4,r16
   4f7ac:	004d9f40 	call	4d9f4 <__lshift>
   4f7b0:	d8800515 	stw	r2,20(sp)
   4f7b4:	10023926 	beq	r2,zero,5009c <_strtod_r+0x11f8>
   4f7b8:	d8800a17 	ldw	r2,40(sp)
   4f7bc:	10000626 	beq	r2,zero,4f7d8 <_strtod_r+0x934>
   4f7c0:	d9800a17 	ldw	r6,40(sp)
   4f7c4:	a00b883a 	mov	r5,r20
   4f7c8:	8009883a 	mov	r4,r16
   4f7cc:	004d8b40 	call	4d8b4 <__pow5mult>
   4f7d0:	1029883a 	mov	r20,r2
   4f7d4:	1000cf26 	beq	r2,zero,4fb14 <_strtod_r+0xc70>
   4f7d8:	05c0060e 	bge	zero,r23,4f7f4 <_strtod_r+0x950>
   4f7dc:	a00b883a 	mov	r5,r20
   4f7e0:	b80d883a 	mov	r6,r23
   4f7e4:	8009883a 	mov	r4,r16
   4f7e8:	004d9f40 	call	4d9f4 <__lshift>
   4f7ec:	1029883a 	mov	r20,r2
   4f7f0:	1000c826 	beq	r2,zero,4fb14 <_strtod_r+0xc70>
   4f7f4:	0580060e 	bge	zero,r22,4f810 <_strtod_r+0x96c>
   4f7f8:	980b883a 	mov	r5,r19
   4f7fc:	b00d883a 	mov	r6,r22
   4f800:	8009883a 	mov	r4,r16
   4f804:	004d9f40 	call	4d9f4 <__lshift>
   4f808:	1027883a 	mov	r19,r2
   4f80c:	1000c126 	beq	r2,zero,4fb14 <_strtod_r+0xc70>
   4f810:	d9400517 	ldw	r5,20(sp)
   4f814:	a00d883a 	mov	r6,r20
   4f818:	8009883a 	mov	r4,r16
   4f81c:	004db9c0 	call	4db9c <__mdiff>
   4f820:	102b883a 	mov	r21,r2
   4f824:	1000bb26 	beq	r2,zero,4fb14 <_strtod_r+0xc70>
   4f828:	10c00317 	ldw	r3,12(r2)
   4f82c:	980b883a 	mov	r5,r19
   4f830:	10000315 	stw	zero,12(r2)
   4f834:	1009883a 	mov	r4,r2
   4f838:	d8c00e15 	stw	r3,56(sp)
   4f83c:	004db3c0 	call	4db3c <__mcmp>
   4f840:	10027616 	blt	r2,zero,5021c <_strtod_r+0x1378>
   4f844:	10024426 	beq	r2,zero,50158 <_strtod_r+0x12b4>
   4f848:	980b883a 	mov	r5,r19
   4f84c:	a809883a 	mov	r4,r21
   4f850:	004e0540 	call	4e054 <__ratio>
   4f854:	000d883a 	mov	r6,zero
   4f858:	01d00034 	movhi	r7,16384
   4f85c:	1009883a 	mov	r4,r2
   4f860:	180b883a 	mov	r5,r3
   4f864:	102f883a 	mov	r23,r2
   4f868:	182d883a 	mov	r22,r3
   4f86c:	0043f880 	call	43f88 <__ledf2>
   4f870:	00804a16 	blt	zero,r2,4f99c <_strtod_r+0xaf8>
   4f874:	d9400e17 	ldw	r5,56(sp)
   4f878:	28006b26 	beq	r5,zero,4fa28 <_strtod_r+0xb84>
   4f87c:	058ffc34 	movhi	r22,16368
   4f880:	d8000b15 	stw	zero,44(sp)
   4f884:	d8000d15 	stw	zero,52(sp)
   4f888:	b02f883a 	mov	r23,r22
   4f88c:	8f1ffc2c 	andhi	fp,r17,32752
   4f890:	009ff834 	movhi	r2,32736
   4f894:	e080cd26 	beq	fp,r2,4fbcc <_strtod_r+0xd28>
   4f898:	d9400917 	ldw	r5,36(sp)
   4f89c:	28001a26 	beq	r5,zero,4f908 <_strtod_r+0xa64>
   4f8a0:	0081a834 	movhi	r2,1696
   4f8a4:	17001836 	bltu	r2,fp,4f908 <_strtod_r+0xa64>
   4f8a8:	d9000d17 	ldw	r4,52(sp)
   4f8ac:	01d07834 	movhi	r7,16864
   4f8b0:	39ffffc4 	addi	r7,r7,-1
   4f8b4:	01bff034 	movhi	r6,65472
   4f8b8:	b80b883a 	mov	r5,r23
   4f8bc:	0043f880 	call	43f88 <__ledf2>
   4f8c0:	00800e16 	blt	zero,r2,4f8fc <_strtod_r+0xa58>
   4f8c4:	d9000d17 	ldw	r4,52(sp)
   4f8c8:	b80b883a 	mov	r5,r23
   4f8cc:	00454080 	call	45408 <__fixunsdfsi>
   4f8d0:	10018126 	beq	r2,zero,4fed8 <_strtod_r+0x1034>
   4f8d4:	1009883a 	mov	r4,r2
   4f8d8:	00451ec0 	call	451ec <__floatunsidf>
   4f8dc:	d8800d15 	stw	r2,52(sp)
   4f8e0:	182f883a 	mov	r23,r3
   4f8e4:	d8800e17 	ldw	r2,56(sp)
   4f8e8:	1001791e 	bne	r2,zero,4fed0 <_strtod_r+0x102c>
   4f8ec:	ba20003c 	xorhi	r8,r23,32768
   4f8f0:	d8c00d17 	ldw	r3,52(sp)
   4f8f4:	402d883a 	mov	r22,r8
   4f8f8:	d8c00b15 	stw	r3,44(sp)
   4f8fc:	0081ac34 	movhi	r2,1712
   4f900:	b091883a 	add	r8,r22,r2
   4f904:	472dc83a 	sub	r22,r8,fp
   4f908:	9009883a 	mov	r4,r18
   4f90c:	880b883a 	mov	r5,r17
   4f910:	004dd980 	call	4dd98 <__ulp>
   4f914:	d9000b17 	ldw	r4,44(sp)
   4f918:	b00b883a 	mov	r5,r22
   4f91c:	100d883a 	mov	r6,r2
   4f920:	180f883a 	mov	r7,r3
   4f924:	004407c0 	call	4407c <__muldf3>
   4f928:	900d883a 	mov	r6,r18
   4f92c:	880f883a 	mov	r7,r17
   4f930:	1009883a 	mov	r4,r2
   4f934:	180b883a 	mov	r5,r3
   4f938:	0042d180 	call	42d18 <__adddf3>
   4f93c:	1025883a 	mov	r18,r2
   4f940:	1823883a 	mov	r17,r3
   4f944:	182d883a 	mov	r22,r3
   4f948:	d9000917 	ldw	r4,36(sp)
   4f94c:	2000021e 	bne	r4,zero,4f958 <_strtod_r+0xab4>
   4f950:	b09ffc2c 	andhi	r2,r22,32752
   4f954:	e080be26 	beq	fp,r2,4fc50 <_strtod_r+0xdac>
   4f958:	d9400517 	ldw	r5,20(sp)
   4f95c:	8009883a 	mov	r4,r16
   4f960:	004d31c0 	call	4d31c <_Bfree>
   4f964:	a00b883a 	mov	r5,r20
   4f968:	8009883a 	mov	r4,r16
   4f96c:	004d31c0 	call	4d31c <_Bfree>
   4f970:	980b883a 	mov	r5,r19
   4f974:	8009883a 	mov	r4,r16
   4f978:	004d31c0 	call	4d31c <_Bfree>
   4f97c:	a80b883a 	mov	r5,r21
   4f980:	8009883a 	mov	r4,r16
   4f984:	004d31c0 	call	4d31c <_Bfree>
   4f988:	003f2f06 	br	4f648 <__alt_data_end+0xfffd0e48>
   4f98c:	00c00044 	movi	r3,1
   4f990:	d8000b15 	stw	zero,44(sp)
   4f994:	d8c00d15 	stw	r3,52(sp)
   4f998:	003f5f06 	br	4f718 <__alt_data_end+0xfffd0f18>
   4f99c:	b809883a 	mov	r4,r23
   4f9a0:	000d883a 	mov	r6,zero
   4f9a4:	01cff834 	movhi	r7,16352
   4f9a8:	b00b883a 	mov	r5,r22
   4f9ac:	004407c0 	call	4407c <__muldf3>
   4f9b0:	d9000e17 	ldw	r4,56(sp)
   4f9b4:	d8800d15 	stw	r2,52(sp)
   4f9b8:	182f883a 	mov	r23,r3
   4f9bc:	2000181e 	bne	r4,zero,4fa20 <_strtod_r+0xb7c>
   4f9c0:	1a20003c 	xorhi	r8,r3,32768
   4f9c4:	d8800b15 	stw	r2,44(sp)
   4f9c8:	402d883a 	mov	r22,r8
   4f9cc:	003faf06 	br	4f88c <__alt_data_end+0xfffd108c>
   4f9d0:	0015883a 	mov	r10,zero
   4f9d4:	02c00044 	movi	r11,1
   4f9d8:	2800011e 	bne	r5,zero,4f9e0 <_strtod_r+0xb3c>
   4f9dc:	903d7e26 	beq	r18,zero,4efd8 <__alt_data_end+0xfffd07d8>
   4f9e0:	0013883a 	mov	r9,zero
   4f9e4:	003e4706 	br	4f304 <__alt_data_end+0xfffd0b04>
   4f9e8:	d8c00a17 	ldw	r3,40(sp)
   4f9ec:	dd800c17 	ldw	r22,48(sp)
   4f9f0:	1889c83a 	sub	r4,r3,r2
   4f9f4:	003f3706 	br	4f6d4 <__alt_data_end+0xfffd0ed4>
   4f9f8:	00bef884 	movi	r2,-1054
   4f9fc:	05c00044 	movi	r23,1
   4fa00:	10c5c83a 	sub	r2,r2,r3
   4fa04:	b884983a 	sll	r2,r23,r2
   4fa08:	ddc00d15 	stw	r23,52(sp)
   4fa0c:	d8800b15 	stw	r2,44(sp)
   4fa10:	003f4106 	br	4f718 <__alt_data_end+0xfffd0f18>
   4fa14:	ddc00615 	stw	r23,24(sp)
   4fa18:	002b883a 	mov	r21,zero
   4fa1c:	003dc306 	br	4f12c <__alt_data_end+0xfffd092c>
   4fa20:	1811883a 	mov	r8,r3
   4fa24:	003fe706 	br	4f9c4 <__alt_data_end+0xfffd11c4>
   4fa28:	90002e1e 	bne	r18,zero,4fae4 <_strtod_r+0xc40>
   4fa2c:	00c00434 	movhi	r3,16
   4fa30:	18ffffc4 	addi	r3,r3,-1
   4fa34:	88c4703a 	and	r2,r17,r3
   4fa38:	10002c1e 	bne	r2,zero,4faec <_strtod_r+0xc48>
   4fa3c:	000d883a 	mov	r6,zero
   4fa40:	01cffc34 	movhi	r7,16368
   4fa44:	b809883a 	mov	r4,r23
   4fa48:	b00b883a 	mov	r5,r22
   4fa4c:	0043f880 	call	43f88 <__ledf2>
   4fa50:	10021716 	blt	r2,zero,502b0 <_strtod_r+0x140c>
   4fa54:	b809883a 	mov	r4,r23
   4fa58:	b00b883a 	mov	r5,r22
   4fa5c:	000d883a 	mov	r6,zero
   4fa60:	01cff834 	movhi	r7,16352
   4fa64:	004407c0 	call	4407c <__muldf3>
   4fa68:	d8800d15 	stw	r2,52(sp)
   4fa6c:	182f883a 	mov	r23,r3
   4fa70:	102d883a 	mov	r22,r2
   4fa74:	1a20003c 	xorhi	r8,r3,32768
   4fa78:	dd800b15 	stw	r22,44(sp)
   4fa7c:	402d883a 	mov	r22,r8
   4fa80:	003f8206 	br	4f88c <__alt_data_end+0xfffd108c>
   4fa84:	b013883a 	mov	r9,r22
   4fa88:	000b883a 	mov	r5,zero
   4fa8c:	0015883a 	mov	r10,zero
   4fa90:	893ff404 	addi	r4,r17,-48
   4fa94:	00800244 	movi	r2,9
   4fa98:	11001036 	bltu	r2,r4,4fadc <_strtod_r+0xc38>
   4fa9c:	28c00044 	addi	r3,r5,1
   4faa0:	2023883a 	mov	r17,r4
   4faa4:	20014d1e 	bne	r4,zero,4ffdc <_strtod_r+0x1138>
   4faa8:	d9800617 	ldw	r6,24(sp)
   4faac:	180b883a 	mov	r5,r3
   4fab0:	30800044 	addi	r2,r6,1
   4fab4:	d8800615 	stw	r2,24(sp)
   4fab8:	34400047 	ldb	r17,1(r6)
   4fabc:	003ff406 	br	4fa90 <__alt_data_end+0xfffd1290>
   4fac0:	0019883a 	mov	r12,zero
   4fac4:	b8800084 	addi	r2,r23,2
   4fac8:	d8800615 	stw	r2,24(sp)
   4facc:	bc400087 	ldb	r17,2(r23)
   4fad0:	003e1606 	br	4f32c <__alt_data_end+0xfffd0b2c>
   4fad4:	03000044 	movi	r12,1
   4fad8:	003ffa06 	br	4fac4 <__alt_data_end+0xfffd12c4>
   4fadc:	02c00044 	movi	r11,1
   4fae0:	003d8d06 	br	4f118 <__alt_data_end+0xfffd0918>
   4fae4:	00800044 	movi	r2,1
   4fae8:	9080fe26 	beq	r18,r2,4fee4 <_strtod_r+0x1040>
   4faec:	d8000b15 	stw	zero,44(sp)
   4faf0:	05affc34 	movhi	r22,49136
   4faf4:	d8000d15 	stw	zero,52(sp)
   4faf8:	05cffc34 	movhi	r23,16368
   4fafc:	003f6306 	br	4f88c <__alt_data_end+0xfffd108c>
   4fb00:	d8000a15 	stw	zero,40(sp)
   4fb04:	003ec906 	br	4f62c <__alt_data_end+0xfffd0e2c>
   4fb08:	d9001117 	ldw	r4,68(sp)
   4fb0c:	00bfffc4 	movi	r2,-1
   4fb10:	2080461e 	bne	r4,r2,4fc2c <_strtod_r+0xd88>
   4fb14:	dd000a15 	stw	r20,40(sp)
   4fb18:	dd001217 	ldw	r20,72(sp)
   4fb1c:	a811883a 	mov	r8,r21
   4fb20:	d8800517 	ldw	r2,20(sp)
   4fb24:	00c00884 	movi	r3,34
   4fb28:	80c00015 	stw	r3,0(r16)
   4fb2c:	002b883a 	mov	r21,zero
   4fb30:	059ffc34 	movhi	r22,32752
   4fb34:	100b883a 	mov	r5,r2
   4fb38:	8009883a 	mov	r4,r16
   4fb3c:	da001315 	stw	r8,76(sp)
   4fb40:	004d31c0 	call	4d31c <_Bfree>
   4fb44:	d9400a17 	ldw	r5,40(sp)
   4fb48:	8009883a 	mov	r4,r16
   4fb4c:	004d31c0 	call	4d31c <_Bfree>
   4fb50:	980b883a 	mov	r5,r19
   4fb54:	8009883a 	mov	r4,r16
   4fb58:	004d31c0 	call	4d31c <_Bfree>
   4fb5c:	d9400817 	ldw	r5,32(sp)
   4fb60:	8009883a 	mov	r4,r16
   4fb64:	004d31c0 	call	4d31c <_Bfree>
   4fb68:	da001317 	ldw	r8,76(sp)
   4fb6c:	8009883a 	mov	r4,r16
   4fb70:	400b883a 	mov	r5,r8
   4fb74:	004d31c0 	call	4d31c <_Bfree>
   4fb78:	003d9206 	br	4f1c4 <__alt_data_end+0xfffd09c4>
   4fb7c:	d8c00717 	ldw	r3,28(sp)
   4fb80:	d8800504 	addi	r2,sp,20
   4fb84:	018001b4 	movhi	r6,6
   4fb88:	31ada104 	addi	r6,r6,-18812
   4fb8c:	d8c00115 	stw	r3,4(sp)
   4fb90:	d8800015 	stw	r2,0(sp)
   4fb94:	d9c00404 	addi	r7,sp,16
   4fb98:	d9400604 	addi	r5,sp,24
   4fb9c:	8009883a 	mov	r4,r16
   4fba0:	00550a80 	call	550a8 <__gethex>
   4fba4:	154001cc 	andi	r21,r2,7
   4fba8:	a83d9b26 	beq	r21,zero,4f218 <__alt_data_end+0xfffd0a18>
   4fbac:	00c00184 	movi	r3,6
   4fbb0:	a8c0d61e 	bne	r21,r3,4ff0c <_strtod_r+0x1068>
   4fbb4:	9cc00044 	addi	r19,r19,1
   4fbb8:	dcc00615 	stw	r19,24(sp)
   4fbbc:	002b883a 	mov	r21,zero
   4fbc0:	002d883a 	mov	r22,zero
   4fbc4:	d8000715 	stw	zero,28(sp)
   4fbc8:	003d7e06 	br	4f1c4 <__alt_data_end+0xfffd09c4>
   4fbcc:	00bf2c34 	movhi	r2,64688
   4fbd0:	88a3883a 	add	r17,r17,r2
   4fbd4:	9009883a 	mov	r4,r18
   4fbd8:	880b883a 	mov	r5,r17
   4fbdc:	004dd980 	call	4dd98 <__ulp>
   4fbe0:	d9000b17 	ldw	r4,44(sp)
   4fbe4:	100d883a 	mov	r6,r2
   4fbe8:	180f883a 	mov	r7,r3
   4fbec:	b00b883a 	mov	r5,r22
   4fbf0:	004407c0 	call	4407c <__muldf3>
   4fbf4:	900d883a 	mov	r6,r18
   4fbf8:	180b883a 	mov	r5,r3
   4fbfc:	880f883a 	mov	r7,r17
   4fc00:	1009883a 	mov	r4,r2
   4fc04:	0042d180 	call	42d18 <__adddf3>
   4fc08:	015f2834 	movhi	r5,31904
   4fc0c:	1025883a 	mov	r18,r2
   4fc10:	297fffc4 	addi	r5,r5,-1
   4fc14:	189ffc2c 	andhi	r2,r3,32752
   4fc18:	2880892e 	bgeu	r5,r2,4fe40 <_strtod_r+0xf9c>
   4fc1c:	d8801017 	ldw	r2,64(sp)
   4fc20:	00dffc34 	movhi	r3,32752
   4fc24:	18ffffc4 	addi	r3,r3,-1
   4fc28:	10ffb726 	beq	r2,r3,4fb08 <__alt_data_end+0xfffd1308>
   4fc2c:	045ffc34 	movhi	r17,32752
   4fc30:	8c7fffc4 	addi	r17,r17,-1
   4fc34:	04bfffc4 	movi	r18,-1
   4fc38:	003f4706 	br	4f958 <__alt_data_end+0xfffd1158>
   4fc3c:	00800884 	movi	r2,34
   4fc40:	80800015 	stw	r2,0(r16)
   4fc44:	002b883a 	mov	r21,zero
   4fc48:	059ffc34 	movhi	r22,32752
   4fc4c:	003d5d06 	br	4f1c4 <__alt_data_end+0xfffd09c4>
   4fc50:	d9000d17 	ldw	r4,52(sp)
   4fc54:	b80b883a 	mov	r5,r23
   4fc58:	00450900 	call	45090 <__fixdfsi>
   4fc5c:	1009883a 	mov	r4,r2
   4fc60:	00451100 	call	45110 <__floatsidf>
   4fc64:	d9000d17 	ldw	r4,52(sp)
   4fc68:	b80b883a 	mov	r5,r23
   4fc6c:	100d883a 	mov	r6,r2
   4fc70:	180f883a 	mov	r7,r3
   4fc74:	00447940 	call	44794 <__subdf3>
   4fc78:	d9400e17 	ldw	r5,56(sp)
   4fc7c:	1039883a 	mov	fp,r2
   4fc80:	182f883a 	mov	r23,r3
   4fc84:	2800141e 	bne	r5,zero,4fcd8 <_strtod_r+0xe34>
   4fc88:	9000131e 	bne	r18,zero,4fcd8 <_strtod_r+0xe34>
   4fc8c:	00800434 	movhi	r2,16
   4fc90:	10bfffc4 	addi	r2,r2,-1
   4fc94:	b0ac703a 	and	r22,r22,r2
   4fc98:	b0000f1e 	bne	r22,zero,4fcd8 <_strtod_r+0xe34>
   4fc9c:	01a52834 	movhi	r6,38048
   4fca0:	01cff434 	movhi	r7,16336
   4fca4:	318d6544 	addi	r6,r6,13717
   4fca8:	39ffffc4 	addi	r7,r7,-1
   4fcac:	e009883a 	mov	r4,fp
   4fcb0:	180b883a 	mov	r5,r3
   4fcb4:	0043f880 	call	43f88 <__ledf2>
   4fcb8:	103f270e 	bge	r2,zero,4f958 <__alt_data_end+0xfffd1158>
   4fcbc:	dd000a15 	stw	r20,40(sp)
   4fcc0:	a811883a 	mov	r8,r21
   4fcc4:	dd001217 	ldw	r20,72(sp)
   4fcc8:	d8800517 	ldw	r2,20(sp)
   4fccc:	002b883a 	mov	r21,zero
   4fcd0:	882d883a 	mov	r22,r17
   4fcd4:	003f9706 	br	4fb34 <__alt_data_end+0xfffd1334>
   4fcd8:	01a52834 	movhi	r6,38048
   4fcdc:	01cff834 	movhi	r7,16352
   4fce0:	318d6544 	addi	r6,r6,13717
   4fce4:	39ffffc4 	addi	r7,r7,-1
   4fce8:	e009883a 	mov	r4,fp
   4fcec:	b80b883a 	mov	r5,r23
   4fcf0:	0043f880 	call	43f88 <__ledf2>
   4fcf4:	10000716 	blt	r2,zero,4fd14 <_strtod_r+0xe70>
   4fcf8:	018d6c34 	movhi	r6,13744
   4fcfc:	31b94d44 	addi	r6,r6,-6859
   4fd00:	01cff834 	movhi	r7,16352
   4fd04:	e009883a 	mov	r4,fp
   4fd08:	b80b883a 	mov	r5,r23
   4fd0c:	0043eac0 	call	43eac <__gedf2>
   4fd10:	00bf110e 	bge	zero,r2,4f958 <__alt_data_end+0xfffd1158>
   4fd14:	dd000a15 	stw	r20,40(sp)
   4fd18:	a811883a 	mov	r8,r21
   4fd1c:	dd001217 	ldw	r20,72(sp)
   4fd20:	d8800517 	ldw	r2,20(sp)
   4fd24:	902b883a 	mov	r21,r18
   4fd28:	882d883a 	mov	r22,r17
   4fd2c:	003f8106 	br	4fb34 <__alt_data_end+0xfffd1334>
   4fd30:	b83e2f26 	beq	r23,zero,4f5f0 <__alt_data_end+0xfffd0df0>
   4fd34:	05efc83a 	sub	r23,zero,r23
   4fd38:	b88003cc 	andi	r2,r23,15
   4fd3c:	10000d26 	beq	r2,zero,4fd74 <_strtod_r+0xed0>
   4fd40:	100490fa 	slli	r2,r2,3
   4fd44:	00c001b4 	movhi	r3,6
   4fd48:	18ed6604 	addi	r3,r3,-19048
   4fd4c:	1885883a 	add	r2,r3,r2
   4fd50:	11800017 	ldw	r6,0(r2)
   4fd54:	11c00117 	ldw	r7,4(r2)
   4fd58:	9009883a 	mov	r4,r18
   4fd5c:	880b883a 	mov	r5,r17
   4fd60:	da401315 	stw	r9,76(sp)
   4fd64:	00435c40 	call	435c4 <__divdf3>
   4fd68:	da401317 	ldw	r9,76(sp)
   4fd6c:	1025883a 	mov	r18,r2
   4fd70:	1823883a 	mov	r17,r3
   4fd74:	b82fd13a 	srai	r23,r23,4
   4fd78:	b83e1d26 	beq	r23,zero,4f5f0 <__alt_data_end+0xfffd0df0>
   4fd7c:	008007c4 	movi	r2,31
   4fd80:	15c02816 	blt	r2,r23,4fe24 <_strtod_r+0xf80>
   4fd84:	b880040c 	andi	r2,r23,16
   4fd88:	10019726 	beq	r2,zero,503e8 <_strtod_r+0x1544>
   4fd8c:	05c1880e 	bge	zero,r23,503b0 <_strtod_r+0x150c>
   4fd90:	00c01a84 	movi	r3,106
   4fd94:	d8c00915 	stw	r3,36(sp)
   4fd98:	04c001b4 	movhi	r19,6
   4fd9c:	9ceda604 	addi	r19,r19,-18792
   4fda0:	8807883a 	mov	r3,r17
   4fda4:	9005883a 	mov	r2,r18
   4fda8:	8023883a 	mov	r17,r16
   4fdac:	0009883a 	mov	r4,zero
   4fdb0:	9821883a 	mov	r16,r19
   4fdb4:	da400a15 	stw	r9,40(sp)
   4fdb8:	1827883a 	mov	r19,r3
   4fdbc:	b980004c 	andi	r6,r23,1
   4fdc0:	30000626 	beq	r6,zero,4fddc <_strtod_r+0xf38>
   4fdc4:	81800017 	ldw	r6,0(r16)
   4fdc8:	81c00117 	ldw	r7,4(r16)
   4fdcc:	1009883a 	mov	r4,r2
   4fdd0:	180b883a 	mov	r5,r3
   4fdd4:	004407c0 	call	4407c <__muldf3>
   4fdd8:	01000044 	movi	r4,1
   4fddc:	b82fd07a 	srai	r23,r23,1
   4fde0:	84000204 	addi	r16,r16,8
   4fde4:	b83ff51e 	bne	r23,zero,4fdbc <__alt_data_end+0xfffd15bc>
   4fde8:	21003fcc 	andi	r4,r4,255
   4fdec:	8821883a 	mov	r16,r17
   4fdf0:	da400a17 	ldw	r9,40(sp)
   4fdf4:	9823883a 	mov	r17,r19
   4fdf8:	2001a51e 	bne	r4,zero,50490 <_strtod_r+0x15ec>
   4fdfc:	d9000917 	ldw	r4,36(sp)
   4fe00:	20016d1e 	bne	r4,zero,503b8 <_strtod_r+0x1514>
   4fe04:	000d883a 	mov	r6,zero
   4fe08:	000f883a 	mov	r7,zero
   4fe0c:	9009883a 	mov	r4,r18
   4fe10:	880b883a 	mov	r5,r17
   4fe14:	da401315 	stw	r9,76(sp)
   4fe18:	00581100 	call	58110 <__eqdf2>
   4fe1c:	da401317 	ldw	r9,76(sp)
   4fe20:	103df41e 	bne	r2,zero,4f5f4 <__alt_data_end+0xfffd0df4>
   4fe24:	00800884 	movi	r2,34
   4fe28:	80800015 	stw	r2,0(r16)
   4fe2c:	002b883a 	mov	r21,zero
   4fe30:	002d883a 	mov	r22,zero
   4fe34:	003ce306 	br	4f1c4 <__alt_data_end+0xfffd09c4>
   4fe38:	055387c4 	movi	r21,19999
   4fe3c:	003d6b06 	br	4f3ec <__alt_data_end+0xfffd0bec>
   4fe40:	0440d434 	movhi	r17,848
   4fe44:	1c63883a 	add	r17,r3,r17
   4fe48:	882d883a 	mov	r22,r17
   4fe4c:	003ebe06 	br	4f948 <__alt_data_end+0xfffd1148>
   4fe50:	14403fcc 	andi	r17,r2,255
   4fe54:	8c40201c 	xori	r17,r17,128
   4fe58:	8c7fe004 	addi	r17,r17,-128
   4fe5c:	dd400817 	ldw	r21,32(sp)
   4fe60:	0027883a 	mov	r19,zero
   4fe64:	0039883a 	mov	fp,zero
   4fe68:	002d883a 	mov	r22,zero
   4fe6c:	003c9906 	br	4f0d4 <__alt_data_end+0xfffd08d4>
   4fe70:	00c00944 	movi	r3,37
   4fe74:	1a47c83a 	sub	r3,r3,r9
   4fe78:	1d7d8c16 	blt	r3,r21,4f4ac <__alt_data_end+0xfffd0cac>
   4fe7c:	1261c83a 	sub	r16,r2,r9
   4fe80:	800490fa 	slli	r2,r16,3
   4fe84:	04c001b4 	movhi	r19,6
   4fe88:	9ced6604 	addi	r19,r19,-19048
   4fe8c:	9885883a 	add	r2,r19,r2
   4fe90:	11000017 	ldw	r4,0(r2)
   4fe94:	11400117 	ldw	r5,4(r2)
   4fe98:	900d883a 	mov	r6,r18
   4fe9c:	880f883a 	mov	r7,r17
   4fea0:	004407c0 	call	4407c <__muldf3>
   4fea4:	ac0dc83a 	sub	r6,r21,r16
   4fea8:	300c90fa 	slli	r6,r6,3
   4feac:	1009883a 	mov	r4,r2
   4feb0:	180b883a 	mov	r5,r3
   4feb4:	9985883a 	add	r2,r19,r6
   4feb8:	11800017 	ldw	r6,0(r2)
   4febc:	11c00117 	ldw	r7,4(r2)
   4fec0:	004407c0 	call	4407c <__muldf3>
   4fec4:	102b883a 	mov	r21,r2
   4fec8:	182d883a 	mov	r22,r3
   4fecc:	003cbd06 	br	4f1c4 <__alt_data_end+0xfffd09c4>
   4fed0:	b811883a 	mov	r8,r23
   4fed4:	003e8606 	br	4f8f0 <__alt_data_end+0xfffd10f0>
   4fed8:	d8000d15 	stw	zero,52(sp)
   4fedc:	05cffc34 	movhi	r23,16368
   4fee0:	003e8006 	br	4f8e4 <__alt_data_end+0xfffd10e4>
   4fee4:	883f011e 	bne	r17,zero,4faec <__alt_data_end+0xfffd12ec>
   4fee8:	dd000a15 	stw	r20,40(sp)
   4feec:	dd001217 	ldw	r20,72(sp)
   4fef0:	a811883a 	mov	r8,r21
   4fef4:	00800884 	movi	r2,34
   4fef8:	80800015 	stw	r2,0(r16)
   4fefc:	002b883a 	mov	r21,zero
   4ff00:	d8800517 	ldw	r2,20(sp)
   4ff04:	002d883a 	mov	r22,zero
   4ff08:	003f0a06 	br	4fb34 <__alt_data_end+0xfffd1334>
   4ff0c:	d9800517 	ldw	r6,20(sp)
   4ff10:	30000826 	beq	r6,zero,4ff34 <_strtod_r+0x1090>
   4ff14:	01400d44 	movi	r5,53
   4ff18:	d9000204 	addi	r4,sp,8
   4ff1c:	d8801315 	stw	r2,76(sp)
   4ff20:	004e16c0 	call	4e16c <__copybits>
   4ff24:	d9400517 	ldw	r5,20(sp)
   4ff28:	8009883a 	mov	r4,r16
   4ff2c:	004d31c0 	call	4d31c <_Bfree>
   4ff30:	d8801317 	ldw	r2,76(sp)
   4ff34:	00c00184 	movi	r3,6
   4ff38:	1d400f36 	bltu	r3,r21,4ff78 <_strtod_r+0x10d4>
   4ff3c:	a82a90ba 	slli	r21,r21,2
   4ff40:	00c00174 	movhi	r3,5
   4ff44:	18ffd504 	addi	r3,r3,-172
   4ff48:	a8eb883a 	add	r21,r21,r3
   4ff4c:	a8c00017 	ldw	r3,0(r21)
   4ff50:	1800683a 	jmp	r3
   4ff54:	0004ffd0 	cmplti	zero,zero,5119
   4ff58:	0004ffa8 	cmpgeui	zero,zero,5118
   4ff5c:	0004ff8c 	andi	zero,zero,5118
   4ff60:	0004ff70 	cmpltui	zero,zero,5117
   4ff64:	0004ff98 	cmpnei	zero,zero,5118
   4ff68:	0004ffa8 	cmpgeui	zero,zero,5118
   4ff6c:	0004ffd0 	cmplti	zero,zero,5119
   4ff70:	045ffc34 	movhi	r17,32752
   4ff74:	0025883a 	mov	r18,zero
   4ff78:	1080020c 	andi	r2,r2,8
   4ff7c:	902b883a 	mov	r21,r18
   4ff80:	103c8f26 	beq	r2,zero,4f1c0 <__alt_data_end+0xfffd09c0>
   4ff84:	8da00034 	orhi	r22,r17,32768
   4ff88:	003c8e06 	br	4f1c4 <__alt_data_end+0xfffd09c4>
   4ff8c:	dc800217 	ldw	r18,8(sp)
   4ff90:	dc400317 	ldw	r17,12(sp)
   4ff94:	003ff806 	br	4ff78 <__alt_data_end+0xfffd1778>
   4ff98:	04600034 	movhi	r17,32768
   4ff9c:	8c7fffc4 	addi	r17,r17,-1
   4ffa0:	04bfffc4 	movi	r18,-1
   4ffa4:	003ff406 	br	4ff78 <__alt_data_end+0xfffd1778>
   4ffa8:	d8c00417 	ldw	r3,16(sp)
   4ffac:	dc400317 	ldw	r17,12(sp)
   4ffb0:	013ffc34 	movhi	r4,65520
   4ffb4:	18c10cc4 	addi	r3,r3,1075
   4ffb8:	1806953a 	slli	r3,r3,20
   4ffbc:	213fffc4 	addi	r4,r4,-1
   4ffc0:	8922703a 	and	r17,r17,r4
   4ffc4:	dc800217 	ldw	r18,8(sp)
   4ffc8:	88e2b03a 	or	r17,r17,r3
   4ffcc:	003fea06 	br	4ff78 <__alt_data_end+0xfffd1778>
   4ffd0:	0023883a 	mov	r17,zero
   4ffd4:	0025883a 	mov	r18,zero
   4ffd8:	003fe706 	br	4ff78 <__alt_data_end+0xfffd1778>
   4ffdc:	01800044 	movi	r6,1
   4ffe0:	50d5883a 	add	r10,r10,r3
   4ffe4:	2a4b883a 	add	r5,r5,r9
   4ffe8:	19811a26 	beq	r3,r6,50454 <_strtod_r+0x15b0>
   4ffec:	01800204 	movi	r6,8
   4fff0:	01c00404 	movi	r7,16
   4fff4:	4a400044 	addi	r9,r9,1
   4fff8:	48bfffc4 	addi	r2,r9,-1
   4fffc:	30801616 	blt	r6,r2,50058 <_strtod_r+0x11b4>
   50000:	e70002a4 	muli	fp,fp,10
   50004:	497ffb1e 	bne	r9,r5,4fff4 <__alt_data_end+0xfffd17f4>
   50008:	d9800617 	ldw	r6,24(sp)
   5000c:	4a400044 	addi	r9,r9,1
   50010:	00c00204 	movi	r3,8
   50014:	19400c0e 	bge	r3,r5,50048 <_strtod_r+0x11a4>
   50018:	00800404 	movi	r2,16
   5001c:	000b883a 	mov	r5,zero
   50020:	127ea316 	blt	r2,r9,4fab0 <__alt_data_end+0xfffd12b0>
   50024:	988002a4 	muli	r2,r19,10
   50028:	20a7883a 	add	r19,r4,r2
   5002c:	003ea006 	br	4fab0 <__alt_data_end+0xfffd12b0>
   50030:	d8800617 	ldw	r2,24(sp)
   50034:	8c7ff404 	addi	r17,r17,-48
   50038:	2a800044 	addi	r10,r5,1
   5003c:	d8800815 	stw	r2,32(sp)
   50040:	100d883a 	mov	r6,r2
   50044:	02400044 	movi	r9,1
   50048:	e08002a4 	muli	r2,fp,10
   5004c:	000b883a 	mov	r5,zero
   50050:	88b9883a 	add	fp,r17,r2
   50054:	003e9606 	br	4fab0 <__alt_data_end+0xfffd12b0>
   50058:	3a7fea16 	blt	r7,r9,50004 <__alt_data_end+0xfffd1804>
   5005c:	9cc002a4 	muli	r19,r19,10
   50060:	003fe806 	br	50004 <__alt_data_end+0xfffd1804>
   50064:	00bffa84 	movi	r2,-22
   50068:	a8bd1016 	blt	r21,r2,4f4ac <__alt_data_end+0xfffd0cac>
   5006c:	a82a90fa 	slli	r21,r21,3
   50070:	008001b4 	movhi	r2,6
   50074:	10ad6604 	addi	r2,r2,-19048
   50078:	1545c83a 	sub	r2,r2,r21
   5007c:	11800017 	ldw	r6,0(r2)
   50080:	11c00117 	ldw	r7,4(r2)
   50084:	9009883a 	mov	r4,r18
   50088:	880b883a 	mov	r5,r17
   5008c:	00435c40 	call	435c4 <__divdf3>
   50090:	102b883a 	mov	r21,r2
   50094:	182d883a 	mov	r22,r3
   50098:	003c4a06 	br	4f1c4 <__alt_data_end+0xfffd09c4>
   5009c:	dd000a15 	stw	r20,40(sp)
   500a0:	a811883a 	mov	r8,r21
   500a4:	dd001217 	ldw	r20,72(sp)
   500a8:	003e9e06 	br	4fb24 <__alt_data_end+0xfffd1324>
   500ac:	014001b4 	movhi	r5,6
   500b0:	d9000617 	ldw	r4,24(sp)
   500b4:	296d9804 	addi	r5,r5,-18848
   500b8:	01c00644 	movi	r7,25
   500bc:	00000b06 	br	500ec <_strtod_r+0x1248>
   500c0:	21000044 	addi	r4,r4,1
   500c4:	20800003 	ldbu	r2,0(r4)
   500c8:	10ffefc4 	addi	r3,r2,-65
   500cc:	10803fcc 	andi	r2,r2,255
   500d0:	1080201c 	xori	r2,r2,128
   500d4:	18c03fcc 	andi	r3,r3,255
   500d8:	10bfe004 	addi	r2,r2,-128
   500dc:	38c00136 	bltu	r7,r3,500e4 <_strtod_r+0x1240>
   500e0:	10800804 	addi	r2,r2,32
   500e4:	29400044 	addi	r5,r5,1
   500e8:	11bbbb1e 	bne	r2,r6,4efd8 <__alt_data_end+0xfffd07d8>
   500ec:	29800007 	ldb	r6,0(r5)
   500f0:	303ff31e 	bne	r6,zero,500c0 <__alt_data_end+0xfffd18c0>
   500f4:	018001b4 	movhi	r6,6
   500f8:	d9000615 	stw	r4,24(sp)
   500fc:	31ad9904 	addi	r6,r6,-18844
   50100:	200b883a 	mov	r5,r4
   50104:	02000644 	movi	r8,25
   50108:	00000a06 	br	50134 <_strtod_r+0x1290>
   5010c:	28800003 	ldbu	r2,0(r5)
   50110:	10ffefc4 	addi	r3,r2,-65
   50114:	10803fcc 	andi	r2,r2,255
   50118:	1080201c 	xori	r2,r2,128
   5011c:	18c03fcc 	andi	r3,r3,255
   50120:	10bfe004 	addi	r2,r2,-128
   50124:	40c00136 	bltu	r8,r3,5012c <_strtod_r+0x1288>
   50128:	10800804 	addi	r2,r2,32
   5012c:	31800044 	addi	r6,r6,1
   50130:	11c0711e 	bne	r2,r7,502f8 <_strtod_r+0x1454>
   50134:	31c00007 	ldb	r7,0(r6)
   50138:	29400044 	addi	r5,r5,1
   5013c:	383ff31e 	bne	r7,zero,5010c <__alt_data_end+0xfffd190c>
   50140:	d9400615 	stw	r5,24(sp)
   50144:	045ffc34 	movhi	r17,32752
   50148:	0025883a 	mov	r18,zero
   5014c:	003c1b06 	br	4f1bc <__alt_data_end+0xfffd09bc>
   50150:	000b883a 	mov	r5,zero
   50154:	003ccc06 	br	4f488 <__alt_data_end+0xfffd0c88>
   50158:	d9400e17 	ldw	r5,56(sp)
   5015c:	dd000a15 	stw	r20,40(sp)
   50160:	00800434 	movhi	r2,16
   50164:	a811883a 	mov	r8,r21
   50168:	dd001217 	ldw	r20,72(sp)
   5016c:	dd401117 	ldw	r21,68(sp)
   50170:	dd801017 	ldw	r22,64(sp)
   50174:	10bfffc4 	addi	r2,r2,-1
   50178:	28005626 	beq	r5,zero,502d4 <_strtod_r+0x1430>
   5017c:	8886703a 	and	r3,r17,r2
   50180:	18807826 	beq	r3,r2,50364 <_strtod_r+0x14c0>
   50184:	d8c00b17 	ldw	r3,44(sp)
   50188:	18005726 	beq	r3,zero,502e8 <_strtod_r+0x1444>
   5018c:	1c44703a 	and	r2,r3,r17
   50190:	10000f26 	beq	r2,zero,501d0 <_strtod_r+0x132c>
   50194:	d9000e17 	ldw	r4,56(sp)
   50198:	d9800917 	ldw	r6,36(sp)
   5019c:	20005e26 	beq	r4,zero,50318 <_strtod_r+0x1474>
   501a0:	9009883a 	mov	r4,r18
   501a4:	880b883a 	mov	r5,r17
   501a8:	da001315 	stw	r8,76(sp)
   501ac:	004ee400 	call	4ee40 <sulp>
   501b0:	100d883a 	mov	r6,r2
   501b4:	180f883a 	mov	r7,r3
   501b8:	9009883a 	mov	r4,r18
   501bc:	880b883a 	mov	r5,r17
   501c0:	0042d180 	call	42d18 <__adddf3>
   501c4:	da001317 	ldw	r8,76(sp)
   501c8:	102b883a 	mov	r21,r2
   501cc:	182d883a 	mov	r22,r3
   501d0:	d8c00917 	ldw	r3,36(sp)
   501d4:	18000f26 	beq	r3,zero,50214 <_strtod_r+0x1370>
   501d8:	a809883a 	mov	r4,r21
   501dc:	b00b883a 	mov	r5,r22
   501e0:	000d883a 	mov	r6,zero
   501e4:	01ce5434 	movhi	r7,14672
   501e8:	da001315 	stw	r8,76(sp)
   501ec:	004407c0 	call	4407c <__muldf3>
   501f0:	102b883a 	mov	r21,r2
   501f4:	182d883a 	mov	r22,r3
   501f8:	da001317 	ldw	r8,76(sp)
   501fc:	1800051e 	bne	r3,zero,50214 <_strtod_r+0x1370>
   50200:	d8800517 	ldw	r2,20(sp)
   50204:	a83e4b1e 	bne	r21,zero,4fb34 <__alt_data_end+0xfffd1334>
   50208:	00c00884 	movi	r3,34
   5020c:	80c00015 	stw	r3,0(r16)
   50210:	003e4806 	br	4fb34 <__alt_data_end+0xfffd1334>
   50214:	d8800517 	ldw	r2,20(sp)
   50218:	003e4606 	br	4fb34 <__alt_data_end+0xfffd1334>
   5021c:	d9000e17 	ldw	r4,56(sp)
   50220:	dd000a15 	stw	r20,40(sp)
   50224:	a811883a 	mov	r8,r21
   50228:	dd001217 	ldw	r20,72(sp)
   5022c:	dd401117 	ldw	r21,68(sp)
   50230:	dd801017 	ldw	r22,64(sp)
   50234:	203fe61e 	bne	r4,zero,501d0 <__alt_data_end+0xfffd19d0>
   50238:	903fe51e 	bne	r18,zero,501d0 <__alt_data_end+0xfffd19d0>
   5023c:	00800434 	movhi	r2,16
   50240:	10bfffc4 	addi	r2,r2,-1
   50244:	8884703a 	and	r2,r17,r2
   50248:	103fe11e 	bne	r2,zero,501d0 <__alt_data_end+0xfffd19d0>
   5024c:	8ddffc2c 	andhi	r23,r17,32752
   50250:	0081ac34 	movhi	r2,1712
   50254:	15ffde2e 	bgeu	r2,r23,501d0 <__alt_data_end+0xfffd19d0>
   50258:	40800517 	ldw	r2,20(r8)
   5025c:	1000031e 	bne	r2,zero,5026c <_strtod_r+0x13c8>
   50260:	40800417 	ldw	r2,16(r8)
   50264:	00c00044 	movi	r3,1
   50268:	18bfd90e 	bge	r3,r2,501d0 <__alt_data_end+0xfffd19d0>
   5026c:	400b883a 	mov	r5,r8
   50270:	01800044 	movi	r6,1
   50274:	8009883a 	mov	r4,r16
   50278:	004d9f40 	call	4d9f4 <__lshift>
   5027c:	980b883a 	mov	r5,r19
   50280:	1009883a 	mov	r4,r2
   50284:	d8801315 	stw	r2,76(sp)
   50288:	004db3c0 	call	4db3c <__mcmp>
   5028c:	da001317 	ldw	r8,76(sp)
   50290:	00bfcf0e 	bge	zero,r2,501d0 <__alt_data_end+0xfffd19d0>
   50294:	d8c00917 	ldw	r3,36(sp)
   50298:	18005c26 	beq	r3,zero,5040c <_strtod_r+0x1568>
   5029c:	0081ac34 	movhi	r2,1712
   502a0:	15c05a16 	blt	r2,r23,5040c <_strtod_r+0x1568>
   502a4:	0080dc34 	movhi	r2,880
   502a8:	15ffcb16 	blt	r2,r23,501d8 <__alt_data_end+0xfffd19d8>
   502ac:	003f1106 	br	4fef4 <__alt_data_end+0xfffd16f4>
   502b0:	002d883a 	mov	r22,zero
   502b4:	022ff834 	movhi	r8,49120
   502b8:	d8000d15 	stw	zero,52(sp)
   502bc:	05cff834 	movhi	r23,16352
   502c0:	003ded06 	br	4fa78 <__alt_data_end+0xfffd1278>
   502c4:	0440d434 	movhi	r17,848
   502c8:	1c63883a 	add	r17,r3,r17
   502cc:	d8000915 	stw	zero,36(sp)
   502d0:	003cc806 	br	4f5f4 <__alt_data_end+0xfffd0df4>
   502d4:	8884703a 	and	r2,r17,r2
   502d8:	103faa1e 	bne	r2,zero,50184 <__alt_data_end+0xfffd1984>
   502dc:	903fa91e 	bne	r18,zero,50184 <__alt_data_end+0xfffd1984>
   502e0:	8ddffc2c 	andhi	r23,r17,32752
   502e4:	003feb06 	br	50294 <__alt_data_end+0xfffd1a94>
   502e8:	d8c00d17 	ldw	r3,52(sp)
   502ec:	1cae703a 	and	r23,r3,r18
   502f0:	b83fb726 	beq	r23,zero,501d0 <__alt_data_end+0xfffd19d0>
   502f4:	003fa706 	br	50194 <__alt_data_end+0xfffd1994>
   502f8:	21000044 	addi	r4,r4,1
   502fc:	d9000615 	stw	r4,24(sp)
   50300:	003f9006 	br	50144 <__alt_data_end+0xfffd1944>
   50304:	014001b4 	movhi	r5,6
   50308:	296d5c04 	addi	r5,r5,-19088
   5030c:	d9400915 	stw	r5,36(sp)
   50310:	0027883a 	mov	r19,zero
   50314:	003ca206 	br	4f5a0 <__alt_data_end+0xfffd0da0>
   50318:	9009883a 	mov	r4,r18
   5031c:	880b883a 	mov	r5,r17
   50320:	da001315 	stw	r8,76(sp)
   50324:	004ee400 	call	4ee40 <sulp>
   50328:	100d883a 	mov	r6,r2
   5032c:	180f883a 	mov	r7,r3
   50330:	9009883a 	mov	r4,r18
   50334:	880b883a 	mov	r5,r17
   50338:	00447940 	call	44794 <__subdf3>
   5033c:	000d883a 	mov	r6,zero
   50340:	000f883a 	mov	r7,zero
   50344:	1009883a 	mov	r4,r2
   50348:	180b883a 	mov	r5,r3
   5034c:	102b883a 	mov	r21,r2
   50350:	182d883a 	mov	r22,r3
   50354:	00581100 	call	58110 <__eqdf2>
   50358:	da001317 	ldw	r8,76(sp)
   5035c:	103ee526 	beq	r2,zero,4fef4 <__alt_data_end+0xfffd16f4>
   50360:	003f9b06 	br	501d0 <__alt_data_end+0xfffd19d0>
   50364:	d8800917 	ldw	r2,36(sp)
   50368:	10002226 	beq	r2,zero,503f4 <_strtod_r+0x1550>
   5036c:	889ffc2c 	andhi	r2,r17,32752
   50370:	00c1a834 	movhi	r3,1696
   50374:	18801f36 	bltu	r3,r2,503f4 <_strtod_r+0x1550>
   50378:	1004d53a 	srli	r2,r2,20
   5037c:	00c01ac4 	movi	r3,107
   50380:	1887c83a 	sub	r3,r3,r2
   50384:	00bfffc4 	movi	r2,-1
   50388:	10c4983a 	sll	r2,r2,r3
   5038c:	14bf7d1e 	bne	r2,r18,50184 <__alt_data_end+0xfffd1984>
   50390:	00dffc34 	movhi	r3,32752
   50394:	18ffffc4 	addi	r3,r3,-1
   50398:	88c03526 	beq	r17,r3,50470 <_strtod_r+0x15cc>
   5039c:	8c5ffc2c 	andhi	r17,r17,32752
   503a0:	00800434 	movhi	r2,16
   503a4:	002b883a 	mov	r21,zero
   503a8:	88ad883a 	add	r22,r17,r2
   503ac:	003f8806 	br	501d0 <__alt_data_end+0xfffd19d0>
   503b0:	01401a84 	movi	r5,106
   503b4:	d9400915 	stw	r5,36(sp)
   503b8:	8ddffc2c 	andhi	r23,r17,32752
   503bc:	b82ed53a 	srli	r23,r23,20
   503c0:	00801ac4 	movi	r2,107
   503c4:	15c5c83a 	sub	r2,r2,r23
   503c8:	00be8e0e 	bge	zero,r2,4fe04 <__alt_data_end+0xfffd1604>
   503cc:	00c007c4 	movi	r3,31
   503d0:	18800a0e 	bge	r3,r2,503fc <_strtod_r+0x1558>
   503d4:	00c00d04 	movi	r3,52
   503d8:	0025883a 	mov	r18,zero
   503dc:	1880270e 	bge	r3,r2,5047c <_strtod_r+0x15d8>
   503e0:	0440dc34 	movhi	r17,880
   503e4:	003e8706 	br	4fe04 <__alt_data_end+0xfffd1604>
   503e8:	d8000915 	stw	zero,36(sp)
   503ec:	05fe6a16 	blt	zero,r23,4fd98 <__alt_data_end+0xfffd1598>
   503f0:	003e8406 	br	4fe04 <__alt_data_end+0xfffd1604>
   503f4:	00bfffc4 	movi	r2,-1
   503f8:	003fe406 	br	5038c <__alt_data_end+0xfffd1b8c>
   503fc:	00ffffc4 	movi	r3,-1
   50400:	1884983a 	sll	r2,r3,r2
   50404:	14a4703a 	and	r18,r2,r18
   50408:	003e7e06 	br	4fe04 <__alt_data_end+0xfffd1604>
   5040c:	00bffc34 	movhi	r2,65520
   50410:	b8af883a 	add	r23,r23,r2
   50414:	057fffc4 	movi	r21,-1
   50418:	00800434 	movhi	r2,16
   5041c:	1545883a 	add	r2,r2,r21
   50420:	b8acb03a 	or	r22,r23,r2
   50424:	003f6a06 	br	501d0 <__alt_data_end+0xfffd19d0>
   50428:	014001b4 	movhi	r5,6
   5042c:	296d9c04 	addi	r5,r5,-18832
   50430:	d9800204 	addi	r6,sp,8
   50434:	d9000604 	addi	r4,sp,24
   50438:	00558d80 	call	558d8 <__hexnan>
   5043c:	00c00144 	movi	r3,5
   50440:	10fb5c1e 	bne	r2,r3,4f1b4 <__alt_data_end+0xfffd09b4>
   50444:	dc400317 	ldw	r17,12(sp)
   50448:	dc800217 	ldw	r18,8(sp)
   5044c:	8c5ffc34 	orhi	r17,r17,32752
   50450:	003b5a06 	br	4f1bc <__alt_data_end+0xfffd09bc>
   50454:	480b883a 	mov	r5,r9
   50458:	d9800617 	ldw	r6,24(sp)
   5045c:	4a400044 	addi	r9,r9,1
   50460:	003eeb06 	br	50010 <__alt_data_end+0xfffd1810>
   50464:	1025883a 	mov	r18,r2
   50468:	1823883a 	mov	r17,r3
   5046c:	003c4c06 	br	4f5a0 <__alt_data_end+0xfffd0da0>
   50470:	00ffffc4 	movi	r3,-1
   50474:	10ffc91e 	bne	r2,r3,5039c <__alt_data_end+0xfffd1b9c>
   50478:	003da906 	br	4fb20 <__alt_data_end+0xfffd1320>
   5047c:	10bff804 	addi	r2,r2,-32
   50480:	00ffffc4 	movi	r3,-1
   50484:	1884983a 	sll	r2,r3,r2
   50488:	1462703a 	and	r17,r2,r17
   5048c:	003e5d06 	br	4fe04 <__alt_data_end+0xfffd1604>
   50490:	1025883a 	mov	r18,r2
   50494:	1823883a 	mov	r17,r3
   50498:	003e5806 	br	4fdfc <__alt_data_end+0xfffd15fc>

0005049c <strtod>:
   5049c:	008001b4 	movhi	r2,6
   504a0:	10b55004 	addi	r2,r2,-10944
   504a4:	280d883a 	mov	r6,r5
   504a8:	200b883a 	mov	r5,r4
   504ac:	11000017 	ldw	r4,0(r2)
   504b0:	004eea41 	jmpi	4eea4 <_strtod_r>

000504b4 <strtof>:
   504b4:	defffb04 	addi	sp,sp,-20
   504b8:	dcc00315 	stw	r19,12(sp)
   504bc:	04c001b4 	movhi	r19,6
   504c0:	9cf55004 	addi	r19,r19,-10944
   504c4:	280d883a 	mov	r6,r5
   504c8:	200b883a 	mov	r5,r4
   504cc:	99000017 	ldw	r4,0(r19)
   504d0:	dfc00415 	stw	ra,16(sp)
   504d4:	dc800215 	stw	r18,8(sp)
   504d8:	dc400115 	stw	r17,4(sp)
   504dc:	dc000015 	stw	r16,0(sp)
   504e0:	004eea40 	call	4eea4 <_strtod_r>
   504e4:	1009883a 	mov	r4,r2
   504e8:	180b883a 	mov	r5,r3
   504ec:	1025883a 	mov	r18,r2
   504f0:	1823883a 	mov	r17,r3
   504f4:	00581980 	call	58198 <__truncdfsf2>
   504f8:	000b883a 	mov	r5,zero
   504fc:	1009883a 	mov	r4,r2
   50500:	1021883a 	mov	r16,r2
   50504:	0057f140 	call	57f14 <__eqsf2>
   50508:	1000111e 	bne	r2,zero,50550 <strtof+0x9c>
   5050c:	000d883a 	mov	r6,zero
   50510:	000f883a 	mov	r7,zero
   50514:	9009883a 	mov	r4,r18
   50518:	880b883a 	mov	r5,r17
   5051c:	00581100 	call	58110 <__eqdf2>
   50520:	10000b26 	beq	r2,zero,50550 <strtof+0x9c>
   50524:	98800017 	ldw	r2,0(r19)
   50528:	00c00884 	movi	r3,34
   5052c:	10c00015 	stw	r3,0(r2)
   50530:	8005883a 	mov	r2,r16
   50534:	dfc00417 	ldw	ra,16(sp)
   50538:	dcc00317 	ldw	r19,12(sp)
   5053c:	dc800217 	ldw	r18,8(sp)
   50540:	dc400117 	ldw	r17,4(sp)
   50544:	dc000017 	ldw	r16,0(sp)
   50548:	dec00504 	addi	sp,sp,20
   5054c:	f800283a 	ret
   50550:	015fe034 	movhi	r5,32640
   50554:	297fffc4 	addi	r5,r5,-1
   50558:	8009883a 	mov	r4,r16
   5055c:	0057f8c0 	call	57f8c <__gesf2>
   50560:	0080070e 	bge	zero,r2,50580 <strtof+0xcc>
   50564:	01dffc34 	movhi	r7,32752
   50568:	39ffffc4 	addi	r7,r7,-1
   5056c:	01bfffc4 	movi	r6,-1
   50570:	9009883a 	mov	r4,r18
   50574:	880b883a 	mov	r5,r17
   50578:	0043eac0 	call	43eac <__gedf2>
   5057c:	00bfe90e 	bge	zero,r2,50524 <__alt_data_end+0xfffd1d24>
   50580:	017fe034 	movhi	r5,65408
   50584:	297fffc4 	addi	r5,r5,-1
   50588:	8009883a 	mov	r4,r16
   5058c:	00580480 	call	58048 <__lesf2>
   50590:	103fe70e 	bge	r2,zero,50530 <__alt_data_end+0xfffd1d30>
   50594:	01fffc34 	movhi	r7,65520
   50598:	39ffffc4 	addi	r7,r7,-1
   5059c:	01bfffc4 	movi	r6,-1
   505a0:	9009883a 	mov	r4,r18
   505a4:	880b883a 	mov	r5,r17
   505a8:	0043f880 	call	43f88 <__ledf2>
   505ac:	103fdd0e 	bge	r2,zero,50524 <__alt_data_end+0xfffd1d24>
   505b0:	003fdf06 	br	50530 <__alt_data_end+0xfffd1d30>

000505b4 <_strtol_r>:
   505b4:	008001b4 	movhi	r2,6
   505b8:	defff404 	addi	sp,sp,-48
   505bc:	10b54e04 	addi	r2,r2,-10952
   505c0:	dd400715 	stw	r21,28(sp)
   505c4:	15400017 	ldw	r21,0(r2)
   505c8:	dd800815 	stw	r22,32(sp)
   505cc:	dd000615 	stw	r20,24(sp)
   505d0:	dcc00515 	stw	r19,20(sp)
   505d4:	d9000015 	stw	r4,0(sp)
   505d8:	dfc00b15 	stw	ra,44(sp)
   505dc:	df000a15 	stw	fp,40(sp)
   505e0:	ddc00915 	stw	r23,36(sp)
   505e4:	dc800415 	stw	r18,16(sp)
   505e8:	dc400315 	stw	r17,12(sp)
   505ec:	dc000215 	stw	r16,8(sp)
   505f0:	2829883a 	mov	r20,r5
   505f4:	3027883a 	mov	r19,r6
   505f8:	382d883a 	mov	r22,r7
   505fc:	2809883a 	mov	r4,r5
   50600:	24000003 	ldbu	r16,0(r4)
   50604:	24400044 	addi	r17,r4,1
   50608:	2007883a 	mov	r3,r4
   5060c:	ac05883a 	add	r2,r21,r16
   50610:	10800043 	ldbu	r2,1(r2)
   50614:	8809883a 	mov	r4,r17
   50618:	1080020c 	andi	r2,r2,8
   5061c:	103ff81e 	bne	r2,zero,50600 <__alt_data_end+0xfffd1e00>
   50620:	00800b44 	movi	r2,45
   50624:	80805826 	beq	r16,r2,50788 <_strtol_r+0x1d4>
   50628:	00800ac4 	movi	r2,43
   5062c:	80805a26 	beq	r16,r2,50798 <_strtol_r+0x1e4>
   50630:	0039883a 	mov	fp,zero
   50634:	b0004426 	beq	r22,zero,50748 <_strtol_r+0x194>
   50638:	00800404 	movi	r2,16
   5063c:	b0806026 	beq	r22,r2,507c0 <_strtol_r+0x20c>
   50640:	b02f883a 	mov	r23,r22
   50644:	00a00034 	movhi	r2,32768
   50648:	e025003a 	cmpeq	r18,fp,zero
   5064c:	14a5c83a 	sub	r18,r2,r18
   50650:	b80b883a 	mov	r5,r23
   50654:	9009883a 	mov	r4,r18
   50658:	00455d80 	call	455d8 <__umodsi3>
   5065c:	b80b883a 	mov	r5,r23
   50660:	9009883a 	mov	r4,r18
   50664:	d8800115 	stw	r2,4(sp)
   50668:	00455740 	call	45574 <__udivsi3>
   5066c:	ac07883a 	add	r3,r21,r16
   50670:	18c00043 	ldbu	r3,1(r3)
   50674:	880b883a 	mov	r5,r17
   50678:	000d883a 	mov	r6,zero
   5067c:	1a00010c 	andi	r8,r3,4
   50680:	0009883a 	mov	r4,zero
   50684:	02800044 	movi	r10,1
   50688:	027fffc4 	movi	r9,-1
   5068c:	d9c00117 	ldw	r7,4(sp)
   50690:	40000e26 	beq	r8,zero,506cc <_strtol_r+0x118>
   50694:	843ff404 	addi	r16,r16,-48
   50698:	8580120e 	bge	r16,r22,506e4 <_strtol_r+0x130>
   5069c:	32400526 	beq	r6,r9,506b4 <_strtol_r+0x100>
   506a0:	11002536 	bltu	r2,r4,50738 <_strtol_r+0x184>
   506a4:	20802326 	beq	r4,r2,50734 <_strtol_r+0x180>
   506a8:	25c9383a 	mul	r4,r4,r23
   506ac:	01800044 	movi	r6,1
   506b0:	8109883a 	add	r4,r16,r4
   506b4:	2c000003 	ldbu	r16,0(r5)
   506b8:	29400044 	addi	r5,r5,1
   506bc:	ac07883a 	add	r3,r21,r16
   506c0:	18c00043 	ldbu	r3,1(r3)
   506c4:	1a00010c 	andi	r8,r3,4
   506c8:	403ff21e 	bne	r8,zero,50694 <__alt_data_end+0xfffd1e94>
   506cc:	18c000cc 	andi	r3,r3,3
   506d0:	18000426 	beq	r3,zero,506e4 <_strtol_r+0x130>
   506d4:	1a801a26 	beq	r3,r10,50740 <_strtol_r+0x18c>
   506d8:	00c015c4 	movi	r3,87
   506dc:	80e1c83a 	sub	r16,r16,r3
   506e0:	85bfee16 	blt	r16,r22,5069c <__alt_data_end+0xfffd1e9c>
   506e4:	00bfffc4 	movi	r2,-1
   506e8:	30801e26 	beq	r6,r2,50764 <_strtol_r+0x1b0>
   506ec:	e0001b1e 	bne	fp,zero,5075c <_strtol_r+0x1a8>
   506f0:	2005883a 	mov	r2,r4
   506f4:	98000326 	beq	r19,zero,50704 <_strtol_r+0x150>
   506f8:	3000211e 	bne	r6,zero,50780 <_strtol_r+0x1cc>
   506fc:	a00b883a 	mov	r5,r20
   50700:	99400015 	stw	r5,0(r19)
   50704:	dfc00b17 	ldw	ra,44(sp)
   50708:	df000a17 	ldw	fp,40(sp)
   5070c:	ddc00917 	ldw	r23,36(sp)
   50710:	dd800817 	ldw	r22,32(sp)
   50714:	dd400717 	ldw	r21,28(sp)
   50718:	dd000617 	ldw	r20,24(sp)
   5071c:	dcc00517 	ldw	r19,20(sp)
   50720:	dc800417 	ldw	r18,16(sp)
   50724:	dc400317 	ldw	r17,12(sp)
   50728:	dc000217 	ldw	r16,8(sp)
   5072c:	dec00c04 	addi	sp,sp,48
   50730:	f800283a 	ret
   50734:	3c3fdc0e 	bge	r7,r16,506a8 <__alt_data_end+0xfffd1ea8>
   50738:	01bfffc4 	movi	r6,-1
   5073c:	003fdd06 	br	506b4 <__alt_data_end+0xfffd1eb4>
   50740:	00c00dc4 	movi	r3,55
   50744:	003fe506 	br	506dc <__alt_data_end+0xfffd1edc>
   50748:	00800c04 	movi	r2,48
   5074c:	80801626 	beq	r16,r2,507a8 <_strtol_r+0x1f4>
   50750:	05800284 	movi	r22,10
   50754:	b02f883a 	mov	r23,r22
   50758:	003fba06 	br	50644 <__alt_data_end+0xfffd1e44>
   5075c:	0109c83a 	sub	r4,zero,r4
   50760:	003fe306 	br	506f0 <__alt_data_end+0xfffd1ef0>
   50764:	d9000017 	ldw	r4,0(sp)
   50768:	00c00884 	movi	r3,34
   5076c:	e005003a 	cmpeq	r2,fp,zero
   50770:	20c00015 	stw	r3,0(r4)
   50774:	00e00034 	movhi	r3,32768
   50778:	1885c83a 	sub	r2,r3,r2
   5077c:	983fe126 	beq	r19,zero,50704 <__alt_data_end+0xfffd1f04>
   50780:	297fffc4 	addi	r5,r5,-1
   50784:	003fde06 	br	50700 <__alt_data_end+0xfffd1f00>
   50788:	1c400084 	addi	r17,r3,2
   5078c:	1c000043 	ldbu	r16,1(r3)
   50790:	07000044 	movi	fp,1
   50794:	003fa706 	br	50634 <__alt_data_end+0xfffd1e34>
   50798:	1c400084 	addi	r17,r3,2
   5079c:	1c000043 	ldbu	r16,1(r3)
   507a0:	0039883a 	mov	fp,zero
   507a4:	003fa306 	br	50634 <__alt_data_end+0xfffd1e34>
   507a8:	88800003 	ldbu	r2,0(r17)
   507ac:	00c01604 	movi	r3,88
   507b0:	108037cc 	andi	r2,r2,223
   507b4:	10c00826 	beq	r2,r3,507d8 <_strtol_r+0x224>
   507b8:	05800204 	movi	r22,8
   507bc:	003fa006 	br	50640 <__alt_data_end+0xfffd1e40>
   507c0:	00800c04 	movi	r2,48
   507c4:	80bf9e1e 	bne	r16,r2,50640 <__alt_data_end+0xfffd1e40>
   507c8:	88800003 	ldbu	r2,0(r17)
   507cc:	00c01604 	movi	r3,88
   507d0:	108037cc 	andi	r2,r2,223
   507d4:	10ff9a1e 	bne	r2,r3,50640 <__alt_data_end+0xfffd1e40>
   507d8:	05c00404 	movi	r23,16
   507dc:	8c000043 	ldbu	r16,1(r17)
   507e0:	b82d883a 	mov	r22,r23
   507e4:	8c400084 	addi	r17,r17,2
   507e8:	003f9606 	br	50644 <__alt_data_end+0xfffd1e44>

000507ec <strtol>:
   507ec:	008001b4 	movhi	r2,6
   507f0:	10b55004 	addi	r2,r2,-10944
   507f4:	300f883a 	mov	r7,r6
   507f8:	280d883a 	mov	r6,r5
   507fc:	200b883a 	mov	r5,r4
   50800:	11000017 	ldw	r4,0(r2)
   50804:	00505b41 	jmpi	505b4 <_strtol_r>

00050808 <_strtoll_r>:
   50808:	008001b4 	movhi	r2,6
   5080c:	defff304 	addi	sp,sp,-52
   50810:	10b54e04 	addi	r2,r2,-10952
   50814:	dc800515 	stw	r18,20(sp)
   50818:	14800017 	ldw	r18,0(r2)
   5081c:	dd800915 	stw	r22,36(sp)
   50820:	dd400815 	stw	r21,32(sp)
   50824:	dcc00615 	stw	r19,24(sp)
   50828:	d9000015 	stw	r4,0(sp)
   5082c:	dfc00c15 	stw	ra,48(sp)
   50830:	df000b15 	stw	fp,44(sp)
   50834:	ddc00a15 	stw	r23,40(sp)
   50838:	dd000715 	stw	r20,28(sp)
   5083c:	dc400415 	stw	r17,16(sp)
   50840:	dc000315 	stw	r16,12(sp)
   50844:	282d883a 	mov	r22,r5
   50848:	302b883a 	mov	r21,r6
   5084c:	3827883a 	mov	r19,r7
   50850:	2809883a 	mov	r4,r5
   50854:	24000003 	ldbu	r16,0(r4)
   50858:	24400044 	addi	r17,r4,1
   5085c:	2007883a 	mov	r3,r4
   50860:	9405883a 	add	r2,r18,r16
   50864:	10800043 	ldbu	r2,1(r2)
   50868:	8809883a 	mov	r4,r17
   5086c:	1080020c 	andi	r2,r2,8
   50870:	103ff81e 	bne	r2,zero,50854 <__alt_data_end+0xfffd2054>
   50874:	00800b44 	movi	r2,45
   50878:	80807826 	beq	r16,r2,50a5c <_strtoll_r+0x254>
   5087c:	00800ac4 	movi	r2,43
   50880:	80807a26 	beq	r16,r2,50a6c <_strtoll_r+0x264>
   50884:	0039883a 	mov	fp,zero
   50888:	98004e26 	beq	r19,zero,509c4 <_strtoll_r+0x1bc>
   5088c:	00800404 	movi	r2,16
   50890:	98808226 	beq	r19,r2,50a9c <_strtoll_r+0x294>
   50894:	982fd7fa 	srai	r23,r19,31
   50898:	9829883a 	mov	r20,r19
   5089c:	e0004f26 	beq	fp,zero,509dc <_strtoll_r+0x1d4>
   508a0:	0017883a 	mov	r11,zero
   508a4:	02a00034 	movhi	r10,32768
   508a8:	5809883a 	mov	r4,r11
   508ac:	500b883a 	mov	r5,r10
   508b0:	a00d883a 	mov	r6,r20
   508b4:	b80f883a 	mov	r7,r23
   508b8:	da800215 	stw	r10,8(sp)
   508bc:	dac00115 	stw	r11,4(sp)
   508c0:	00579dc0 	call	579dc <__umoddi3>
   508c4:	dac00117 	ldw	r11,4(sp)
   508c8:	da800217 	ldw	r10,8(sp)
   508cc:	a00d883a 	mov	r6,r20
   508d0:	5809883a 	mov	r4,r11
   508d4:	500b883a 	mov	r5,r10
   508d8:	b80f883a 	mov	r7,r23
   508dc:	d8800115 	stw	r2,4(sp)
   508e0:	00574640 	call	57464 <__udivdi3>
   508e4:	9409883a 	add	r4,r18,r16
   508e8:	21000043 	ldbu	r4,1(r4)
   508ec:	1019883a 	mov	r12,r2
   508f0:	880b883a 	mov	r5,r17
   508f4:	2240010c 	andi	r9,r4,4
   508f8:	0015883a 	mov	r10,zero
   508fc:	000d883a 	mov	r6,zero
   50900:	000f883a 	mov	r7,zero
   50904:	03400044 	movi	r13,1
   50908:	02ffffc4 	movi	r11,-1
   5090c:	da000117 	ldw	r8,4(sp)
   50910:	48000d26 	beq	r9,zero,50948 <_strtoll_r+0x140>
   50914:	843ff404 	addi	r16,r16,-48
   50918:	84c0110e 	bge	r16,r19,50960 <_strtoll_r+0x158>
   5091c:	52c00426 	beq	r10,r11,50930 <_strtoll_r+0x128>
   50920:	19c00236 	bltu	r3,r7,5092c <_strtoll_r+0x124>
   50924:	38c0311e 	bne	r7,r3,509ec <_strtoll_r+0x1e4>
   50928:	6180302e 	bgeu	r12,r6,509ec <_strtoll_r+0x1e4>
   5092c:	02bfffc4 	movi	r10,-1
   50930:	2c000003 	ldbu	r16,0(r5)
   50934:	29400044 	addi	r5,r5,1
   50938:	9409883a 	add	r4,r18,r16
   5093c:	21000043 	ldbu	r4,1(r4)
   50940:	2240010c 	andi	r9,r4,4
   50944:	483ff31e 	bne	r9,zero,50914 <__alt_data_end+0xfffd2114>
   50948:	210000cc 	andi	r4,r4,3
   5094c:	20000426 	beq	r4,zero,50960 <_strtoll_r+0x158>
   50950:	23403426 	beq	r4,r13,50a24 <_strtoll_r+0x21c>
   50954:	008015c4 	movi	r2,87
   50958:	80a1c83a 	sub	r16,r16,r2
   5095c:	84ffef16 	blt	r16,r19,5091c <__alt_data_end+0xfffd211c>
   50960:	00bfffc4 	movi	r2,-1
   50964:	50803426 	beq	r10,r2,50a38 <_strtoll_r+0x230>
   50968:	e0000426 	beq	fp,zero,5097c <_strtoll_r+0x174>
   5096c:	018dc83a 	sub	r6,zero,r6
   50970:	3004c03a 	cmpne	r2,r6,zero
   50974:	01e1c83a 	sub	r16,zero,r7
   50978:	808fc83a 	sub	r7,r16,r2
   5097c:	3005883a 	mov	r2,r6
   50980:	3807883a 	mov	r3,r7
   50984:	a8000326 	beq	r21,zero,50994 <_strtoll_r+0x18c>
   50988:	5000321e 	bne	r10,zero,50a54 <_strtoll_r+0x24c>
   5098c:	b00b883a 	mov	r5,r22
   50990:	a9400015 	stw	r5,0(r21)
   50994:	dfc00c17 	ldw	ra,48(sp)
   50998:	df000b17 	ldw	fp,44(sp)
   5099c:	ddc00a17 	ldw	r23,40(sp)
   509a0:	dd800917 	ldw	r22,36(sp)
   509a4:	dd400817 	ldw	r21,32(sp)
   509a8:	dd000717 	ldw	r20,28(sp)
   509ac:	dcc00617 	ldw	r19,24(sp)
   509b0:	dc800517 	ldw	r18,20(sp)
   509b4:	dc400417 	ldw	r17,16(sp)
   509b8:	dc000317 	ldw	r16,12(sp)
   509bc:	dec00d04 	addi	sp,sp,52
   509c0:	f800283a 	ret
   509c4:	00800c04 	movi	r2,48
   509c8:	80802c26 	beq	r16,r2,50a7c <_strtoll_r+0x274>
   509cc:	05000284 	movi	r20,10
   509d0:	002f883a 	mov	r23,zero
   509d4:	a027883a 	mov	r19,r20
   509d8:	e03fb11e 	bne	fp,zero,508a0 <__alt_data_end+0xfffd20a0>
   509dc:	02a00034 	movhi	r10,32768
   509e0:	52bfffc4 	addi	r10,r10,-1
   509e4:	02ffffc4 	movi	r11,-1
   509e8:	003faf06 	br	508a8 <__alt_data_end+0xfffd20a8>
   509ec:	33000f26 	beq	r6,r12,50a2c <_strtoll_r+0x224>
   509f0:	b985383a 	mul	r2,r23,r6
   509f4:	3d0f383a 	mul	r7,r7,r20
   509f8:	3508383a 	mulxuu	r4,r6,r20
   509fc:	350d383a 	mul	r6,r6,r20
   50a00:	8013d7fa 	srai	r9,r16,31
   50a04:	388f883a 	add	r7,r7,r2
   50a08:	818d883a 	add	r6,r16,r6
   50a0c:	390f883a 	add	r7,r7,r4
   50a10:	3421803a 	cmpltu	r16,r6,r16
   50a14:	49cf883a 	add	r7,r9,r7
   50a18:	81cf883a 	add	r7,r16,r7
   50a1c:	02800044 	movi	r10,1
   50a20:	003fc306 	br	50930 <__alt_data_end+0xfffd2130>
   50a24:	00800dc4 	movi	r2,55
   50a28:	003fcb06 	br	50958 <__alt_data_end+0xfffd2158>
   50a2c:	38fff01e 	bne	r7,r3,509f0 <__alt_data_end+0xfffd21f0>
   50a30:	443fbe16 	blt	r8,r16,5092c <__alt_data_end+0xfffd212c>
   50a34:	003fee06 	br	509f0 <__alt_data_end+0xfffd21f0>
   50a38:	e0002426 	beq	fp,zero,50acc <_strtoll_r+0x2c4>
   50a3c:	0005883a 	mov	r2,zero
   50a40:	00e00034 	movhi	r3,32768
   50a44:	d9800017 	ldw	r6,0(sp)
   50a48:	01000884 	movi	r4,34
   50a4c:	31000015 	stw	r4,0(r6)
   50a50:	a83fd026 	beq	r21,zero,50994 <__alt_data_end+0xfffd2194>
   50a54:	297fffc4 	addi	r5,r5,-1
   50a58:	003fcd06 	br	50990 <__alt_data_end+0xfffd2190>
   50a5c:	1c400084 	addi	r17,r3,2
   50a60:	1c000043 	ldbu	r16,1(r3)
   50a64:	07000044 	movi	fp,1
   50a68:	003f8706 	br	50888 <__alt_data_end+0xfffd2088>
   50a6c:	1c400084 	addi	r17,r3,2
   50a70:	1c000043 	ldbu	r16,1(r3)
   50a74:	0039883a 	mov	fp,zero
   50a78:	003f8306 	br	50888 <__alt_data_end+0xfffd2088>
   50a7c:	88800003 	ldbu	r2,0(r17)
   50a80:	00c01604 	movi	r3,88
   50a84:	108037cc 	andi	r2,r2,223
   50a88:	10c00a26 	beq	r2,r3,50ab4 <_strtoll_r+0x2ac>
   50a8c:	05000204 	movi	r20,8
   50a90:	002f883a 	mov	r23,zero
   50a94:	a027883a 	mov	r19,r20
   50a98:	003f8006 	br	5089c <__alt_data_end+0xfffd209c>
   50a9c:	00800c04 	movi	r2,48
   50aa0:	80800e1e 	bne	r16,r2,50adc <_strtoll_r+0x2d4>
   50aa4:	88800003 	ldbu	r2,0(r17)
   50aa8:	00c01604 	movi	r3,88
   50aac:	108037cc 	andi	r2,r2,223
   50ab0:	10c00a1e 	bne	r2,r3,50adc <_strtoll_r+0x2d4>
   50ab4:	05000404 	movi	r20,16
   50ab8:	8c000043 	ldbu	r16,1(r17)
   50abc:	002f883a 	mov	r23,zero
   50ac0:	8c400084 	addi	r17,r17,2
   50ac4:	a027883a 	mov	r19,r20
   50ac8:	003f7406 	br	5089c <__alt_data_end+0xfffd209c>
   50acc:	00e00034 	movhi	r3,32768
   50ad0:	18ffffc4 	addi	r3,r3,-1
   50ad4:	5005883a 	mov	r2,r10
   50ad8:	003fda06 	br	50a44 <__alt_data_end+0xfffd2244>
   50adc:	9829883a 	mov	r20,r19
   50ae0:	002f883a 	mov	r23,zero
   50ae4:	003f6d06 	br	5089c <__alt_data_end+0xfffd209c>

00050ae8 <_strtoul_r>:
   50ae8:	008001b4 	movhi	r2,6
   50aec:	defff604 	addi	sp,sp,-40
   50af0:	10b54e04 	addi	r2,r2,-10952
   50af4:	dc800315 	stw	r18,12(sp)
   50af8:	14800017 	ldw	r18,0(r2)
   50afc:	dd400615 	stw	r21,24(sp)
   50b00:	dd000515 	stw	r20,20(sp)
   50b04:	dcc00415 	stw	r19,16(sp)
   50b08:	2029883a 	mov	r20,r4
   50b0c:	dfc00915 	stw	ra,36(sp)
   50b10:	ddc00815 	stw	r23,32(sp)
   50b14:	dd800715 	stw	r22,28(sp)
   50b18:	dc400215 	stw	r17,8(sp)
   50b1c:	dc000115 	stw	r16,4(sp)
   50b20:	2827883a 	mov	r19,r5
   50b24:	382b883a 	mov	r21,r7
   50b28:	2809883a 	mov	r4,r5
   50b2c:	24000003 	ldbu	r16,0(r4)
   50b30:	24400044 	addi	r17,r4,1
   50b34:	2007883a 	mov	r3,r4
   50b38:	9405883a 	add	r2,r18,r16
   50b3c:	10800043 	ldbu	r2,1(r2)
   50b40:	8809883a 	mov	r4,r17
   50b44:	1080020c 	andi	r2,r2,8
   50b48:	103ff81e 	bne	r2,zero,50b2c <__alt_data_end+0xfffd232c>
   50b4c:	00800b44 	movi	r2,45
   50b50:	80805326 	beq	r16,r2,50ca0 <_strtoul_r+0x1b8>
   50b54:	00800ac4 	movi	r2,43
   50b58:	80805526 	beq	r16,r2,50cb0 <_strtoul_r+0x1c8>
   50b5c:	002f883a 	mov	r23,zero
   50b60:	a8000f26 	beq	r21,zero,50ba0 <_strtoul_r+0xb8>
   50b64:	00800404 	movi	r2,16
   50b68:	a8805f26 	beq	r21,r2,50ce8 <_strtoul_r+0x200>
   50b6c:	013fffc4 	movi	r4,-1
   50b70:	a80b883a 	mov	r5,r21
   50b74:	d9800015 	stw	r6,0(sp)
   50b78:	00455740 	call	45574 <__udivsi3>
   50b7c:	a80b883a 	mov	r5,r21
   50b80:	013fffc4 	movi	r4,-1
   50b84:	102d883a 	mov	r22,r2
   50b88:	00455d80 	call	455d8 <__umodsi3>
   50b8c:	d9800017 	ldw	r6,0(sp)
   50b90:	1019883a 	mov	r12,r2
   50b94:	a817883a 	mov	r11,r21
   50b98:	b00f883a 	mov	r7,r22
   50b9c:	00000706 	br	50bbc <_strtoul_r+0xd4>
   50ba0:	00800c04 	movi	r2,48
   50ba4:	80804626 	beq	r16,r2,50cc0 <_strtoul_r+0x1d8>
   50ba8:	05400284 	movi	r21,10
   50bac:	01c666b4 	movhi	r7,6554
   50bb0:	03000144 	movi	r12,5
   50bb4:	39e66644 	addi	r7,r7,-26215
   50bb8:	a817883a 	mov	r11,r21
   50bbc:	9407883a 	add	r3,r18,r16
   50bc0:	18c00043 	ldbu	r3,1(r3)
   50bc4:	8809883a 	mov	r4,r17
   50bc8:	0011883a 	mov	r8,zero
   50bcc:	1940010c 	andi	r5,r3,4
   50bd0:	0005883a 	mov	r2,zero
   50bd4:	02800044 	movi	r10,1
   50bd8:	027fffc4 	movi	r9,-1
   50bdc:	28000e26 	beq	r5,zero,50c18 <_strtoul_r+0x130>
   50be0:	843ff404 	addi	r16,r16,-48
   50be4:	8540120e 	bge	r16,r21,50c30 <_strtoul_r+0x148>
   50be8:	42400526 	beq	r8,r9,50c00 <_strtoul_r+0x118>
   50bec:	38802236 	bltu	r7,r2,50c78 <_strtoul_r+0x190>
   50bf0:	11c02026 	beq	r2,r7,50c74 <_strtoul_r+0x18c>
   50bf4:	12c5383a 	mul	r2,r2,r11
   50bf8:	02000044 	movi	r8,1
   50bfc:	8085883a 	add	r2,r16,r2
   50c00:	24000003 	ldbu	r16,0(r4)
   50c04:	21000044 	addi	r4,r4,1
   50c08:	9407883a 	add	r3,r18,r16
   50c0c:	18c00043 	ldbu	r3,1(r3)
   50c10:	1940010c 	andi	r5,r3,4
   50c14:	283ff21e 	bne	r5,zero,50be0 <__alt_data_end+0xfffd23e0>
   50c18:	18c000cc 	andi	r3,r3,3
   50c1c:	18000426 	beq	r3,zero,50c30 <_strtoul_r+0x148>
   50c20:	1a801726 	beq	r3,r10,50c80 <_strtoul_r+0x198>
   50c24:	00c015c4 	movi	r3,87
   50c28:	80e1c83a 	sub	r16,r16,r3
   50c2c:	857fee16 	blt	r16,r21,50be8 <__alt_data_end+0xfffd23e8>
   50c30:	40001516 	blt	r8,zero,50c88 <_strtoul_r+0x1a0>
   50c34:	b8000126 	beq	r23,zero,50c3c <_strtoul_r+0x154>
   50c38:	0085c83a 	sub	r2,zero,r2
   50c3c:	30000226 	beq	r6,zero,50c48 <_strtoul_r+0x160>
   50c40:	4000151e 	bne	r8,zero,50c98 <_strtoul_r+0x1b0>
   50c44:	34c00015 	stw	r19,0(r6)
   50c48:	dfc00917 	ldw	ra,36(sp)
   50c4c:	ddc00817 	ldw	r23,32(sp)
   50c50:	dd800717 	ldw	r22,28(sp)
   50c54:	dd400617 	ldw	r21,24(sp)
   50c58:	dd000517 	ldw	r20,20(sp)
   50c5c:	dcc00417 	ldw	r19,16(sp)
   50c60:	dc800317 	ldw	r18,12(sp)
   50c64:	dc400217 	ldw	r17,8(sp)
   50c68:	dc000117 	ldw	r16,4(sp)
   50c6c:	dec00a04 	addi	sp,sp,40
   50c70:	f800283a 	ret
   50c74:	643fdf0e 	bge	r12,r16,50bf4 <__alt_data_end+0xfffd23f4>
   50c78:	023fffc4 	movi	r8,-1
   50c7c:	003fe006 	br	50c00 <__alt_data_end+0xfffd2400>
   50c80:	00c00dc4 	movi	r3,55
   50c84:	003fe806 	br	50c28 <__alt_data_end+0xfffd2428>
   50c88:	00800884 	movi	r2,34
   50c8c:	a0800015 	stw	r2,0(r20)
   50c90:	00bfffc4 	movi	r2,-1
   50c94:	303fec26 	beq	r6,zero,50c48 <__alt_data_end+0xfffd2448>
   50c98:	24ffffc4 	addi	r19,r4,-1
   50c9c:	003fe906 	br	50c44 <__alt_data_end+0xfffd2444>
   50ca0:	1c400084 	addi	r17,r3,2
   50ca4:	1c000043 	ldbu	r16,1(r3)
   50ca8:	05c00044 	movi	r23,1
   50cac:	003fac06 	br	50b60 <__alt_data_end+0xfffd2360>
   50cb0:	1c400084 	addi	r17,r3,2
   50cb4:	1c000043 	ldbu	r16,1(r3)
   50cb8:	002f883a 	mov	r23,zero
   50cbc:	003fa806 	br	50b60 <__alt_data_end+0xfffd2360>
   50cc0:	88800003 	ldbu	r2,0(r17)
   50cc4:	00c01604 	movi	r3,88
   50cc8:	108037cc 	andi	r2,r2,223
   50ccc:	10c00c26 	beq	r2,r3,50d00 <_strtoul_r+0x218>
   50cd0:	05400204 	movi	r21,8
   50cd4:	01c80034 	movhi	r7,8192
   50cd8:	030001c4 	movi	r12,7
   50cdc:	39ffffc4 	addi	r7,r7,-1
   50ce0:	a817883a 	mov	r11,r21
   50ce4:	003fb506 	br	50bbc <__alt_data_end+0xfffd23bc>
   50ce8:	00800c04 	movi	r2,48
   50cec:	80800c1e 	bne	r16,r2,50d20 <_strtoul_r+0x238>
   50cf0:	88800003 	ldbu	r2,0(r17)
   50cf4:	00c01604 	movi	r3,88
   50cf8:	108037cc 	andi	r2,r2,223
   50cfc:	10c0081e 	bne	r2,r3,50d20 <_strtoul_r+0x238>
   50d00:	02c00404 	movi	r11,16
   50d04:	05840034 	movhi	r22,4096
   50d08:	8c000043 	ldbu	r16,1(r17)
   50d0c:	030003c4 	movi	r12,15
   50d10:	8c400084 	addi	r17,r17,2
   50d14:	b5bfffc4 	addi	r22,r22,-1
   50d18:	582b883a 	mov	r21,r11
   50d1c:	003f9e06 	br	50b98 <__alt_data_end+0xfffd2398>
   50d20:	01c40034 	movhi	r7,4096
   50d24:	030003c4 	movi	r12,15
   50d28:	39ffffc4 	addi	r7,r7,-1
   50d2c:	a817883a 	mov	r11,r21
   50d30:	003fa206 	br	50bbc <__alt_data_end+0xfffd23bc>

00050d34 <strtoul>:
   50d34:	008001b4 	movhi	r2,6
   50d38:	10b55004 	addi	r2,r2,-10944
   50d3c:	300f883a 	mov	r7,r6
   50d40:	280d883a 	mov	r6,r5
   50d44:	200b883a 	mov	r5,r4
   50d48:	11000017 	ldw	r4,0(r2)
   50d4c:	0050ae81 	jmpi	50ae8 <_strtoul_r>

00050d50 <_strtoull_r>:
   50d50:	008001b4 	movhi	r2,6
   50d54:	defff404 	addi	sp,sp,-48
   50d58:	10b54e04 	addi	r2,r2,-10952
   50d5c:	dc400315 	stw	r17,12(sp)
   50d60:	14400017 	ldw	r17,0(r2)
   50d64:	dd400715 	stw	r21,28(sp)
   50d68:	dd000615 	stw	r20,24(sp)
   50d6c:	dcc00515 	stw	r19,20(sp)
   50d70:	dc800415 	stw	r18,16(sp)
   50d74:	dfc00b15 	stw	ra,44(sp)
   50d78:	df000a15 	stw	fp,40(sp)
   50d7c:	ddc00915 	stw	r23,36(sp)
   50d80:	dd800815 	stw	r22,32(sp)
   50d84:	dc000215 	stw	r16,8(sp)
   50d88:	2827883a 	mov	r19,r5
   50d8c:	202b883a 	mov	r21,r4
   50d90:	3029883a 	mov	r20,r6
   50d94:	3825883a 	mov	r18,r7
   50d98:	2807883a 	mov	r3,r5
   50d9c:	1c000003 	ldbu	r16,0(r3)
   50da0:	1f000044 	addi	fp,r3,1
   50da4:	1809883a 	mov	r4,r3
   50da8:	8c05883a 	add	r2,r17,r16
   50dac:	10800043 	ldbu	r2,1(r2)
   50db0:	e007883a 	mov	r3,fp
   50db4:	1080020c 	andi	r2,r2,8
   50db8:	103ff81e 	bne	r2,zero,50d9c <__alt_data_end+0xfffd259c>
   50dbc:	00800b44 	movi	r2,45
   50dc0:	80806e26 	beq	r16,r2,50f7c <_strtoull_r+0x22c>
   50dc4:	00800ac4 	movi	r2,43
   50dc8:	80807026 	beq	r16,r2,50f8c <_strtoull_r+0x23c>
   50dcc:	002f883a 	mov	r23,zero
   50dd0:	90001426 	beq	r18,zero,50e24 <_strtoull_r+0xd4>
   50dd4:	00800404 	movi	r2,16
   50dd8:	90807c26 	beq	r18,r2,50fcc <_strtoull_r+0x27c>
   50ddc:	902dd7fa 	srai	r22,r18,31
   50de0:	013fffc4 	movi	r4,-1
   50de4:	200b883a 	mov	r5,r4
   50de8:	900d883a 	mov	r6,r18
   50dec:	b00f883a 	mov	r7,r22
   50df0:	00574640 	call	57464 <__udivdi3>
   50df4:	013fffc4 	movi	r4,-1
   50df8:	900d883a 	mov	r6,r18
   50dfc:	b00f883a 	mov	r7,r22
   50e00:	200b883a 	mov	r5,r4
   50e04:	d8c00115 	stw	r3,4(sp)
   50e08:	d8800015 	stw	r2,0(sp)
   50e0c:	00579dc0 	call	579dc <__umoddi3>
   50e10:	101b883a 	mov	r13,r2
   50e14:	9015883a 	mov	r10,r18
   50e18:	dac00017 	ldw	r11,0(sp)
   50e1c:	da000117 	ldw	r8,4(sp)
   50e20:	00000a06 	br	50e4c <_strtoull_r+0xfc>
   50e24:	00800c04 	movi	r2,48
   50e28:	80805c26 	beq	r16,r2,50f9c <_strtoull_r+0x24c>
   50e2c:	02800284 	movi	r10,10
   50e30:	02e666b4 	movhi	r11,39322
   50e34:	020666b4 	movhi	r8,6554
   50e38:	03400144 	movi	r13,5
   50e3c:	5ae66644 	addi	r11,r11,-26215
   50e40:	42266644 	addi	r8,r8,-26215
   50e44:	002d883a 	mov	r22,zero
   50e48:	5025883a 	mov	r18,r10
   50e4c:	8c0b883a 	add	r5,r17,r16
   50e50:	29400043 	ldbu	r5,1(r5)
   50e54:	e009883a 	mov	r4,fp
   50e58:	000f883a 	mov	r7,zero
   50e5c:	2980010c 	andi	r6,r5,4
   50e60:	0005883a 	mov	r2,zero
   50e64:	0007883a 	mov	r3,zero
   50e68:	03000044 	movi	r12,1
   50e6c:	027fffc4 	movi	r9,-1
   50e70:	30000d26 	beq	r6,zero,50ea8 <_strtoull_r+0x158>
   50e74:	843ff404 	addi	r16,r16,-48
   50e78:	8480110e 	bge	r16,r18,50ec0 <_strtoull_r+0x170>
   50e7c:	3a400426 	beq	r7,r9,50e90 <_strtoull_r+0x140>
   50e80:	40c00236 	bltu	r8,r3,50e8c <_strtoull_r+0x13c>
   50e84:	1a00231e 	bne	r3,r8,50f14 <_strtoull_r+0x1c4>
   50e88:	5880222e 	bgeu	r11,r2,50f14 <_strtoull_r+0x1c4>
   50e8c:	01ffffc4 	movi	r7,-1
   50e90:	24000003 	ldbu	r16,0(r4)
   50e94:	21000044 	addi	r4,r4,1
   50e98:	8c0b883a 	add	r5,r17,r16
   50e9c:	29400043 	ldbu	r5,1(r5)
   50ea0:	2980010c 	andi	r6,r5,4
   50ea4:	303ff31e 	bne	r6,zero,50e74 <__alt_data_end+0xfffd2674>
   50ea8:	294000cc 	andi	r5,r5,3
   50eac:	28000426 	beq	r5,zero,50ec0 <_strtoull_r+0x170>
   50eb0:	2b002626 	beq	r5,r12,50f4c <_strtoull_r+0x1fc>
   50eb4:	014015c4 	movi	r5,87
   50eb8:	8161c83a 	sub	r16,r16,r5
   50ebc:	84bfef16 	blt	r16,r18,50e7c <__alt_data_end+0xfffd267c>
   50ec0:	38002716 	blt	r7,zero,50f60 <_strtoull_r+0x210>
   50ec4:	b8000426 	beq	r23,zero,50ed8 <_strtoull_r+0x188>
   50ec8:	0085c83a 	sub	r2,zero,r2
   50ecc:	100ac03a 	cmpne	r5,r2,zero
   50ed0:	00e1c83a 	sub	r16,zero,r3
   50ed4:	8147c83a 	sub	r3,r16,r5
   50ed8:	a0000226 	beq	r20,zero,50ee4 <_strtoull_r+0x194>
   50edc:	3800251e 	bne	r7,zero,50f74 <_strtoull_r+0x224>
   50ee0:	a4c00015 	stw	r19,0(r20)
   50ee4:	dfc00b17 	ldw	ra,44(sp)
   50ee8:	df000a17 	ldw	fp,40(sp)
   50eec:	ddc00917 	ldw	r23,36(sp)
   50ef0:	dd800817 	ldw	r22,32(sp)
   50ef4:	dd400717 	ldw	r21,28(sp)
   50ef8:	dd000617 	ldw	r20,24(sp)
   50efc:	dcc00517 	ldw	r19,20(sp)
   50f00:	dc800417 	ldw	r18,16(sp)
   50f04:	dc400317 	ldw	r17,12(sp)
   50f08:	dc000217 	ldw	r16,8(sp)
   50f0c:	dec00c04 	addi	sp,sp,48
   50f10:	f800283a 	ret
   50f14:	12c00f26 	beq	r2,r11,50f54 <_strtoull_r+0x204>
   50f18:	b08d383a 	mul	r6,r22,r2
   50f1c:	1a87383a 	mul	r3,r3,r10
   50f20:	128a383a 	mulxuu	r5,r2,r10
   50f24:	1285383a 	mul	r2,r2,r10
   50f28:	800fd7fa 	srai	r7,r16,31
   50f2c:	1987883a 	add	r3,r3,r6
   50f30:	8085883a 	add	r2,r16,r2
   50f34:	1947883a 	add	r3,r3,r5
   50f38:	38c7883a 	add	r3,r7,r3
   50f3c:	1421803a 	cmpltu	r16,r2,r16
   50f40:	80c7883a 	add	r3,r16,r3
   50f44:	01c00044 	movi	r7,1
   50f48:	003fd106 	br	50e90 <__alt_data_end+0xfffd2690>
   50f4c:	01400dc4 	movi	r5,55
   50f50:	003fd906 	br	50eb8 <__alt_data_end+0xfffd26b8>
   50f54:	1a3ff01e 	bne	r3,r8,50f18 <__alt_data_end+0xfffd2718>
   50f58:	6c3fcc16 	blt	r13,r16,50e8c <__alt_data_end+0xfffd268c>
   50f5c:	003fee06 	br	50f18 <__alt_data_end+0xfffd2718>
   50f60:	00800884 	movi	r2,34
   50f64:	a8800015 	stw	r2,0(r21)
   50f68:	00bfffc4 	movi	r2,-1
   50f6c:	1007883a 	mov	r3,r2
   50f70:	a03fdc26 	beq	r20,zero,50ee4 <__alt_data_end+0xfffd26e4>
   50f74:	24ffffc4 	addi	r19,r4,-1
   50f78:	003fd906 	br	50ee0 <__alt_data_end+0xfffd26e0>
   50f7c:	27000084 	addi	fp,r4,2
   50f80:	24000043 	ldbu	r16,1(r4)
   50f84:	05c00044 	movi	r23,1
   50f88:	003f9106 	br	50dd0 <__alt_data_end+0xfffd25d0>
   50f8c:	27000084 	addi	fp,r4,2
   50f90:	24000043 	ldbu	r16,1(r4)
   50f94:	002f883a 	mov	r23,zero
   50f98:	003f8d06 	br	50dd0 <__alt_data_end+0xfffd25d0>
   50f9c:	e0800003 	ldbu	r2,0(fp)
   50fa0:	00c01604 	movi	r3,88
   50fa4:	108037cc 	andi	r2,r2,223
   50fa8:	10c00e26 	beq	r2,r3,50fe4 <_strtoull_r+0x294>
   50fac:	02800204 	movi	r10,8
   50fb0:	02ffffc4 	movi	r11,-1
   50fb4:	02080034 	movhi	r8,8192
   50fb8:	034001c4 	movi	r13,7
   50fbc:	42d1883a 	add	r8,r8,r11
   50fc0:	002d883a 	mov	r22,zero
   50fc4:	5025883a 	mov	r18,r10
   50fc8:	003fa006 	br	50e4c <__alt_data_end+0xfffd264c>
   50fcc:	00800c04 	movi	r2,48
   50fd0:	80800e1e 	bne	r16,r2,5100c <_strtoull_r+0x2bc>
   50fd4:	e0800003 	ldbu	r2,0(fp)
   50fd8:	00c01604 	movi	r3,88
   50fdc:	108037cc 	andi	r2,r2,223
   50fe0:	10c00a1e 	bne	r2,r3,5100c <_strtoull_r+0x2bc>
   50fe4:	02800404 	movi	r10,16
   50fe8:	02ffffc4 	movi	r11,-1
   50fec:	02040034 	movhi	r8,4096
   50ff0:	e4000043 	ldbu	r16,1(fp)
   50ff4:	034003c4 	movi	r13,15
   50ff8:	e7000084 	addi	fp,fp,2
   50ffc:	42d1883a 	add	r8,r8,r11
   51000:	002d883a 	mov	r22,zero
   51004:	5025883a 	mov	r18,r10
   51008:	003f9006 	br	50e4c <__alt_data_end+0xfffd264c>
   5100c:	02ffffc4 	movi	r11,-1
   51010:	02040034 	movhi	r8,4096
   51014:	034003c4 	movi	r13,15
   51018:	42d1883a 	add	r8,r8,r11
   5101c:	9015883a 	mov	r10,r18
   51020:	002d883a 	mov	r22,zero
   51024:	003f8906 	br	50e4c <__alt_data_end+0xfffd264c>

00051028 <___svfprintf_internal_r>:
   51028:	deffb704 	addi	sp,sp,-292
   5102c:	dfc04815 	stw	ra,288(sp)
   51030:	ddc04615 	stw	r23,280(sp)
   51034:	d9402c15 	stw	r5,176(sp)
   51038:	d9003915 	stw	r4,228(sp)
   5103c:	302f883a 	mov	r23,r6
   51040:	d9c02d15 	stw	r7,180(sp)
   51044:	df004715 	stw	fp,284(sp)
   51048:	dd804515 	stw	r22,276(sp)
   5104c:	dd404415 	stw	r21,272(sp)
   51050:	dd004315 	stw	r20,268(sp)
   51054:	dcc04215 	stw	r19,264(sp)
   51058:	dc804115 	stw	r18,260(sp)
   5105c:	dc404015 	stw	r17,256(sp)
   51060:	dc003f15 	stw	r16,252(sp)
   51064:	004c2f00 	call	4c2f0 <_localeconv_r>
   51068:	10800017 	ldw	r2,0(r2)
   5106c:	1009883a 	mov	r4,r2
   51070:	d8803415 	stw	r2,208(sp)
   51074:	00459240 	call	45924 <strlen>
   51078:	d8c02c17 	ldw	r3,176(sp)
   5107c:	d8803815 	stw	r2,224(sp)
   51080:	1880030b 	ldhu	r2,12(r3)
   51084:	1080200c 	andi	r2,r2,128
   51088:	10000226 	beq	r2,zero,51094 <___svfprintf_internal_r+0x6c>
   5108c:	18800417 	ldw	r2,16(r3)
   51090:	10067f26 	beq	r2,zero,52a90 <___svfprintf_internal_r+0x1a68>
   51094:	dcc03917 	ldw	r19,228(sp)
   51098:	d8c00404 	addi	r3,sp,16
   5109c:	054001b4 	movhi	r21,6
   510a0:	d9001e04 	addi	r4,sp,120
   510a4:	ad6db004 	addi	r21,r21,-18752
   510a8:	d8c01e15 	stw	r3,120(sp)
   510ac:	d8002015 	stw	zero,128(sp)
   510b0:	d8001f15 	stw	zero,124(sp)
   510b4:	d8003315 	stw	zero,204(sp)
   510b8:	d8003615 	stw	zero,216(sp)
   510bc:	d8003715 	stw	zero,220(sp)
   510c0:	1811883a 	mov	r8,r3
   510c4:	d8003a15 	stw	zero,232(sp)
   510c8:	d8003b15 	stw	zero,236(sp)
   510cc:	d8002f15 	stw	zero,188(sp)
   510d0:	d9002815 	stw	r4,160(sp)
   510d4:	b8800007 	ldb	r2,0(r23)
   510d8:	10026726 	beq	r2,zero,51a78 <___svfprintf_internal_r+0xa50>
   510dc:	00c00944 	movi	r3,37
   510e0:	b821883a 	mov	r16,r23
   510e4:	10c0021e 	bne	r2,r3,510f0 <___svfprintf_internal_r+0xc8>
   510e8:	00001406 	br	5113c <___svfprintf_internal_r+0x114>
   510ec:	10c00326 	beq	r2,r3,510fc <___svfprintf_internal_r+0xd4>
   510f0:	84000044 	addi	r16,r16,1
   510f4:	80800007 	ldb	r2,0(r16)
   510f8:	103ffc1e 	bne	r2,zero,510ec <__alt_data_end+0xfffd28ec>
   510fc:	85e3c83a 	sub	r17,r16,r23
   51100:	88000e26 	beq	r17,zero,5113c <___svfprintf_internal_r+0x114>
   51104:	d8c02017 	ldw	r3,128(sp)
   51108:	d8801f17 	ldw	r2,124(sp)
   5110c:	45c00015 	stw	r23,0(r8)
   51110:	1c47883a 	add	r3,r3,r17
   51114:	10800044 	addi	r2,r2,1
   51118:	d8c02015 	stw	r3,128(sp)
   5111c:	44400115 	stw	r17,4(r8)
   51120:	d8801f15 	stw	r2,124(sp)
   51124:	00c001c4 	movi	r3,7
   51128:	18809716 	blt	r3,r2,51388 <___svfprintf_internal_r+0x360>
   5112c:	42000204 	addi	r8,r8,8
   51130:	d9402f17 	ldw	r5,188(sp)
   51134:	2c4b883a 	add	r5,r5,r17
   51138:	d9402f15 	stw	r5,188(sp)
   5113c:	80800007 	ldb	r2,0(r16)
   51140:	10009826 	beq	r2,zero,513a4 <___svfprintf_internal_r+0x37c>
   51144:	84400047 	ldb	r17,1(r16)
   51148:	00bfffc4 	movi	r2,-1
   5114c:	85c00044 	addi	r23,r16,1
   51150:	d8002785 	stb	zero,158(sp)
   51154:	0007883a 	mov	r3,zero
   51158:	000f883a 	mov	r7,zero
   5115c:	d8802915 	stw	r2,164(sp)
   51160:	d8003115 	stw	zero,196(sp)
   51164:	0025883a 	mov	r18,zero
   51168:	01401604 	movi	r5,88
   5116c:	01800244 	movi	r6,9
   51170:	02800a84 	movi	r10,42
   51174:	02401b04 	movi	r9,108
   51178:	bdc00044 	addi	r23,r23,1
   5117c:	88bff804 	addi	r2,r17,-32
   51180:	2882f036 	bltu	r5,r2,51d44 <___svfprintf_internal_r+0xd1c>
   51184:	100490ba 	slli	r2,r2,2
   51188:	01000174 	movhi	r4,5
   5118c:	21046704 	addi	r4,r4,4508
   51190:	1105883a 	add	r2,r2,r4
   51194:	10800017 	ldw	r2,0(r2)
   51198:	1000683a 	jmp	r2
   5119c:	00051cac 	andhi	zero,zero,5234
   511a0:	00051d44 	movi	zero,5237
   511a4:	00051d44 	movi	zero,5237
   511a8:	00051ca0 	cmpeqi	zero,zero,5234
   511ac:	00051d44 	movi	zero,5237
   511b0:	00051d44 	movi	zero,5237
   511b4:	00051d44 	movi	zero,5237
   511b8:	00051d44 	movi	zero,5237
   511bc:	00051d44 	movi	zero,5237
   511c0:	00051d44 	movi	zero,5237
   511c4:	00051400 	call	5140 <__alt_mem_onchip_memory2-0x3aec0>
   511c8:	00051bdc 	xori	zero,zero,5231
   511cc:	00051d44 	movi	zero,5237
   511d0:	00051310 	cmplti	zero,zero,5196
   511d4:	00051428 	cmpgeui	zero,zero,5200
   511d8:	00051d44 	movi	zero,5237
   511dc:	0005149c 	xori	zero,zero,5202
   511e0:	00051468 	cmpgeui	zero,zero,5201
   511e4:	00051468 	cmpgeui	zero,zero,5201
   511e8:	00051468 	cmpgeui	zero,zero,5201
   511ec:	00051468 	cmpgeui	zero,zero,5201
   511f0:	00051468 	cmpgeui	zero,zero,5201
   511f4:	00051468 	cmpgeui	zero,zero,5201
   511f8:	00051468 	cmpgeui	zero,zero,5201
   511fc:	00051468 	cmpgeui	zero,zero,5201
   51200:	00051468 	cmpgeui	zero,zero,5201
   51204:	00051d44 	movi	zero,5237
   51208:	00051d44 	movi	zero,5237
   5120c:	00051d44 	movi	zero,5237
   51210:	00051d44 	movi	zero,5237
   51214:	00051d44 	movi	zero,5237
   51218:	00051d44 	movi	zero,5237
   5121c:	00051d44 	movi	zero,5237
   51220:	00051d44 	movi	zero,5237
   51224:	00051d44 	movi	zero,5237
   51228:	00051d44 	movi	zero,5237
   5122c:	00051554 	movui	zero,5205
   51230:	000514a8 	cmpgeui	zero,zero,5202
   51234:	00051d44 	movi	zero,5237
   51238:	000514a8 	cmpgeui	zero,zero,5202
   5123c:	00051d44 	movi	zero,5237
   51240:	00051d44 	movi	zero,5237
   51244:	00051d44 	movi	zero,5237
   51248:	00051d44 	movi	zero,5237
   5124c:	00051548 	cmpgei	zero,zero,5205
   51250:	00051d44 	movi	zero,5237
   51254:	00051d44 	movi	zero,5237
   51258:	00051610 	cmplti	zero,zero,5208
   5125c:	00051d44 	movi	zero,5237
   51260:	00051d44 	movi	zero,5237
   51264:	00051d44 	movi	zero,5237
   51268:	00051d44 	movi	zero,5237
   5126c:	00051d44 	movi	zero,5237
   51270:	00051a80 	call	51a8 <__alt_mem_onchip_memory2-0x3ae58>
   51274:	00051d44 	movi	zero,5237
   51278:	00051d44 	movi	zero,5237
   5127c:	00051ae0 	cmpeqi	zero,zero,5227
   51280:	00051d44 	movi	zero,5237
   51284:	00051d44 	movi	zero,5237
   51288:	00051d44 	movi	zero,5237
   5128c:	00051d44 	movi	zero,5237
   51290:	00051d44 	movi	zero,5237
   51294:	00051d44 	movi	zero,5237
   51298:	00051d44 	movi	zero,5237
   5129c:	00051d44 	movi	zero,5237
   512a0:	00051d44 	movi	zero,5237
   512a4:	00051d44 	movi	zero,5237
   512a8:	00051b90 	cmplti	zero,zero,5230
   512ac:	00051ccc 	andi	zero,zero,5235
   512b0:	000514a8 	cmpgeui	zero,zero,5202
   512b4:	000514a8 	cmpgeui	zero,zero,5202
   512b8:	000514a8 	cmpgeui	zero,zero,5202
   512bc:	00051d20 	cmpeqi	zero,zero,5236
   512c0:	00051ccc 	andi	zero,zero,5235
   512c4:	00051d44 	movi	zero,5237
   512c8:	00051d44 	movi	zero,5237
   512cc:	00051cdc 	xori	zero,zero,5235
   512d0:	00051d44 	movi	zero,5237
   512d4:	00051cec 	andhi	zero,zero,5235
   512d8:	00051bcc 	andi	zero,zero,5231
   512dc:	0005131c 	xori	zero,zero,5196
   512e0:	00051bec 	andhi	zero,zero,5231
   512e4:	00051d44 	movi	zero,5237
   512e8:	00051bf8 	rdprs	zero,zero,5231
   512ec:	00051d44 	movi	zero,5237
   512f0:	00051c54 	movui	zero,5233
   512f4:	00051d44 	movi	zero,5237
   512f8:	00051d44 	movi	zero,5237
   512fc:	00051c64 	muli	zero,zero,5233
   51300:	d9003117 	ldw	r4,196(sp)
   51304:	d8802d15 	stw	r2,180(sp)
   51308:	0109c83a 	sub	r4,zero,r4
   5130c:	d9003115 	stw	r4,196(sp)
   51310:	94800114 	ori	r18,r18,4
   51314:	bc400007 	ldb	r17,0(r23)
   51318:	003f9706 	br	51178 <__alt_data_end+0xfffd2978>
   5131c:	00800c04 	movi	r2,48
   51320:	d9002d17 	ldw	r4,180(sp)
   51324:	d9402917 	ldw	r5,164(sp)
   51328:	d8802705 	stb	r2,156(sp)
   5132c:	00801e04 	movi	r2,120
   51330:	d8802745 	stb	r2,157(sp)
   51334:	d8002785 	stb	zero,158(sp)
   51338:	20c00104 	addi	r3,r4,4
   5133c:	25000017 	ldw	r20,0(r4)
   51340:	002d883a 	mov	r22,zero
   51344:	90800094 	ori	r2,r18,2
   51348:	28028616 	blt	r5,zero,51d64 <___svfprintf_internal_r+0xd3c>
   5134c:	00bfdfc4 	movi	r2,-129
   51350:	90a4703a 	and	r18,r18,r2
   51354:	d8c02d15 	stw	r3,180(sp)
   51358:	94800094 	ori	r18,r18,2
   5135c:	a002731e 	bne	r20,zero,51d2c <___svfprintf_internal_r+0xd04>
   51360:	008001b4 	movhi	r2,6
   51364:	10ac8c04 	addi	r2,r2,-19920
   51368:	d8803a15 	stw	r2,232(sp)
   5136c:	04401e04 	movi	r17,120
   51370:	d8c02917 	ldw	r3,164(sp)
   51374:	0039883a 	mov	fp,zero
   51378:	1801d526 	beq	r3,zero,51ad0 <___svfprintf_internal_r+0xaa8>
   5137c:	0029883a 	mov	r20,zero
   51380:	002d883a 	mov	r22,zero
   51384:	0001f106 	br	51b4c <___svfprintf_internal_r+0xb24>
   51388:	d9402c17 	ldw	r5,176(sp)
   5138c:	d9801e04 	addi	r6,sp,120
   51390:	9809883a 	mov	r4,r19
   51394:	0055d180 	call	55d18 <__ssprint_r>
   51398:	1000081e 	bne	r2,zero,513bc <___svfprintf_internal_r+0x394>
   5139c:	da000404 	addi	r8,sp,16
   513a0:	003f6306 	br	51130 <__alt_data_end+0xfffd2930>
   513a4:	d8802017 	ldw	r2,128(sp)
   513a8:	10000426 	beq	r2,zero,513bc <___svfprintf_internal_r+0x394>
   513ac:	d9402c17 	ldw	r5,176(sp)
   513b0:	d9003917 	ldw	r4,228(sp)
   513b4:	d9801e04 	addi	r6,sp,120
   513b8:	0055d180 	call	55d18 <__ssprint_r>
   513bc:	d8802c17 	ldw	r2,176(sp)
   513c0:	10c0030b 	ldhu	r3,12(r2)
   513c4:	d8802f17 	ldw	r2,188(sp)
   513c8:	18c0100c 	andi	r3,r3,64
   513cc:	1805f51e 	bne	r3,zero,52ba4 <___svfprintf_internal_r+0x1b7c>
   513d0:	dfc04817 	ldw	ra,288(sp)
   513d4:	df004717 	ldw	fp,284(sp)
   513d8:	ddc04617 	ldw	r23,280(sp)
   513dc:	dd804517 	ldw	r22,276(sp)
   513e0:	dd404417 	ldw	r21,272(sp)
   513e4:	dd004317 	ldw	r20,268(sp)
   513e8:	dcc04217 	ldw	r19,264(sp)
   513ec:	dc804117 	ldw	r18,260(sp)
   513f0:	dc404017 	ldw	r17,256(sp)
   513f4:	dc003f17 	ldw	r16,252(sp)
   513f8:	dec04904 	addi	sp,sp,292
   513fc:	f800283a 	ret
   51400:	d8802d17 	ldw	r2,180(sp)
   51404:	d9002d17 	ldw	r4,180(sp)
   51408:	10800017 	ldw	r2,0(r2)
   5140c:	d8803115 	stw	r2,196(sp)
   51410:	20800104 	addi	r2,r4,4
   51414:	d9003117 	ldw	r4,196(sp)
   51418:	203fb916 	blt	r4,zero,51300 <__alt_data_end+0xfffd2b00>
   5141c:	d8802d15 	stw	r2,180(sp)
   51420:	bc400007 	ldb	r17,0(r23)
   51424:	003f5406 	br	51178 <__alt_data_end+0xfffd2978>
   51428:	bc400007 	ldb	r17,0(r23)
   5142c:	bac00044 	addi	r11,r23,1
   51430:	8a873926 	beq	r17,r10,53118 <___svfprintf_internal_r+0x20f0>
   51434:	88bff404 	addi	r2,r17,-48
   51438:	0009883a 	mov	r4,zero
   5143c:	30868836 	bltu	r6,r2,52e60 <___svfprintf_internal_r+0x1e38>
   51440:	5c400007 	ldb	r17,0(r11)
   51444:	210002a4 	muli	r4,r4,10
   51448:	5dc00044 	addi	r23,r11,1
   5144c:	b817883a 	mov	r11,r23
   51450:	2089883a 	add	r4,r4,r2
   51454:	88bff404 	addi	r2,r17,-48
   51458:	30bff92e 	bgeu	r6,r2,51440 <__alt_data_end+0xfffd2c40>
   5145c:	2005d716 	blt	r4,zero,52bbc <___svfprintf_internal_r+0x1b94>
   51460:	d9002915 	stw	r4,164(sp)
   51464:	003f4506 	br	5117c <__alt_data_end+0xfffd297c>
   51468:	b809883a 	mov	r4,r23
   5146c:	d8003115 	stw	zero,196(sp)
   51470:	88bff404 	addi	r2,r17,-48
   51474:	0017883a 	mov	r11,zero
   51478:	24400007 	ldb	r17,0(r4)
   5147c:	5ac002a4 	muli	r11,r11,10
   51480:	bdc00044 	addi	r23,r23,1
   51484:	b809883a 	mov	r4,r23
   51488:	12d7883a 	add	r11,r2,r11
   5148c:	88bff404 	addi	r2,r17,-48
   51490:	30bff92e 	bgeu	r6,r2,51478 <__alt_data_end+0xfffd2c78>
   51494:	dac03115 	stw	r11,196(sp)
   51498:	003f3806 	br	5117c <__alt_data_end+0xfffd297c>
   5149c:	94802014 	ori	r18,r18,128
   514a0:	bc400007 	ldb	r17,0(r23)
   514a4:	003f3406 	br	51178 <__alt_data_end+0xfffd2978>
   514a8:	18c03fcc 	andi	r3,r3,255
   514ac:	1807471e 	bne	r3,zero,531cc <___svfprintf_internal_r+0x21a4>
   514b0:	9080020c 	andi	r2,r18,8
   514b4:	10047d26 	beq	r2,zero,526ac <___svfprintf_internal_r+0x1684>
   514b8:	d8c02d17 	ldw	r3,180(sp)
   514bc:	d9002d17 	ldw	r4,180(sp)
   514c0:	d9402d17 	ldw	r5,180(sp)
   514c4:	18c00017 	ldw	r3,0(r3)
   514c8:	21000117 	ldw	r4,4(r4)
   514cc:	29400204 	addi	r5,r5,8
   514d0:	d8c03615 	stw	r3,216(sp)
   514d4:	d9003715 	stw	r4,220(sp)
   514d8:	d9402d15 	stw	r5,180(sp)
   514dc:	d9003617 	ldw	r4,216(sp)
   514e0:	d9403717 	ldw	r5,220(sp)
   514e4:	da003e15 	stw	r8,248(sp)
   514e8:	04000044 	movi	r16,1
   514ec:	004e9c40 	call	4e9c4 <__fpclassifyd>
   514f0:	da003e17 	ldw	r8,248(sp)
   514f4:	14044b1e 	bne	r2,r16,52624 <___svfprintf_internal_r+0x15fc>
   514f8:	d9003617 	ldw	r4,216(sp)
   514fc:	d9403717 	ldw	r5,220(sp)
   51500:	000d883a 	mov	r6,zero
   51504:	000f883a 	mov	r7,zero
   51508:	0043f880 	call	43f88 <__ledf2>
   5150c:	da003e17 	ldw	r8,248(sp)
   51510:	1005f316 	blt	r2,zero,52ce0 <___svfprintf_internal_r+0x1cb8>
   51514:	df002783 	ldbu	fp,158(sp)
   51518:	008011c4 	movi	r2,71
   5151c:	1445590e 	bge	r2,r17,52a84 <___svfprintf_internal_r+0x1a5c>
   51520:	040001b4 	movhi	r16,6
   51524:	842c8404 	addi	r16,r16,-19952
   51528:	00c000c4 	movi	r3,3
   5152c:	00bfdfc4 	movi	r2,-129
   51530:	d8c02a15 	stw	r3,168(sp)
   51534:	90a4703a 	and	r18,r18,r2
   51538:	d8c02e15 	stw	r3,184(sp)
   5153c:	d8002915 	stw	zero,164(sp)
   51540:	d8003215 	stw	zero,200(sp)
   51544:	00006606 	br	516e0 <___svfprintf_internal_r+0x6b8>
   51548:	94800214 	ori	r18,r18,8
   5154c:	bc400007 	ldb	r17,0(r23)
   51550:	003f0906 	br	51178 <__alt_data_end+0xfffd2978>
   51554:	18c03fcc 	andi	r3,r3,255
   51558:	1807181e 	bne	r3,zero,531bc <___svfprintf_internal_r+0x2194>
   5155c:	94800414 	ori	r18,r18,16
   51560:	9080080c 	andi	r2,r18,32
   51564:	10039626 	beq	r2,zero,523c0 <___svfprintf_internal_r+0x1398>
   51568:	d9402d17 	ldw	r5,180(sp)
   5156c:	28800117 	ldw	r2,4(r5)
   51570:	2d000017 	ldw	r20,0(r5)
   51574:	29400204 	addi	r5,r5,8
   51578:	d9402d15 	stw	r5,180(sp)
   5157c:	102d883a 	mov	r22,r2
   51580:	10039816 	blt	r2,zero,523e4 <___svfprintf_internal_r+0x13bc>
   51584:	d9402917 	ldw	r5,164(sp)
   51588:	df002783 	ldbu	fp,158(sp)
   5158c:	2803ab16 	blt	r5,zero,5243c <___svfprintf_internal_r+0x1414>
   51590:	00ffdfc4 	movi	r3,-129
   51594:	a584b03a 	or	r2,r20,r22
   51598:	90e4703a 	and	r18,r18,r3
   5159c:	10014a26 	beq	r2,zero,51ac8 <___svfprintf_internal_r+0xaa0>
   515a0:	b0034b26 	beq	r22,zero,522d0 <___svfprintf_internal_r+0x12a8>
   515a4:	dc402a15 	stw	r17,168(sp)
   515a8:	dc001e04 	addi	r16,sp,120
   515ac:	b023883a 	mov	r17,r22
   515b0:	402d883a 	mov	r22,r8
   515b4:	a009883a 	mov	r4,r20
   515b8:	880b883a 	mov	r5,r17
   515bc:	01800284 	movi	r6,10
   515c0:	000f883a 	mov	r7,zero
   515c4:	00579dc0 	call	579dc <__umoddi3>
   515c8:	10800c04 	addi	r2,r2,48
   515cc:	843fffc4 	addi	r16,r16,-1
   515d0:	a009883a 	mov	r4,r20
   515d4:	880b883a 	mov	r5,r17
   515d8:	80800005 	stb	r2,0(r16)
   515dc:	01800284 	movi	r6,10
   515e0:	000f883a 	mov	r7,zero
   515e4:	00574640 	call	57464 <__udivdi3>
   515e8:	1029883a 	mov	r20,r2
   515ec:	10c4b03a 	or	r2,r2,r3
   515f0:	1823883a 	mov	r17,r3
   515f4:	103fef1e 	bne	r2,zero,515b4 <__alt_data_end+0xfffd2db4>
   515f8:	d8c02817 	ldw	r3,160(sp)
   515fc:	dc402a17 	ldw	r17,168(sp)
   51600:	b011883a 	mov	r8,r22
   51604:	1c07c83a 	sub	r3,r3,r16
   51608:	d8c02e15 	stw	r3,184(sp)
   5160c:	00002e06 	br	516c8 <___svfprintf_internal_r+0x6a0>
   51610:	18c03fcc 	andi	r3,r3,255
   51614:	1806e71e 	bne	r3,zero,531b4 <___svfprintf_internal_r+0x218c>
   51618:	94800414 	ori	r18,r18,16
   5161c:	9080080c 	andi	r2,r18,32
   51620:	1002d426 	beq	r2,zero,52174 <___svfprintf_internal_r+0x114c>
   51624:	d9402d17 	ldw	r5,180(sp)
   51628:	d8c02917 	ldw	r3,164(sp)
   5162c:	d8002785 	stb	zero,158(sp)
   51630:	28800204 	addi	r2,r5,8
   51634:	2d000017 	ldw	r20,0(r5)
   51638:	2d800117 	ldw	r22,4(r5)
   5163c:	18041516 	blt	r3,zero,52694 <___svfprintf_internal_r+0x166c>
   51640:	013fdfc4 	movi	r4,-129
   51644:	a586b03a 	or	r3,r20,r22
   51648:	d8802d15 	stw	r2,180(sp)
   5164c:	9124703a 	and	r18,r18,r4
   51650:	1802d51e 	bne	r3,zero,521a8 <___svfprintf_internal_r+0x1180>
   51654:	d9402917 	ldw	r5,164(sp)
   51658:	0039883a 	mov	fp,zero
   5165c:	2806be26 	beq	r5,zero,53158 <___svfprintf_internal_r+0x2130>
   51660:	0029883a 	mov	r20,zero
   51664:	002d883a 	mov	r22,zero
   51668:	dc001e04 	addi	r16,sp,120
   5166c:	a006d0fa 	srli	r3,r20,3
   51670:	b008977a 	slli	r4,r22,29
   51674:	b02cd0fa 	srli	r22,r22,3
   51678:	a50001cc 	andi	r20,r20,7
   5167c:	a0800c04 	addi	r2,r20,48
   51680:	843fffc4 	addi	r16,r16,-1
   51684:	20e8b03a 	or	r20,r4,r3
   51688:	80800005 	stb	r2,0(r16)
   5168c:	a586b03a 	or	r3,r20,r22
   51690:	183ff61e 	bne	r3,zero,5166c <__alt_data_end+0xfffd2e6c>
   51694:	90c0004c 	andi	r3,r18,1
   51698:	18013926 	beq	r3,zero,51b80 <___svfprintf_internal_r+0xb58>
   5169c:	10803fcc 	andi	r2,r2,255
   516a0:	1080201c 	xori	r2,r2,128
   516a4:	10bfe004 	addi	r2,r2,-128
   516a8:	00c00c04 	movi	r3,48
   516ac:	10c13426 	beq	r2,r3,51b80 <___svfprintf_internal_r+0xb58>
   516b0:	80ffffc5 	stb	r3,-1(r16)
   516b4:	d8c02817 	ldw	r3,160(sp)
   516b8:	80bfffc4 	addi	r2,r16,-1
   516bc:	1021883a 	mov	r16,r2
   516c0:	1887c83a 	sub	r3,r3,r2
   516c4:	d8c02e15 	stw	r3,184(sp)
   516c8:	d8802e17 	ldw	r2,184(sp)
   516cc:	d9002917 	ldw	r4,164(sp)
   516d0:	1100010e 	bge	r2,r4,516d8 <___svfprintf_internal_r+0x6b0>
   516d4:	2005883a 	mov	r2,r4
   516d8:	d8802a15 	stw	r2,168(sp)
   516dc:	d8003215 	stw	zero,200(sp)
   516e0:	e7003fcc 	andi	fp,fp,255
   516e4:	e700201c 	xori	fp,fp,128
   516e8:	e73fe004 	addi	fp,fp,-128
   516ec:	e0000326 	beq	fp,zero,516fc <___svfprintf_internal_r+0x6d4>
   516f0:	d8c02a17 	ldw	r3,168(sp)
   516f4:	18c00044 	addi	r3,r3,1
   516f8:	d8c02a15 	stw	r3,168(sp)
   516fc:	90c0008c 	andi	r3,r18,2
   51700:	d8c02b15 	stw	r3,172(sp)
   51704:	18000326 	beq	r3,zero,51714 <___svfprintf_internal_r+0x6ec>
   51708:	d8c02a17 	ldw	r3,168(sp)
   5170c:	18c00084 	addi	r3,r3,2
   51710:	d8c02a15 	stw	r3,168(sp)
   51714:	90c0210c 	andi	r3,r18,132
   51718:	d8c03015 	stw	r3,192(sp)
   5171c:	1801a11e 	bne	r3,zero,51da4 <___svfprintf_internal_r+0xd7c>
   51720:	d9003117 	ldw	r4,196(sp)
   51724:	d8c02a17 	ldw	r3,168(sp)
   51728:	20e9c83a 	sub	r20,r4,r3
   5172c:	05019d0e 	bge	zero,r20,51da4 <___svfprintf_internal_r+0xd7c>
   51730:	02400404 	movi	r9,16
   51734:	d8c02017 	ldw	r3,128(sp)
   51738:	d8801f17 	ldw	r2,124(sp)
   5173c:	4d051b0e 	bge	r9,r20,52bac <___svfprintf_internal_r+0x1b84>
   51740:	014001b4 	movhi	r5,6
   51744:	296db404 	addi	r5,r5,-18736
   51748:	dc403c15 	stw	r17,240(sp)
   5174c:	d9403515 	stw	r5,212(sp)
   51750:	a023883a 	mov	r17,r20
   51754:	482d883a 	mov	r22,r9
   51758:	9029883a 	mov	r20,r18
   5175c:	070001c4 	movi	fp,7
   51760:	8025883a 	mov	r18,r16
   51764:	dc002c17 	ldw	r16,176(sp)
   51768:	00000306 	br	51778 <___svfprintf_internal_r+0x750>
   5176c:	8c7ffc04 	addi	r17,r17,-16
   51770:	42000204 	addi	r8,r8,8
   51774:	b440130e 	bge	r22,r17,517c4 <___svfprintf_internal_r+0x79c>
   51778:	010001b4 	movhi	r4,6
   5177c:	18c00404 	addi	r3,r3,16
   51780:	10800044 	addi	r2,r2,1
   51784:	212db404 	addi	r4,r4,-18736
   51788:	41000015 	stw	r4,0(r8)
   5178c:	45800115 	stw	r22,4(r8)
   51790:	d8c02015 	stw	r3,128(sp)
   51794:	d8801f15 	stw	r2,124(sp)
   51798:	e0bff40e 	bge	fp,r2,5176c <__alt_data_end+0xfffd2f6c>
   5179c:	d9801e04 	addi	r6,sp,120
   517a0:	800b883a 	mov	r5,r16
   517a4:	9809883a 	mov	r4,r19
   517a8:	0055d180 	call	55d18 <__ssprint_r>
   517ac:	103f031e 	bne	r2,zero,513bc <__alt_data_end+0xfffd2bbc>
   517b0:	8c7ffc04 	addi	r17,r17,-16
   517b4:	d8c02017 	ldw	r3,128(sp)
   517b8:	d8801f17 	ldw	r2,124(sp)
   517bc:	da000404 	addi	r8,sp,16
   517c0:	b47fed16 	blt	r22,r17,51778 <__alt_data_end+0xfffd2f78>
   517c4:	9021883a 	mov	r16,r18
   517c8:	a025883a 	mov	r18,r20
   517cc:	8829883a 	mov	r20,r17
   517d0:	dc403c17 	ldw	r17,240(sp)
   517d4:	d9403517 	ldw	r5,212(sp)
   517d8:	a0c7883a 	add	r3,r20,r3
   517dc:	10800044 	addi	r2,r2,1
   517e0:	41400015 	stw	r5,0(r8)
   517e4:	45000115 	stw	r20,4(r8)
   517e8:	d8c02015 	stw	r3,128(sp)
   517ec:	d8801f15 	stw	r2,124(sp)
   517f0:	010001c4 	movi	r4,7
   517f4:	20829f16 	blt	r4,r2,52274 <___svfprintf_internal_r+0x124c>
   517f8:	df002787 	ldb	fp,158(sp)
   517fc:	42000204 	addi	r8,r8,8
   51800:	e0000c26 	beq	fp,zero,51834 <___svfprintf_internal_r+0x80c>
   51804:	d8801f17 	ldw	r2,124(sp)
   51808:	d9002784 	addi	r4,sp,158
   5180c:	18c00044 	addi	r3,r3,1
   51810:	10800044 	addi	r2,r2,1
   51814:	41000015 	stw	r4,0(r8)
   51818:	01000044 	movi	r4,1
   5181c:	41000115 	stw	r4,4(r8)
   51820:	d8c02015 	stw	r3,128(sp)
   51824:	d8801f15 	stw	r2,124(sp)
   51828:	010001c4 	movi	r4,7
   5182c:	20823816 	blt	r4,r2,52110 <___svfprintf_internal_r+0x10e8>
   51830:	42000204 	addi	r8,r8,8
   51834:	d8802b17 	ldw	r2,172(sp)
   51838:	10000c26 	beq	r2,zero,5186c <___svfprintf_internal_r+0x844>
   5183c:	d8801f17 	ldw	r2,124(sp)
   51840:	d9002704 	addi	r4,sp,156
   51844:	18c00084 	addi	r3,r3,2
   51848:	10800044 	addi	r2,r2,1
   5184c:	41000015 	stw	r4,0(r8)
   51850:	01000084 	movi	r4,2
   51854:	41000115 	stw	r4,4(r8)
   51858:	d8c02015 	stw	r3,128(sp)
   5185c:	d8801f15 	stw	r2,124(sp)
   51860:	010001c4 	movi	r4,7
   51864:	20823216 	blt	r4,r2,52130 <___svfprintf_internal_r+0x1108>
   51868:	42000204 	addi	r8,r8,8
   5186c:	d9003017 	ldw	r4,192(sp)
   51870:	00802004 	movi	r2,128
   51874:	20819726 	beq	r4,r2,51ed4 <___svfprintf_internal_r+0xeac>
   51878:	d9402917 	ldw	r5,164(sp)
   5187c:	d8802e17 	ldw	r2,184(sp)
   51880:	28adc83a 	sub	r22,r5,r2
   51884:	05802f0e 	bge	zero,r22,51944 <___svfprintf_internal_r+0x91c>
   51888:	07000404 	movi	fp,16
   5188c:	d8801f17 	ldw	r2,124(sp)
   51890:	e583c00e 	bge	fp,r22,52794 <___svfprintf_internal_r+0x176c>
   51894:	014001b4 	movhi	r5,6
   51898:	296db004 	addi	r5,r5,-18752
   5189c:	dc402915 	stw	r17,164(sp)
   518a0:	d9402b15 	stw	r5,172(sp)
   518a4:	b023883a 	mov	r17,r22
   518a8:	050001c4 	movi	r20,7
   518ac:	902d883a 	mov	r22,r18
   518b0:	8025883a 	mov	r18,r16
   518b4:	dc002c17 	ldw	r16,176(sp)
   518b8:	00000306 	br	518c8 <___svfprintf_internal_r+0x8a0>
   518bc:	8c7ffc04 	addi	r17,r17,-16
   518c0:	42000204 	addi	r8,r8,8
   518c4:	e440110e 	bge	fp,r17,5190c <___svfprintf_internal_r+0x8e4>
   518c8:	18c00404 	addi	r3,r3,16
   518cc:	10800044 	addi	r2,r2,1
   518d0:	45400015 	stw	r21,0(r8)
   518d4:	47000115 	stw	fp,4(r8)
   518d8:	d8c02015 	stw	r3,128(sp)
   518dc:	d8801f15 	stw	r2,124(sp)
   518e0:	a0bff60e 	bge	r20,r2,518bc <__alt_data_end+0xfffd30bc>
   518e4:	d9801e04 	addi	r6,sp,120
   518e8:	800b883a 	mov	r5,r16
   518ec:	9809883a 	mov	r4,r19
   518f0:	0055d180 	call	55d18 <__ssprint_r>
   518f4:	103eb11e 	bne	r2,zero,513bc <__alt_data_end+0xfffd2bbc>
   518f8:	8c7ffc04 	addi	r17,r17,-16
   518fc:	d8c02017 	ldw	r3,128(sp)
   51900:	d8801f17 	ldw	r2,124(sp)
   51904:	da000404 	addi	r8,sp,16
   51908:	e47fef16 	blt	fp,r17,518c8 <__alt_data_end+0xfffd30c8>
   5190c:	9021883a 	mov	r16,r18
   51910:	b025883a 	mov	r18,r22
   51914:	882d883a 	mov	r22,r17
   51918:	dc402917 	ldw	r17,164(sp)
   5191c:	d9002b17 	ldw	r4,172(sp)
   51920:	1d87883a 	add	r3,r3,r22
   51924:	10800044 	addi	r2,r2,1
   51928:	41000015 	stw	r4,0(r8)
   5192c:	45800115 	stw	r22,4(r8)
   51930:	d8c02015 	stw	r3,128(sp)
   51934:	d8801f15 	stw	r2,124(sp)
   51938:	010001c4 	movi	r4,7
   5193c:	2081ec16 	blt	r4,r2,520f0 <___svfprintf_internal_r+0x10c8>
   51940:	42000204 	addi	r8,r8,8
   51944:	9080400c 	andi	r2,r18,256
   51948:	1001181e 	bne	r2,zero,51dac <___svfprintf_internal_r+0xd84>
   5194c:	d9402e17 	ldw	r5,184(sp)
   51950:	d8801f17 	ldw	r2,124(sp)
   51954:	44000015 	stw	r16,0(r8)
   51958:	1947883a 	add	r3,r3,r5
   5195c:	10800044 	addi	r2,r2,1
   51960:	41400115 	stw	r5,4(r8)
   51964:	d8c02015 	stw	r3,128(sp)
   51968:	d8801f15 	stw	r2,124(sp)
   5196c:	010001c4 	movi	r4,7
   51970:	2081d116 	blt	r4,r2,520b8 <___svfprintf_internal_r+0x1090>
   51974:	42000204 	addi	r8,r8,8
   51978:	9480010c 	andi	r18,r18,4
   5197c:	90003226 	beq	r18,zero,51a48 <___svfprintf_internal_r+0xa20>
   51980:	d9403117 	ldw	r5,196(sp)
   51984:	d8802a17 	ldw	r2,168(sp)
   51988:	28a1c83a 	sub	r16,r5,r2
   5198c:	04002e0e 	bge	zero,r16,51a48 <___svfprintf_internal_r+0xa20>
   51990:	04400404 	movi	r17,16
   51994:	d8801f17 	ldw	r2,124(sp)
   51998:	8c04b90e 	bge	r17,r16,52c80 <___svfprintf_internal_r+0x1c58>
   5199c:	014001b4 	movhi	r5,6
   519a0:	296db404 	addi	r5,r5,-18736
   519a4:	d9403515 	stw	r5,212(sp)
   519a8:	048001c4 	movi	r18,7
   519ac:	dd002c17 	ldw	r20,176(sp)
   519b0:	00000306 	br	519c0 <___svfprintf_internal_r+0x998>
   519b4:	843ffc04 	addi	r16,r16,-16
   519b8:	42000204 	addi	r8,r8,8
   519bc:	8c00130e 	bge	r17,r16,51a0c <___svfprintf_internal_r+0x9e4>
   519c0:	010001b4 	movhi	r4,6
   519c4:	18c00404 	addi	r3,r3,16
   519c8:	10800044 	addi	r2,r2,1
   519cc:	212db404 	addi	r4,r4,-18736
   519d0:	41000015 	stw	r4,0(r8)
   519d4:	44400115 	stw	r17,4(r8)
   519d8:	d8c02015 	stw	r3,128(sp)
   519dc:	d8801f15 	stw	r2,124(sp)
   519e0:	90bff40e 	bge	r18,r2,519b4 <__alt_data_end+0xfffd31b4>
   519e4:	d9801e04 	addi	r6,sp,120
   519e8:	a00b883a 	mov	r5,r20
   519ec:	9809883a 	mov	r4,r19
   519f0:	0055d180 	call	55d18 <__ssprint_r>
   519f4:	103e711e 	bne	r2,zero,513bc <__alt_data_end+0xfffd2bbc>
   519f8:	843ffc04 	addi	r16,r16,-16
   519fc:	d8c02017 	ldw	r3,128(sp)
   51a00:	d8801f17 	ldw	r2,124(sp)
   51a04:	da000404 	addi	r8,sp,16
   51a08:	8c3fed16 	blt	r17,r16,519c0 <__alt_data_end+0xfffd31c0>
   51a0c:	d9403517 	ldw	r5,212(sp)
   51a10:	1c07883a 	add	r3,r3,r16
   51a14:	10800044 	addi	r2,r2,1
   51a18:	41400015 	stw	r5,0(r8)
   51a1c:	44000115 	stw	r16,4(r8)
   51a20:	d8c02015 	stw	r3,128(sp)
   51a24:	d8801f15 	stw	r2,124(sp)
   51a28:	010001c4 	movi	r4,7
   51a2c:	2080060e 	bge	r4,r2,51a48 <___svfprintf_internal_r+0xa20>
   51a30:	d9402c17 	ldw	r5,176(sp)
   51a34:	d9801e04 	addi	r6,sp,120
   51a38:	9809883a 	mov	r4,r19
   51a3c:	0055d180 	call	55d18 <__ssprint_r>
   51a40:	103e5e1e 	bne	r2,zero,513bc <__alt_data_end+0xfffd2bbc>
   51a44:	d8c02017 	ldw	r3,128(sp)
   51a48:	d8803117 	ldw	r2,196(sp)
   51a4c:	d9002a17 	ldw	r4,168(sp)
   51a50:	1100010e 	bge	r2,r4,51a58 <___svfprintf_internal_r+0xa30>
   51a54:	2005883a 	mov	r2,r4
   51a58:	d9402f17 	ldw	r5,188(sp)
   51a5c:	288b883a 	add	r5,r5,r2
   51a60:	d9402f15 	stw	r5,188(sp)
   51a64:	18019c1e 	bne	r3,zero,520d8 <___svfprintf_internal_r+0x10b0>
   51a68:	b8800007 	ldb	r2,0(r23)
   51a6c:	d8001f15 	stw	zero,124(sp)
   51a70:	da000404 	addi	r8,sp,16
   51a74:	103d991e 	bne	r2,zero,510dc <__alt_data_end+0xfffd28dc>
   51a78:	b821883a 	mov	r16,r23
   51a7c:	003daf06 	br	5113c <__alt_data_end+0xfffd293c>
   51a80:	18c03fcc 	andi	r3,r3,255
   51a84:	1805c71e 	bne	r3,zero,531a4 <___svfprintf_internal_r+0x217c>
   51a88:	94800414 	ori	r18,r18,16
   51a8c:	9080080c 	andi	r2,r18,32
   51a90:	10020126 	beq	r2,zero,52298 <___svfprintf_internal_r+0x1270>
   51a94:	d8802d17 	ldw	r2,180(sp)
   51a98:	d9002917 	ldw	r4,164(sp)
   51a9c:	d8002785 	stb	zero,158(sp)
   51aa0:	10c00204 	addi	r3,r2,8
   51aa4:	15000017 	ldw	r20,0(r2)
   51aa8:	15800117 	ldw	r22,4(r2)
   51aac:	20038e16 	blt	r4,zero,528e8 <___svfprintf_internal_r+0x18c0>
   51ab0:	013fdfc4 	movi	r4,-129
   51ab4:	a584b03a 	or	r2,r20,r22
   51ab8:	d8c02d15 	stw	r3,180(sp)
   51abc:	9124703a 	and	r18,r18,r4
   51ac0:	0039883a 	mov	fp,zero
   51ac4:	103eb61e 	bne	r2,zero,515a0 <__alt_data_end+0xfffd2da0>
   51ac8:	d8802917 	ldw	r2,164(sp)
   51acc:	1002c81e 	bne	r2,zero,525f0 <___svfprintf_internal_r+0x15c8>
   51ad0:	d8002915 	stw	zero,164(sp)
   51ad4:	d8002e15 	stw	zero,184(sp)
   51ad8:	dc001e04 	addi	r16,sp,120
   51adc:	003efa06 	br	516c8 <__alt_data_end+0xfffd2ec8>
   51ae0:	18c03fcc 	andi	r3,r3,255
   51ae4:	1805ad1e 	bne	r3,zero,5319c <___svfprintf_internal_r+0x2174>
   51ae8:	014001b4 	movhi	r5,6
   51aec:	296c8704 	addi	r5,r5,-19940
   51af0:	d9403a15 	stw	r5,232(sp)
   51af4:	9080080c 	andi	r2,r18,32
   51af8:	10006126 	beq	r2,zero,51c80 <___svfprintf_internal_r+0xc58>
   51afc:	d8802d17 	ldw	r2,180(sp)
   51b00:	15000017 	ldw	r20,0(r2)
   51b04:	15800117 	ldw	r22,4(r2)
   51b08:	10800204 	addi	r2,r2,8
   51b0c:	d8802d15 	stw	r2,180(sp)
   51b10:	9080004c 	andi	r2,r18,1
   51b14:	10018e26 	beq	r2,zero,52150 <___svfprintf_internal_r+0x1128>
   51b18:	a584b03a 	or	r2,r20,r22
   51b1c:	10030926 	beq	r2,zero,52744 <___svfprintf_internal_r+0x171c>
   51b20:	d8c02917 	ldw	r3,164(sp)
   51b24:	00800c04 	movi	r2,48
   51b28:	d8802705 	stb	r2,156(sp)
   51b2c:	dc402745 	stb	r17,157(sp)
   51b30:	d8002785 	stb	zero,158(sp)
   51b34:	90800094 	ori	r2,r18,2
   51b38:	18048716 	blt	r3,zero,52d58 <___svfprintf_internal_r+0x1d30>
   51b3c:	00bfdfc4 	movi	r2,-129
   51b40:	90a4703a 	and	r18,r18,r2
   51b44:	94800094 	ori	r18,r18,2
   51b48:	0039883a 	mov	fp,zero
   51b4c:	d9003a17 	ldw	r4,232(sp)
   51b50:	dc001e04 	addi	r16,sp,120
   51b54:	a08003cc 	andi	r2,r20,15
   51b58:	b006973a 	slli	r3,r22,28
   51b5c:	2085883a 	add	r2,r4,r2
   51b60:	a028d13a 	srli	r20,r20,4
   51b64:	10800003 	ldbu	r2,0(r2)
   51b68:	b02cd13a 	srli	r22,r22,4
   51b6c:	843fffc4 	addi	r16,r16,-1
   51b70:	1d28b03a 	or	r20,r3,r20
   51b74:	80800005 	stb	r2,0(r16)
   51b78:	a584b03a 	or	r2,r20,r22
   51b7c:	103ff51e 	bne	r2,zero,51b54 <__alt_data_end+0xfffd3354>
   51b80:	d8c02817 	ldw	r3,160(sp)
   51b84:	1c07c83a 	sub	r3,r3,r16
   51b88:	d8c02e15 	stw	r3,184(sp)
   51b8c:	003ece06 	br	516c8 <__alt_data_end+0xfffd2ec8>
   51b90:	d8c02d17 	ldw	r3,180(sp)
   51b94:	d9002d17 	ldw	r4,180(sp)
   51b98:	d8002785 	stb	zero,158(sp)
   51b9c:	18800017 	ldw	r2,0(r3)
   51ba0:	21000104 	addi	r4,r4,4
   51ba4:	00c00044 	movi	r3,1
   51ba8:	d8c02a15 	stw	r3,168(sp)
   51bac:	d8801405 	stb	r2,80(sp)
   51bb0:	d9002d15 	stw	r4,180(sp)
   51bb4:	d8c02e15 	stw	r3,184(sp)
   51bb8:	d8002915 	stw	zero,164(sp)
   51bbc:	d8003215 	stw	zero,200(sp)
   51bc0:	dc001404 	addi	r16,sp,80
   51bc4:	0039883a 	mov	fp,zero
   51bc8:	003ecc06 	br	516fc <__alt_data_end+0xfffd2efc>
   51bcc:	18c03fcc 	andi	r3,r3,255
   51bd0:	183e9226 	beq	r3,zero,5161c <__alt_data_end+0xfffd2e1c>
   51bd4:	d9c02785 	stb	r7,158(sp)
   51bd8:	003e9006 	br	5161c <__alt_data_end+0xfffd2e1c>
   51bdc:	00c00044 	movi	r3,1
   51be0:	01c00ac4 	movi	r7,43
   51be4:	bc400007 	ldb	r17,0(r23)
   51be8:	003d6306 	br	51178 <__alt_data_end+0xfffd2978>
   51bec:	94800814 	ori	r18,r18,32
   51bf0:	bc400007 	ldb	r17,0(r23)
   51bf4:	003d6006 	br	51178 <__alt_data_end+0xfffd2978>
   51bf8:	d8c02d17 	ldw	r3,180(sp)
   51bfc:	d8002785 	stb	zero,158(sp)
   51c00:	1c000017 	ldw	r16,0(r3)
   51c04:	1d000104 	addi	r20,r3,4
   51c08:	80040f26 	beq	r16,zero,52c48 <___svfprintf_internal_r+0x1c20>
   51c0c:	d9002917 	ldw	r4,164(sp)
   51c10:	2003dc16 	blt	r4,zero,52b84 <___svfprintf_internal_r+0x1b5c>
   51c14:	200d883a 	mov	r6,r4
   51c18:	000b883a 	mov	r5,zero
   51c1c:	8009883a 	mov	r4,r16
   51c20:	da003e15 	stw	r8,248(sp)
   51c24:	004cf0c0 	call	4cf0c <memchr>
   51c28:	da003e17 	ldw	r8,248(sp)
   51c2c:	10045826 	beq	r2,zero,52d90 <___svfprintf_internal_r+0x1d68>
   51c30:	1405c83a 	sub	r2,r2,r16
   51c34:	d8802e15 	stw	r2,184(sp)
   51c38:	1003d816 	blt	r2,zero,52b9c <___svfprintf_internal_r+0x1b74>
   51c3c:	df002783 	ldbu	fp,158(sp)
   51c40:	d8802a15 	stw	r2,168(sp)
   51c44:	dd002d15 	stw	r20,180(sp)
   51c48:	d8002915 	stw	zero,164(sp)
   51c4c:	d8003215 	stw	zero,200(sp)
   51c50:	003ea306 	br	516e0 <__alt_data_end+0xfffd2ee0>
   51c54:	18c03fcc 	andi	r3,r3,255
   51c58:	183f8c26 	beq	r3,zero,51a8c <__alt_data_end+0xfffd328c>
   51c5c:	d9c02785 	stb	r7,158(sp)
   51c60:	003f8a06 	br	51a8c <__alt_data_end+0xfffd328c>
   51c64:	18c03fcc 	andi	r3,r3,255
   51c68:	1805631e 	bne	r3,zero,531f8 <___svfprintf_internal_r+0x21d0>
   51c6c:	014001b4 	movhi	r5,6
   51c70:	296c8c04 	addi	r5,r5,-19920
   51c74:	d9403a15 	stw	r5,232(sp)
   51c78:	9080080c 	andi	r2,r18,32
   51c7c:	103f9f1e 	bne	r2,zero,51afc <__alt_data_end+0xfffd32fc>
   51c80:	9080040c 	andi	r2,r18,16
   51c84:	10029c26 	beq	r2,zero,526f8 <___svfprintf_internal_r+0x16d0>
   51c88:	d8c02d17 	ldw	r3,180(sp)
   51c8c:	002d883a 	mov	r22,zero
   51c90:	1d000017 	ldw	r20,0(r3)
   51c94:	18c00104 	addi	r3,r3,4
   51c98:	d8c02d15 	stw	r3,180(sp)
   51c9c:	003f9c06 	br	51b10 <__alt_data_end+0xfffd3310>
   51ca0:	94800054 	ori	r18,r18,1
   51ca4:	bc400007 	ldb	r17,0(r23)
   51ca8:	003d3306 	br	51178 <__alt_data_end+0xfffd2978>
   51cac:	38803fcc 	andi	r2,r7,255
   51cb0:	1080201c 	xori	r2,r2,128
   51cb4:	10bfe004 	addi	r2,r2,-128
   51cb8:	1002971e 	bne	r2,zero,52718 <___svfprintf_internal_r+0x16f0>
   51cbc:	00c00044 	movi	r3,1
   51cc0:	01c00804 	movi	r7,32
   51cc4:	bc400007 	ldb	r17,0(r23)
   51cc8:	003d2b06 	br	51178 <__alt_data_end+0xfffd2978>
   51ccc:	18c03fcc 	andi	r3,r3,255
   51cd0:	183e2326 	beq	r3,zero,51560 <__alt_data_end+0xfffd2d60>
   51cd4:	d9c02785 	stb	r7,158(sp)
   51cd8:	003e2106 	br	51560 <__alt_data_end+0xfffd2d60>
   51cdc:	bc400007 	ldb	r17,0(r23)
   51ce0:	8a430426 	beq	r17,r9,528f4 <___svfprintf_internal_r+0x18cc>
   51ce4:	94800414 	ori	r18,r18,16
   51ce8:	003d2306 	br	51178 <__alt_data_end+0xfffd2978>
   51cec:	18c03fcc 	andi	r3,r3,255
   51cf0:	18053f1e 	bne	r3,zero,531f0 <___svfprintf_internal_r+0x21c8>
   51cf4:	9080080c 	andi	r2,r18,32
   51cf8:	10028926 	beq	r2,zero,52720 <___svfprintf_internal_r+0x16f8>
   51cfc:	d9402d17 	ldw	r5,180(sp)
   51d00:	d9002f17 	ldw	r4,188(sp)
   51d04:	28800017 	ldw	r2,0(r5)
   51d08:	2007d7fa 	srai	r3,r4,31
   51d0c:	29400104 	addi	r5,r5,4
   51d10:	d9402d15 	stw	r5,180(sp)
   51d14:	11000015 	stw	r4,0(r2)
   51d18:	10c00115 	stw	r3,4(r2)
   51d1c:	003ced06 	br	510d4 <__alt_data_end+0xfffd28d4>
   51d20:	94801014 	ori	r18,r18,64
   51d24:	bc400007 	ldb	r17,0(r23)
   51d28:	003d1306 	br	51178 <__alt_data_end+0xfffd2978>
   51d2c:	010001b4 	movhi	r4,6
   51d30:	212c8c04 	addi	r4,r4,-19920
   51d34:	0039883a 	mov	fp,zero
   51d38:	d9003a15 	stw	r4,232(sp)
   51d3c:	04401e04 	movi	r17,120
   51d40:	003f8206 	br	51b4c <__alt_data_end+0xfffd334c>
   51d44:	18c03fcc 	andi	r3,r3,255
   51d48:	1805221e 	bne	r3,zero,531d4 <___svfprintf_internal_r+0x21ac>
   51d4c:	883d9526 	beq	r17,zero,513a4 <__alt_data_end+0xfffd2ba4>
   51d50:	00c00044 	movi	r3,1
   51d54:	d8c02a15 	stw	r3,168(sp)
   51d58:	dc401405 	stb	r17,80(sp)
   51d5c:	d8002785 	stb	zero,158(sp)
   51d60:	003f9406 	br	51bb4 <__alt_data_end+0xfffd33b4>
   51d64:	010001b4 	movhi	r4,6
   51d68:	212c8c04 	addi	r4,r4,-19920
   51d6c:	d9003a15 	stw	r4,232(sp)
   51d70:	d8c02d15 	stw	r3,180(sp)
   51d74:	1025883a 	mov	r18,r2
   51d78:	04401e04 	movi	r17,120
   51d7c:	a584b03a 	or	r2,r20,r22
   51d80:	1000fa1e 	bne	r2,zero,5216c <___svfprintf_internal_r+0x1144>
   51d84:	0039883a 	mov	fp,zero
   51d88:	00800084 	movi	r2,2
   51d8c:	10803fcc 	andi	r2,r2,255
   51d90:	00c00044 	movi	r3,1
   51d94:	10c21626 	beq	r2,r3,525f0 <___svfprintf_internal_r+0x15c8>
   51d98:	00c00084 	movi	r3,2
   51d9c:	10fe301e 	bne	r2,r3,51660 <__alt_data_end+0xfffd2e60>
   51da0:	003d7606 	br	5137c <__alt_data_end+0xfffd2b7c>
   51da4:	d8c02017 	ldw	r3,128(sp)
   51da8:	003e9506 	br	51800 <__alt_data_end+0xfffd3000>
   51dac:	00801944 	movi	r2,101
   51db0:	14407c0e 	bge	r2,r17,51fa4 <___svfprintf_internal_r+0xf7c>
   51db4:	d9003617 	ldw	r4,216(sp)
   51db8:	d9403717 	ldw	r5,220(sp)
   51dbc:	000d883a 	mov	r6,zero
   51dc0:	000f883a 	mov	r7,zero
   51dc4:	d8c03d15 	stw	r3,244(sp)
   51dc8:	da003e15 	stw	r8,248(sp)
   51dcc:	00581100 	call	58110 <__eqdf2>
   51dd0:	d8c03d17 	ldw	r3,244(sp)
   51dd4:	da003e17 	ldw	r8,248(sp)
   51dd8:	1000f51e 	bne	r2,zero,521b0 <___svfprintf_internal_r+0x1188>
   51ddc:	d8801f17 	ldw	r2,124(sp)
   51de0:	010001b4 	movhi	r4,6
   51de4:	212c9304 	addi	r4,r4,-19892
   51de8:	18c00044 	addi	r3,r3,1
   51dec:	10800044 	addi	r2,r2,1
   51df0:	41000015 	stw	r4,0(r8)
   51df4:	01000044 	movi	r4,1
   51df8:	41000115 	stw	r4,4(r8)
   51dfc:	d8c02015 	stw	r3,128(sp)
   51e00:	d8801f15 	stw	r2,124(sp)
   51e04:	010001c4 	movi	r4,7
   51e08:	20826616 	blt	r4,r2,527a4 <___svfprintf_internal_r+0x177c>
   51e0c:	42000204 	addi	r8,r8,8
   51e10:	d8802617 	ldw	r2,152(sp)
   51e14:	d9403317 	ldw	r5,204(sp)
   51e18:	11400216 	blt	r2,r5,51e24 <___svfprintf_internal_r+0xdfc>
   51e1c:	9080004c 	andi	r2,r18,1
   51e20:	103ed526 	beq	r2,zero,51978 <__alt_data_end+0xfffd3178>
   51e24:	d8803817 	ldw	r2,224(sp)
   51e28:	d9003417 	ldw	r4,208(sp)
   51e2c:	d9403817 	ldw	r5,224(sp)
   51e30:	1887883a 	add	r3,r3,r2
   51e34:	d8801f17 	ldw	r2,124(sp)
   51e38:	41000015 	stw	r4,0(r8)
   51e3c:	41400115 	stw	r5,4(r8)
   51e40:	10800044 	addi	r2,r2,1
   51e44:	d8c02015 	stw	r3,128(sp)
   51e48:	d8801f15 	stw	r2,124(sp)
   51e4c:	010001c4 	movi	r4,7
   51e50:	2082af16 	blt	r4,r2,52910 <___svfprintf_internal_r+0x18e8>
   51e54:	42000204 	addi	r8,r8,8
   51e58:	d8803317 	ldw	r2,204(sp)
   51e5c:	143fffc4 	addi	r16,r2,-1
   51e60:	043ec50e 	bge	zero,r16,51978 <__alt_data_end+0xfffd3178>
   51e64:	04400404 	movi	r17,16
   51e68:	d8801f17 	ldw	r2,124(sp)
   51e6c:	8c00860e 	bge	r17,r16,52088 <___svfprintf_internal_r+0x1060>
   51e70:	014001b4 	movhi	r5,6
   51e74:	296db004 	addi	r5,r5,-18752
   51e78:	d9402b15 	stw	r5,172(sp)
   51e7c:	058001c4 	movi	r22,7
   51e80:	dd002c17 	ldw	r20,176(sp)
   51e84:	00000306 	br	51e94 <___svfprintf_internal_r+0xe6c>
   51e88:	42000204 	addi	r8,r8,8
   51e8c:	843ffc04 	addi	r16,r16,-16
   51e90:	8c00800e 	bge	r17,r16,52094 <___svfprintf_internal_r+0x106c>
   51e94:	18c00404 	addi	r3,r3,16
   51e98:	10800044 	addi	r2,r2,1
   51e9c:	45400015 	stw	r21,0(r8)
   51ea0:	44400115 	stw	r17,4(r8)
   51ea4:	d8c02015 	stw	r3,128(sp)
   51ea8:	d8801f15 	stw	r2,124(sp)
   51eac:	b0bff60e 	bge	r22,r2,51e88 <__alt_data_end+0xfffd3688>
   51eb0:	d9801e04 	addi	r6,sp,120
   51eb4:	a00b883a 	mov	r5,r20
   51eb8:	9809883a 	mov	r4,r19
   51ebc:	0055d180 	call	55d18 <__ssprint_r>
   51ec0:	103d3e1e 	bne	r2,zero,513bc <__alt_data_end+0xfffd2bbc>
   51ec4:	d8c02017 	ldw	r3,128(sp)
   51ec8:	d8801f17 	ldw	r2,124(sp)
   51ecc:	da000404 	addi	r8,sp,16
   51ed0:	003fee06 	br	51e8c <__alt_data_end+0xfffd368c>
   51ed4:	d9403117 	ldw	r5,196(sp)
   51ed8:	d8802a17 	ldw	r2,168(sp)
   51edc:	28adc83a 	sub	r22,r5,r2
   51ee0:	05be650e 	bge	zero,r22,51878 <__alt_data_end+0xfffd3078>
   51ee4:	07000404 	movi	fp,16
   51ee8:	d8801f17 	ldw	r2,124(sp)
   51eec:	e583a20e 	bge	fp,r22,52d78 <___svfprintf_internal_r+0x1d50>
   51ef0:	014001b4 	movhi	r5,6
   51ef4:	296db004 	addi	r5,r5,-18752
   51ef8:	dc403015 	stw	r17,192(sp)
   51efc:	d9402b15 	stw	r5,172(sp)
   51f00:	b023883a 	mov	r17,r22
   51f04:	050001c4 	movi	r20,7
   51f08:	902d883a 	mov	r22,r18
   51f0c:	8025883a 	mov	r18,r16
   51f10:	dc002c17 	ldw	r16,176(sp)
   51f14:	00000306 	br	51f24 <___svfprintf_internal_r+0xefc>
   51f18:	8c7ffc04 	addi	r17,r17,-16
   51f1c:	42000204 	addi	r8,r8,8
   51f20:	e440110e 	bge	fp,r17,51f68 <___svfprintf_internal_r+0xf40>
   51f24:	18c00404 	addi	r3,r3,16
   51f28:	10800044 	addi	r2,r2,1
   51f2c:	45400015 	stw	r21,0(r8)
   51f30:	47000115 	stw	fp,4(r8)
   51f34:	d8c02015 	stw	r3,128(sp)
   51f38:	d8801f15 	stw	r2,124(sp)
   51f3c:	a0bff60e 	bge	r20,r2,51f18 <__alt_data_end+0xfffd3718>
   51f40:	d9801e04 	addi	r6,sp,120
   51f44:	800b883a 	mov	r5,r16
   51f48:	9809883a 	mov	r4,r19
   51f4c:	0055d180 	call	55d18 <__ssprint_r>
   51f50:	103d1a1e 	bne	r2,zero,513bc <__alt_data_end+0xfffd2bbc>
   51f54:	8c7ffc04 	addi	r17,r17,-16
   51f58:	d8c02017 	ldw	r3,128(sp)
   51f5c:	d8801f17 	ldw	r2,124(sp)
   51f60:	da000404 	addi	r8,sp,16
   51f64:	e47fef16 	blt	fp,r17,51f24 <__alt_data_end+0xfffd3724>
   51f68:	9021883a 	mov	r16,r18
   51f6c:	b025883a 	mov	r18,r22
   51f70:	882d883a 	mov	r22,r17
   51f74:	dc403017 	ldw	r17,192(sp)
   51f78:	d9002b17 	ldw	r4,172(sp)
   51f7c:	1d87883a 	add	r3,r3,r22
   51f80:	10800044 	addi	r2,r2,1
   51f84:	41000015 	stw	r4,0(r8)
   51f88:	45800115 	stw	r22,4(r8)
   51f8c:	d8c02015 	stw	r3,128(sp)
   51f90:	d8801f15 	stw	r2,124(sp)
   51f94:	010001c4 	movi	r4,7
   51f98:	20819a16 	blt	r4,r2,52604 <___svfprintf_internal_r+0x15dc>
   51f9c:	42000204 	addi	r8,r8,8
   51fa0:	003e3506 	br	51878 <__alt_data_end+0xfffd3078>
   51fa4:	d9403317 	ldw	r5,204(sp)
   51fa8:	00800044 	movi	r2,1
   51fac:	18c00044 	addi	r3,r3,1
   51fb0:	1141710e 	bge	r2,r5,52578 <___svfprintf_internal_r+0x1550>
   51fb4:	dc401f17 	ldw	r17,124(sp)
   51fb8:	00800044 	movi	r2,1
   51fbc:	40800115 	stw	r2,4(r8)
   51fc0:	8c400044 	addi	r17,r17,1
   51fc4:	44000015 	stw	r16,0(r8)
   51fc8:	d8c02015 	stw	r3,128(sp)
   51fcc:	dc401f15 	stw	r17,124(sp)
   51fd0:	008001c4 	movi	r2,7
   51fd4:	14417416 	blt	r2,r17,525a8 <___svfprintf_internal_r+0x1580>
   51fd8:	42000204 	addi	r8,r8,8
   51fdc:	d8803817 	ldw	r2,224(sp)
   51fe0:	d9003417 	ldw	r4,208(sp)
   51fe4:	8c400044 	addi	r17,r17,1
   51fe8:	10c7883a 	add	r3,r2,r3
   51fec:	40800115 	stw	r2,4(r8)
   51ff0:	41000015 	stw	r4,0(r8)
   51ff4:	d8c02015 	stw	r3,128(sp)
   51ff8:	dc401f15 	stw	r17,124(sp)
   51ffc:	008001c4 	movi	r2,7
   52000:	14417216 	blt	r2,r17,525cc <___svfprintf_internal_r+0x15a4>
   52004:	45800204 	addi	r22,r8,8
   52008:	d9003617 	ldw	r4,216(sp)
   5200c:	d9403717 	ldw	r5,220(sp)
   52010:	000d883a 	mov	r6,zero
   52014:	000f883a 	mov	r7,zero
   52018:	d8c03d15 	stw	r3,244(sp)
   5201c:	00581100 	call	58110 <__eqdf2>
   52020:	d8c03d17 	ldw	r3,244(sp)
   52024:	1000b326 	beq	r2,zero,522f4 <___svfprintf_internal_r+0x12cc>
   52028:	d9403317 	ldw	r5,204(sp)
   5202c:	84000044 	addi	r16,r16,1
   52030:	8c400044 	addi	r17,r17,1
   52034:	28bfffc4 	addi	r2,r5,-1
   52038:	1887883a 	add	r3,r3,r2
   5203c:	b0800115 	stw	r2,4(r22)
   52040:	b4000015 	stw	r16,0(r22)
   52044:	d8c02015 	stw	r3,128(sp)
   52048:	dc401f15 	stw	r17,124(sp)
   5204c:	008001c4 	movi	r2,7
   52050:	1440d216 	blt	r2,r17,5239c <___svfprintf_internal_r+0x1374>
   52054:	b5800204 	addi	r22,r22,8
   52058:	d9003b17 	ldw	r4,236(sp)
   5205c:	df0022c4 	addi	fp,sp,139
   52060:	8c400044 	addi	r17,r17,1
   52064:	20c7883a 	add	r3,r4,r3
   52068:	b7000015 	stw	fp,0(r22)
   5206c:	b1000115 	stw	r4,4(r22)
   52070:	d8c02015 	stw	r3,128(sp)
   52074:	dc401f15 	stw	r17,124(sp)
   52078:	008001c4 	movi	r2,7
   5207c:	14400e16 	blt	r2,r17,520b8 <___svfprintf_internal_r+0x1090>
   52080:	b2000204 	addi	r8,r22,8
   52084:	003e3c06 	br	51978 <__alt_data_end+0xfffd3178>
   52088:	010001b4 	movhi	r4,6
   5208c:	212db004 	addi	r4,r4,-18752
   52090:	d9002b15 	stw	r4,172(sp)
   52094:	d9002b17 	ldw	r4,172(sp)
   52098:	1c07883a 	add	r3,r3,r16
   5209c:	44000115 	stw	r16,4(r8)
   520a0:	41000015 	stw	r4,0(r8)
   520a4:	10800044 	addi	r2,r2,1
   520a8:	d8c02015 	stw	r3,128(sp)
   520ac:	d8801f15 	stw	r2,124(sp)
   520b0:	010001c4 	movi	r4,7
   520b4:	20be2f0e 	bge	r4,r2,51974 <__alt_data_end+0xfffd3174>
   520b8:	d9402c17 	ldw	r5,176(sp)
   520bc:	d9801e04 	addi	r6,sp,120
   520c0:	9809883a 	mov	r4,r19
   520c4:	0055d180 	call	55d18 <__ssprint_r>
   520c8:	103cbc1e 	bne	r2,zero,513bc <__alt_data_end+0xfffd2bbc>
   520cc:	d8c02017 	ldw	r3,128(sp)
   520d0:	da000404 	addi	r8,sp,16
   520d4:	003e2806 	br	51978 <__alt_data_end+0xfffd3178>
   520d8:	d9402c17 	ldw	r5,176(sp)
   520dc:	d9801e04 	addi	r6,sp,120
   520e0:	9809883a 	mov	r4,r19
   520e4:	0055d180 	call	55d18 <__ssprint_r>
   520e8:	103e5f26 	beq	r2,zero,51a68 <__alt_data_end+0xfffd3268>
   520ec:	003cb306 	br	513bc <__alt_data_end+0xfffd2bbc>
   520f0:	d9402c17 	ldw	r5,176(sp)
   520f4:	d9801e04 	addi	r6,sp,120
   520f8:	9809883a 	mov	r4,r19
   520fc:	0055d180 	call	55d18 <__ssprint_r>
   52100:	103cae1e 	bne	r2,zero,513bc <__alt_data_end+0xfffd2bbc>
   52104:	d8c02017 	ldw	r3,128(sp)
   52108:	da000404 	addi	r8,sp,16
   5210c:	003e0d06 	br	51944 <__alt_data_end+0xfffd3144>
   52110:	d9402c17 	ldw	r5,176(sp)
   52114:	d9801e04 	addi	r6,sp,120
   52118:	9809883a 	mov	r4,r19
   5211c:	0055d180 	call	55d18 <__ssprint_r>
   52120:	103ca61e 	bne	r2,zero,513bc <__alt_data_end+0xfffd2bbc>
   52124:	d8c02017 	ldw	r3,128(sp)
   52128:	da000404 	addi	r8,sp,16
   5212c:	003dc106 	br	51834 <__alt_data_end+0xfffd3034>
   52130:	d9402c17 	ldw	r5,176(sp)
   52134:	d9801e04 	addi	r6,sp,120
   52138:	9809883a 	mov	r4,r19
   5213c:	0055d180 	call	55d18 <__ssprint_r>
   52140:	103c9e1e 	bne	r2,zero,513bc <__alt_data_end+0xfffd2bbc>
   52144:	d8c02017 	ldw	r3,128(sp)
   52148:	da000404 	addi	r8,sp,16
   5214c:	003dc706 	br	5186c <__alt_data_end+0xfffd306c>
   52150:	d8802917 	ldw	r2,164(sp)
   52154:	d8002785 	stb	zero,158(sp)
   52158:	103f0816 	blt	r2,zero,51d7c <__alt_data_end+0xfffd357c>
   5215c:	00ffdfc4 	movi	r3,-129
   52160:	a584b03a 	or	r2,r20,r22
   52164:	90e4703a 	and	r18,r18,r3
   52168:	103c8126 	beq	r2,zero,51370 <__alt_data_end+0xfffd2b70>
   5216c:	0039883a 	mov	fp,zero
   52170:	003e7606 	br	51b4c <__alt_data_end+0xfffd334c>
   52174:	9080040c 	andi	r2,r18,16
   52178:	10013d26 	beq	r2,zero,52670 <___svfprintf_internal_r+0x1648>
   5217c:	d9002d17 	ldw	r4,180(sp)
   52180:	d9402917 	ldw	r5,164(sp)
   52184:	d8002785 	stb	zero,158(sp)
   52188:	20800104 	addi	r2,r4,4
   5218c:	25000017 	ldw	r20,0(r4)
   52190:	002d883a 	mov	r22,zero
   52194:	28013f16 	blt	r5,zero,52694 <___svfprintf_internal_r+0x166c>
   52198:	00ffdfc4 	movi	r3,-129
   5219c:	d8802d15 	stw	r2,180(sp)
   521a0:	90e4703a 	and	r18,r18,r3
   521a4:	a03d2b26 	beq	r20,zero,51654 <__alt_data_end+0xfffd2e54>
   521a8:	0039883a 	mov	fp,zero
   521ac:	003d2e06 	br	51668 <__alt_data_end+0xfffd2e68>
   521b0:	dc402617 	ldw	r17,152(sp)
   521b4:	0441830e 	bge	zero,r17,527c4 <___svfprintf_internal_r+0x179c>
   521b8:	dc403217 	ldw	r17,200(sp)
   521bc:	d8803317 	ldw	r2,204(sp)
   521c0:	1440010e 	bge	r2,r17,521c8 <___svfprintf_internal_r+0x11a0>
   521c4:	1023883a 	mov	r17,r2
   521c8:	04400a0e 	bge	zero,r17,521f4 <___svfprintf_internal_r+0x11cc>
   521cc:	d8801f17 	ldw	r2,124(sp)
   521d0:	1c47883a 	add	r3,r3,r17
   521d4:	44000015 	stw	r16,0(r8)
   521d8:	10800044 	addi	r2,r2,1
   521dc:	44400115 	stw	r17,4(r8)
   521e0:	d8c02015 	stw	r3,128(sp)
   521e4:	d8801f15 	stw	r2,124(sp)
   521e8:	010001c4 	movi	r4,7
   521ec:	20827516 	blt	r4,r2,52bc4 <___svfprintf_internal_r+0x1b9c>
   521f0:	42000204 	addi	r8,r8,8
   521f4:	88027b16 	blt	r17,zero,52be4 <___svfprintf_internal_r+0x1bbc>
   521f8:	d9003217 	ldw	r4,200(sp)
   521fc:	2463c83a 	sub	r17,r4,r17
   52200:	0440990e 	bge	zero,r17,52468 <___svfprintf_internal_r+0x1440>
   52204:	05800404 	movi	r22,16
   52208:	d8801f17 	ldw	r2,124(sp)
   5220c:	b441530e 	bge	r22,r17,5275c <___svfprintf_internal_r+0x1734>
   52210:	010001b4 	movhi	r4,6
   52214:	212db004 	addi	r4,r4,-18752
   52218:	d9002b15 	stw	r4,172(sp)
   5221c:	070001c4 	movi	fp,7
   52220:	dd002c17 	ldw	r20,176(sp)
   52224:	00000306 	br	52234 <___svfprintf_internal_r+0x120c>
   52228:	42000204 	addi	r8,r8,8
   5222c:	8c7ffc04 	addi	r17,r17,-16
   52230:	b4414d0e 	bge	r22,r17,52768 <___svfprintf_internal_r+0x1740>
   52234:	18c00404 	addi	r3,r3,16
   52238:	10800044 	addi	r2,r2,1
   5223c:	45400015 	stw	r21,0(r8)
   52240:	45800115 	stw	r22,4(r8)
   52244:	d8c02015 	stw	r3,128(sp)
   52248:	d8801f15 	stw	r2,124(sp)
   5224c:	e0bff60e 	bge	fp,r2,52228 <__alt_data_end+0xfffd3a28>
   52250:	d9801e04 	addi	r6,sp,120
   52254:	a00b883a 	mov	r5,r20
   52258:	9809883a 	mov	r4,r19
   5225c:	0055d180 	call	55d18 <__ssprint_r>
   52260:	103c561e 	bne	r2,zero,513bc <__alt_data_end+0xfffd2bbc>
   52264:	d8c02017 	ldw	r3,128(sp)
   52268:	d8801f17 	ldw	r2,124(sp)
   5226c:	da000404 	addi	r8,sp,16
   52270:	003fee06 	br	5222c <__alt_data_end+0xfffd3a2c>
   52274:	d9402c17 	ldw	r5,176(sp)
   52278:	d9801e04 	addi	r6,sp,120
   5227c:	9809883a 	mov	r4,r19
   52280:	0055d180 	call	55d18 <__ssprint_r>
   52284:	103c4d1e 	bne	r2,zero,513bc <__alt_data_end+0xfffd2bbc>
   52288:	d8c02017 	ldw	r3,128(sp)
   5228c:	df002787 	ldb	fp,158(sp)
   52290:	da000404 	addi	r8,sp,16
   52294:	003d5a06 	br	51800 <__alt_data_end+0xfffd3000>
   52298:	9080040c 	andi	r2,r18,16
   5229c:	10005c26 	beq	r2,zero,52410 <___svfprintf_internal_r+0x13e8>
   522a0:	d9402d17 	ldw	r5,180(sp)
   522a4:	d8c02917 	ldw	r3,164(sp)
   522a8:	d8002785 	stb	zero,158(sp)
   522ac:	28800104 	addi	r2,r5,4
   522b0:	2d000017 	ldw	r20,0(r5)
   522b4:	002d883a 	mov	r22,zero
   522b8:	18005e16 	blt	r3,zero,52434 <___svfprintf_internal_r+0x140c>
   522bc:	00ffdfc4 	movi	r3,-129
   522c0:	d8802d15 	stw	r2,180(sp)
   522c4:	90e4703a 	and	r18,r18,r3
   522c8:	0039883a 	mov	fp,zero
   522cc:	a03dfe26 	beq	r20,zero,51ac8 <__alt_data_end+0xfffd32c8>
   522d0:	00800244 	movi	r2,9
   522d4:	153cb336 	bltu	r2,r20,515a4 <__alt_data_end+0xfffd2da4>
   522d8:	a5000c04 	addi	r20,r20,48
   522dc:	dc001dc4 	addi	r16,sp,119
   522e0:	dd001dc5 	stb	r20,119(sp)
   522e4:	d8c02817 	ldw	r3,160(sp)
   522e8:	1c07c83a 	sub	r3,r3,r16
   522ec:	d8c02e15 	stw	r3,184(sp)
   522f0:	003cf506 	br	516c8 <__alt_data_end+0xfffd2ec8>
   522f4:	d8803317 	ldw	r2,204(sp)
   522f8:	143fffc4 	addi	r16,r2,-1
   522fc:	043f560e 	bge	zero,r16,52058 <__alt_data_end+0xfffd3858>
   52300:	07000404 	movi	fp,16
   52304:	e403530e 	bge	fp,r16,53054 <___svfprintf_internal_r+0x202c>
   52308:	014001b4 	movhi	r5,6
   5230c:	296db004 	addi	r5,r5,-18752
   52310:	d9402b15 	stw	r5,172(sp)
   52314:	01c001c4 	movi	r7,7
   52318:	dd002c17 	ldw	r20,176(sp)
   5231c:	00000306 	br	5232c <___svfprintf_internal_r+0x1304>
   52320:	843ffc04 	addi	r16,r16,-16
   52324:	b5800204 	addi	r22,r22,8
   52328:	e400130e 	bge	fp,r16,52378 <___svfprintf_internal_r+0x1350>
   5232c:	18c00404 	addi	r3,r3,16
   52330:	8c400044 	addi	r17,r17,1
   52334:	b5400015 	stw	r21,0(r22)
   52338:	b7000115 	stw	fp,4(r22)
   5233c:	d8c02015 	stw	r3,128(sp)
   52340:	dc401f15 	stw	r17,124(sp)
   52344:	3c7ff60e 	bge	r7,r17,52320 <__alt_data_end+0xfffd3b20>
   52348:	d9801e04 	addi	r6,sp,120
   5234c:	a00b883a 	mov	r5,r20
   52350:	9809883a 	mov	r4,r19
   52354:	d9c03d15 	stw	r7,244(sp)
   52358:	0055d180 	call	55d18 <__ssprint_r>
   5235c:	d9c03d17 	ldw	r7,244(sp)
   52360:	103c161e 	bne	r2,zero,513bc <__alt_data_end+0xfffd2bbc>
   52364:	843ffc04 	addi	r16,r16,-16
   52368:	d8c02017 	ldw	r3,128(sp)
   5236c:	dc401f17 	ldw	r17,124(sp)
   52370:	dd800404 	addi	r22,sp,16
   52374:	e43fed16 	blt	fp,r16,5232c <__alt_data_end+0xfffd3b2c>
   52378:	d8802b17 	ldw	r2,172(sp)
   5237c:	1c07883a 	add	r3,r3,r16
   52380:	8c400044 	addi	r17,r17,1
   52384:	b0800015 	stw	r2,0(r22)
   52388:	b4000115 	stw	r16,4(r22)
   5238c:	d8c02015 	stw	r3,128(sp)
   52390:	dc401f15 	stw	r17,124(sp)
   52394:	008001c4 	movi	r2,7
   52398:	147f2e0e 	bge	r2,r17,52054 <__alt_data_end+0xfffd3854>
   5239c:	d9402c17 	ldw	r5,176(sp)
   523a0:	d9801e04 	addi	r6,sp,120
   523a4:	9809883a 	mov	r4,r19
   523a8:	0055d180 	call	55d18 <__ssprint_r>
   523ac:	103c031e 	bne	r2,zero,513bc <__alt_data_end+0xfffd2bbc>
   523b0:	d8c02017 	ldw	r3,128(sp)
   523b4:	dc401f17 	ldw	r17,124(sp)
   523b8:	dd800404 	addi	r22,sp,16
   523bc:	003f2606 	br	52058 <__alt_data_end+0xfffd3858>
   523c0:	9080040c 	andi	r2,r18,16
   523c4:	1000c326 	beq	r2,zero,526d4 <___svfprintf_internal_r+0x16ac>
   523c8:	d8802d17 	ldw	r2,180(sp)
   523cc:	15000017 	ldw	r20,0(r2)
   523d0:	10800104 	addi	r2,r2,4
   523d4:	d8802d15 	stw	r2,180(sp)
   523d8:	a02dd7fa 	srai	r22,r20,31
   523dc:	b005883a 	mov	r2,r22
   523e0:	103c680e 	bge	r2,zero,51584 <__alt_data_end+0xfffd2d84>
   523e4:	0529c83a 	sub	r20,zero,r20
   523e8:	a004c03a 	cmpne	r2,r20,zero
   523ec:	05adc83a 	sub	r22,zero,r22
   523f0:	b0adc83a 	sub	r22,r22,r2
   523f4:	d8802917 	ldw	r2,164(sp)
   523f8:	07000b44 	movi	fp,45
   523fc:	df002785 	stb	fp,158(sp)
   52400:	10022e16 	blt	r2,zero,52cbc <___svfprintf_internal_r+0x1c94>
   52404:	00bfdfc4 	movi	r2,-129
   52408:	90a4703a 	and	r18,r18,r2
   5240c:	003c6406 	br	515a0 <__alt_data_end+0xfffd2da0>
   52410:	9080100c 	andi	r2,r18,64
   52414:	d8002785 	stb	zero,158(sp)
   52418:	10012526 	beq	r2,zero,528b0 <___svfprintf_internal_r+0x1888>
   5241c:	d9002d17 	ldw	r4,180(sp)
   52420:	d9402917 	ldw	r5,164(sp)
   52424:	002d883a 	mov	r22,zero
   52428:	20800104 	addi	r2,r4,4
   5242c:	2500000b 	ldhu	r20,0(r4)
   52430:	283fa20e 	bge	r5,zero,522bc <__alt_data_end+0xfffd3abc>
   52434:	d8802d15 	stw	r2,180(sp)
   52438:	0039883a 	mov	fp,zero
   5243c:	a584b03a 	or	r2,r20,r22
   52440:	103c571e 	bne	r2,zero,515a0 <__alt_data_end+0xfffd2da0>
   52444:	00800044 	movi	r2,1
   52448:	003e5006 	br	51d8c <__alt_data_end+0xfffd358c>
   5244c:	d9402c17 	ldw	r5,176(sp)
   52450:	d9801e04 	addi	r6,sp,120
   52454:	9809883a 	mov	r4,r19
   52458:	0055d180 	call	55d18 <__ssprint_r>
   5245c:	103bd71e 	bne	r2,zero,513bc <__alt_data_end+0xfffd2bbc>
   52460:	d8c02017 	ldw	r3,128(sp)
   52464:	da000404 	addi	r8,sp,16
   52468:	d9003217 	ldw	r4,200(sp)
   5246c:	d8802617 	ldw	r2,152(sp)
   52470:	d9403317 	ldw	r5,204(sp)
   52474:	8123883a 	add	r17,r16,r4
   52478:	11400216 	blt	r2,r5,52484 <___svfprintf_internal_r+0x145c>
   5247c:	9100004c 	andi	r4,r18,1
   52480:	20000d26 	beq	r4,zero,524b8 <___svfprintf_internal_r+0x1490>
   52484:	d9003817 	ldw	r4,224(sp)
   52488:	d9403417 	ldw	r5,208(sp)
   5248c:	1907883a 	add	r3,r3,r4
   52490:	d9001f17 	ldw	r4,124(sp)
   52494:	41400015 	stw	r5,0(r8)
   52498:	d9403817 	ldw	r5,224(sp)
   5249c:	21000044 	addi	r4,r4,1
   524a0:	d8c02015 	stw	r3,128(sp)
   524a4:	41400115 	stw	r5,4(r8)
   524a8:	d9001f15 	stw	r4,124(sp)
   524ac:	014001c4 	movi	r5,7
   524b0:	2901dc16 	blt	r5,r4,52c24 <___svfprintf_internal_r+0x1bfc>
   524b4:	42000204 	addi	r8,r8,8
   524b8:	d9003317 	ldw	r4,204(sp)
   524bc:	8121883a 	add	r16,r16,r4
   524c0:	2085c83a 	sub	r2,r4,r2
   524c4:	8461c83a 	sub	r16,r16,r17
   524c8:	1400010e 	bge	r2,r16,524d0 <___svfprintf_internal_r+0x14a8>
   524cc:	1021883a 	mov	r16,r2
   524d0:	04000a0e 	bge	zero,r16,524fc <___svfprintf_internal_r+0x14d4>
   524d4:	d9001f17 	ldw	r4,124(sp)
   524d8:	1c07883a 	add	r3,r3,r16
   524dc:	44400015 	stw	r17,0(r8)
   524e0:	21000044 	addi	r4,r4,1
   524e4:	44000115 	stw	r16,4(r8)
   524e8:	d8c02015 	stw	r3,128(sp)
   524ec:	d9001f15 	stw	r4,124(sp)
   524f0:	014001c4 	movi	r5,7
   524f4:	2901e616 	blt	r5,r4,52c90 <___svfprintf_internal_r+0x1c68>
   524f8:	42000204 	addi	r8,r8,8
   524fc:	8001f616 	blt	r16,zero,52cd8 <___svfprintf_internal_r+0x1cb0>
   52500:	1421c83a 	sub	r16,r2,r16
   52504:	043d1c0e 	bge	zero,r16,51978 <__alt_data_end+0xfffd3178>
   52508:	04400404 	movi	r17,16
   5250c:	d8801f17 	ldw	r2,124(sp)
   52510:	8c3edd0e 	bge	r17,r16,52088 <__alt_data_end+0xfffd3888>
   52514:	014001b4 	movhi	r5,6
   52518:	296db004 	addi	r5,r5,-18752
   5251c:	d9402b15 	stw	r5,172(sp)
   52520:	058001c4 	movi	r22,7
   52524:	dd002c17 	ldw	r20,176(sp)
   52528:	00000306 	br	52538 <___svfprintf_internal_r+0x1510>
   5252c:	42000204 	addi	r8,r8,8
   52530:	843ffc04 	addi	r16,r16,-16
   52534:	8c3ed70e 	bge	r17,r16,52094 <__alt_data_end+0xfffd3894>
   52538:	18c00404 	addi	r3,r3,16
   5253c:	10800044 	addi	r2,r2,1
   52540:	45400015 	stw	r21,0(r8)
   52544:	44400115 	stw	r17,4(r8)
   52548:	d8c02015 	stw	r3,128(sp)
   5254c:	d8801f15 	stw	r2,124(sp)
   52550:	b0bff60e 	bge	r22,r2,5252c <__alt_data_end+0xfffd3d2c>
   52554:	d9801e04 	addi	r6,sp,120
   52558:	a00b883a 	mov	r5,r20
   5255c:	9809883a 	mov	r4,r19
   52560:	0055d180 	call	55d18 <__ssprint_r>
   52564:	103b951e 	bne	r2,zero,513bc <__alt_data_end+0xfffd2bbc>
   52568:	d8c02017 	ldw	r3,128(sp)
   5256c:	d8801f17 	ldw	r2,124(sp)
   52570:	da000404 	addi	r8,sp,16
   52574:	003fee06 	br	52530 <__alt_data_end+0xfffd3d30>
   52578:	9088703a 	and	r4,r18,r2
   5257c:	203e8d1e 	bne	r4,zero,51fb4 <__alt_data_end+0xfffd37b4>
   52580:	dc401f17 	ldw	r17,124(sp)
   52584:	40800115 	stw	r2,4(r8)
   52588:	44000015 	stw	r16,0(r8)
   5258c:	8c400044 	addi	r17,r17,1
   52590:	d8c02015 	stw	r3,128(sp)
   52594:	dc401f15 	stw	r17,124(sp)
   52598:	008001c4 	movi	r2,7
   5259c:	147f7f16 	blt	r2,r17,5239c <__alt_data_end+0xfffd3b9c>
   525a0:	45800204 	addi	r22,r8,8
   525a4:	003eac06 	br	52058 <__alt_data_end+0xfffd3858>
   525a8:	d9402c17 	ldw	r5,176(sp)
   525ac:	d9801e04 	addi	r6,sp,120
   525b0:	9809883a 	mov	r4,r19
   525b4:	0055d180 	call	55d18 <__ssprint_r>
   525b8:	103b801e 	bne	r2,zero,513bc <__alt_data_end+0xfffd2bbc>
   525bc:	d8c02017 	ldw	r3,128(sp)
   525c0:	dc401f17 	ldw	r17,124(sp)
   525c4:	da000404 	addi	r8,sp,16
   525c8:	003e8406 	br	51fdc <__alt_data_end+0xfffd37dc>
   525cc:	d9402c17 	ldw	r5,176(sp)
   525d0:	d9801e04 	addi	r6,sp,120
   525d4:	9809883a 	mov	r4,r19
   525d8:	0055d180 	call	55d18 <__ssprint_r>
   525dc:	103b771e 	bne	r2,zero,513bc <__alt_data_end+0xfffd2bbc>
   525e0:	d8c02017 	ldw	r3,128(sp)
   525e4:	dc401f17 	ldw	r17,124(sp)
   525e8:	dd800404 	addi	r22,sp,16
   525ec:	003e8606 	br	52008 <__alt_data_end+0xfffd3808>
   525f0:	0029883a 	mov	r20,zero
   525f4:	a5000c04 	addi	r20,r20,48
   525f8:	dc001dc4 	addi	r16,sp,119
   525fc:	dd001dc5 	stb	r20,119(sp)
   52600:	003f3806 	br	522e4 <__alt_data_end+0xfffd3ae4>
   52604:	d9402c17 	ldw	r5,176(sp)
   52608:	d9801e04 	addi	r6,sp,120
   5260c:	9809883a 	mov	r4,r19
   52610:	0055d180 	call	55d18 <__ssprint_r>
   52614:	103b691e 	bne	r2,zero,513bc <__alt_data_end+0xfffd2bbc>
   52618:	d8c02017 	ldw	r3,128(sp)
   5261c:	da000404 	addi	r8,sp,16
   52620:	003c9506 	br	51878 <__alt_data_end+0xfffd3078>
   52624:	d9003617 	ldw	r4,216(sp)
   52628:	d9403717 	ldw	r5,220(sp)
   5262c:	da003e15 	stw	r8,248(sp)
   52630:	004e9c40 	call	4e9c4 <__fpclassifyd>
   52634:	da003e17 	ldw	r8,248(sp)
   52638:	1000bd1e 	bne	r2,zero,52930 <___svfprintf_internal_r+0x1908>
   5263c:	008011c4 	movi	r2,71
   52640:	14411e0e 	bge	r2,r17,52abc <___svfprintf_internal_r+0x1a94>
   52644:	040001b4 	movhi	r16,6
   52648:	842c8604 	addi	r16,r16,-19944
   5264c:	00c000c4 	movi	r3,3
   52650:	00bfdfc4 	movi	r2,-129
   52654:	d8c02a15 	stw	r3,168(sp)
   52658:	90a4703a 	and	r18,r18,r2
   5265c:	df002783 	ldbu	fp,158(sp)
   52660:	d8c02e15 	stw	r3,184(sp)
   52664:	d8002915 	stw	zero,164(sp)
   52668:	d8003215 	stw	zero,200(sp)
   5266c:	003c1c06 	br	516e0 <__alt_data_end+0xfffd2ee0>
   52670:	9080100c 	andi	r2,r18,64
   52674:	d8002785 	stb	zero,158(sp)
   52678:	10009426 	beq	r2,zero,528cc <___svfprintf_internal_r+0x18a4>
   5267c:	d8c02d17 	ldw	r3,180(sp)
   52680:	d9002917 	ldw	r4,164(sp)
   52684:	002d883a 	mov	r22,zero
   52688:	18800104 	addi	r2,r3,4
   5268c:	1d00000b 	ldhu	r20,0(r3)
   52690:	203ec10e 	bge	r4,zero,52198 <__alt_data_end+0xfffd3998>
   52694:	a586b03a 	or	r3,r20,r22
   52698:	d8802d15 	stw	r2,180(sp)
   5269c:	183ec21e 	bne	r3,zero,521a8 <__alt_data_end+0xfffd39a8>
   526a0:	0039883a 	mov	fp,zero
   526a4:	0005883a 	mov	r2,zero
   526a8:	003db806 	br	51d8c <__alt_data_end+0xfffd358c>
   526ac:	d8802d17 	ldw	r2,180(sp)
   526b0:	d8c02d17 	ldw	r3,180(sp)
   526b4:	d9002d17 	ldw	r4,180(sp)
   526b8:	10800017 	ldw	r2,0(r2)
   526bc:	18c00117 	ldw	r3,4(r3)
   526c0:	21000204 	addi	r4,r4,8
   526c4:	d8803615 	stw	r2,216(sp)
   526c8:	d8c03715 	stw	r3,220(sp)
   526cc:	d9002d15 	stw	r4,180(sp)
   526d0:	003b8206 	br	514dc <__alt_data_end+0xfffd2cdc>
   526d4:	9080100c 	andi	r2,r18,64
   526d8:	10010726 	beq	r2,zero,52af8 <___svfprintf_internal_r+0x1ad0>
   526dc:	d8c02d17 	ldw	r3,180(sp)
   526e0:	1d00000f 	ldh	r20,0(r3)
   526e4:	18c00104 	addi	r3,r3,4
   526e8:	d8c02d15 	stw	r3,180(sp)
   526ec:	a02dd7fa 	srai	r22,r20,31
   526f0:	b005883a 	mov	r2,r22
   526f4:	003ba206 	br	51580 <__alt_data_end+0xfffd2d80>
   526f8:	9080100c 	andi	r2,r18,64
   526fc:	10010526 	beq	r2,zero,52b14 <___svfprintf_internal_r+0x1aec>
   52700:	d9002d17 	ldw	r4,180(sp)
   52704:	002d883a 	mov	r22,zero
   52708:	2500000b 	ldhu	r20,0(r4)
   5270c:	21000104 	addi	r4,r4,4
   52710:	d9002d15 	stw	r4,180(sp)
   52714:	003cfe06 	br	51b10 <__alt_data_end+0xfffd3310>
   52718:	bc400007 	ldb	r17,0(r23)
   5271c:	003a9606 	br	51178 <__alt_data_end+0xfffd2978>
   52720:	9080040c 	andi	r2,r18,16
   52724:	10010126 	beq	r2,zero,52b2c <___svfprintf_internal_r+0x1b04>
   52728:	d9402d17 	ldw	r5,180(sp)
   5272c:	d8c02f17 	ldw	r3,188(sp)
   52730:	28800017 	ldw	r2,0(r5)
   52734:	29400104 	addi	r5,r5,4
   52738:	d9402d15 	stw	r5,180(sp)
   5273c:	10c00015 	stw	r3,0(r2)
   52740:	003a6406 	br	510d4 <__alt_data_end+0xfffd28d4>
   52744:	d9002917 	ldw	r4,164(sp)
   52748:	d8002785 	stb	zero,158(sp)
   5274c:	203d8d16 	blt	r4,zero,51d84 <__alt_data_end+0xfffd3584>
   52750:	00bfdfc4 	movi	r2,-129
   52754:	90a4703a 	and	r18,r18,r2
   52758:	003b0506 	br	51370 <__alt_data_end+0xfffd2b70>
   5275c:	014001b4 	movhi	r5,6
   52760:	296db004 	addi	r5,r5,-18752
   52764:	d9402b15 	stw	r5,172(sp)
   52768:	d9402b17 	ldw	r5,172(sp)
   5276c:	1c47883a 	add	r3,r3,r17
   52770:	10800044 	addi	r2,r2,1
   52774:	41400015 	stw	r5,0(r8)
   52778:	44400115 	stw	r17,4(r8)
   5277c:	d8c02015 	stw	r3,128(sp)
   52780:	d8801f15 	stw	r2,124(sp)
   52784:	010001c4 	movi	r4,7
   52788:	20bf3016 	blt	r4,r2,5244c <__alt_data_end+0xfffd3c4c>
   5278c:	42000204 	addi	r8,r8,8
   52790:	003f3506 	br	52468 <__alt_data_end+0xfffd3c68>
   52794:	010001b4 	movhi	r4,6
   52798:	212db004 	addi	r4,r4,-18752
   5279c:	d9002b15 	stw	r4,172(sp)
   527a0:	003c5e06 	br	5191c <__alt_data_end+0xfffd311c>
   527a4:	d9402c17 	ldw	r5,176(sp)
   527a8:	d9801e04 	addi	r6,sp,120
   527ac:	9809883a 	mov	r4,r19
   527b0:	0055d180 	call	55d18 <__ssprint_r>
   527b4:	103b011e 	bne	r2,zero,513bc <__alt_data_end+0xfffd2bbc>
   527b8:	d8c02017 	ldw	r3,128(sp)
   527bc:	da000404 	addi	r8,sp,16
   527c0:	003d9306 	br	51e10 <__alt_data_end+0xfffd3610>
   527c4:	d8801f17 	ldw	r2,124(sp)
   527c8:	014001b4 	movhi	r5,6
   527cc:	01000044 	movi	r4,1
   527d0:	18c00044 	addi	r3,r3,1
   527d4:	10800044 	addi	r2,r2,1
   527d8:	296c9304 	addi	r5,r5,-19892
   527dc:	41000115 	stw	r4,4(r8)
   527e0:	41400015 	stw	r5,0(r8)
   527e4:	d8c02015 	stw	r3,128(sp)
   527e8:	d8801f15 	stw	r2,124(sp)
   527ec:	010001c4 	movi	r4,7
   527f0:	2080b516 	blt	r4,r2,52ac8 <___svfprintf_internal_r+0x1aa0>
   527f4:	42000204 	addi	r8,r8,8
   527f8:	8800041e 	bne	r17,zero,5280c <___svfprintf_internal_r+0x17e4>
   527fc:	d8803317 	ldw	r2,204(sp)
   52800:	1000021e 	bne	r2,zero,5280c <___svfprintf_internal_r+0x17e4>
   52804:	9080004c 	andi	r2,r18,1
   52808:	103c5b26 	beq	r2,zero,51978 <__alt_data_end+0xfffd3178>
   5280c:	d9003817 	ldw	r4,224(sp)
   52810:	d8801f17 	ldw	r2,124(sp)
   52814:	d9403417 	ldw	r5,208(sp)
   52818:	20c7883a 	add	r3,r4,r3
   5281c:	10800044 	addi	r2,r2,1
   52820:	41000115 	stw	r4,4(r8)
   52824:	41400015 	stw	r5,0(r8)
   52828:	d8c02015 	stw	r3,128(sp)
   5282c:	d8801f15 	stw	r2,124(sp)
   52830:	010001c4 	movi	r4,7
   52834:	20818016 	blt	r4,r2,52e38 <___svfprintf_internal_r+0x1e10>
   52838:	42000204 	addi	r8,r8,8
   5283c:	0463c83a 	sub	r17,zero,r17
   52840:	0440cb0e 	bge	zero,r17,52b70 <___svfprintf_internal_r+0x1b48>
   52844:	05800404 	movi	r22,16
   52848:	b440e80e 	bge	r22,r17,52bec <___svfprintf_internal_r+0x1bc4>
   5284c:	014001b4 	movhi	r5,6
   52850:	296db004 	addi	r5,r5,-18752
   52854:	d9402b15 	stw	r5,172(sp)
   52858:	070001c4 	movi	fp,7
   5285c:	dd002c17 	ldw	r20,176(sp)
   52860:	00000306 	br	52870 <___svfprintf_internal_r+0x1848>
   52864:	42000204 	addi	r8,r8,8
   52868:	8c7ffc04 	addi	r17,r17,-16
   5286c:	b440e20e 	bge	r22,r17,52bf8 <___svfprintf_internal_r+0x1bd0>
   52870:	18c00404 	addi	r3,r3,16
   52874:	10800044 	addi	r2,r2,1
   52878:	45400015 	stw	r21,0(r8)
   5287c:	45800115 	stw	r22,4(r8)
   52880:	d8c02015 	stw	r3,128(sp)
   52884:	d8801f15 	stw	r2,124(sp)
   52888:	e0bff60e 	bge	fp,r2,52864 <__alt_data_end+0xfffd4064>
   5288c:	d9801e04 	addi	r6,sp,120
   52890:	a00b883a 	mov	r5,r20
   52894:	9809883a 	mov	r4,r19
   52898:	0055d180 	call	55d18 <__ssprint_r>
   5289c:	103ac71e 	bne	r2,zero,513bc <__alt_data_end+0xfffd2bbc>
   528a0:	d8c02017 	ldw	r3,128(sp)
   528a4:	d8801f17 	ldw	r2,124(sp)
   528a8:	da000404 	addi	r8,sp,16
   528ac:	003fee06 	br	52868 <__alt_data_end+0xfffd4068>
   528b0:	d8c02d17 	ldw	r3,180(sp)
   528b4:	d9002917 	ldw	r4,164(sp)
   528b8:	002d883a 	mov	r22,zero
   528bc:	18800104 	addi	r2,r3,4
   528c0:	1d000017 	ldw	r20,0(r3)
   528c4:	203e7d0e 	bge	r4,zero,522bc <__alt_data_end+0xfffd3abc>
   528c8:	003eda06 	br	52434 <__alt_data_end+0xfffd3c34>
   528cc:	d9402d17 	ldw	r5,180(sp)
   528d0:	d8c02917 	ldw	r3,164(sp)
   528d4:	002d883a 	mov	r22,zero
   528d8:	28800104 	addi	r2,r5,4
   528dc:	2d000017 	ldw	r20,0(r5)
   528e0:	183e2d0e 	bge	r3,zero,52198 <__alt_data_end+0xfffd3998>
   528e4:	003f6b06 	br	52694 <__alt_data_end+0xfffd3e94>
   528e8:	d8c02d15 	stw	r3,180(sp)
   528ec:	0039883a 	mov	fp,zero
   528f0:	003ed206 	br	5243c <__alt_data_end+0xfffd3c3c>
   528f4:	bc400043 	ldbu	r17,1(r23)
   528f8:	94800814 	ori	r18,r18,32
   528fc:	bdc00044 	addi	r23,r23,1
   52900:	8c403fcc 	andi	r17,r17,255
   52904:	8c40201c 	xori	r17,r17,128
   52908:	8c7fe004 	addi	r17,r17,-128
   5290c:	003a1a06 	br	51178 <__alt_data_end+0xfffd2978>
   52910:	d9402c17 	ldw	r5,176(sp)
   52914:	d9801e04 	addi	r6,sp,120
   52918:	9809883a 	mov	r4,r19
   5291c:	0055d180 	call	55d18 <__ssprint_r>
   52920:	103aa61e 	bne	r2,zero,513bc <__alt_data_end+0xfffd2bbc>
   52924:	d8c02017 	ldw	r3,128(sp)
   52928:	da000404 	addi	r8,sp,16
   5292c:	003d4a06 	br	51e58 <__alt_data_end+0xfffd3658>
   52930:	d9002917 	ldw	r4,164(sp)
   52934:	05bff7c4 	movi	r22,-33
   52938:	00bfffc4 	movi	r2,-1
   5293c:	8dac703a 	and	r22,r17,r22
   52940:	20806a26 	beq	r4,r2,52aec <___svfprintf_internal_r+0x1ac4>
   52944:	008011c4 	movi	r2,71
   52948:	b0813726 	beq	r22,r2,52e28 <___svfprintf_internal_r+0x1e00>
   5294c:	d9003717 	ldw	r4,220(sp)
   52950:	90c04014 	ori	r3,r18,256
   52954:	d8c02b15 	stw	r3,172(sp)
   52958:	20015d16 	blt	r4,zero,52ed0 <___svfprintf_internal_r+0x1ea8>
   5295c:	dd003717 	ldw	r20,220(sp)
   52960:	d8002a05 	stb	zero,168(sp)
   52964:	00801984 	movi	r2,102
   52968:	88814026 	beq	r17,r2,52e6c <___svfprintf_internal_r+0x1e44>
   5296c:	00801184 	movi	r2,70
   52970:	88817126 	beq	r17,r2,52f38 <___svfprintf_internal_r+0x1f10>
   52974:	00801144 	movi	r2,69
   52978:	b0816226 	beq	r22,r2,52f04 <___svfprintf_internal_r+0x1edc>
   5297c:	d8c02917 	ldw	r3,164(sp)
   52980:	d8802104 	addi	r2,sp,132
   52984:	d8800315 	stw	r2,12(sp)
   52988:	d9403617 	ldw	r5,216(sp)
   5298c:	d8802504 	addi	r2,sp,148
   52990:	d8800215 	stw	r2,8(sp)
   52994:	d8802604 	addi	r2,sp,152
   52998:	d8c00015 	stw	r3,0(sp)
   5299c:	d8800115 	stw	r2,4(sp)
   529a0:	01c00084 	movi	r7,2
   529a4:	a00d883a 	mov	r6,r20
   529a8:	9809883a 	mov	r4,r19
   529ac:	d8c03d15 	stw	r3,244(sp)
   529b0:	da003e15 	stw	r8,248(sp)
   529b4:	004986c0 	call	4986c <_dtoa_r>
   529b8:	1021883a 	mov	r16,r2
   529bc:	008019c4 	movi	r2,103
   529c0:	d8c03d17 	ldw	r3,244(sp)
   529c4:	da003e17 	ldw	r8,248(sp)
   529c8:	8880e726 	beq	r17,r2,52d68 <___svfprintf_internal_r+0x1d40>
   529cc:	008011c4 	movi	r2,71
   529d0:	8880d426 	beq	r17,r2,52d24 <___svfprintf_internal_r+0x1cfc>
   529d4:	80f9883a 	add	fp,r16,r3
   529d8:	d9003617 	ldw	r4,216(sp)
   529dc:	000d883a 	mov	r6,zero
   529e0:	000f883a 	mov	r7,zero
   529e4:	a00b883a 	mov	r5,r20
   529e8:	da003e15 	stw	r8,248(sp)
   529ec:	00581100 	call	58110 <__eqdf2>
   529f0:	da003e17 	ldw	r8,248(sp)
   529f4:	1000e426 	beq	r2,zero,52d88 <___svfprintf_internal_r+0x1d60>
   529f8:	d8802117 	ldw	r2,132(sp)
   529fc:	1700062e 	bgeu	r2,fp,52a18 <___svfprintf_internal_r+0x19f0>
   52a00:	01000c04 	movi	r4,48
   52a04:	10c00044 	addi	r3,r2,1
   52a08:	d8c02115 	stw	r3,132(sp)
   52a0c:	11000005 	stb	r4,0(r2)
   52a10:	d8802117 	ldw	r2,132(sp)
   52a14:	173ffb36 	bltu	r2,fp,52a04 <__alt_data_end+0xfffd4204>
   52a18:	1405c83a 	sub	r2,r2,r16
   52a1c:	d8803315 	stw	r2,204(sp)
   52a20:	008011c4 	movi	r2,71
   52a24:	b080c526 	beq	r22,r2,52d3c <___svfprintf_internal_r+0x1d14>
   52a28:	00801944 	movi	r2,101
   52a2c:	1441d90e 	bge	r2,r17,53194 <___svfprintf_internal_r+0x216c>
   52a30:	d8c02617 	ldw	r3,152(sp)
   52a34:	00801984 	movi	r2,102
   52a38:	d8c03215 	stw	r3,200(sp)
   52a3c:	88813426 	beq	r17,r2,52f10 <___svfprintf_internal_r+0x1ee8>
   52a40:	d8c03217 	ldw	r3,200(sp)
   52a44:	d9003317 	ldw	r4,204(sp)
   52a48:	19012516 	blt	r3,r4,52ee0 <___svfprintf_internal_r+0x1eb8>
   52a4c:	9480004c 	andi	r18,r18,1
   52a50:	9001841e 	bne	r18,zero,53064 <___svfprintf_internal_r+0x203c>
   52a54:	1805883a 	mov	r2,r3
   52a58:	1801cc16 	blt	r3,zero,5318c <___svfprintf_internal_r+0x2164>
   52a5c:	d8c03217 	ldw	r3,200(sp)
   52a60:	044019c4 	movi	r17,103
   52a64:	d8c02e15 	stw	r3,184(sp)
   52a68:	df002a07 	ldb	fp,168(sp)
   52a6c:	e000a61e 	bne	fp,zero,52d08 <___svfprintf_internal_r+0x1ce0>
   52a70:	df002783 	ldbu	fp,158(sp)
   52a74:	d8802a15 	stw	r2,168(sp)
   52a78:	dc802b17 	ldw	r18,172(sp)
   52a7c:	d8002915 	stw	zero,164(sp)
   52a80:	003b1706 	br	516e0 <__alt_data_end+0xfffd2ee0>
   52a84:	040001b4 	movhi	r16,6
   52a88:	842c8304 	addi	r16,r16,-19956
   52a8c:	003aa606 	br	51528 <__alt_data_end+0xfffd2d28>
   52a90:	d9003917 	ldw	r4,228(sp)
   52a94:	04001004 	movi	r16,64
   52a98:	800b883a 	mov	r5,r16
   52a9c:	004c4dc0 	call	4c4dc <_malloc_r>
   52aa0:	d9002c17 	ldw	r4,176(sp)
   52aa4:	20800015 	stw	r2,0(r4)
   52aa8:	20800415 	stw	r2,16(r4)
   52aac:	1001cb26 	beq	r2,zero,531dc <___svfprintf_internal_r+0x21b4>
   52ab0:	d8802c17 	ldw	r2,176(sp)
   52ab4:	14000515 	stw	r16,20(r2)
   52ab8:	00397606 	br	51094 <__alt_data_end+0xfffd2894>
   52abc:	040001b4 	movhi	r16,6
   52ac0:	842c8504 	addi	r16,r16,-19948
   52ac4:	003ee106 	br	5264c <__alt_data_end+0xfffd3e4c>
   52ac8:	d9402c17 	ldw	r5,176(sp)
   52acc:	d9801e04 	addi	r6,sp,120
   52ad0:	9809883a 	mov	r4,r19
   52ad4:	0055d180 	call	55d18 <__ssprint_r>
   52ad8:	103a381e 	bne	r2,zero,513bc <__alt_data_end+0xfffd2bbc>
   52adc:	dc402617 	ldw	r17,152(sp)
   52ae0:	d8c02017 	ldw	r3,128(sp)
   52ae4:	da000404 	addi	r8,sp,16
   52ae8:	003f4306 	br	527f8 <__alt_data_end+0xfffd3ff8>
   52aec:	01400184 	movi	r5,6
   52af0:	d9402915 	stw	r5,164(sp)
   52af4:	003f9506 	br	5294c <__alt_data_end+0xfffd414c>
   52af8:	d9002d17 	ldw	r4,180(sp)
   52afc:	25000017 	ldw	r20,0(r4)
   52b00:	21000104 	addi	r4,r4,4
   52b04:	d9002d15 	stw	r4,180(sp)
   52b08:	a02dd7fa 	srai	r22,r20,31
   52b0c:	b005883a 	mov	r2,r22
   52b10:	003a9b06 	br	51580 <__alt_data_end+0xfffd2d80>
   52b14:	d9402d17 	ldw	r5,180(sp)
   52b18:	002d883a 	mov	r22,zero
   52b1c:	2d000017 	ldw	r20,0(r5)
   52b20:	29400104 	addi	r5,r5,4
   52b24:	d9402d15 	stw	r5,180(sp)
   52b28:	003bf906 	br	51b10 <__alt_data_end+0xfffd3310>
   52b2c:	9480100c 	andi	r18,r18,64
   52b30:	90006e26 	beq	r18,zero,52cec <___svfprintf_internal_r+0x1cc4>
   52b34:	d9002d17 	ldw	r4,180(sp)
   52b38:	d9402f17 	ldw	r5,188(sp)
   52b3c:	20800017 	ldw	r2,0(r4)
   52b40:	21000104 	addi	r4,r4,4
   52b44:	d9002d15 	stw	r4,180(sp)
   52b48:	1140000d 	sth	r5,0(r2)
   52b4c:	00396106 	br	510d4 <__alt_data_end+0xfffd28d4>
   52b50:	d9402c17 	ldw	r5,176(sp)
   52b54:	d9801e04 	addi	r6,sp,120
   52b58:	9809883a 	mov	r4,r19
   52b5c:	0055d180 	call	55d18 <__ssprint_r>
   52b60:	103a161e 	bne	r2,zero,513bc <__alt_data_end+0xfffd2bbc>
   52b64:	d8c02017 	ldw	r3,128(sp)
   52b68:	d8801f17 	ldw	r2,124(sp)
   52b6c:	da000404 	addi	r8,sp,16
   52b70:	d9403317 	ldw	r5,204(sp)
   52b74:	10800044 	addi	r2,r2,1
   52b78:	44000015 	stw	r16,0(r8)
   52b7c:	28c7883a 	add	r3,r5,r3
   52b80:	003b7706 	br	51960 <__alt_data_end+0xfffd3160>
   52b84:	8009883a 	mov	r4,r16
   52b88:	da003e15 	stw	r8,248(sp)
   52b8c:	00459240 	call	45924 <strlen>
   52b90:	d8802e15 	stw	r2,184(sp)
   52b94:	da003e17 	ldw	r8,248(sp)
   52b98:	103c280e 	bge	r2,zero,51c3c <__alt_data_end+0xfffd343c>
   52b9c:	0005883a 	mov	r2,zero
   52ba0:	003c2606 	br	51c3c <__alt_data_end+0xfffd343c>
   52ba4:	00bfffc4 	movi	r2,-1
   52ba8:	003a0906 	br	513d0 <__alt_data_end+0xfffd2bd0>
   52bac:	010001b4 	movhi	r4,6
   52bb0:	212db404 	addi	r4,r4,-18736
   52bb4:	d9003515 	stw	r4,212(sp)
   52bb8:	003b0606 	br	517d4 <__alt_data_end+0xfffd2fd4>
   52bbc:	013fffc4 	movi	r4,-1
   52bc0:	003a2706 	br	51460 <__alt_data_end+0xfffd2c60>
   52bc4:	d9402c17 	ldw	r5,176(sp)
   52bc8:	d9801e04 	addi	r6,sp,120
   52bcc:	9809883a 	mov	r4,r19
   52bd0:	0055d180 	call	55d18 <__ssprint_r>
   52bd4:	1039f91e 	bne	r2,zero,513bc <__alt_data_end+0xfffd2bbc>
   52bd8:	d8c02017 	ldw	r3,128(sp)
   52bdc:	da000404 	addi	r8,sp,16
   52be0:	003d8406 	br	521f4 <__alt_data_end+0xfffd39f4>
   52be4:	0023883a 	mov	r17,zero
   52be8:	003d8306 	br	521f8 <__alt_data_end+0xfffd39f8>
   52bec:	010001b4 	movhi	r4,6
   52bf0:	212db004 	addi	r4,r4,-18752
   52bf4:	d9002b15 	stw	r4,172(sp)
   52bf8:	d9002b17 	ldw	r4,172(sp)
   52bfc:	1c47883a 	add	r3,r3,r17
   52c00:	10800044 	addi	r2,r2,1
   52c04:	41000015 	stw	r4,0(r8)
   52c08:	44400115 	stw	r17,4(r8)
   52c0c:	d8c02015 	stw	r3,128(sp)
   52c10:	d8801f15 	stw	r2,124(sp)
   52c14:	010001c4 	movi	r4,7
   52c18:	20bfcd16 	blt	r4,r2,52b50 <__alt_data_end+0xfffd4350>
   52c1c:	42000204 	addi	r8,r8,8
   52c20:	003fd306 	br	52b70 <__alt_data_end+0xfffd4370>
   52c24:	d9402c17 	ldw	r5,176(sp)
   52c28:	d9801e04 	addi	r6,sp,120
   52c2c:	9809883a 	mov	r4,r19
   52c30:	0055d180 	call	55d18 <__ssprint_r>
   52c34:	1039e11e 	bne	r2,zero,513bc <__alt_data_end+0xfffd2bbc>
   52c38:	d8802617 	ldw	r2,152(sp)
   52c3c:	d8c02017 	ldw	r3,128(sp)
   52c40:	da000404 	addi	r8,sp,16
   52c44:	003e1c06 	br	524b8 <__alt_data_end+0xfffd3cb8>
   52c48:	d8802917 	ldw	r2,164(sp)
   52c4c:	00c00184 	movi	r3,6
   52c50:	1880012e 	bgeu	r3,r2,52c58 <___svfprintf_internal_r+0x1c30>
   52c54:	1805883a 	mov	r2,r3
   52c58:	d8802e15 	stw	r2,184(sp)
   52c5c:	1000f316 	blt	r2,zero,5302c <___svfprintf_internal_r+0x2004>
   52c60:	040001b4 	movhi	r16,6
   52c64:	d8802a15 	stw	r2,168(sp)
   52c68:	dd002d15 	stw	r20,180(sp)
   52c6c:	d8002915 	stw	zero,164(sp)
   52c70:	d8003215 	stw	zero,200(sp)
   52c74:	842c9104 	addi	r16,r16,-19900
   52c78:	0039883a 	mov	fp,zero
   52c7c:	003a9f06 	br	516fc <__alt_data_end+0xfffd2efc>
   52c80:	010001b4 	movhi	r4,6
   52c84:	212db404 	addi	r4,r4,-18736
   52c88:	d9003515 	stw	r4,212(sp)
   52c8c:	003b5f06 	br	51a0c <__alt_data_end+0xfffd320c>
   52c90:	d9402c17 	ldw	r5,176(sp)
   52c94:	d9801e04 	addi	r6,sp,120
   52c98:	9809883a 	mov	r4,r19
   52c9c:	0055d180 	call	55d18 <__ssprint_r>
   52ca0:	1039c61e 	bne	r2,zero,513bc <__alt_data_end+0xfffd2bbc>
   52ca4:	d8802617 	ldw	r2,152(sp)
   52ca8:	d9403317 	ldw	r5,204(sp)
   52cac:	d8c02017 	ldw	r3,128(sp)
   52cb0:	da000404 	addi	r8,sp,16
   52cb4:	2885c83a 	sub	r2,r5,r2
   52cb8:	003e1006 	br	524fc <__alt_data_end+0xfffd3cfc>
   52cbc:	00800044 	movi	r2,1
   52cc0:	10803fcc 	andi	r2,r2,255
   52cc4:	00c00044 	movi	r3,1
   52cc8:	10fa3526 	beq	r2,r3,515a0 <__alt_data_end+0xfffd2da0>
   52ccc:	00c00084 	movi	r3,2
   52cd0:	10fb9e26 	beq	r2,r3,51b4c <__alt_data_end+0xfffd334c>
   52cd4:	003a6406 	br	51668 <__alt_data_end+0xfffd2e68>
   52cd8:	0021883a 	mov	r16,zero
   52cdc:	003e0806 	br	52500 <__alt_data_end+0xfffd3d00>
   52ce0:	07000b44 	movi	fp,45
   52ce4:	df002785 	stb	fp,158(sp)
   52ce8:	003a0b06 	br	51518 <__alt_data_end+0xfffd2d18>
   52cec:	d8c02d17 	ldw	r3,180(sp)
   52cf0:	d9002f17 	ldw	r4,188(sp)
   52cf4:	18800017 	ldw	r2,0(r3)
   52cf8:	18c00104 	addi	r3,r3,4
   52cfc:	d8c02d15 	stw	r3,180(sp)
   52d00:	11000015 	stw	r4,0(r2)
   52d04:	0038f306 	br	510d4 <__alt_data_end+0xfffd28d4>
   52d08:	00c00b44 	movi	r3,45
   52d0c:	d8c02785 	stb	r3,158(sp)
   52d10:	d8802a15 	stw	r2,168(sp)
   52d14:	dc802b17 	ldw	r18,172(sp)
   52d18:	d8002915 	stw	zero,164(sp)
   52d1c:	07000b44 	movi	fp,45
   52d20:	003a7306 	br	516f0 <__alt_data_end+0xfffd2ef0>
   52d24:	9080004c 	andi	r2,r18,1
   52d28:	1000941e 	bne	r2,zero,52f7c <___svfprintf_internal_r+0x1f54>
   52d2c:	d8802117 	ldw	r2,132(sp)
   52d30:	1405c83a 	sub	r2,r2,r16
   52d34:	d8803315 	stw	r2,204(sp)
   52d38:	b441161e 	bne	r22,r17,53194 <___svfprintf_internal_r+0x216c>
   52d3c:	dd802617 	ldw	r22,152(sp)
   52d40:	00bfff44 	movi	r2,-3
   52d44:	b0801a16 	blt	r22,r2,52db0 <___svfprintf_internal_r+0x1d88>
   52d48:	d9402917 	ldw	r5,164(sp)
   52d4c:	2d801816 	blt	r5,r22,52db0 <___svfprintf_internal_r+0x1d88>
   52d50:	dd803215 	stw	r22,200(sp)
   52d54:	003f3a06 	br	52a40 <__alt_data_end+0xfffd4240>
   52d58:	1025883a 	mov	r18,r2
   52d5c:	0039883a 	mov	fp,zero
   52d60:	00800084 	movi	r2,2
   52d64:	003fd606 	br	52cc0 <__alt_data_end+0xfffd44c0>
   52d68:	9080004c 	andi	r2,r18,1
   52d6c:	103f191e 	bne	r2,zero,529d4 <__alt_data_end+0xfffd41d4>
   52d70:	d8802117 	ldw	r2,132(sp)
   52d74:	003f2806 	br	52a18 <__alt_data_end+0xfffd4218>
   52d78:	010001b4 	movhi	r4,6
   52d7c:	212db004 	addi	r4,r4,-18752
   52d80:	d9002b15 	stw	r4,172(sp)
   52d84:	003c7c06 	br	51f78 <__alt_data_end+0xfffd3778>
   52d88:	e005883a 	mov	r2,fp
   52d8c:	003f2206 	br	52a18 <__alt_data_end+0xfffd4218>
   52d90:	d9402917 	ldw	r5,164(sp)
   52d94:	df002783 	ldbu	fp,158(sp)
   52d98:	dd002d15 	stw	r20,180(sp)
   52d9c:	d9402a15 	stw	r5,168(sp)
   52da0:	d9402e15 	stw	r5,184(sp)
   52da4:	d8002915 	stw	zero,164(sp)
   52da8:	d8003215 	stw	zero,200(sp)
   52dac:	003a4c06 	br	516e0 <__alt_data_end+0xfffd2ee0>
   52db0:	8c7fff84 	addi	r17,r17,-2
   52db4:	b5bfffc4 	addi	r22,r22,-1
   52db8:	dd802615 	stw	r22,152(sp)
   52dbc:	dc4022c5 	stb	r17,139(sp)
   52dc0:	b000c316 	blt	r22,zero,530d0 <___svfprintf_internal_r+0x20a8>
   52dc4:	00800ac4 	movi	r2,43
   52dc8:	d8802305 	stb	r2,140(sp)
   52dcc:	00800244 	movi	r2,9
   52dd0:	15806e16 	blt	r2,r22,52f8c <___svfprintf_internal_r+0x1f64>
   52dd4:	00800c04 	movi	r2,48
   52dd8:	b5800c04 	addi	r22,r22,48
   52ddc:	d8802345 	stb	r2,141(sp)
   52de0:	dd802385 	stb	r22,142(sp)
   52de4:	d88023c4 	addi	r2,sp,143
   52de8:	df0022c4 	addi	fp,sp,139
   52dec:	d8c03317 	ldw	r3,204(sp)
   52df0:	1739c83a 	sub	fp,r2,fp
   52df4:	d9003317 	ldw	r4,204(sp)
   52df8:	e0c7883a 	add	r3,fp,r3
   52dfc:	df003b15 	stw	fp,236(sp)
   52e00:	d8c02e15 	stw	r3,184(sp)
   52e04:	00800044 	movi	r2,1
   52e08:	1100b70e 	bge	r2,r4,530e8 <___svfprintf_internal_r+0x20c0>
   52e0c:	d8c02e17 	ldw	r3,184(sp)
   52e10:	18c00044 	addi	r3,r3,1
   52e14:	d8c02e15 	stw	r3,184(sp)
   52e18:	1805883a 	mov	r2,r3
   52e1c:	1800b016 	blt	r3,zero,530e0 <___svfprintf_internal_r+0x20b8>
   52e20:	d8003215 	stw	zero,200(sp)
   52e24:	003f1006 	br	52a68 <__alt_data_end+0xfffd4268>
   52e28:	d8802917 	ldw	r2,164(sp)
   52e2c:	103ec71e 	bne	r2,zero,5294c <__alt_data_end+0xfffd414c>
   52e30:	dc002915 	stw	r16,164(sp)
   52e34:	003ec506 	br	5294c <__alt_data_end+0xfffd414c>
   52e38:	d9402c17 	ldw	r5,176(sp)
   52e3c:	d9801e04 	addi	r6,sp,120
   52e40:	9809883a 	mov	r4,r19
   52e44:	0055d180 	call	55d18 <__ssprint_r>
   52e48:	10395c1e 	bne	r2,zero,513bc <__alt_data_end+0xfffd2bbc>
   52e4c:	dc402617 	ldw	r17,152(sp)
   52e50:	d8c02017 	ldw	r3,128(sp)
   52e54:	d8801f17 	ldw	r2,124(sp)
   52e58:	da000404 	addi	r8,sp,16
   52e5c:	003e7706 	br	5283c <__alt_data_end+0xfffd403c>
   52e60:	582f883a 	mov	r23,r11
   52e64:	d8002915 	stw	zero,164(sp)
   52e68:	0038c406 	br	5117c <__alt_data_end+0xfffd297c>
   52e6c:	d8c02917 	ldw	r3,164(sp)
   52e70:	d8802104 	addi	r2,sp,132
   52e74:	d8800315 	stw	r2,12(sp)
   52e78:	d9403617 	ldw	r5,216(sp)
   52e7c:	d8802504 	addi	r2,sp,148
   52e80:	d8800215 	stw	r2,8(sp)
   52e84:	d8802604 	addi	r2,sp,152
   52e88:	d8c00015 	stw	r3,0(sp)
   52e8c:	9809883a 	mov	r4,r19
   52e90:	d8800115 	stw	r2,4(sp)
   52e94:	01c000c4 	movi	r7,3
   52e98:	a00d883a 	mov	r6,r20
   52e9c:	da003e15 	stw	r8,248(sp)
   52ea0:	004986c0 	call	4986c <_dtoa_r>
   52ea4:	d9002917 	ldw	r4,164(sp)
   52ea8:	da003e17 	ldw	r8,248(sp)
   52eac:	1021883a 	mov	r16,r2
   52eb0:	1139883a 	add	fp,r2,r4
   52eb4:	2007883a 	mov	r3,r4
   52eb8:	81000007 	ldb	r4,0(r16)
   52ebc:	00800c04 	movi	r2,48
   52ec0:	20806f26 	beq	r4,r2,53080 <___svfprintf_internal_r+0x2058>
   52ec4:	d8c02617 	ldw	r3,152(sp)
   52ec8:	e0f9883a 	add	fp,fp,r3
   52ecc:	003ec206 	br	529d8 <__alt_data_end+0xfffd41d8>
   52ed0:	00c00b44 	movi	r3,45
   52ed4:	2520003c 	xorhi	r20,r4,32768
   52ed8:	d8c02a05 	stb	r3,168(sp)
   52edc:	003ea106 	br	52964 <__alt_data_end+0xfffd4164>
   52ee0:	d8c03217 	ldw	r3,200(sp)
   52ee4:	00c0890e 	bge	zero,r3,5310c <___svfprintf_internal_r+0x20e4>
   52ee8:	00800044 	movi	r2,1
   52eec:	d9003317 	ldw	r4,204(sp)
   52ef0:	1105883a 	add	r2,r2,r4
   52ef4:	d8802e15 	stw	r2,184(sp)
   52ef8:	10005f16 	blt	r2,zero,53078 <___svfprintf_internal_r+0x2050>
   52efc:	044019c4 	movi	r17,103
   52f00:	003ed906 	br	52a68 <__alt_data_end+0xfffd4268>
   52f04:	d9002917 	ldw	r4,164(sp)
   52f08:	20c00044 	addi	r3,r4,1
   52f0c:	003e9c06 	br	52980 <__alt_data_end+0xfffd4180>
   52f10:	d9002917 	ldw	r4,164(sp)
   52f14:	00c0680e 	bge	zero,r3,530b8 <___svfprintf_internal_r+0x2090>
   52f18:	2000461e 	bne	r4,zero,53034 <___svfprintf_internal_r+0x200c>
   52f1c:	9480004c 	andi	r18,r18,1
   52f20:	9000441e 	bne	r18,zero,53034 <___svfprintf_internal_r+0x200c>
   52f24:	1805883a 	mov	r2,r3
   52f28:	1800a016 	blt	r3,zero,531ac <___svfprintf_internal_r+0x2184>
   52f2c:	d8c03217 	ldw	r3,200(sp)
   52f30:	d8c02e15 	stw	r3,184(sp)
   52f34:	003ecc06 	br	52a68 <__alt_data_end+0xfffd4268>
   52f38:	d9402917 	ldw	r5,164(sp)
   52f3c:	d8802104 	addi	r2,sp,132
   52f40:	d8800315 	stw	r2,12(sp)
   52f44:	d9400015 	stw	r5,0(sp)
   52f48:	d8802504 	addi	r2,sp,148
   52f4c:	d9403617 	ldw	r5,216(sp)
   52f50:	d8800215 	stw	r2,8(sp)
   52f54:	d8802604 	addi	r2,sp,152
   52f58:	d8800115 	stw	r2,4(sp)
   52f5c:	01c000c4 	movi	r7,3
   52f60:	a00d883a 	mov	r6,r20
   52f64:	9809883a 	mov	r4,r19
   52f68:	da003e15 	stw	r8,248(sp)
   52f6c:	004986c0 	call	4986c <_dtoa_r>
   52f70:	d8c02917 	ldw	r3,164(sp)
   52f74:	da003e17 	ldw	r8,248(sp)
   52f78:	1021883a 	mov	r16,r2
   52f7c:	00801184 	movi	r2,70
   52f80:	80f9883a 	add	fp,r16,r3
   52f84:	88bfcc26 	beq	r17,r2,52eb8 <__alt_data_end+0xfffd46b8>
   52f88:	003e9306 	br	529d8 <__alt_data_end+0xfffd41d8>
   52f8c:	df0022c4 	addi	fp,sp,139
   52f90:	dc002915 	stw	r16,164(sp)
   52f94:	9829883a 	mov	r20,r19
   52f98:	e021883a 	mov	r16,fp
   52f9c:	4027883a 	mov	r19,r8
   52fa0:	b009883a 	mov	r4,r22
   52fa4:	01400284 	movi	r5,10
   52fa8:	00455000 	call	45500 <__modsi3>
   52fac:	10800c04 	addi	r2,r2,48
   52fb0:	843fffc4 	addi	r16,r16,-1
   52fb4:	b009883a 	mov	r4,r22
   52fb8:	01400284 	movi	r5,10
   52fbc:	80800005 	stb	r2,0(r16)
   52fc0:	004547c0 	call	4547c <__divsi3>
   52fc4:	102d883a 	mov	r22,r2
   52fc8:	00800244 	movi	r2,9
   52fcc:	15bff416 	blt	r2,r22,52fa0 <__alt_data_end+0xfffd47a0>
   52fd0:	9811883a 	mov	r8,r19
   52fd4:	b0800c04 	addi	r2,r22,48
   52fd8:	a027883a 	mov	r19,r20
   52fdc:	8029883a 	mov	r20,r16
   52fe0:	a17fffc4 	addi	r5,r20,-1
   52fe4:	a0bfffc5 	stb	r2,-1(r20)
   52fe8:	dc002917 	ldw	r16,164(sp)
   52fec:	2f00752e 	bgeu	r5,fp,531c4 <___svfprintf_internal_r+0x219c>
   52ff0:	d9c02384 	addi	r7,sp,142
   52ff4:	3d0fc83a 	sub	r7,r7,r20
   52ff8:	d9002344 	addi	r4,sp,141
   52ffc:	e1cf883a 	add	r7,fp,r7
   53000:	00000106 	br	53008 <___svfprintf_internal_r+0x1fe0>
   53004:	28800003 	ldbu	r2,0(r5)
   53008:	20800005 	stb	r2,0(r4)
   5300c:	21000044 	addi	r4,r4,1
   53010:	29400044 	addi	r5,r5,1
   53014:	21fffb1e 	bne	r4,r7,53004 <__alt_data_end+0xfffd4804>
   53018:	d8802304 	addi	r2,sp,140
   5301c:	1505c83a 	sub	r2,r2,r20
   53020:	d8c02344 	addi	r3,sp,141
   53024:	1885883a 	add	r2,r3,r2
   53028:	003f7006 	br	52dec <__alt_data_end+0xfffd45ec>
   5302c:	0005883a 	mov	r2,zero
   53030:	003f0b06 	br	52c60 <__alt_data_end+0xfffd4460>
   53034:	d9002917 	ldw	r4,164(sp)
   53038:	d8c03217 	ldw	r3,200(sp)
   5303c:	20800044 	addi	r2,r4,1
   53040:	1885883a 	add	r2,r3,r2
   53044:	d8802e15 	stw	r2,184(sp)
   53048:	103e870e 	bge	r2,zero,52a68 <__alt_data_end+0xfffd4268>
   5304c:	0005883a 	mov	r2,zero
   53050:	003e8506 	br	52a68 <__alt_data_end+0xfffd4268>
   53054:	010001b4 	movhi	r4,6
   53058:	212db004 	addi	r4,r4,-18752
   5305c:	d9002b15 	stw	r4,172(sp)
   53060:	003cc506 	br	52378 <__alt_data_end+0xfffd3b78>
   53064:	d8c03217 	ldw	r3,200(sp)
   53068:	18c00044 	addi	r3,r3,1
   5306c:	d8c02e15 	stw	r3,184(sp)
   53070:	1805883a 	mov	r2,r3
   53074:	183fa10e 	bge	r3,zero,52efc <__alt_data_end+0xfffd46fc>
   53078:	0005883a 	mov	r2,zero
   5307c:	003f9f06 	br	52efc <__alt_data_end+0xfffd46fc>
   53080:	d9003617 	ldw	r4,216(sp)
   53084:	000d883a 	mov	r6,zero
   53088:	000f883a 	mov	r7,zero
   5308c:	a00b883a 	mov	r5,r20
   53090:	d8c03d15 	stw	r3,244(sp)
   53094:	da003e15 	stw	r8,248(sp)
   53098:	00581100 	call	58110 <__eqdf2>
   5309c:	d8c03d17 	ldw	r3,244(sp)
   530a0:	da003e17 	ldw	r8,248(sp)
   530a4:	103f8726 	beq	r2,zero,52ec4 <__alt_data_end+0xfffd46c4>
   530a8:	00800044 	movi	r2,1
   530ac:	10c7c83a 	sub	r3,r2,r3
   530b0:	d8c02615 	stw	r3,152(sp)
   530b4:	003f8406 	br	52ec8 <__alt_data_end+0xfffd46c8>
   530b8:	20000e1e 	bne	r4,zero,530f4 <___svfprintf_internal_r+0x20cc>
   530bc:	9480004c 	andi	r18,r18,1
   530c0:	90000c1e 	bne	r18,zero,530f4 <___svfprintf_internal_r+0x20cc>
   530c4:	00800044 	movi	r2,1
   530c8:	d8802e15 	stw	r2,184(sp)
   530cc:	003e6606 	br	52a68 <__alt_data_end+0xfffd4268>
   530d0:	00800b44 	movi	r2,45
   530d4:	05adc83a 	sub	r22,zero,r22
   530d8:	d8802305 	stb	r2,140(sp)
   530dc:	003f3b06 	br	52dcc <__alt_data_end+0xfffd45cc>
   530e0:	0005883a 	mov	r2,zero
   530e4:	003f4e06 	br	52e20 <__alt_data_end+0xfffd4620>
   530e8:	90a4703a 	and	r18,r18,r2
   530ec:	903f4a26 	beq	r18,zero,52e18 <__alt_data_end+0xfffd4618>
   530f0:	003f4606 	br	52e0c <__alt_data_end+0xfffd460c>
   530f4:	d8c02917 	ldw	r3,164(sp)
   530f8:	18c00084 	addi	r3,r3,2
   530fc:	d8c02e15 	stw	r3,184(sp)
   53100:	1805883a 	mov	r2,r3
   53104:	183e580e 	bge	r3,zero,52a68 <__alt_data_end+0xfffd4268>
   53108:	003fd006 	br	5304c <__alt_data_end+0xfffd484c>
   5310c:	00800084 	movi	r2,2
   53110:	10c5c83a 	sub	r2,r2,r3
   53114:	003f7506 	br	52eec <__alt_data_end+0xfffd46ec>
   53118:	d8802d17 	ldw	r2,180(sp)
   5311c:	d9002d17 	ldw	r4,180(sp)
   53120:	bc400043 	ldbu	r17,1(r23)
   53124:	10800017 	ldw	r2,0(r2)
   53128:	582f883a 	mov	r23,r11
   5312c:	d8802915 	stw	r2,164(sp)
   53130:	20800104 	addi	r2,r4,4
   53134:	d9002917 	ldw	r4,164(sp)
   53138:	d8802d15 	stw	r2,180(sp)
   5313c:	203df00e 	bge	r4,zero,52900 <__alt_data_end+0xfffd4100>
   53140:	8c403fcc 	andi	r17,r17,255
   53144:	00bfffc4 	movi	r2,-1
   53148:	8c40201c 	xori	r17,r17,128
   5314c:	d8802915 	stw	r2,164(sp)
   53150:	8c7fe004 	addi	r17,r17,-128
   53154:	00380806 	br	51178 <__alt_data_end+0xfffd2978>
   53158:	9080004c 	andi	r2,r18,1
   5315c:	0039883a 	mov	fp,zero
   53160:	10000726 	beq	r2,zero,53180 <___svfprintf_internal_r+0x2158>
   53164:	d8c02817 	ldw	r3,160(sp)
   53168:	dc001dc4 	addi	r16,sp,119
   5316c:	00800c04 	movi	r2,48
   53170:	1c07c83a 	sub	r3,r3,r16
   53174:	d8801dc5 	stb	r2,119(sp)
   53178:	d8c02e15 	stw	r3,184(sp)
   5317c:	00395206 	br	516c8 <__alt_data_end+0xfffd2ec8>
   53180:	d8002e15 	stw	zero,184(sp)
   53184:	dc001e04 	addi	r16,sp,120
   53188:	00394f06 	br	516c8 <__alt_data_end+0xfffd2ec8>
   5318c:	0005883a 	mov	r2,zero
   53190:	003e3206 	br	52a5c <__alt_data_end+0xfffd425c>
   53194:	dd802617 	ldw	r22,152(sp)
   53198:	003f0606 	br	52db4 <__alt_data_end+0xfffd45b4>
   5319c:	d9c02785 	stb	r7,158(sp)
   531a0:	003a5106 	br	51ae8 <__alt_data_end+0xfffd32e8>
   531a4:	d9c02785 	stb	r7,158(sp)
   531a8:	003a3706 	br	51a88 <__alt_data_end+0xfffd3288>
   531ac:	0005883a 	mov	r2,zero
   531b0:	003f5e06 	br	52f2c <__alt_data_end+0xfffd472c>
   531b4:	d9c02785 	stb	r7,158(sp)
   531b8:	00391706 	br	51618 <__alt_data_end+0xfffd2e18>
   531bc:	d9c02785 	stb	r7,158(sp)
   531c0:	0038e606 	br	5155c <__alt_data_end+0xfffd2d5c>
   531c4:	d8802344 	addi	r2,sp,141
   531c8:	003f0806 	br	52dec <__alt_data_end+0xfffd45ec>
   531cc:	d9c02785 	stb	r7,158(sp)
   531d0:	0038b706 	br	514b0 <__alt_data_end+0xfffd2cb0>
   531d4:	d9c02785 	stb	r7,158(sp)
   531d8:	003adc06 	br	51d4c <__alt_data_end+0xfffd354c>
   531dc:	d9403917 	ldw	r5,228(sp)
   531e0:	00800304 	movi	r2,12
   531e4:	28800015 	stw	r2,0(r5)
   531e8:	00bfffc4 	movi	r2,-1
   531ec:	00387806 	br	513d0 <__alt_data_end+0xfffd2bd0>
   531f0:	d9c02785 	stb	r7,158(sp)
   531f4:	003abf06 	br	51cf4 <__alt_data_end+0xfffd34f4>
   531f8:	d9c02785 	stb	r7,158(sp)
   531fc:	003a9b06 	br	51c6c <__alt_data_end+0xfffd346c>

00053200 <__submore>:
   53200:	defffa04 	addi	sp,sp,-24
   53204:	dc000015 	stw	r16,0(sp)
   53208:	2821883a 	mov	r16,r5
   5320c:	29400c17 	ldw	r5,48(r5)
   53210:	dfc00515 	stw	ra,20(sp)
   53214:	dd000415 	stw	r20,16(sp)
   53218:	dcc00315 	stw	r19,12(sp)
   5321c:	dc800215 	stw	r18,8(sp)
   53220:	dc400115 	stw	r17,4(sp)
   53224:	80801004 	addi	r2,r16,64
   53228:	28801726 	beq	r5,r2,53288 <__submore+0x88>
   5322c:	84400d17 	ldw	r17,52(r16)
   53230:	8c67883a 	add	r19,r17,r17
   53234:	980d883a 	mov	r6,r19
   53238:	004e2700 	call	4e270 <_realloc_r>
   5323c:	1025883a 	mov	r18,r2
   53240:	10002226 	beq	r2,zero,532cc <__submore+0xcc>
   53244:	1469883a 	add	r20,r2,r17
   53248:	880d883a 	mov	r6,r17
   5324c:	100b883a 	mov	r5,r2
   53250:	a009883a 	mov	r4,r20
   53254:	00456300 	call	45630 <memcpy>
   53258:	0005883a 	mov	r2,zero
   5325c:	85000015 	stw	r20,0(r16)
   53260:	84800c15 	stw	r18,48(r16)
   53264:	84c00d15 	stw	r19,52(r16)
   53268:	dfc00517 	ldw	ra,20(sp)
   5326c:	dd000417 	ldw	r20,16(sp)
   53270:	dcc00317 	ldw	r19,12(sp)
   53274:	dc800217 	ldw	r18,8(sp)
   53278:	dc400117 	ldw	r17,4(sp)
   5327c:	dc000017 	ldw	r16,0(sp)
   53280:	dec00604 	addi	sp,sp,24
   53284:	f800283a 	ret
   53288:	04410004 	movi	r17,1024
   5328c:	880b883a 	mov	r5,r17
   53290:	004c4dc0 	call	4c4dc <_malloc_r>
   53294:	1007883a 	mov	r3,r2
   53298:	10000c26 	beq	r2,zero,532cc <__submore+0xcc>
   5329c:	80801083 	ldbu	r2,66(r16)
   532a0:	80c00c15 	stw	r3,48(r16)
   532a4:	84400d15 	stw	r17,52(r16)
   532a8:	1880ffc5 	stb	r2,1023(r3)
   532ac:	81401043 	ldbu	r5,65(r16)
   532b0:	1900ff44 	addi	r4,r3,1021
   532b4:	0005883a 	mov	r2,zero
   532b8:	1940ff85 	stb	r5,1022(r3)
   532bc:	81401003 	ldbu	r5,64(r16)
   532c0:	1940ff45 	stb	r5,1021(r3)
   532c4:	81000015 	stw	r4,0(r16)
   532c8:	003fe706 	br	53268 <__alt_data_end+0xfffd4a68>
   532cc:	00bfffc4 	movi	r2,-1
   532d0:	003fe506 	br	53268 <__alt_data_end+0xfffd4a68>

000532d4 <_ungetc_r>:
   532d4:	00bfffc4 	movi	r2,-1
   532d8:	28806126 	beq	r5,r2,53460 <_ungetc_r+0x18c>
   532dc:	defffb04 	addi	sp,sp,-20
   532e0:	dcc00315 	stw	r19,12(sp)
   532e4:	dc400115 	stw	r17,4(sp)
   532e8:	dc000015 	stw	r16,0(sp)
   532ec:	dfc00415 	stw	ra,16(sp)
   532f0:	dc800215 	stw	r18,8(sp)
   532f4:	2023883a 	mov	r17,r4
   532f8:	3021883a 	mov	r16,r6
   532fc:	2827883a 	mov	r19,r5
   53300:	20000226 	beq	r4,zero,5330c <_ungetc_r+0x38>
   53304:	20800e17 	ldw	r2,56(r4)
   53308:	10002e26 	beq	r2,zero,533c4 <_ungetc_r+0xf0>
   5330c:	80c0030b 	ldhu	r3,12(r16)
   53310:	1888000c 	andi	r2,r3,8192
   53314:	1000051e 	bne	r2,zero,5332c <_ungetc_r+0x58>
   53318:	81001917 	ldw	r4,100(r16)
   5331c:	00b7ffc4 	movi	r2,-8193
   53320:	18c80014 	ori	r3,r3,8192
   53324:	2084703a 	and	r2,r4,r2
   53328:	80801915 	stw	r2,100(r16)
   5332c:	00bff7c4 	movi	r2,-33
   53330:	1884703a 	and	r2,r3,r2
   53334:	8080030d 	sth	r2,12(r16)
   53338:	1900010c 	andi	r4,r3,4
   5333c:	2000061e 	bne	r4,zero,53358 <_ungetc_r+0x84>
   53340:	1900040c 	andi	r4,r3,16
   53344:	20001d26 	beq	r4,zero,533bc <_ungetc_r+0xe8>
   53348:	18c0020c 	andi	r3,r3,8
   5334c:	1800331e 	bne	r3,zero,5341c <_ungetc_r+0x148>
   53350:	10800114 	ori	r2,r2,4
   53354:	8080030d 	sth	r2,12(r16)
   53358:	80800c17 	ldw	r2,48(r16)
   5335c:	9c803fcc 	andi	r18,r19,255
   53360:	10001a26 	beq	r2,zero,533cc <_ungetc_r+0xf8>
   53364:	80c00117 	ldw	r3,4(r16)
   53368:	80800d17 	ldw	r2,52(r16)
   5336c:	18800f0e 	bge	r3,r2,533ac <_ungetc_r+0xd8>
   53370:	80c00017 	ldw	r3,0(r16)
   53374:	9005883a 	mov	r2,r18
   53378:	193fffc4 	addi	r4,r3,-1
   5337c:	81000015 	stw	r4,0(r16)
   53380:	1cffffc5 	stb	r19,-1(r3)
   53384:	80c00117 	ldw	r3,4(r16)
   53388:	18c00044 	addi	r3,r3,1
   5338c:	80c00115 	stw	r3,4(r16)
   53390:	dfc00417 	ldw	ra,16(sp)
   53394:	dcc00317 	ldw	r19,12(sp)
   53398:	dc800217 	ldw	r18,8(sp)
   5339c:	dc400117 	ldw	r17,4(sp)
   533a0:	dc000017 	ldw	r16,0(sp)
   533a4:	dec00504 	addi	sp,sp,20
   533a8:	f800283a 	ret
   533ac:	800b883a 	mov	r5,r16
   533b0:	8809883a 	mov	r4,r17
   533b4:	00532000 	call	53200 <__submore>
   533b8:	103fed26 	beq	r2,zero,53370 <__alt_data_end+0xfffd4b70>
   533bc:	00bfffc4 	movi	r2,-1
   533c0:	003ff306 	br	53390 <__alt_data_end+0xfffd4b90>
   533c4:	004b4ec0 	call	4b4ec <__sinit>
   533c8:	003fd006 	br	5330c <__alt_data_end+0xfffd4b0c>
   533cc:	80c00417 	ldw	r3,16(r16)
   533d0:	80800017 	ldw	r2,0(r16)
   533d4:	18000326 	beq	r3,zero,533e4 <_ungetc_r+0x110>
   533d8:	1880022e 	bgeu	r3,r2,533e4 <_ungetc_r+0x110>
   533dc:	10ffffc3 	ldbu	r3,-1(r2)
   533e0:	90c01826 	beq	r18,r3,53444 <_ungetc_r+0x170>
   533e4:	81400117 	ldw	r5,4(r16)
   533e8:	80800e15 	stw	r2,56(r16)
   533ec:	008000c4 	movi	r2,3
   533f0:	81001004 	addi	r4,r16,64
   533f4:	80c01084 	addi	r3,r16,66
   533f8:	80800d15 	stw	r2,52(r16)
   533fc:	00800044 	movi	r2,1
   53400:	80800115 	stw	r2,4(r16)
   53404:	81400f15 	stw	r5,60(r16)
   53408:	81000c15 	stw	r4,48(r16)
   5340c:	84c01085 	stb	r19,66(r16)
   53410:	80c00015 	stw	r3,0(r16)
   53414:	9005883a 	mov	r2,r18
   53418:	003fdd06 	br	53390 <__alt_data_end+0xfffd4b90>
   5341c:	800b883a 	mov	r5,r16
   53420:	8809883a 	mov	r4,r17
   53424:	004b1100 	call	4b110 <_fflush_r>
   53428:	103fe41e 	bne	r2,zero,533bc <__alt_data_end+0xfffd4bbc>
   5342c:	8080030b 	ldhu	r2,12(r16)
   53430:	00fffdc4 	movi	r3,-9
   53434:	80000215 	stw	zero,8(r16)
   53438:	1884703a 	and	r2,r3,r2
   5343c:	80000615 	stw	zero,24(r16)
   53440:	003fc306 	br	53350 <__alt_data_end+0xfffd4b50>
   53444:	80c00117 	ldw	r3,4(r16)
   53448:	10bfffc4 	addi	r2,r2,-1
   5344c:	80800015 	stw	r2,0(r16)
   53450:	18800044 	addi	r2,r3,1
   53454:	80800115 	stw	r2,4(r16)
   53458:	9005883a 	mov	r2,r18
   5345c:	003fcc06 	br	53390 <__alt_data_end+0xfffd4b90>
   53460:	00bfffc4 	movi	r2,-1
   53464:	f800283a 	ret

00053468 <ungetc>:
   53468:	008001b4 	movhi	r2,6
   5346c:	10b55004 	addi	r2,r2,-10944
   53470:	280d883a 	mov	r6,r5
   53474:	200b883a 	mov	r5,r4
   53478:	11000017 	ldw	r4,0(r2)
   5347c:	00532d41 	jmpi	532d4 <_ungetc_r>

00053480 <__sprint_r.part.0>:
   53480:	28801917 	ldw	r2,100(r5)
   53484:	defff604 	addi	sp,sp,-40
   53488:	dd400515 	stw	r21,20(sp)
   5348c:	dfc00915 	stw	ra,36(sp)
   53490:	df000815 	stw	fp,32(sp)
   53494:	ddc00715 	stw	r23,28(sp)
   53498:	dd800615 	stw	r22,24(sp)
   5349c:	dd000415 	stw	r20,16(sp)
   534a0:	dcc00315 	stw	r19,12(sp)
   534a4:	dc800215 	stw	r18,8(sp)
   534a8:	dc400115 	stw	r17,4(sp)
   534ac:	dc000015 	stw	r16,0(sp)
   534b0:	1088000c 	andi	r2,r2,8192
   534b4:	302b883a 	mov	r21,r6
   534b8:	10002e26 	beq	r2,zero,53574 <__sprint_r.part.0+0xf4>
   534bc:	30800217 	ldw	r2,8(r6)
   534c0:	35800017 	ldw	r22,0(r6)
   534c4:	10002926 	beq	r2,zero,5356c <__sprint_r.part.0+0xec>
   534c8:	2827883a 	mov	r19,r5
   534cc:	2029883a 	mov	r20,r4
   534d0:	b5c00104 	addi	r23,r22,4
   534d4:	04bfffc4 	movi	r18,-1
   534d8:	bc400017 	ldw	r17,0(r23)
   534dc:	b4000017 	ldw	r16,0(r22)
   534e0:	0039883a 	mov	fp,zero
   534e4:	8822d0ba 	srli	r17,r17,2
   534e8:	8800031e 	bne	r17,zero,534f8 <__sprint_r.part.0+0x78>
   534ec:	00001806 	br	53550 <__sprint_r.part.0+0xd0>
   534f0:	84000104 	addi	r16,r16,4
   534f4:	8f001526 	beq	r17,fp,5354c <__sprint_r.part.0+0xcc>
   534f8:	81400017 	ldw	r5,0(r16)
   534fc:	980d883a 	mov	r6,r19
   53500:	a009883a 	mov	r4,r20
   53504:	0054ea80 	call	54ea8 <_fputwc_r>
   53508:	e7000044 	addi	fp,fp,1
   5350c:	14bff81e 	bne	r2,r18,534f0 <__alt_data_end+0xfffd4cf0>
   53510:	9005883a 	mov	r2,r18
   53514:	a8000215 	stw	zero,8(r21)
   53518:	a8000115 	stw	zero,4(r21)
   5351c:	dfc00917 	ldw	ra,36(sp)
   53520:	df000817 	ldw	fp,32(sp)
   53524:	ddc00717 	ldw	r23,28(sp)
   53528:	dd800617 	ldw	r22,24(sp)
   5352c:	dd400517 	ldw	r21,20(sp)
   53530:	dd000417 	ldw	r20,16(sp)
   53534:	dcc00317 	ldw	r19,12(sp)
   53538:	dc800217 	ldw	r18,8(sp)
   5353c:	dc400117 	ldw	r17,4(sp)
   53540:	dc000017 	ldw	r16,0(sp)
   53544:	dec00a04 	addi	sp,sp,40
   53548:	f800283a 	ret
   5354c:	a8800217 	ldw	r2,8(r21)
   53550:	8c63883a 	add	r17,r17,r17
   53554:	8c63883a 	add	r17,r17,r17
   53558:	1445c83a 	sub	r2,r2,r17
   5355c:	a8800215 	stw	r2,8(r21)
   53560:	b5800204 	addi	r22,r22,8
   53564:	bdc00204 	addi	r23,r23,8
   53568:	103fdb1e 	bne	r2,zero,534d8 <__alt_data_end+0xfffd4cd8>
   5356c:	0005883a 	mov	r2,zero
   53570:	003fe806 	br	53514 <__alt_data_end+0xfffd4d14>
   53574:	004bbd00 	call	4bbd0 <__sfvwrite_r>
   53578:	003fe606 	br	53514 <__alt_data_end+0xfffd4d14>

0005357c <__sprint_r>:
   5357c:	30c00217 	ldw	r3,8(r6)
   53580:	18000126 	beq	r3,zero,53588 <__sprint_r+0xc>
   53584:	00534801 	jmpi	53480 <__sprint_r.part.0>
   53588:	30000115 	stw	zero,4(r6)
   5358c:	0005883a 	mov	r2,zero
   53590:	f800283a 	ret

00053594 <___vfiprintf_internal_r>:
   53594:	deffc904 	addi	sp,sp,-220
   53598:	df003515 	stw	fp,212(sp)
   5359c:	dd003115 	stw	r20,196(sp)
   535a0:	dfc03615 	stw	ra,216(sp)
   535a4:	ddc03415 	stw	r23,208(sp)
   535a8:	dd803315 	stw	r22,204(sp)
   535ac:	dd403215 	stw	r21,200(sp)
   535b0:	dcc03015 	stw	r19,192(sp)
   535b4:	dc802f15 	stw	r18,188(sp)
   535b8:	dc402e15 	stw	r17,184(sp)
   535bc:	dc002d15 	stw	r16,180(sp)
   535c0:	d9002015 	stw	r4,128(sp)
   535c4:	d9c02215 	stw	r7,136(sp)
   535c8:	2829883a 	mov	r20,r5
   535cc:	3039883a 	mov	fp,r6
   535d0:	20000226 	beq	r4,zero,535dc <___vfiprintf_internal_r+0x48>
   535d4:	20800e17 	ldw	r2,56(r4)
   535d8:	1000cf26 	beq	r2,zero,53918 <___vfiprintf_internal_r+0x384>
   535dc:	a080030b 	ldhu	r2,12(r20)
   535e0:	10c8000c 	andi	r3,r2,8192
   535e4:	1800061e 	bne	r3,zero,53600 <___vfiprintf_internal_r+0x6c>
   535e8:	a1001917 	ldw	r4,100(r20)
   535ec:	00f7ffc4 	movi	r3,-8193
   535f0:	10880014 	ori	r2,r2,8192
   535f4:	20c6703a 	and	r3,r4,r3
   535f8:	a080030d 	sth	r2,12(r20)
   535fc:	a0c01915 	stw	r3,100(r20)
   53600:	10c0020c 	andi	r3,r2,8
   53604:	1800a926 	beq	r3,zero,538ac <___vfiprintf_internal_r+0x318>
   53608:	a0c00417 	ldw	r3,16(r20)
   5360c:	1800a726 	beq	r3,zero,538ac <___vfiprintf_internal_r+0x318>
   53610:	1080068c 	andi	r2,r2,26
   53614:	00c00284 	movi	r3,10
   53618:	10c0ac26 	beq	r2,r3,538cc <___vfiprintf_internal_r+0x338>
   5361c:	da801a04 	addi	r10,sp,104
   53620:	da801e15 	stw	r10,120(sp)
   53624:	d8801e17 	ldw	r2,120(sp)
   53628:	da8019c4 	addi	r10,sp,103
   5362c:	058001b4 	movhi	r22,6
   53630:	05c001b4 	movhi	r23,6
   53634:	da801f15 	stw	r10,124(sp)
   53638:	1295c83a 	sub	r10,r2,r10
   5363c:	b5adbc04 	addi	r22,r22,-18704
   53640:	bdedb804 	addi	r23,r23,-18720
   53644:	dec01a15 	stw	sp,104(sp)
   53648:	d8001c15 	stw	zero,112(sp)
   5364c:	d8001b15 	stw	zero,108(sp)
   53650:	d8002615 	stw	zero,152(sp)
   53654:	d8002315 	stw	zero,140(sp)
   53658:	da802715 	stw	r10,156(sp)
   5365c:	d811883a 	mov	r8,sp
   53660:	dd002115 	stw	r20,132(sp)
   53664:	e021883a 	mov	r16,fp
   53668:	80800007 	ldb	r2,0(r16)
   5366c:	1003ea26 	beq	r2,zero,54618 <___vfiprintf_internal_r+0x1084>
   53670:	00c00944 	movi	r3,37
   53674:	8025883a 	mov	r18,r16
   53678:	10c0021e 	bne	r2,r3,53684 <___vfiprintf_internal_r+0xf0>
   5367c:	00001606 	br	536d8 <___vfiprintf_internal_r+0x144>
   53680:	10c00326 	beq	r2,r3,53690 <___vfiprintf_internal_r+0xfc>
   53684:	94800044 	addi	r18,r18,1
   53688:	90800007 	ldb	r2,0(r18)
   5368c:	103ffc1e 	bne	r2,zero,53680 <__alt_data_end+0xfffd4e80>
   53690:	9423c83a 	sub	r17,r18,r16
   53694:	88001026 	beq	r17,zero,536d8 <___vfiprintf_internal_r+0x144>
   53698:	d8c01c17 	ldw	r3,112(sp)
   5369c:	d8801b17 	ldw	r2,108(sp)
   536a0:	44000015 	stw	r16,0(r8)
   536a4:	88c7883a 	add	r3,r17,r3
   536a8:	10800044 	addi	r2,r2,1
   536ac:	44400115 	stw	r17,4(r8)
   536b0:	d8c01c15 	stw	r3,112(sp)
   536b4:	d8801b15 	stw	r2,108(sp)
   536b8:	010001c4 	movi	r4,7
   536bc:	2080760e 	bge	r4,r2,53898 <___vfiprintf_internal_r+0x304>
   536c0:	1803821e 	bne	r3,zero,544cc <___vfiprintf_internal_r+0xf38>
   536c4:	da802317 	ldw	r10,140(sp)
   536c8:	d8001b15 	stw	zero,108(sp)
   536cc:	d811883a 	mov	r8,sp
   536d0:	5455883a 	add	r10,r10,r17
   536d4:	da802315 	stw	r10,140(sp)
   536d8:	90800007 	ldb	r2,0(r18)
   536dc:	10044626 	beq	r2,zero,547f8 <___vfiprintf_internal_r+0x1264>
   536e0:	90c00047 	ldb	r3,1(r18)
   536e4:	94000044 	addi	r16,r18,1
   536e8:	d8001d85 	stb	zero,118(sp)
   536ec:	0009883a 	mov	r4,zero
   536f0:	000f883a 	mov	r7,zero
   536f4:	027fffc4 	movi	r9,-1
   536f8:	0023883a 	mov	r17,zero
   536fc:	0029883a 	mov	r20,zero
   53700:	01401604 	movi	r5,88
   53704:	01800244 	movi	r6,9
   53708:	03400a84 	movi	r13,42
   5370c:	03001b04 	movi	r12,108
   53710:	84000044 	addi	r16,r16,1
   53714:	18bff804 	addi	r2,r3,-32
   53718:	28827336 	bltu	r5,r2,540e8 <___vfiprintf_internal_r+0xb54>
   5371c:	100490ba 	slli	r2,r2,2
   53720:	02800174 	movhi	r10,5
   53724:	528dcd04 	addi	r10,r10,14132
   53728:	1285883a 	add	r2,r2,r10
   5372c:	10800017 	ldw	r2,0(r2)
   53730:	1000683a 	jmp	r2
   53734:	00053e1c 	xori	zero,zero,5368
   53738:	000540e8 	cmpgeui	zero,zero,5379
   5373c:	000540e8 	cmpgeui	zero,zero,5379
   53740:	00053e3c 	xorhi	zero,zero,5368
   53744:	000540e8 	cmpgeui	zero,zero,5379
   53748:	000540e8 	cmpgeui	zero,zero,5379
   5374c:	000540e8 	cmpgeui	zero,zero,5379
   53750:	000540e8 	cmpgeui	zero,zero,5379
   53754:	000540e8 	cmpgeui	zero,zero,5379
   53758:	000540e8 	cmpgeui	zero,zero,5379
   5375c:	00054024 	muli	zero,zero,5376
   53760:	00054040 	call	5404 <__alt_mem_onchip_memory2-0x3abfc>
   53764:	000540e8 	cmpgeui	zero,zero,5379
   53768:	00053928 	cmpgeui	zero,zero,5348
   5376c:	00054050 	cmplti	zero,zero,5377
   53770:	000540e8 	cmpgeui	zero,zero,5379
   53774:	00053e48 	cmpgei	zero,zero,5369
   53778:	00053e54 	movui	zero,5369
   5377c:	00053e54 	movui	zero,5369
   53780:	00053e54 	movui	zero,5369
   53784:	00053e54 	movui	zero,5369
   53788:	00053e54 	movui	zero,5369
   5378c:	00053e54 	movui	zero,5369
   53790:	00053e54 	movui	zero,5369
   53794:	00053e54 	movui	zero,5369
   53798:	00053e54 	movui	zero,5369
   5379c:	000540e8 	cmpgeui	zero,zero,5379
   537a0:	000540e8 	cmpgeui	zero,zero,5379
   537a4:	000540e8 	cmpgeui	zero,zero,5379
   537a8:	000540e8 	cmpgeui	zero,zero,5379
   537ac:	000540e8 	cmpgeui	zero,zero,5379
   537b0:	000540e8 	cmpgeui	zero,zero,5379
   537b4:	000540e8 	cmpgeui	zero,zero,5379
   537b8:	000540e8 	cmpgeui	zero,zero,5379
   537bc:	000540e8 	cmpgeui	zero,zero,5379
   537c0:	000540e8 	cmpgeui	zero,zero,5379
   537c4:	00053e80 	call	53e8 <__alt_mem_onchip_memory2-0x3ac18>
   537c8:	000540e8 	cmpgeui	zero,zero,5379
   537cc:	000540e8 	cmpgeui	zero,zero,5379
   537d0:	000540e8 	cmpgeui	zero,zero,5379
   537d4:	000540e8 	cmpgeui	zero,zero,5379
   537d8:	000540e8 	cmpgeui	zero,zero,5379
   537dc:	000540e8 	cmpgeui	zero,zero,5379
   537e0:	000540e8 	cmpgeui	zero,zero,5379
   537e4:	000540e8 	cmpgeui	zero,zero,5379
   537e8:	000540e8 	cmpgeui	zero,zero,5379
   537ec:	000540e8 	cmpgeui	zero,zero,5379
   537f0:	00053eb8 	rdprs	zero,zero,5370
   537f4:	000540e8 	cmpgeui	zero,zero,5379
   537f8:	000540e8 	cmpgeui	zero,zero,5379
   537fc:	000540e8 	cmpgeui	zero,zero,5379
   53800:	000540e8 	cmpgeui	zero,zero,5379
   53804:	000540e8 	cmpgeui	zero,zero,5379
   53808:	00053f10 	cmplti	zero,zero,5372
   5380c:	000540e8 	cmpgeui	zero,zero,5379
   53810:	000540e8 	cmpgeui	zero,zero,5379
   53814:	00053f80 	call	53f8 <__alt_mem_onchip_memory2-0x3ac08>
   53818:	000540e8 	cmpgeui	zero,zero,5379
   5381c:	000540e8 	cmpgeui	zero,zero,5379
   53820:	000540e8 	cmpgeui	zero,zero,5379
   53824:	000540e8 	cmpgeui	zero,zero,5379
   53828:	000540e8 	cmpgeui	zero,zero,5379
   5382c:	000540e8 	cmpgeui	zero,zero,5379
   53830:	000540e8 	cmpgeui	zero,zero,5379
   53834:	000540e8 	cmpgeui	zero,zero,5379
   53838:	000540e8 	cmpgeui	zero,zero,5379
   5383c:	000540e8 	cmpgeui	zero,zero,5379
   53840:	00053d2c 	andhi	zero,zero,5364
   53844:	00053d58 	cmpnei	zero,zero,5365
   53848:	000540e8 	cmpgeui	zero,zero,5379
   5384c:	000540e8 	cmpgeui	zero,zero,5379
   53850:	000540e8 	cmpgeui	zero,zero,5379
   53854:	00054090 	cmplti	zero,zero,5378
   53858:	00053d58 	cmpnei	zero,zero,5365
   5385c:	000540e8 	cmpgeui	zero,zero,5379
   53860:	000540e8 	cmpgeui	zero,zero,5379
   53864:	00053bec 	andhi	zero,zero,5359
   53868:	000540e8 	cmpgeui	zero,zero,5379
   5386c:	00053bfc 	xorhi	zero,zero,5359
   53870:	00053c38 	rdprs	zero,zero,5360
   53874:	00053934 	movhi	zero,5348
   53878:	00053be0 	cmpeqi	zero,zero,5359
   5387c:	000540e8 	cmpgeui	zero,zero,5379
   53880:	00053fbc 	xorhi	zero,zero,5374
   53884:	000540e8 	cmpgeui	zero,zero,5379
   53888:	00054014 	movui	zero,5376
   5388c:	000540e8 	cmpgeui	zero,zero,5379
   53890:	000540e8 	cmpgeui	zero,zero,5379
   53894:	00053cd8 	cmpnei	zero,zero,5363
   53898:	42000204 	addi	r8,r8,8
   5389c:	da802317 	ldw	r10,140(sp)
   538a0:	5455883a 	add	r10,r10,r17
   538a4:	da802315 	stw	r10,140(sp)
   538a8:	003f8b06 	br	536d8 <__alt_data_end+0xfffd4ed8>
   538ac:	d9002017 	ldw	r4,128(sp)
   538b0:	a00b883a 	mov	r5,r20
   538b4:	00495180 	call	49518 <__swsetup_r>
   538b8:	1003b11e 	bne	r2,zero,54780 <___vfiprintf_internal_r+0x11ec>
   538bc:	a080030b 	ldhu	r2,12(r20)
   538c0:	00c00284 	movi	r3,10
   538c4:	1080068c 	andi	r2,r2,26
   538c8:	10ff541e 	bne	r2,r3,5361c <__alt_data_end+0xfffd4e1c>
   538cc:	a080038f 	ldh	r2,14(r20)
   538d0:	103f5216 	blt	r2,zero,5361c <__alt_data_end+0xfffd4e1c>
   538d4:	d9c02217 	ldw	r7,136(sp)
   538d8:	d9002017 	ldw	r4,128(sp)
   538dc:	e00d883a 	mov	r6,fp
   538e0:	a00b883a 	mov	r5,r20
   538e4:	0054a0c0 	call	54a0c <__sbprintf>
   538e8:	dfc03617 	ldw	ra,216(sp)
   538ec:	df003517 	ldw	fp,212(sp)
   538f0:	ddc03417 	ldw	r23,208(sp)
   538f4:	dd803317 	ldw	r22,204(sp)
   538f8:	dd403217 	ldw	r21,200(sp)
   538fc:	dd003117 	ldw	r20,196(sp)
   53900:	dcc03017 	ldw	r19,192(sp)
   53904:	dc802f17 	ldw	r18,188(sp)
   53908:	dc402e17 	ldw	r17,184(sp)
   5390c:	dc002d17 	ldw	r16,180(sp)
   53910:	dec03704 	addi	sp,sp,220
   53914:	f800283a 	ret
   53918:	004b4ec0 	call	4b4ec <__sinit>
   5391c:	003f2f06 	br	535dc <__alt_data_end+0xfffd4ddc>
   53920:	0463c83a 	sub	r17,zero,r17
   53924:	d8802215 	stw	r2,136(sp)
   53928:	a5000114 	ori	r20,r20,4
   5392c:	80c00007 	ldb	r3,0(r16)
   53930:	003f7706 	br	53710 <__alt_data_end+0xfffd4f10>
   53934:	00800c04 	movi	r2,48
   53938:	da802217 	ldw	r10,136(sp)
   5393c:	d8801d05 	stb	r2,116(sp)
   53940:	00801e04 	movi	r2,120
   53944:	d8801d45 	stb	r2,117(sp)
   53948:	d8001d85 	stb	zero,118(sp)
   5394c:	50c00104 	addi	r3,r10,4
   53950:	54800017 	ldw	r18,0(r10)
   53954:	0027883a 	mov	r19,zero
   53958:	a0800094 	ori	r2,r20,2
   5395c:	48030b16 	blt	r9,zero,5458c <___vfiprintf_internal_r+0xff8>
   53960:	00bfdfc4 	movi	r2,-129
   53964:	a096703a 	and	r11,r20,r2
   53968:	d8c02215 	stw	r3,136(sp)
   5396c:	5d000094 	ori	r20,r11,2
   53970:	90032b1e 	bne	r18,zero,54620 <___vfiprintf_internal_r+0x108c>
   53974:	008001b4 	movhi	r2,6
   53978:	10ac8c04 	addi	r2,r2,-19920
   5397c:	d8802615 	stw	r2,152(sp)
   53980:	0039883a 	mov	fp,zero
   53984:	48017b1e 	bne	r9,zero,53f74 <___vfiprintf_internal_r+0x9e0>
   53988:	0013883a 	mov	r9,zero
   5398c:	0027883a 	mov	r19,zero
   53990:	dd401a04 	addi	r21,sp,104
   53994:	4825883a 	mov	r18,r9
   53998:	4cc0010e 	bge	r9,r19,539a0 <___vfiprintf_internal_r+0x40c>
   5399c:	9825883a 	mov	r18,r19
   539a0:	e7003fcc 	andi	fp,fp,255
   539a4:	e700201c 	xori	fp,fp,128
   539a8:	e73fe004 	addi	fp,fp,-128
   539ac:	e0000126 	beq	fp,zero,539b4 <___vfiprintf_internal_r+0x420>
   539b0:	94800044 	addi	r18,r18,1
   539b4:	a380008c 	andi	r14,r20,2
   539b8:	70000126 	beq	r14,zero,539c0 <___vfiprintf_internal_r+0x42c>
   539bc:	94800084 	addi	r18,r18,2
   539c0:	a700210c 	andi	fp,r20,132
   539c4:	e001df1e 	bne	fp,zero,54144 <___vfiprintf_internal_r+0xbb0>
   539c8:	8c87c83a 	sub	r3,r17,r18
   539cc:	00c1dd0e 	bge	zero,r3,54144 <___vfiprintf_internal_r+0xbb0>
   539d0:	01c00404 	movi	r7,16
   539d4:	d8801c17 	ldw	r2,112(sp)
   539d8:	38c3ad0e 	bge	r7,r3,54890 <___vfiprintf_internal_r+0x12fc>
   539dc:	028001b4 	movhi	r10,6
   539e0:	52adbc04 	addi	r10,r10,-18704
   539e4:	dc002915 	stw	r16,164(sp)
   539e8:	d9801b17 	ldw	r6,108(sp)
   539ec:	da802415 	stw	r10,144(sp)
   539f0:	03c001c4 	movi	r15,7
   539f4:	da402515 	stw	r9,148(sp)
   539f8:	db802815 	stw	r14,160(sp)
   539fc:	1821883a 	mov	r16,r3
   53a00:	00000506 	br	53a18 <___vfiprintf_internal_r+0x484>
   53a04:	31400084 	addi	r5,r6,2
   53a08:	42000204 	addi	r8,r8,8
   53a0c:	200d883a 	mov	r6,r4
   53a10:	843ffc04 	addi	r16,r16,-16
   53a14:	3c000d0e 	bge	r7,r16,53a4c <___vfiprintf_internal_r+0x4b8>
   53a18:	10800404 	addi	r2,r2,16
   53a1c:	31000044 	addi	r4,r6,1
   53a20:	45800015 	stw	r22,0(r8)
   53a24:	41c00115 	stw	r7,4(r8)
   53a28:	d8801c15 	stw	r2,112(sp)
   53a2c:	d9001b15 	stw	r4,108(sp)
   53a30:	793ff40e 	bge	r15,r4,53a04 <__alt_data_end+0xfffd5204>
   53a34:	1001b51e 	bne	r2,zero,5410c <___vfiprintf_internal_r+0xb78>
   53a38:	843ffc04 	addi	r16,r16,-16
   53a3c:	000d883a 	mov	r6,zero
   53a40:	01400044 	movi	r5,1
   53a44:	d811883a 	mov	r8,sp
   53a48:	3c3ff316 	blt	r7,r16,53a18 <__alt_data_end+0xfffd5218>
   53a4c:	8007883a 	mov	r3,r16
   53a50:	da402517 	ldw	r9,148(sp)
   53a54:	db802817 	ldw	r14,160(sp)
   53a58:	dc002917 	ldw	r16,164(sp)
   53a5c:	da802417 	ldw	r10,144(sp)
   53a60:	1885883a 	add	r2,r3,r2
   53a64:	40c00115 	stw	r3,4(r8)
   53a68:	42800015 	stw	r10,0(r8)
   53a6c:	d8801c15 	stw	r2,112(sp)
   53a70:	d9401b15 	stw	r5,108(sp)
   53a74:	00c001c4 	movi	r3,7
   53a78:	19426016 	blt	r3,r5,543fc <___vfiprintf_internal_r+0xe68>
   53a7c:	d8c01d87 	ldb	r3,118(sp)
   53a80:	42000204 	addi	r8,r8,8
   53a84:	29000044 	addi	r4,r5,1
   53a88:	1801b31e 	bne	r3,zero,54158 <___vfiprintf_internal_r+0xbc4>
   53a8c:	7001c026 	beq	r14,zero,54190 <___vfiprintf_internal_r+0xbfc>
   53a90:	d8c01d04 	addi	r3,sp,116
   53a94:	10800084 	addi	r2,r2,2
   53a98:	40c00015 	stw	r3,0(r8)
   53a9c:	00c00084 	movi	r3,2
   53aa0:	40c00115 	stw	r3,4(r8)
   53aa4:	d8801c15 	stw	r2,112(sp)
   53aa8:	d9001b15 	stw	r4,108(sp)
   53aac:	00c001c4 	movi	r3,7
   53ab0:	1902650e 	bge	r3,r4,54448 <___vfiprintf_internal_r+0xeb4>
   53ab4:	10029a1e 	bne	r2,zero,54520 <___vfiprintf_internal_r+0xf8c>
   53ab8:	00c02004 	movi	r3,128
   53abc:	01000044 	movi	r4,1
   53ac0:	000b883a 	mov	r5,zero
   53ac4:	d811883a 	mov	r8,sp
   53ac8:	e0c1b31e 	bne	fp,r3,54198 <___vfiprintf_internal_r+0xc04>
   53acc:	8cb9c83a 	sub	fp,r17,r18
   53ad0:	0701b10e 	bge	zero,fp,54198 <___vfiprintf_internal_r+0xc04>
   53ad4:	01c00404 	movi	r7,16
   53ad8:	3f03890e 	bge	r7,fp,54900 <___vfiprintf_internal_r+0x136c>
   53adc:	00c001b4 	movhi	r3,6
   53ae0:	18edb804 	addi	r3,r3,-18720
   53ae4:	d8c02415 	stw	r3,144(sp)
   53ae8:	8007883a 	mov	r3,r16
   53aec:	034001c4 	movi	r13,7
   53af0:	e021883a 	mov	r16,fp
   53af4:	da402515 	stw	r9,148(sp)
   53af8:	1839883a 	mov	fp,r3
   53afc:	00000506 	br	53b14 <___vfiprintf_internal_r+0x580>
   53b00:	29800084 	addi	r6,r5,2
   53b04:	42000204 	addi	r8,r8,8
   53b08:	180b883a 	mov	r5,r3
   53b0c:	843ffc04 	addi	r16,r16,-16
   53b10:	3c000d0e 	bge	r7,r16,53b48 <___vfiprintf_internal_r+0x5b4>
   53b14:	10800404 	addi	r2,r2,16
   53b18:	28c00044 	addi	r3,r5,1
   53b1c:	45c00015 	stw	r23,0(r8)
   53b20:	41c00115 	stw	r7,4(r8)
   53b24:	d8801c15 	stw	r2,112(sp)
   53b28:	d8c01b15 	stw	r3,108(sp)
   53b2c:	68fff40e 	bge	r13,r3,53b00 <__alt_data_end+0xfffd5300>
   53b30:	1002241e 	bne	r2,zero,543c4 <___vfiprintf_internal_r+0xe30>
   53b34:	843ffc04 	addi	r16,r16,-16
   53b38:	01800044 	movi	r6,1
   53b3c:	000b883a 	mov	r5,zero
   53b40:	d811883a 	mov	r8,sp
   53b44:	3c3ff316 	blt	r7,r16,53b14 <__alt_data_end+0xfffd5314>
   53b48:	da402517 	ldw	r9,148(sp)
   53b4c:	e007883a 	mov	r3,fp
   53b50:	8039883a 	mov	fp,r16
   53b54:	1821883a 	mov	r16,r3
   53b58:	d8c02417 	ldw	r3,144(sp)
   53b5c:	1705883a 	add	r2,r2,fp
   53b60:	47000115 	stw	fp,4(r8)
   53b64:	40c00015 	stw	r3,0(r8)
   53b68:	d8801c15 	stw	r2,112(sp)
   53b6c:	d9801b15 	stw	r6,108(sp)
   53b70:	00c001c4 	movi	r3,7
   53b74:	19827616 	blt	r3,r6,54550 <___vfiprintf_internal_r+0xfbc>
   53b78:	4cf9c83a 	sub	fp,r9,r19
   53b7c:	42000204 	addi	r8,r8,8
   53b80:	31000044 	addi	r4,r6,1
   53b84:	300b883a 	mov	r5,r6
   53b88:	07018516 	blt	zero,fp,541a0 <___vfiprintf_internal_r+0xc0c>
   53b8c:	9885883a 	add	r2,r19,r2
   53b90:	45400015 	stw	r21,0(r8)
   53b94:	44c00115 	stw	r19,4(r8)
   53b98:	d8801c15 	stw	r2,112(sp)
   53b9c:	d9001b15 	stw	r4,108(sp)
   53ba0:	00c001c4 	movi	r3,7
   53ba4:	1901dd0e 	bge	r3,r4,5431c <___vfiprintf_internal_r+0xd88>
   53ba8:	1002401e 	bne	r2,zero,544ac <___vfiprintf_internal_r+0xf18>
   53bac:	d8001b15 	stw	zero,108(sp)
   53bb0:	a2c0010c 	andi	r11,r20,4
   53bb4:	58000226 	beq	r11,zero,53bc0 <___vfiprintf_internal_r+0x62c>
   53bb8:	8ca7c83a 	sub	r19,r17,r18
   53bbc:	04c2f216 	blt	zero,r19,54788 <___vfiprintf_internal_r+0x11f4>
   53bc0:	8c80010e 	bge	r17,r18,53bc8 <___vfiprintf_internal_r+0x634>
   53bc4:	9023883a 	mov	r17,r18
   53bc8:	da802317 	ldw	r10,140(sp)
   53bcc:	5455883a 	add	r10,r10,r17
   53bd0:	da802315 	stw	r10,140(sp)
   53bd4:	d8001b15 	stw	zero,108(sp)
   53bd8:	d811883a 	mov	r8,sp
   53bdc:	003ea206 	br	53668 <__alt_data_end+0xfffd4e68>
   53be0:	a5000814 	ori	r20,r20,32
   53be4:	80c00007 	ldb	r3,0(r16)
   53be8:	003ec906 	br	53710 <__alt_data_end+0xfffd4f10>
   53bec:	80c00007 	ldb	r3,0(r16)
   53bf0:	1b030926 	beq	r3,r12,54818 <___vfiprintf_internal_r+0x1284>
   53bf4:	a5000414 	ori	r20,r20,16
   53bf8:	003ec506 	br	53710 <__alt_data_end+0xfffd4f10>
   53bfc:	21003fcc 	andi	r4,r4,255
   53c00:	20035e1e 	bne	r4,zero,5497c <___vfiprintf_internal_r+0x13e8>
   53c04:	a080080c 	andi	r2,r20,32
   53c08:	1002a526 	beq	r2,zero,546a0 <___vfiprintf_internal_r+0x110c>
   53c0c:	da802217 	ldw	r10,136(sp)
   53c10:	50800017 	ldw	r2,0(r10)
   53c14:	da802317 	ldw	r10,140(sp)
   53c18:	5007d7fa 	srai	r3,r10,31
   53c1c:	da802217 	ldw	r10,136(sp)
   53c20:	10c00115 	stw	r3,4(r2)
   53c24:	52800104 	addi	r10,r10,4
   53c28:	da802215 	stw	r10,136(sp)
   53c2c:	da802317 	ldw	r10,140(sp)
   53c30:	12800015 	stw	r10,0(r2)
   53c34:	003e8c06 	br	53668 <__alt_data_end+0xfffd4e68>
   53c38:	21003fcc 	andi	r4,r4,255
   53c3c:	2003511e 	bne	r4,zero,54984 <___vfiprintf_internal_r+0x13f0>
   53c40:	a080080c 	andi	r2,r20,32
   53c44:	1000a126 	beq	r2,zero,53ecc <___vfiprintf_internal_r+0x938>
   53c48:	da802217 	ldw	r10,136(sp)
   53c4c:	d8001d85 	stb	zero,118(sp)
   53c50:	50800204 	addi	r2,r10,8
   53c54:	54800017 	ldw	r18,0(r10)
   53c58:	54c00117 	ldw	r19,4(r10)
   53c5c:	4802b416 	blt	r9,zero,54730 <___vfiprintf_internal_r+0x119c>
   53c60:	013fdfc4 	movi	r4,-129
   53c64:	94c6b03a 	or	r3,r18,r19
   53c68:	d8802215 	stw	r2,136(sp)
   53c6c:	a128703a 	and	r20,r20,r4
   53c70:	1800a226 	beq	r3,zero,53efc <___vfiprintf_internal_r+0x968>
   53c74:	0039883a 	mov	fp,zero
   53c78:	dd401a04 	addi	r21,sp,104
   53c7c:	9006d0fa 	srli	r3,r18,3
   53c80:	9808977a 	slli	r4,r19,29
   53c84:	9826d0fa 	srli	r19,r19,3
   53c88:	948001cc 	andi	r18,r18,7
   53c8c:	90800c04 	addi	r2,r18,48
   53c90:	ad7fffc4 	addi	r21,r21,-1
   53c94:	20e4b03a 	or	r18,r4,r3
   53c98:	a8800005 	stb	r2,0(r21)
   53c9c:	94c6b03a 	or	r3,r18,r19
   53ca0:	183ff61e 	bne	r3,zero,53c7c <__alt_data_end+0xfffd547c>
   53ca4:	a0c0004c 	andi	r3,r20,1
   53ca8:	18005926 	beq	r3,zero,53e10 <___vfiprintf_internal_r+0x87c>
   53cac:	10803fcc 	andi	r2,r2,255
   53cb0:	1080201c 	xori	r2,r2,128
   53cb4:	10bfe004 	addi	r2,r2,-128
   53cb8:	00c00c04 	movi	r3,48
   53cbc:	10c05426 	beq	r2,r3,53e10 <___vfiprintf_internal_r+0x87c>
   53cc0:	da801e17 	ldw	r10,120(sp)
   53cc4:	a8bfffc4 	addi	r2,r21,-1
   53cc8:	a8ffffc5 	stb	r3,-1(r21)
   53ccc:	50a7c83a 	sub	r19,r10,r2
   53cd0:	102b883a 	mov	r21,r2
   53cd4:	003f2f06 	br	53994 <__alt_data_end+0xfffd5194>
   53cd8:	21003fcc 	andi	r4,r4,255
   53cdc:	2003421e 	bne	r4,zero,549e8 <___vfiprintf_internal_r+0x1454>
   53ce0:	008001b4 	movhi	r2,6
   53ce4:	10ac8c04 	addi	r2,r2,-19920
   53ce8:	d8802615 	stw	r2,152(sp)
   53cec:	a080080c 	andi	r2,r20,32
   53cf0:	1000aa26 	beq	r2,zero,53f9c <___vfiprintf_internal_r+0xa08>
   53cf4:	da802217 	ldw	r10,136(sp)
   53cf8:	54800017 	ldw	r18,0(r10)
   53cfc:	54c00117 	ldw	r19,4(r10)
   53d00:	52800204 	addi	r10,r10,8
   53d04:	da802215 	stw	r10,136(sp)
   53d08:	a080004c 	andi	r2,r20,1
   53d0c:	1001d226 	beq	r2,zero,54458 <___vfiprintf_internal_r+0xec4>
   53d10:	94c4b03a 	or	r2,r18,r19
   53d14:	1002351e 	bne	r2,zero,545ec <___vfiprintf_internal_r+0x1058>
   53d18:	d8001d85 	stb	zero,118(sp)
   53d1c:	48022216 	blt	r9,zero,545a8 <___vfiprintf_internal_r+0x1014>
   53d20:	00bfdfc4 	movi	r2,-129
   53d24:	a0a8703a 	and	r20,r20,r2
   53d28:	003f1506 	br	53980 <__alt_data_end+0xfffd5180>
   53d2c:	da802217 	ldw	r10,136(sp)
   53d30:	04800044 	movi	r18,1
   53d34:	d8001d85 	stb	zero,118(sp)
   53d38:	50800017 	ldw	r2,0(r10)
   53d3c:	52800104 	addi	r10,r10,4
   53d40:	da802215 	stw	r10,136(sp)
   53d44:	d8801005 	stb	r2,64(sp)
   53d48:	9027883a 	mov	r19,r18
   53d4c:	dd401004 	addi	r21,sp,64
   53d50:	0013883a 	mov	r9,zero
   53d54:	003f1706 	br	539b4 <__alt_data_end+0xfffd51b4>
   53d58:	21003fcc 	andi	r4,r4,255
   53d5c:	2003201e 	bne	r4,zero,549e0 <___vfiprintf_internal_r+0x144c>
   53d60:	a080080c 	andi	r2,r20,32
   53d64:	10004b26 	beq	r2,zero,53e94 <___vfiprintf_internal_r+0x900>
   53d68:	da802217 	ldw	r10,136(sp)
   53d6c:	50800117 	ldw	r2,4(r10)
   53d70:	54800017 	ldw	r18,0(r10)
   53d74:	52800204 	addi	r10,r10,8
   53d78:	da802215 	stw	r10,136(sp)
   53d7c:	1027883a 	mov	r19,r2
   53d80:	10022c16 	blt	r2,zero,54634 <___vfiprintf_internal_r+0x10a0>
   53d84:	df001d83 	ldbu	fp,118(sp)
   53d88:	48007216 	blt	r9,zero,53f54 <___vfiprintf_internal_r+0x9c0>
   53d8c:	00ffdfc4 	movi	r3,-129
   53d90:	94c4b03a 	or	r2,r18,r19
   53d94:	a0e8703a 	and	r20,r20,r3
   53d98:	1000cc26 	beq	r2,zero,540cc <___vfiprintf_internal_r+0xb38>
   53d9c:	98021026 	beq	r19,zero,545e0 <___vfiprintf_internal_r+0x104c>
   53da0:	dc402415 	stw	r17,144(sp)
   53da4:	dc002515 	stw	r16,148(sp)
   53da8:	9823883a 	mov	r17,r19
   53dac:	9021883a 	mov	r16,r18
   53db0:	dd401a04 	addi	r21,sp,104
   53db4:	4825883a 	mov	r18,r9
   53db8:	4027883a 	mov	r19,r8
   53dbc:	8009883a 	mov	r4,r16
   53dc0:	880b883a 	mov	r5,r17
   53dc4:	01800284 	movi	r6,10
   53dc8:	000f883a 	mov	r7,zero
   53dcc:	00579dc0 	call	579dc <__umoddi3>
   53dd0:	10800c04 	addi	r2,r2,48
   53dd4:	ad7fffc4 	addi	r21,r21,-1
   53dd8:	8009883a 	mov	r4,r16
   53ddc:	880b883a 	mov	r5,r17
   53de0:	a8800005 	stb	r2,0(r21)
   53de4:	01800284 	movi	r6,10
   53de8:	000f883a 	mov	r7,zero
   53dec:	00574640 	call	57464 <__udivdi3>
   53df0:	1021883a 	mov	r16,r2
   53df4:	10c4b03a 	or	r2,r2,r3
   53df8:	1823883a 	mov	r17,r3
   53dfc:	103fef1e 	bne	r2,zero,53dbc <__alt_data_end+0xfffd55bc>
   53e00:	dc402417 	ldw	r17,144(sp)
   53e04:	dc002517 	ldw	r16,148(sp)
   53e08:	9013883a 	mov	r9,r18
   53e0c:	9811883a 	mov	r8,r19
   53e10:	da801e17 	ldw	r10,120(sp)
   53e14:	5567c83a 	sub	r19,r10,r21
   53e18:	003ede06 	br	53994 <__alt_data_end+0xfffd5194>
   53e1c:	38803fcc 	andi	r2,r7,255
   53e20:	1080201c 	xori	r2,r2,128
   53e24:	10bfe004 	addi	r2,r2,-128
   53e28:	1002371e 	bne	r2,zero,54708 <___vfiprintf_internal_r+0x1174>
   53e2c:	01000044 	movi	r4,1
   53e30:	01c00804 	movi	r7,32
   53e34:	80c00007 	ldb	r3,0(r16)
   53e38:	003e3506 	br	53710 <__alt_data_end+0xfffd4f10>
   53e3c:	a5000054 	ori	r20,r20,1
   53e40:	80c00007 	ldb	r3,0(r16)
   53e44:	003e3206 	br	53710 <__alt_data_end+0xfffd4f10>
   53e48:	a5002014 	ori	r20,r20,128
   53e4c:	80c00007 	ldb	r3,0(r16)
   53e50:	003e2f06 	br	53710 <__alt_data_end+0xfffd4f10>
   53e54:	8015883a 	mov	r10,r16
   53e58:	0023883a 	mov	r17,zero
   53e5c:	18bff404 	addi	r2,r3,-48
   53e60:	50c00007 	ldb	r3,0(r10)
   53e64:	8c4002a4 	muli	r17,r17,10
   53e68:	84000044 	addi	r16,r16,1
   53e6c:	8015883a 	mov	r10,r16
   53e70:	1463883a 	add	r17,r2,r17
   53e74:	18bff404 	addi	r2,r3,-48
   53e78:	30bff92e 	bgeu	r6,r2,53e60 <__alt_data_end+0xfffd5660>
   53e7c:	003e2506 	br	53714 <__alt_data_end+0xfffd4f14>
   53e80:	21003fcc 	andi	r4,r4,255
   53e84:	2002d41e 	bne	r4,zero,549d8 <___vfiprintf_internal_r+0x1444>
   53e88:	a5000414 	ori	r20,r20,16
   53e8c:	a080080c 	andi	r2,r20,32
   53e90:	103fb51e 	bne	r2,zero,53d68 <__alt_data_end+0xfffd5568>
   53e94:	a080040c 	andi	r2,r20,16
   53e98:	1001f826 	beq	r2,zero,5467c <___vfiprintf_internal_r+0x10e8>
   53e9c:	da802217 	ldw	r10,136(sp)
   53ea0:	54800017 	ldw	r18,0(r10)
   53ea4:	52800104 	addi	r10,r10,4
   53ea8:	da802215 	stw	r10,136(sp)
   53eac:	9027d7fa 	srai	r19,r18,31
   53eb0:	9805883a 	mov	r2,r19
   53eb4:	003fb206 	br	53d80 <__alt_data_end+0xfffd5580>
   53eb8:	21003fcc 	andi	r4,r4,255
   53ebc:	2002c41e 	bne	r4,zero,549d0 <___vfiprintf_internal_r+0x143c>
   53ec0:	a5000414 	ori	r20,r20,16
   53ec4:	a080080c 	andi	r2,r20,32
   53ec8:	103f5f1e 	bne	r2,zero,53c48 <__alt_data_end+0xfffd5448>
   53ecc:	a080040c 	andi	r2,r20,16
   53ed0:	10020f26 	beq	r2,zero,54710 <___vfiprintf_internal_r+0x117c>
   53ed4:	da802217 	ldw	r10,136(sp)
   53ed8:	d8001d85 	stb	zero,118(sp)
   53edc:	0027883a 	mov	r19,zero
   53ee0:	50800104 	addi	r2,r10,4
   53ee4:	54800017 	ldw	r18,0(r10)
   53ee8:	48021116 	blt	r9,zero,54730 <___vfiprintf_internal_r+0x119c>
   53eec:	00ffdfc4 	movi	r3,-129
   53ef0:	d8802215 	stw	r2,136(sp)
   53ef4:	a0e8703a 	and	r20,r20,r3
   53ef8:	903f5e1e 	bne	r18,zero,53c74 <__alt_data_end+0xfffd5474>
   53efc:	0039883a 	mov	fp,zero
   53f00:	4802a626 	beq	r9,zero,5499c <___vfiprintf_internal_r+0x1408>
   53f04:	0025883a 	mov	r18,zero
   53f08:	0027883a 	mov	r19,zero
   53f0c:	003f5a06 	br	53c78 <__alt_data_end+0xfffd5478>
   53f10:	21003fcc 	andi	r4,r4,255
   53f14:	20029f1e 	bne	r4,zero,54994 <___vfiprintf_internal_r+0x1400>
   53f18:	a5000414 	ori	r20,r20,16
   53f1c:	a080080c 	andi	r2,r20,32
   53f20:	10005e1e 	bne	r2,zero,5409c <___vfiprintf_internal_r+0xb08>
   53f24:	a080040c 	andi	r2,r20,16
   53f28:	1001a21e 	bne	r2,zero,545b4 <___vfiprintf_internal_r+0x1020>
   53f2c:	a080100c 	andi	r2,r20,64
   53f30:	d8001d85 	stb	zero,118(sp)
   53f34:	da802217 	ldw	r10,136(sp)
   53f38:	1002231e 	bne	r2,zero,547c8 <___vfiprintf_internal_r+0x1234>
   53f3c:	50800104 	addi	r2,r10,4
   53f40:	54800017 	ldw	r18,0(r10)
   53f44:	0027883a 	mov	r19,zero
   53f48:	4801a00e 	bge	r9,zero,545cc <___vfiprintf_internal_r+0x1038>
   53f4c:	d8802215 	stw	r2,136(sp)
   53f50:	0039883a 	mov	fp,zero
   53f54:	94c4b03a 	or	r2,r18,r19
   53f58:	103f901e 	bne	r2,zero,53d9c <__alt_data_end+0xfffd559c>
   53f5c:	00800044 	movi	r2,1
   53f60:	10803fcc 	andi	r2,r2,255
   53f64:	00c00044 	movi	r3,1
   53f68:	10c05926 	beq	r2,r3,540d0 <___vfiprintf_internal_r+0xb3c>
   53f6c:	00c00084 	movi	r3,2
   53f70:	10ffe41e 	bne	r2,r3,53f04 <__alt_data_end+0xfffd5704>
   53f74:	0025883a 	mov	r18,zero
   53f78:	0027883a 	mov	r19,zero
   53f7c:	00013d06 	br	54474 <___vfiprintf_internal_r+0xee0>
   53f80:	21003fcc 	andi	r4,r4,255
   53f84:	2002811e 	bne	r4,zero,5498c <___vfiprintf_internal_r+0x13f8>
   53f88:	008001b4 	movhi	r2,6
   53f8c:	10ac8704 	addi	r2,r2,-19940
   53f90:	d8802615 	stw	r2,152(sp)
   53f94:	a080080c 	andi	r2,r20,32
   53f98:	103f561e 	bne	r2,zero,53cf4 <__alt_data_end+0xfffd54f4>
   53f9c:	a080040c 	andi	r2,r20,16
   53fa0:	1001d126 	beq	r2,zero,546e8 <___vfiprintf_internal_r+0x1154>
   53fa4:	da802217 	ldw	r10,136(sp)
   53fa8:	0027883a 	mov	r19,zero
   53fac:	54800017 	ldw	r18,0(r10)
   53fb0:	52800104 	addi	r10,r10,4
   53fb4:	da802215 	stw	r10,136(sp)
   53fb8:	003f5306 	br	53d08 <__alt_data_end+0xfffd5508>
   53fbc:	da802217 	ldw	r10,136(sp)
   53fc0:	d8001d85 	stb	zero,118(sp)
   53fc4:	55400017 	ldw	r21,0(r10)
   53fc8:	50c00104 	addi	r3,r10,4
   53fcc:	a8024226 	beq	r21,zero,548d8 <___vfiprintf_internal_r+0x1344>
   53fd0:	48021816 	blt	r9,zero,54834 <___vfiprintf_internal_r+0x12a0>
   53fd4:	480d883a 	mov	r6,r9
   53fd8:	000b883a 	mov	r5,zero
   53fdc:	a809883a 	mov	r4,r21
   53fe0:	d8c02a15 	stw	r3,168(sp)
   53fe4:	da002b15 	stw	r8,172(sp)
   53fe8:	da402c15 	stw	r9,176(sp)
   53fec:	004cf0c0 	call	4cf0c <memchr>
   53ff0:	d8c02a17 	ldw	r3,168(sp)
   53ff4:	da002b17 	ldw	r8,172(sp)
   53ff8:	da402c17 	ldw	r9,176(sp)
   53ffc:	10024826 	beq	r2,zero,54920 <___vfiprintf_internal_r+0x138c>
   54000:	1567c83a 	sub	r19,r2,r21
   54004:	df001d83 	ldbu	fp,118(sp)
   54008:	d8c02215 	stw	r3,136(sp)
   5400c:	0013883a 	mov	r9,zero
   54010:	003e6006 	br	53994 <__alt_data_end+0xfffd5194>
   54014:	21003fcc 	andi	r4,r4,255
   54018:	203fc026 	beq	r4,zero,53f1c <__alt_data_end+0xfffd571c>
   5401c:	d9c01d85 	stb	r7,118(sp)
   54020:	003fbe06 	br	53f1c <__alt_data_end+0xfffd571c>
   54024:	da802217 	ldw	r10,136(sp)
   54028:	54400017 	ldw	r17,0(r10)
   5402c:	50800104 	addi	r2,r10,4
   54030:	883e3b16 	blt	r17,zero,53920 <__alt_data_end+0xfffd5120>
   54034:	d8802215 	stw	r2,136(sp)
   54038:	80c00007 	ldb	r3,0(r16)
   5403c:	003db406 	br	53710 <__alt_data_end+0xfffd4f10>
   54040:	01000044 	movi	r4,1
   54044:	01c00ac4 	movi	r7,43
   54048:	80c00007 	ldb	r3,0(r16)
   5404c:	003db006 	br	53710 <__alt_data_end+0xfffd4f10>
   54050:	80c00007 	ldb	r3,0(r16)
   54054:	82800044 	addi	r10,r16,1
   54058:	1b423c26 	beq	r3,r13,5494c <___vfiprintf_internal_r+0x13b8>
   5405c:	18bff404 	addi	r2,r3,-48
   54060:	0013883a 	mov	r9,zero
   54064:	30822b36 	bltu	r6,r2,54914 <___vfiprintf_internal_r+0x1380>
   54068:	50c00007 	ldb	r3,0(r10)
   5406c:	4a4002a4 	muli	r9,r9,10
   54070:	54000044 	addi	r16,r10,1
   54074:	8015883a 	mov	r10,r16
   54078:	4893883a 	add	r9,r9,r2
   5407c:	18bff404 	addi	r2,r3,-48
   54080:	30bff92e 	bgeu	r6,r2,54068 <__alt_data_end+0xfffd5868>
   54084:	483da30e 	bge	r9,zero,53714 <__alt_data_end+0xfffd4f14>
   54088:	027fffc4 	movi	r9,-1
   5408c:	003da106 	br	53714 <__alt_data_end+0xfffd4f14>
   54090:	a5001014 	ori	r20,r20,64
   54094:	80c00007 	ldb	r3,0(r16)
   54098:	003d9d06 	br	53710 <__alt_data_end+0xfffd4f10>
   5409c:	da802217 	ldw	r10,136(sp)
   540a0:	d8001d85 	stb	zero,118(sp)
   540a4:	50c00204 	addi	r3,r10,8
   540a8:	54800017 	ldw	r18,0(r10)
   540ac:	54c00117 	ldw	r19,4(r10)
   540b0:	4801ca16 	blt	r9,zero,547dc <___vfiprintf_internal_r+0x1248>
   540b4:	013fdfc4 	movi	r4,-129
   540b8:	94c4b03a 	or	r2,r18,r19
   540bc:	d8c02215 	stw	r3,136(sp)
   540c0:	a128703a 	and	r20,r20,r4
   540c4:	0039883a 	mov	fp,zero
   540c8:	103f341e 	bne	r2,zero,53d9c <__alt_data_end+0xfffd559c>
   540cc:	483e2e26 	beq	r9,zero,53988 <__alt_data_end+0xfffd5188>
   540d0:	0025883a 	mov	r18,zero
   540d4:	94800c04 	addi	r18,r18,48
   540d8:	dc8019c5 	stb	r18,103(sp)
   540dc:	dcc02717 	ldw	r19,156(sp)
   540e0:	dd4019c4 	addi	r21,sp,103
   540e4:	003e2b06 	br	53994 <__alt_data_end+0xfffd5194>
   540e8:	21003fcc 	andi	r4,r4,255
   540ec:	2002361e 	bne	r4,zero,549c8 <___vfiprintf_internal_r+0x1434>
   540f0:	1801c126 	beq	r3,zero,547f8 <___vfiprintf_internal_r+0x1264>
   540f4:	04800044 	movi	r18,1
   540f8:	d8c01005 	stb	r3,64(sp)
   540fc:	d8001d85 	stb	zero,118(sp)
   54100:	9027883a 	mov	r19,r18
   54104:	dd401004 	addi	r21,sp,64
   54108:	003f1106 	br	53d50 <__alt_data_end+0xfffd5550>
   5410c:	d9402117 	ldw	r5,132(sp)
   54110:	d9002017 	ldw	r4,128(sp)
   54114:	d9801a04 	addi	r6,sp,104
   54118:	d9c02b15 	stw	r7,172(sp)
   5411c:	dbc02a15 	stw	r15,168(sp)
   54120:	00534800 	call	53480 <__sprint_r.part.0>
   54124:	d9c02b17 	ldw	r7,172(sp)
   54128:	dbc02a17 	ldw	r15,168(sp)
   5412c:	10006d1e 	bne	r2,zero,542e4 <___vfiprintf_internal_r+0xd50>
   54130:	d9801b17 	ldw	r6,108(sp)
   54134:	d8801c17 	ldw	r2,112(sp)
   54138:	d811883a 	mov	r8,sp
   5413c:	31400044 	addi	r5,r6,1
   54140:	003e3306 	br	53a10 <__alt_data_end+0xfffd5210>
   54144:	d9401b17 	ldw	r5,108(sp)
   54148:	d8801c17 	ldw	r2,112(sp)
   5414c:	29000044 	addi	r4,r5,1
   54150:	d8c01d87 	ldb	r3,118(sp)
   54154:	183e4d26 	beq	r3,zero,53a8c <__alt_data_end+0xfffd528c>
   54158:	00c00044 	movi	r3,1
   5415c:	d9401d84 	addi	r5,sp,118
   54160:	10c5883a 	add	r2,r2,r3
   54164:	41400015 	stw	r5,0(r8)
   54168:	40c00115 	stw	r3,4(r8)
   5416c:	d8801c15 	stw	r2,112(sp)
   54170:	d9001b15 	stw	r4,108(sp)
   54174:	014001c4 	movi	r5,7
   54178:	2900a90e 	bge	r5,r4,54420 <___vfiprintf_internal_r+0xe8c>
   5417c:	1000da1e 	bne	r2,zero,544e8 <___vfiprintf_internal_r+0xf54>
   54180:	7000ab1e 	bne	r14,zero,54430 <___vfiprintf_internal_r+0xe9c>
   54184:	000b883a 	mov	r5,zero
   54188:	1809883a 	mov	r4,r3
   5418c:	d811883a 	mov	r8,sp
   54190:	00c02004 	movi	r3,128
   54194:	e0fe4d26 	beq	fp,r3,53acc <__alt_data_end+0xfffd52cc>
   54198:	4cf9c83a 	sub	fp,r9,r19
   5419c:	073e7b0e 	bge	zero,fp,53b8c <__alt_data_end+0xfffd538c>
   541a0:	01c00404 	movi	r7,16
   541a4:	3f01900e 	bge	r7,fp,547e8 <___vfiprintf_internal_r+0x1254>
   541a8:	00c001b4 	movhi	r3,6
   541ac:	18edb804 	addi	r3,r3,-18720
   541b0:	d8c02415 	stw	r3,144(sp)
   541b4:	034001c4 	movi	r13,7
   541b8:	00000506 	br	541d0 <___vfiprintf_internal_r+0xc3c>
   541bc:	29000084 	addi	r4,r5,2
   541c0:	42000204 	addi	r8,r8,8
   541c4:	180b883a 	mov	r5,r3
   541c8:	e73ffc04 	addi	fp,fp,-16
   541cc:	3f000d0e 	bge	r7,fp,54204 <___vfiprintf_internal_r+0xc70>
   541d0:	10800404 	addi	r2,r2,16
   541d4:	28c00044 	addi	r3,r5,1
   541d8:	45c00015 	stw	r23,0(r8)
   541dc:	41c00115 	stw	r7,4(r8)
   541e0:	d8801c15 	stw	r2,112(sp)
   541e4:	d8c01b15 	stw	r3,108(sp)
   541e8:	68fff40e 	bge	r13,r3,541bc <__alt_data_end+0xfffd59bc>
   541ec:	1000101e 	bne	r2,zero,54230 <___vfiprintf_internal_r+0xc9c>
   541f0:	e73ffc04 	addi	fp,fp,-16
   541f4:	01000044 	movi	r4,1
   541f8:	000b883a 	mov	r5,zero
   541fc:	d811883a 	mov	r8,sp
   54200:	3f3ff316 	blt	r7,fp,541d0 <__alt_data_end+0xfffd59d0>
   54204:	da802417 	ldw	r10,144(sp)
   54208:	1705883a 	add	r2,r2,fp
   5420c:	47000115 	stw	fp,4(r8)
   54210:	42800015 	stw	r10,0(r8)
   54214:	d8801c15 	stw	r2,112(sp)
   54218:	d9001b15 	stw	r4,108(sp)
   5421c:	00c001c4 	movi	r3,7
   54220:	19003616 	blt	r3,r4,542fc <___vfiprintf_internal_r+0xd68>
   54224:	42000204 	addi	r8,r8,8
   54228:	21000044 	addi	r4,r4,1
   5422c:	003e5706 	br	53b8c <__alt_data_end+0xfffd538c>
   54230:	d9402117 	ldw	r5,132(sp)
   54234:	d9002017 	ldw	r4,128(sp)
   54238:	d9801a04 	addi	r6,sp,104
   5423c:	d9c02b15 	stw	r7,172(sp)
   54240:	db402a15 	stw	r13,168(sp)
   54244:	00534800 	call	53480 <__sprint_r.part.0>
   54248:	d9c02b17 	ldw	r7,172(sp)
   5424c:	db402a17 	ldw	r13,168(sp)
   54250:	1000241e 	bne	r2,zero,542e4 <___vfiprintf_internal_r+0xd50>
   54254:	d9401b17 	ldw	r5,108(sp)
   54258:	d8801c17 	ldw	r2,112(sp)
   5425c:	d811883a 	mov	r8,sp
   54260:	29000044 	addi	r4,r5,1
   54264:	003fd806 	br	541c8 <__alt_data_end+0xfffd59c8>
   54268:	d9401b17 	ldw	r5,108(sp)
   5426c:	00c001b4 	movhi	r3,6
   54270:	18edbc04 	addi	r3,r3,-18704
   54274:	d8c02415 	stw	r3,144(sp)
   54278:	29400044 	addi	r5,r5,1
   5427c:	d8c02417 	ldw	r3,144(sp)
   54280:	14c5883a 	add	r2,r2,r19
   54284:	44c00115 	stw	r19,4(r8)
   54288:	40c00015 	stw	r3,0(r8)
   5428c:	d8801c15 	stw	r2,112(sp)
   54290:	d9401b15 	stw	r5,108(sp)
   54294:	00c001c4 	movi	r3,7
   54298:	1940070e 	bge	r3,r5,542b8 <___vfiprintf_internal_r+0xd24>
   5429c:	103e4826 	beq	r2,zero,53bc0 <__alt_data_end+0xfffd53c0>
   542a0:	d9402117 	ldw	r5,132(sp)
   542a4:	d9002017 	ldw	r4,128(sp)
   542a8:	d9801a04 	addi	r6,sp,104
   542ac:	00534800 	call	53480 <__sprint_r.part.0>
   542b0:	10000c1e 	bne	r2,zero,542e4 <___vfiprintf_internal_r+0xd50>
   542b4:	d8801c17 	ldw	r2,112(sp)
   542b8:	8c80010e 	bge	r17,r18,542c0 <___vfiprintf_internal_r+0xd2c>
   542bc:	9023883a 	mov	r17,r18
   542c0:	da802317 	ldw	r10,140(sp)
   542c4:	5455883a 	add	r10,r10,r17
   542c8:	da802315 	stw	r10,140(sp)
   542cc:	103e4126 	beq	r2,zero,53bd4 <__alt_data_end+0xfffd53d4>
   542d0:	d9402117 	ldw	r5,132(sp)
   542d4:	d9002017 	ldw	r4,128(sp)
   542d8:	d9801a04 	addi	r6,sp,104
   542dc:	00534800 	call	53480 <__sprint_r.part.0>
   542e0:	103e3c26 	beq	r2,zero,53bd4 <__alt_data_end+0xfffd53d4>
   542e4:	dd002117 	ldw	r20,132(sp)
   542e8:	a080030b 	ldhu	r2,12(r20)
   542ec:	1080100c 	andi	r2,r2,64
   542f0:	1001231e 	bne	r2,zero,54780 <___vfiprintf_internal_r+0x11ec>
   542f4:	d8802317 	ldw	r2,140(sp)
   542f8:	003d7b06 	br	538e8 <__alt_data_end+0xfffd50e8>
   542fc:	1000991e 	bne	r2,zero,54564 <___vfiprintf_internal_r+0xfd0>
   54300:	00c00044 	movi	r3,1
   54304:	9805883a 	mov	r2,r19
   54308:	dd400015 	stw	r21,0(sp)
   5430c:	dcc00115 	stw	r19,4(sp)
   54310:	dcc01c15 	stw	r19,112(sp)
   54314:	d8c01b15 	stw	r3,108(sp)
   54318:	d811883a 	mov	r8,sp
   5431c:	42000204 	addi	r8,r8,8
   54320:	a2c0010c 	andi	r11,r20,4
   54324:	583fe426 	beq	r11,zero,542b8 <__alt_data_end+0xfffd5ab8>
   54328:	8ca7c83a 	sub	r19,r17,r18
   5432c:	04ffe20e 	bge	zero,r19,542b8 <__alt_data_end+0xfffd5ab8>
   54330:	01c00404 	movi	r7,16
   54334:	3cffcc0e 	bge	r7,r19,54268 <__alt_data_end+0xfffd5a68>
   54338:	028001b4 	movhi	r10,6
   5433c:	52adbc04 	addi	r10,r10,-18704
   54340:	d9001b17 	ldw	r4,108(sp)
   54344:	da802415 	stw	r10,144(sp)
   54348:	382b883a 	mov	r21,r7
   5434c:	050001c4 	movi	r20,7
   54350:	df002017 	ldw	fp,128(sp)
   54354:	00000506 	br	5436c <___vfiprintf_internal_r+0xdd8>
   54358:	21400084 	addi	r5,r4,2
   5435c:	42000204 	addi	r8,r8,8
   54360:	1809883a 	mov	r4,r3
   54364:	9cfffc04 	addi	r19,r19,-16
   54368:	acffc40e 	bge	r21,r19,5427c <__alt_data_end+0xfffd5a7c>
   5436c:	10800404 	addi	r2,r2,16
   54370:	20c00044 	addi	r3,r4,1
   54374:	45800015 	stw	r22,0(r8)
   54378:	45400115 	stw	r21,4(r8)
   5437c:	d8801c15 	stw	r2,112(sp)
   54380:	d8c01b15 	stw	r3,108(sp)
   54384:	a0fff40e 	bge	r20,r3,54358 <__alt_data_end+0xfffd5b58>
   54388:	1000041e 	bne	r2,zero,5439c <___vfiprintf_internal_r+0xe08>
   5438c:	01400044 	movi	r5,1
   54390:	0009883a 	mov	r4,zero
   54394:	d811883a 	mov	r8,sp
   54398:	003ff206 	br	54364 <__alt_data_end+0xfffd5b64>
   5439c:	d9402117 	ldw	r5,132(sp)
   543a0:	d9801a04 	addi	r6,sp,104
   543a4:	e009883a 	mov	r4,fp
   543a8:	00534800 	call	53480 <__sprint_r.part.0>
   543ac:	103fcd1e 	bne	r2,zero,542e4 <__alt_data_end+0xfffd5ae4>
   543b0:	d9001b17 	ldw	r4,108(sp)
   543b4:	d8801c17 	ldw	r2,112(sp)
   543b8:	d811883a 	mov	r8,sp
   543bc:	21400044 	addi	r5,r4,1
   543c0:	003fe806 	br	54364 <__alt_data_end+0xfffd5b64>
   543c4:	d9402117 	ldw	r5,132(sp)
   543c8:	d9002017 	ldw	r4,128(sp)
   543cc:	d9801a04 	addi	r6,sp,104
   543d0:	d9c02b15 	stw	r7,172(sp)
   543d4:	db402a15 	stw	r13,168(sp)
   543d8:	00534800 	call	53480 <__sprint_r.part.0>
   543dc:	d9c02b17 	ldw	r7,172(sp)
   543e0:	db402a17 	ldw	r13,168(sp)
   543e4:	103fbf1e 	bne	r2,zero,542e4 <__alt_data_end+0xfffd5ae4>
   543e8:	d9401b17 	ldw	r5,108(sp)
   543ec:	d8801c17 	ldw	r2,112(sp)
   543f0:	d811883a 	mov	r8,sp
   543f4:	29800044 	addi	r6,r5,1
   543f8:	003dc406 	br	53b0c <__alt_data_end+0xfffd530c>
   543fc:	1000d21e 	bne	r2,zero,54748 <___vfiprintf_internal_r+0x11b4>
   54400:	d8c01d87 	ldb	r3,118(sp)
   54404:	18009526 	beq	r3,zero,5465c <___vfiprintf_internal_r+0x10c8>
   54408:	00800044 	movi	r2,1
   5440c:	d8c01d84 	addi	r3,sp,118
   54410:	1009883a 	mov	r4,r2
   54414:	d8c00015 	stw	r3,0(sp)
   54418:	d8800115 	stw	r2,4(sp)
   5441c:	d811883a 	mov	r8,sp
   54420:	200b883a 	mov	r5,r4
   54424:	42000204 	addi	r8,r8,8
   54428:	21000044 	addi	r4,r4,1
   5442c:	003d9706 	br	53a8c <__alt_data_end+0xfffd528c>
   54430:	d9001d04 	addi	r4,sp,116
   54434:	00800084 	movi	r2,2
   54438:	d9000015 	stw	r4,0(sp)
   5443c:	d8800115 	stw	r2,4(sp)
   54440:	1809883a 	mov	r4,r3
   54444:	d811883a 	mov	r8,sp
   54448:	200b883a 	mov	r5,r4
   5444c:	42000204 	addi	r8,r8,8
   54450:	21000044 	addi	r4,r4,1
   54454:	003f4e06 	br	54190 <__alt_data_end+0xfffd5990>
   54458:	d8001d85 	stb	zero,118(sp)
   5445c:	48005016 	blt	r9,zero,545a0 <___vfiprintf_internal_r+0x100c>
   54460:	00ffdfc4 	movi	r3,-129
   54464:	94c4b03a 	or	r2,r18,r19
   54468:	a0e8703a 	and	r20,r20,r3
   5446c:	103d4426 	beq	r2,zero,53980 <__alt_data_end+0xfffd5180>
   54470:	0039883a 	mov	fp,zero
   54474:	d9002617 	ldw	r4,152(sp)
   54478:	dd401a04 	addi	r21,sp,104
   5447c:	908003cc 	andi	r2,r18,15
   54480:	9806973a 	slli	r3,r19,28
   54484:	2085883a 	add	r2,r4,r2
   54488:	9024d13a 	srli	r18,r18,4
   5448c:	10800003 	ldbu	r2,0(r2)
   54490:	9826d13a 	srli	r19,r19,4
   54494:	ad7fffc4 	addi	r21,r21,-1
   54498:	1ca4b03a 	or	r18,r3,r18
   5449c:	a8800005 	stb	r2,0(r21)
   544a0:	94c4b03a 	or	r2,r18,r19
   544a4:	103ff51e 	bne	r2,zero,5447c <__alt_data_end+0xfffd5c7c>
   544a8:	003e5906 	br	53e10 <__alt_data_end+0xfffd5610>
   544ac:	d9402117 	ldw	r5,132(sp)
   544b0:	d9002017 	ldw	r4,128(sp)
   544b4:	d9801a04 	addi	r6,sp,104
   544b8:	00534800 	call	53480 <__sprint_r.part.0>
   544bc:	103f891e 	bne	r2,zero,542e4 <__alt_data_end+0xfffd5ae4>
   544c0:	d8801c17 	ldw	r2,112(sp)
   544c4:	d811883a 	mov	r8,sp
   544c8:	003f9506 	br	54320 <__alt_data_end+0xfffd5b20>
   544cc:	d9402117 	ldw	r5,132(sp)
   544d0:	d9002017 	ldw	r4,128(sp)
   544d4:	d9801a04 	addi	r6,sp,104
   544d8:	00534800 	call	53480 <__sprint_r.part.0>
   544dc:	103f811e 	bne	r2,zero,542e4 <__alt_data_end+0xfffd5ae4>
   544e0:	d811883a 	mov	r8,sp
   544e4:	003ced06 	br	5389c <__alt_data_end+0xfffd509c>
   544e8:	d9402117 	ldw	r5,132(sp)
   544ec:	d9002017 	ldw	r4,128(sp)
   544f0:	d9801a04 	addi	r6,sp,104
   544f4:	da402c15 	stw	r9,176(sp)
   544f8:	db802a15 	stw	r14,168(sp)
   544fc:	00534800 	call	53480 <__sprint_r.part.0>
   54500:	da402c17 	ldw	r9,176(sp)
   54504:	db802a17 	ldw	r14,168(sp)
   54508:	103f761e 	bne	r2,zero,542e4 <__alt_data_end+0xfffd5ae4>
   5450c:	d9401b17 	ldw	r5,108(sp)
   54510:	d8801c17 	ldw	r2,112(sp)
   54514:	d811883a 	mov	r8,sp
   54518:	29000044 	addi	r4,r5,1
   5451c:	003d5b06 	br	53a8c <__alt_data_end+0xfffd528c>
   54520:	d9402117 	ldw	r5,132(sp)
   54524:	d9002017 	ldw	r4,128(sp)
   54528:	d9801a04 	addi	r6,sp,104
   5452c:	da402c15 	stw	r9,176(sp)
   54530:	00534800 	call	53480 <__sprint_r.part.0>
   54534:	da402c17 	ldw	r9,176(sp)
   54538:	103f6a1e 	bne	r2,zero,542e4 <__alt_data_end+0xfffd5ae4>
   5453c:	d9401b17 	ldw	r5,108(sp)
   54540:	d8801c17 	ldw	r2,112(sp)
   54544:	d811883a 	mov	r8,sp
   54548:	29000044 	addi	r4,r5,1
   5454c:	003f1006 	br	54190 <__alt_data_end+0xfffd5990>
   54550:	1000c31e 	bne	r2,zero,54860 <___vfiprintf_internal_r+0x12cc>
   54554:	01000044 	movi	r4,1
   54558:	000b883a 	mov	r5,zero
   5455c:	d811883a 	mov	r8,sp
   54560:	003f0d06 	br	54198 <__alt_data_end+0xfffd5998>
   54564:	d9402117 	ldw	r5,132(sp)
   54568:	d9002017 	ldw	r4,128(sp)
   5456c:	d9801a04 	addi	r6,sp,104
   54570:	00534800 	call	53480 <__sprint_r.part.0>
   54574:	103f5b1e 	bne	r2,zero,542e4 <__alt_data_end+0xfffd5ae4>
   54578:	d9001b17 	ldw	r4,108(sp)
   5457c:	d8801c17 	ldw	r2,112(sp)
   54580:	d811883a 	mov	r8,sp
   54584:	21000044 	addi	r4,r4,1
   54588:	003d8006 	br	53b8c <__alt_data_end+0xfffd538c>
   5458c:	010001b4 	movhi	r4,6
   54590:	212c8c04 	addi	r4,r4,-19920
   54594:	d9002615 	stw	r4,152(sp)
   54598:	d8c02215 	stw	r3,136(sp)
   5459c:	1029883a 	mov	r20,r2
   545a0:	94c4b03a 	or	r2,r18,r19
   545a4:	103fb21e 	bne	r2,zero,54470 <__alt_data_end+0xfffd5c70>
   545a8:	0039883a 	mov	fp,zero
   545ac:	00800084 	movi	r2,2
   545b0:	003e6b06 	br	53f60 <__alt_data_end+0xfffd5760>
   545b4:	da802217 	ldw	r10,136(sp)
   545b8:	d8001d85 	stb	zero,118(sp)
   545bc:	0027883a 	mov	r19,zero
   545c0:	50800104 	addi	r2,r10,4
   545c4:	54800017 	ldw	r18,0(r10)
   545c8:	483e6016 	blt	r9,zero,53f4c <__alt_data_end+0xfffd574c>
   545cc:	00ffdfc4 	movi	r3,-129
   545d0:	d8802215 	stw	r2,136(sp)
   545d4:	a0e8703a 	and	r20,r20,r3
   545d8:	0039883a 	mov	fp,zero
   545dc:	903ebb26 	beq	r18,zero,540cc <__alt_data_end+0xfffd58cc>
   545e0:	00800244 	movi	r2,9
   545e4:	14bdee36 	bltu	r2,r18,53da0 <__alt_data_end+0xfffd55a0>
   545e8:	003eba06 	br	540d4 <__alt_data_end+0xfffd58d4>
   545ec:	00800c04 	movi	r2,48
   545f0:	d8c01d45 	stb	r3,117(sp)
   545f4:	d8801d05 	stb	r2,116(sp)
   545f8:	d8001d85 	stb	zero,118(sp)
   545fc:	a0c00094 	ori	r3,r20,2
   54600:	4800a916 	blt	r9,zero,548a8 <___vfiprintf_internal_r+0x1314>
   54604:	00bfdfc4 	movi	r2,-129
   54608:	a096703a 	and	r11,r20,r2
   5460c:	5d000094 	ori	r20,r11,2
   54610:	0039883a 	mov	fp,zero
   54614:	003f9706 	br	54474 <__alt_data_end+0xfffd5c74>
   54618:	8025883a 	mov	r18,r16
   5461c:	003c2e06 	br	536d8 <__alt_data_end+0xfffd4ed8>
   54620:	008001b4 	movhi	r2,6
   54624:	10ac8c04 	addi	r2,r2,-19920
   54628:	0039883a 	mov	fp,zero
   5462c:	d8802615 	stw	r2,152(sp)
   54630:	003f9006 	br	54474 <__alt_data_end+0xfffd5c74>
   54634:	04a5c83a 	sub	r18,zero,r18
   54638:	07000b44 	movi	fp,45
   5463c:	9004c03a 	cmpne	r2,r18,zero
   54640:	04e7c83a 	sub	r19,zero,r19
   54644:	df001d85 	stb	fp,118(sp)
   54648:	98a7c83a 	sub	r19,r19,r2
   5464c:	48009f16 	blt	r9,zero,548cc <___vfiprintf_internal_r+0x1338>
   54650:	00bfdfc4 	movi	r2,-129
   54654:	a0a8703a 	and	r20,r20,r2
   54658:	003dd006 	br	53d9c <__alt_data_end+0xfffd559c>
   5465c:	70004c26 	beq	r14,zero,54790 <___vfiprintf_internal_r+0x11fc>
   54660:	00800084 	movi	r2,2
   54664:	d8c01d04 	addi	r3,sp,116
   54668:	d8c00015 	stw	r3,0(sp)
   5466c:	d8800115 	stw	r2,4(sp)
   54670:	01000044 	movi	r4,1
   54674:	d811883a 	mov	r8,sp
   54678:	003f7306 	br	54448 <__alt_data_end+0xfffd5c48>
   5467c:	a080100c 	andi	r2,r20,64
   54680:	da802217 	ldw	r10,136(sp)
   54684:	103e0626 	beq	r2,zero,53ea0 <__alt_data_end+0xfffd56a0>
   54688:	5480000f 	ldh	r18,0(r10)
   5468c:	52800104 	addi	r10,r10,4
   54690:	da802215 	stw	r10,136(sp)
   54694:	9027d7fa 	srai	r19,r18,31
   54698:	9805883a 	mov	r2,r19
   5469c:	003db806 	br	53d80 <__alt_data_end+0xfffd5580>
   546a0:	a080040c 	andi	r2,r20,16
   546a4:	1000091e 	bne	r2,zero,546cc <___vfiprintf_internal_r+0x1138>
   546a8:	a2c0100c 	andi	r11,r20,64
   546ac:	58000726 	beq	r11,zero,546cc <___vfiprintf_internal_r+0x1138>
   546b0:	da802217 	ldw	r10,136(sp)
   546b4:	50800017 	ldw	r2,0(r10)
   546b8:	52800104 	addi	r10,r10,4
   546bc:	da802215 	stw	r10,136(sp)
   546c0:	da802317 	ldw	r10,140(sp)
   546c4:	1280000d 	sth	r10,0(r2)
   546c8:	003be706 	br	53668 <__alt_data_end+0xfffd4e68>
   546cc:	da802217 	ldw	r10,136(sp)
   546d0:	50800017 	ldw	r2,0(r10)
   546d4:	52800104 	addi	r10,r10,4
   546d8:	da802215 	stw	r10,136(sp)
   546dc:	da802317 	ldw	r10,140(sp)
   546e0:	12800015 	stw	r10,0(r2)
   546e4:	003be006 	br	53668 <__alt_data_end+0xfffd4e68>
   546e8:	a080100c 	andi	r2,r20,64
   546ec:	da802217 	ldw	r10,136(sp)
   546f0:	10003026 	beq	r2,zero,547b4 <___vfiprintf_internal_r+0x1220>
   546f4:	5480000b 	ldhu	r18,0(r10)
   546f8:	52800104 	addi	r10,r10,4
   546fc:	0027883a 	mov	r19,zero
   54700:	da802215 	stw	r10,136(sp)
   54704:	003d8006 	br	53d08 <__alt_data_end+0xfffd5508>
   54708:	80c00007 	ldb	r3,0(r16)
   5470c:	003c0006 	br	53710 <__alt_data_end+0xfffd4f10>
   54710:	a080100c 	andi	r2,r20,64
   54714:	d8001d85 	stb	zero,118(sp)
   54718:	da802217 	ldw	r10,136(sp)
   5471c:	1000201e 	bne	r2,zero,547a0 <___vfiprintf_internal_r+0x120c>
   54720:	50800104 	addi	r2,r10,4
   54724:	54800017 	ldw	r18,0(r10)
   54728:	0027883a 	mov	r19,zero
   5472c:	483def0e 	bge	r9,zero,53eec <__alt_data_end+0xfffd56ec>
   54730:	94c6b03a 	or	r3,r18,r19
   54734:	d8802215 	stw	r2,136(sp)
   54738:	183d4e1e 	bne	r3,zero,53c74 <__alt_data_end+0xfffd5474>
   5473c:	0039883a 	mov	fp,zero
   54740:	0005883a 	mov	r2,zero
   54744:	003e0606 	br	53f60 <__alt_data_end+0xfffd5760>
   54748:	d9402117 	ldw	r5,132(sp)
   5474c:	d9002017 	ldw	r4,128(sp)
   54750:	d9801a04 	addi	r6,sp,104
   54754:	da402c15 	stw	r9,176(sp)
   54758:	db802a15 	stw	r14,168(sp)
   5475c:	00534800 	call	53480 <__sprint_r.part.0>
   54760:	da402c17 	ldw	r9,176(sp)
   54764:	db802a17 	ldw	r14,168(sp)
   54768:	103ede1e 	bne	r2,zero,542e4 <__alt_data_end+0xfffd5ae4>
   5476c:	d9401b17 	ldw	r5,108(sp)
   54770:	d8801c17 	ldw	r2,112(sp)
   54774:	d811883a 	mov	r8,sp
   54778:	29000044 	addi	r4,r5,1
   5477c:	003e7406 	br	54150 <__alt_data_end+0xfffd5950>
   54780:	00bfffc4 	movi	r2,-1
   54784:	003c5806 	br	538e8 <__alt_data_end+0xfffd50e8>
   54788:	d811883a 	mov	r8,sp
   5478c:	003ee806 	br	54330 <__alt_data_end+0xfffd5b30>
   54790:	000b883a 	mov	r5,zero
   54794:	01000044 	movi	r4,1
   54798:	d811883a 	mov	r8,sp
   5479c:	003e7c06 	br	54190 <__alt_data_end+0xfffd5990>
   547a0:	50800104 	addi	r2,r10,4
   547a4:	5480000b 	ldhu	r18,0(r10)
   547a8:	0027883a 	mov	r19,zero
   547ac:	483dcf0e 	bge	r9,zero,53eec <__alt_data_end+0xfffd56ec>
   547b0:	003fdf06 	br	54730 <__alt_data_end+0xfffd5f30>
   547b4:	54800017 	ldw	r18,0(r10)
   547b8:	52800104 	addi	r10,r10,4
   547bc:	0027883a 	mov	r19,zero
   547c0:	da802215 	stw	r10,136(sp)
   547c4:	003d5006 	br	53d08 <__alt_data_end+0xfffd5508>
   547c8:	50800104 	addi	r2,r10,4
   547cc:	5480000b 	ldhu	r18,0(r10)
   547d0:	0027883a 	mov	r19,zero
   547d4:	483f7d0e 	bge	r9,zero,545cc <__alt_data_end+0xfffd5dcc>
   547d8:	003ddc06 	br	53f4c <__alt_data_end+0xfffd574c>
   547dc:	d8c02215 	stw	r3,136(sp)
   547e0:	0039883a 	mov	fp,zero
   547e4:	003ddb06 	br	53f54 <__alt_data_end+0xfffd5754>
   547e8:	028001b4 	movhi	r10,6
   547ec:	52adb804 	addi	r10,r10,-18720
   547f0:	da802415 	stw	r10,144(sp)
   547f4:	003e8306 	br	54204 <__alt_data_end+0xfffd5a04>
   547f8:	d8801c17 	ldw	r2,112(sp)
   547fc:	dd002117 	ldw	r20,132(sp)
   54800:	103eb926 	beq	r2,zero,542e8 <__alt_data_end+0xfffd5ae8>
   54804:	d9002017 	ldw	r4,128(sp)
   54808:	d9801a04 	addi	r6,sp,104
   5480c:	a00b883a 	mov	r5,r20
   54810:	00534800 	call	53480 <__sprint_r.part.0>
   54814:	003eb406 	br	542e8 <__alt_data_end+0xfffd5ae8>
   54818:	80c00043 	ldbu	r3,1(r16)
   5481c:	a5000814 	ori	r20,r20,32
   54820:	84000044 	addi	r16,r16,1
   54824:	18c03fcc 	andi	r3,r3,255
   54828:	18c0201c 	xori	r3,r3,128
   5482c:	18ffe004 	addi	r3,r3,-128
   54830:	003bb706 	br	53710 <__alt_data_end+0xfffd4f10>
   54834:	a809883a 	mov	r4,r21
   54838:	d8c02a15 	stw	r3,168(sp)
   5483c:	da002b15 	stw	r8,172(sp)
   54840:	00459240 	call	45924 <strlen>
   54844:	d8c02a17 	ldw	r3,168(sp)
   54848:	1027883a 	mov	r19,r2
   5484c:	df001d83 	ldbu	fp,118(sp)
   54850:	d8c02215 	stw	r3,136(sp)
   54854:	0013883a 	mov	r9,zero
   54858:	da002b17 	ldw	r8,172(sp)
   5485c:	003c4d06 	br	53994 <__alt_data_end+0xfffd5194>
   54860:	d9402117 	ldw	r5,132(sp)
   54864:	d9002017 	ldw	r4,128(sp)
   54868:	d9801a04 	addi	r6,sp,104
   5486c:	da402c15 	stw	r9,176(sp)
   54870:	00534800 	call	53480 <__sprint_r.part.0>
   54874:	da402c17 	ldw	r9,176(sp)
   54878:	103e9a1e 	bne	r2,zero,542e4 <__alt_data_end+0xfffd5ae4>
   5487c:	d9401b17 	ldw	r5,108(sp)
   54880:	d8801c17 	ldw	r2,112(sp)
   54884:	d811883a 	mov	r8,sp
   54888:	29000044 	addi	r4,r5,1
   5488c:	003e4206 	br	54198 <__alt_data_end+0xfffd5998>
   54890:	d9401b17 	ldw	r5,108(sp)
   54894:	010001b4 	movhi	r4,6
   54898:	212dbc04 	addi	r4,r4,-18704
   5489c:	d9002415 	stw	r4,144(sp)
   548a0:	29400044 	addi	r5,r5,1
   548a4:	003c6d06 	br	53a5c <__alt_data_end+0xfffd525c>
   548a8:	0039883a 	mov	fp,zero
   548ac:	00800084 	movi	r2,2
   548b0:	10803fcc 	andi	r2,r2,255
   548b4:	01000044 	movi	r4,1
   548b8:	11001e26 	beq	r2,r4,54934 <___vfiprintf_internal_r+0x13a0>
   548bc:	01000084 	movi	r4,2
   548c0:	11001e1e 	bne	r2,r4,5493c <___vfiprintf_internal_r+0x13a8>
   548c4:	1829883a 	mov	r20,r3
   548c8:	003eea06 	br	54474 <__alt_data_end+0xfffd5c74>
   548cc:	a007883a 	mov	r3,r20
   548d0:	00800044 	movi	r2,1
   548d4:	003ff606 	br	548b0 <__alt_data_end+0xfffd60b0>
   548d8:	00800184 	movi	r2,6
   548dc:	1240012e 	bgeu	r2,r9,548e4 <___vfiprintf_internal_r+0x1350>
   548e0:	1013883a 	mov	r9,r2
   548e4:	4827883a 	mov	r19,r9
   548e8:	4825883a 	mov	r18,r9
   548ec:	48001516 	blt	r9,zero,54944 <___vfiprintf_internal_r+0x13b0>
   548f0:	054001b4 	movhi	r21,6
   548f4:	d8c02215 	stw	r3,136(sp)
   548f8:	ad6c9104 	addi	r21,r21,-19900
   548fc:	003d1406 	br	53d50 <__alt_data_end+0xfffd5550>
   54900:	028001b4 	movhi	r10,6
   54904:	52adb804 	addi	r10,r10,-18720
   54908:	da802415 	stw	r10,144(sp)
   5490c:	200d883a 	mov	r6,r4
   54910:	003c9106 	br	53b58 <__alt_data_end+0xfffd5358>
   54914:	5021883a 	mov	r16,r10
   54918:	0013883a 	mov	r9,zero
   5491c:	003b7d06 	br	53714 <__alt_data_end+0xfffd4f14>
   54920:	4827883a 	mov	r19,r9
   54924:	df001d83 	ldbu	fp,118(sp)
   54928:	d8c02215 	stw	r3,136(sp)
   5492c:	0013883a 	mov	r9,zero
   54930:	003c1806 	br	53994 <__alt_data_end+0xfffd5194>
   54934:	1829883a 	mov	r20,r3
   54938:	003d1806 	br	53d9c <__alt_data_end+0xfffd559c>
   5493c:	1829883a 	mov	r20,r3
   54940:	003ccd06 	br	53c78 <__alt_data_end+0xfffd5478>
   54944:	0025883a 	mov	r18,zero
   54948:	003fe906 	br	548f0 <__alt_data_end+0xfffd60f0>
   5494c:	d8802217 	ldw	r2,136(sp)
   54950:	80c00043 	ldbu	r3,1(r16)
   54954:	5021883a 	mov	r16,r10
   54958:	12400017 	ldw	r9,0(r2)
   5495c:	10800104 	addi	r2,r2,4
   54960:	d8802215 	stw	r2,136(sp)
   54964:	483faf0e 	bge	r9,zero,54824 <__alt_data_end+0xfffd6024>
   54968:	18c03fcc 	andi	r3,r3,255
   5496c:	18c0201c 	xori	r3,r3,128
   54970:	027fffc4 	movi	r9,-1
   54974:	18ffe004 	addi	r3,r3,-128
   54978:	003b6506 	br	53710 <__alt_data_end+0xfffd4f10>
   5497c:	d9c01d85 	stb	r7,118(sp)
   54980:	003ca006 	br	53c04 <__alt_data_end+0xfffd5404>
   54984:	d9c01d85 	stb	r7,118(sp)
   54988:	003cad06 	br	53c40 <__alt_data_end+0xfffd5440>
   5498c:	d9c01d85 	stb	r7,118(sp)
   54990:	003d7d06 	br	53f88 <__alt_data_end+0xfffd5788>
   54994:	d9c01d85 	stb	r7,118(sp)
   54998:	003d5f06 	br	53f18 <__alt_data_end+0xfffd5718>
   5499c:	a080004c 	andi	r2,r20,1
   549a0:	0039883a 	mov	fp,zero
   549a4:	10000526 	beq	r2,zero,549bc <___vfiprintf_internal_r+0x1428>
   549a8:	00800c04 	movi	r2,48
   549ac:	d88019c5 	stb	r2,103(sp)
   549b0:	dcc02717 	ldw	r19,156(sp)
   549b4:	dd4019c4 	addi	r21,sp,103
   549b8:	003bf606 	br	53994 <__alt_data_end+0xfffd5194>
   549bc:	0027883a 	mov	r19,zero
   549c0:	dd401a04 	addi	r21,sp,104
   549c4:	003bf306 	br	53994 <__alt_data_end+0xfffd5194>
   549c8:	d9c01d85 	stb	r7,118(sp)
   549cc:	003dc806 	br	540f0 <__alt_data_end+0xfffd58f0>
   549d0:	d9c01d85 	stb	r7,118(sp)
   549d4:	003d3a06 	br	53ec0 <__alt_data_end+0xfffd56c0>
   549d8:	d9c01d85 	stb	r7,118(sp)
   549dc:	003d2a06 	br	53e88 <__alt_data_end+0xfffd5688>
   549e0:	d9c01d85 	stb	r7,118(sp)
   549e4:	003cde06 	br	53d60 <__alt_data_end+0xfffd5560>
   549e8:	d9c01d85 	stb	r7,118(sp)
   549ec:	003cbc06 	br	53ce0 <__alt_data_end+0xfffd54e0>

000549f0 <__vfiprintf_internal>:
   549f0:	008001b4 	movhi	r2,6
   549f4:	10b55004 	addi	r2,r2,-10944
   549f8:	300f883a 	mov	r7,r6
   549fc:	280d883a 	mov	r6,r5
   54a00:	200b883a 	mov	r5,r4
   54a04:	11000017 	ldw	r4,0(r2)
   54a08:	00535941 	jmpi	53594 <___vfiprintf_internal_r>

00054a0c <__sbprintf>:
   54a0c:	2880030b 	ldhu	r2,12(r5)
   54a10:	2ac01917 	ldw	r11,100(r5)
   54a14:	2a80038b 	ldhu	r10,14(r5)
   54a18:	2a400717 	ldw	r9,28(r5)
   54a1c:	2a000917 	ldw	r8,36(r5)
   54a20:	defee204 	addi	sp,sp,-1144
   54a24:	00c10004 	movi	r3,1024
   54a28:	dc011a15 	stw	r16,1128(sp)
   54a2c:	10bfff4c 	andi	r2,r2,65533
   54a30:	2821883a 	mov	r16,r5
   54a34:	d8cb883a 	add	r5,sp,r3
   54a38:	dc811c15 	stw	r18,1136(sp)
   54a3c:	dc411b15 	stw	r17,1132(sp)
   54a40:	dfc11d15 	stw	ra,1140(sp)
   54a44:	2025883a 	mov	r18,r4
   54a48:	d881030d 	sth	r2,1036(sp)
   54a4c:	dac11915 	stw	r11,1124(sp)
   54a50:	da81038d 	sth	r10,1038(sp)
   54a54:	da410715 	stw	r9,1052(sp)
   54a58:	da010915 	stw	r8,1060(sp)
   54a5c:	dec10015 	stw	sp,1024(sp)
   54a60:	dec10415 	stw	sp,1040(sp)
   54a64:	d8c10215 	stw	r3,1032(sp)
   54a68:	d8c10515 	stw	r3,1044(sp)
   54a6c:	d8010615 	stw	zero,1048(sp)
   54a70:	00535940 	call	53594 <___vfiprintf_internal_r>
   54a74:	1023883a 	mov	r17,r2
   54a78:	10000416 	blt	r2,zero,54a8c <__sbprintf+0x80>
   54a7c:	d9410004 	addi	r5,sp,1024
   54a80:	9009883a 	mov	r4,r18
   54a84:	004b1100 	call	4b110 <_fflush_r>
   54a88:	10000d1e 	bne	r2,zero,54ac0 <__sbprintf+0xb4>
   54a8c:	d881030b 	ldhu	r2,1036(sp)
   54a90:	1080100c 	andi	r2,r2,64
   54a94:	10000326 	beq	r2,zero,54aa4 <__sbprintf+0x98>
   54a98:	8080030b 	ldhu	r2,12(r16)
   54a9c:	10801014 	ori	r2,r2,64
   54aa0:	8080030d 	sth	r2,12(r16)
   54aa4:	8805883a 	mov	r2,r17
   54aa8:	dfc11d17 	ldw	ra,1140(sp)
   54aac:	dc811c17 	ldw	r18,1136(sp)
   54ab0:	dc411b17 	ldw	r17,1132(sp)
   54ab4:	dc011a17 	ldw	r16,1128(sp)
   54ab8:	dec11e04 	addi	sp,sp,1144
   54abc:	f800283a 	ret
   54ac0:	047fffc4 	movi	r17,-1
   54ac4:	003ff106 	br	54a8c <__alt_data_end+0xfffd628c>

00054ac8 <_write_r>:
   54ac8:	defffd04 	addi	sp,sp,-12
   54acc:	2805883a 	mov	r2,r5
   54ad0:	dc000015 	stw	r16,0(sp)
   54ad4:	040001b4 	movhi	r16,6
   54ad8:	dc400115 	stw	r17,4(sp)
   54adc:	300b883a 	mov	r5,r6
   54ae0:	843cb304 	addi	r16,r16,-3380
   54ae4:	2023883a 	mov	r17,r4
   54ae8:	380d883a 	mov	r6,r7
   54aec:	1009883a 	mov	r4,r2
   54af0:	dfc00215 	stw	ra,8(sp)
   54af4:	80000015 	stw	zero,0(r16)
   54af8:	0058bbc0 	call	58bbc <write>
   54afc:	00ffffc4 	movi	r3,-1
   54b00:	10c00526 	beq	r2,r3,54b18 <_write_r+0x50>
   54b04:	dfc00217 	ldw	ra,8(sp)
   54b08:	dc400117 	ldw	r17,4(sp)
   54b0c:	dc000017 	ldw	r16,0(sp)
   54b10:	dec00304 	addi	sp,sp,12
   54b14:	f800283a 	ret
   54b18:	80c00017 	ldw	r3,0(r16)
   54b1c:	183ff926 	beq	r3,zero,54b04 <__alt_data_end+0xfffd6304>
   54b20:	88c00015 	stw	r3,0(r17)
   54b24:	003ff706 	br	54b04 <__alt_data_end+0xfffd6304>

00054b28 <_close_r>:
   54b28:	defffd04 	addi	sp,sp,-12
   54b2c:	dc000015 	stw	r16,0(sp)
   54b30:	040001b4 	movhi	r16,6
   54b34:	dc400115 	stw	r17,4(sp)
   54b38:	843cb304 	addi	r16,r16,-3380
   54b3c:	2023883a 	mov	r17,r4
   54b40:	2809883a 	mov	r4,r5
   54b44:	dfc00215 	stw	ra,8(sp)
   54b48:	80000015 	stw	zero,0(r16)
   54b4c:	005837c0 	call	5837c <close>
   54b50:	00ffffc4 	movi	r3,-1
   54b54:	10c00526 	beq	r2,r3,54b6c <_close_r+0x44>
   54b58:	dfc00217 	ldw	ra,8(sp)
   54b5c:	dc400117 	ldw	r17,4(sp)
   54b60:	dc000017 	ldw	r16,0(sp)
   54b64:	dec00304 	addi	sp,sp,12
   54b68:	f800283a 	ret
   54b6c:	80c00017 	ldw	r3,0(r16)
   54b70:	183ff926 	beq	r3,zero,54b58 <__alt_data_end+0xfffd6358>
   54b74:	88c00015 	stw	r3,0(r17)
   54b78:	003ff706 	br	54b58 <__alt_data_end+0xfffd6358>

00054b7c <_calloc_r>:
   54b7c:	298b383a 	mul	r5,r5,r6
   54b80:	defffe04 	addi	sp,sp,-8
   54b84:	dfc00115 	stw	ra,4(sp)
   54b88:	dc000015 	stw	r16,0(sp)
   54b8c:	004c4dc0 	call	4c4dc <_malloc_r>
   54b90:	10002926 	beq	r2,zero,54c38 <_calloc_r+0xbc>
   54b94:	11bfff17 	ldw	r6,-4(r2)
   54b98:	1021883a 	mov	r16,r2
   54b9c:	00bfff04 	movi	r2,-4
   54ba0:	308c703a 	and	r6,r6,r2
   54ba4:	00c00904 	movi	r3,36
   54ba8:	308d883a 	add	r6,r6,r2
   54bac:	19801636 	bltu	r3,r6,54c08 <_calloc_r+0x8c>
   54bb0:	008004c4 	movi	r2,19
   54bb4:	11800b2e 	bgeu	r2,r6,54be4 <_calloc_r+0x68>
   54bb8:	80000015 	stw	zero,0(r16)
   54bbc:	80000115 	stw	zero,4(r16)
   54bc0:	008006c4 	movi	r2,27
   54bc4:	11801a2e 	bgeu	r2,r6,54c30 <_calloc_r+0xb4>
   54bc8:	80000215 	stw	zero,8(r16)
   54bcc:	80000315 	stw	zero,12(r16)
   54bd0:	30c0151e 	bne	r6,r3,54c28 <_calloc_r+0xac>
   54bd4:	80000415 	stw	zero,16(r16)
   54bd8:	80800604 	addi	r2,r16,24
   54bdc:	80000515 	stw	zero,20(r16)
   54be0:	00000106 	br	54be8 <_calloc_r+0x6c>
   54be4:	8005883a 	mov	r2,r16
   54be8:	10000015 	stw	zero,0(r2)
   54bec:	10000115 	stw	zero,4(r2)
   54bf0:	10000215 	stw	zero,8(r2)
   54bf4:	8005883a 	mov	r2,r16
   54bf8:	dfc00117 	ldw	ra,4(sp)
   54bfc:	dc000017 	ldw	r16,0(sp)
   54c00:	dec00204 	addi	sp,sp,8
   54c04:	f800283a 	ret
   54c08:	000b883a 	mov	r5,zero
   54c0c:	8009883a 	mov	r4,r16
   54c10:	004d14c0 	call	4d14c <memset>
   54c14:	8005883a 	mov	r2,r16
   54c18:	dfc00117 	ldw	ra,4(sp)
   54c1c:	dc000017 	ldw	r16,0(sp)
   54c20:	dec00204 	addi	sp,sp,8
   54c24:	f800283a 	ret
   54c28:	80800404 	addi	r2,r16,16
   54c2c:	003fee06 	br	54be8 <__alt_data_end+0xfffd63e8>
   54c30:	80800204 	addi	r2,r16,8
   54c34:	003fec06 	br	54be8 <__alt_data_end+0xfffd63e8>
   54c38:	0005883a 	mov	r2,zero
   54c3c:	003fee06 	br	54bf8 <__alt_data_end+0xfffd63f8>

00054c40 <_fclose_r>:
   54c40:	28003926 	beq	r5,zero,54d28 <_fclose_r+0xe8>
   54c44:	defffc04 	addi	sp,sp,-16
   54c48:	dc400115 	stw	r17,4(sp)
   54c4c:	dc000015 	stw	r16,0(sp)
   54c50:	dfc00315 	stw	ra,12(sp)
   54c54:	dc800215 	stw	r18,8(sp)
   54c58:	2023883a 	mov	r17,r4
   54c5c:	2821883a 	mov	r16,r5
   54c60:	20000226 	beq	r4,zero,54c6c <_fclose_r+0x2c>
   54c64:	20800e17 	ldw	r2,56(r4)
   54c68:	10002726 	beq	r2,zero,54d08 <_fclose_r+0xc8>
   54c6c:	8080030f 	ldh	r2,12(r16)
   54c70:	1000071e 	bne	r2,zero,54c90 <_fclose_r+0x50>
   54c74:	0005883a 	mov	r2,zero
   54c78:	dfc00317 	ldw	ra,12(sp)
   54c7c:	dc800217 	ldw	r18,8(sp)
   54c80:	dc400117 	ldw	r17,4(sp)
   54c84:	dc000017 	ldw	r16,0(sp)
   54c88:	dec00404 	addi	sp,sp,16
   54c8c:	f800283a 	ret
   54c90:	800b883a 	mov	r5,r16
   54c94:	8809883a 	mov	r4,r17
   54c98:	004aef40 	call	4aef4 <__sflush_r>
   54c9c:	1025883a 	mov	r18,r2
   54ca0:	80800b17 	ldw	r2,44(r16)
   54ca4:	10000426 	beq	r2,zero,54cb8 <_fclose_r+0x78>
   54ca8:	81400717 	ldw	r5,28(r16)
   54cac:	8809883a 	mov	r4,r17
   54cb0:	103ee83a 	callr	r2
   54cb4:	10001616 	blt	r2,zero,54d10 <_fclose_r+0xd0>
   54cb8:	8080030b 	ldhu	r2,12(r16)
   54cbc:	1080200c 	andi	r2,r2,128
   54cc0:	1000151e 	bne	r2,zero,54d18 <_fclose_r+0xd8>
   54cc4:	81400c17 	ldw	r5,48(r16)
   54cc8:	28000526 	beq	r5,zero,54ce0 <_fclose_r+0xa0>
   54ccc:	80801004 	addi	r2,r16,64
   54cd0:	28800226 	beq	r5,r2,54cdc <_fclose_r+0x9c>
   54cd4:	8809883a 	mov	r4,r17
   54cd8:	004b8c00 	call	4b8c0 <_free_r>
   54cdc:	80000c15 	stw	zero,48(r16)
   54ce0:	81401117 	ldw	r5,68(r16)
   54ce4:	28000326 	beq	r5,zero,54cf4 <_fclose_r+0xb4>
   54ce8:	8809883a 	mov	r4,r17
   54cec:	004b8c00 	call	4b8c0 <_free_r>
   54cf0:	80001115 	stw	zero,68(r16)
   54cf4:	004b4fc0 	call	4b4fc <__sfp_lock_acquire>
   54cf8:	8000030d 	sth	zero,12(r16)
   54cfc:	004b5000 	call	4b500 <__sfp_lock_release>
   54d00:	9005883a 	mov	r2,r18
   54d04:	003fdc06 	br	54c78 <__alt_data_end+0xfffd6478>
   54d08:	004b4ec0 	call	4b4ec <__sinit>
   54d0c:	003fd706 	br	54c6c <__alt_data_end+0xfffd646c>
   54d10:	04bfffc4 	movi	r18,-1
   54d14:	003fe806 	br	54cb8 <__alt_data_end+0xfffd64b8>
   54d18:	81400417 	ldw	r5,16(r16)
   54d1c:	8809883a 	mov	r4,r17
   54d20:	004b8c00 	call	4b8c0 <_free_r>
   54d24:	003fe706 	br	54cc4 <__alt_data_end+0xfffd64c4>
   54d28:	0005883a 	mov	r2,zero
   54d2c:	f800283a 	ret

00054d30 <fclose>:
   54d30:	008001b4 	movhi	r2,6
   54d34:	10b55004 	addi	r2,r2,-10944
   54d38:	200b883a 	mov	r5,r4
   54d3c:	11000017 	ldw	r4,0(r2)
   54d40:	0054c401 	jmpi	54c40 <_fclose_r>

00054d44 <__fputwc>:
   54d44:	defff804 	addi	sp,sp,-32
   54d48:	dcc00415 	stw	r19,16(sp)
   54d4c:	dc800315 	stw	r18,12(sp)
   54d50:	dc000115 	stw	r16,4(sp)
   54d54:	dfc00715 	stw	ra,28(sp)
   54d58:	dd400615 	stw	r21,24(sp)
   54d5c:	dd000515 	stw	r20,20(sp)
   54d60:	dc400215 	stw	r17,8(sp)
   54d64:	2027883a 	mov	r19,r4
   54d68:	2825883a 	mov	r18,r5
   54d6c:	3021883a 	mov	r16,r6
   54d70:	004c2cc0 	call	4c2cc <__locale_mb_cur_max>
   54d74:	00c00044 	movi	r3,1
   54d78:	10c03e26 	beq	r2,r3,54e74 <__fputwc+0x130>
   54d7c:	81c01704 	addi	r7,r16,92
   54d80:	900d883a 	mov	r6,r18
   54d84:	d80b883a 	mov	r5,sp
   54d88:	9809883a 	mov	r4,r19
   54d8c:	005727c0 	call	5727c <_wcrtomb_r>
   54d90:	1029883a 	mov	r20,r2
   54d94:	00bfffc4 	movi	r2,-1
   54d98:	a0802026 	beq	r20,r2,54e1c <__fputwc+0xd8>
   54d9c:	d9400003 	ldbu	r5,0(sp)
   54da0:	a0001c26 	beq	r20,zero,54e14 <__fputwc+0xd0>
   54da4:	0023883a 	mov	r17,zero
   54da8:	05400284 	movi	r21,10
   54dac:	00000906 	br	54dd4 <__fputwc+0x90>
   54db0:	80800017 	ldw	r2,0(r16)
   54db4:	11400005 	stb	r5,0(r2)
   54db8:	80c00017 	ldw	r3,0(r16)
   54dbc:	18c00044 	addi	r3,r3,1
   54dc0:	80c00015 	stw	r3,0(r16)
   54dc4:	8c400044 	addi	r17,r17,1
   54dc8:	dc45883a 	add	r2,sp,r17
   54dcc:	8d00112e 	bgeu	r17,r20,54e14 <__fputwc+0xd0>
   54dd0:	11400003 	ldbu	r5,0(r2)
   54dd4:	80c00217 	ldw	r3,8(r16)
   54dd8:	18ffffc4 	addi	r3,r3,-1
   54ddc:	80c00215 	stw	r3,8(r16)
   54de0:	183ff30e 	bge	r3,zero,54db0 <__alt_data_end+0xfffd65b0>
   54de4:	80800617 	ldw	r2,24(r16)
   54de8:	18801916 	blt	r3,r2,54e50 <__fputwc+0x10c>
   54dec:	80800017 	ldw	r2,0(r16)
   54df0:	11400005 	stb	r5,0(r2)
   54df4:	80800017 	ldw	r2,0(r16)
   54df8:	10c00003 	ldbu	r3,0(r2)
   54dfc:	10800044 	addi	r2,r2,1
   54e00:	1d402326 	beq	r3,r21,54e90 <__fputwc+0x14c>
   54e04:	80800015 	stw	r2,0(r16)
   54e08:	8c400044 	addi	r17,r17,1
   54e0c:	dc45883a 	add	r2,sp,r17
   54e10:	8d3fef36 	bltu	r17,r20,54dd0 <__alt_data_end+0xfffd65d0>
   54e14:	9005883a 	mov	r2,r18
   54e18:	00000406 	br	54e2c <__fputwc+0xe8>
   54e1c:	80c0030b 	ldhu	r3,12(r16)
   54e20:	a005883a 	mov	r2,r20
   54e24:	18c01014 	ori	r3,r3,64
   54e28:	80c0030d 	sth	r3,12(r16)
   54e2c:	dfc00717 	ldw	ra,28(sp)
   54e30:	dd400617 	ldw	r21,24(sp)
   54e34:	dd000517 	ldw	r20,20(sp)
   54e38:	dcc00417 	ldw	r19,16(sp)
   54e3c:	dc800317 	ldw	r18,12(sp)
   54e40:	dc400217 	ldw	r17,8(sp)
   54e44:	dc000117 	ldw	r16,4(sp)
   54e48:	dec00804 	addi	sp,sp,32
   54e4c:	f800283a 	ret
   54e50:	800d883a 	mov	r6,r16
   54e54:	29403fcc 	andi	r5,r5,255
   54e58:	9809883a 	mov	r4,r19
   54e5c:	00571240 	call	57124 <__swbuf_r>
   54e60:	10bfffe0 	cmpeqi	r2,r2,-1
   54e64:	10803fcc 	andi	r2,r2,255
   54e68:	103fd626 	beq	r2,zero,54dc4 <__alt_data_end+0xfffd65c4>
   54e6c:	00bfffc4 	movi	r2,-1
   54e70:	003fee06 	br	54e2c <__alt_data_end+0xfffd662c>
   54e74:	90ffffc4 	addi	r3,r18,-1
   54e78:	01003f84 	movi	r4,254
   54e7c:	20ffbf36 	bltu	r4,r3,54d7c <__alt_data_end+0xfffd657c>
   54e80:	900b883a 	mov	r5,r18
   54e84:	dc800005 	stb	r18,0(sp)
   54e88:	1029883a 	mov	r20,r2
   54e8c:	003fc506 	br	54da4 <__alt_data_end+0xfffd65a4>
   54e90:	800d883a 	mov	r6,r16
   54e94:	a80b883a 	mov	r5,r21
   54e98:	9809883a 	mov	r4,r19
   54e9c:	00571240 	call	57124 <__swbuf_r>
   54ea0:	10bfffe0 	cmpeqi	r2,r2,-1
   54ea4:	003fef06 	br	54e64 <__alt_data_end+0xfffd6664>

00054ea8 <_fputwc_r>:
   54ea8:	3080030b 	ldhu	r2,12(r6)
   54eac:	10c8000c 	andi	r3,r2,8192
   54eb0:	1800051e 	bne	r3,zero,54ec8 <_fputwc_r+0x20>
   54eb4:	30c01917 	ldw	r3,100(r6)
   54eb8:	10880014 	ori	r2,r2,8192
   54ebc:	3080030d 	sth	r2,12(r6)
   54ec0:	18880014 	ori	r2,r3,8192
   54ec4:	30801915 	stw	r2,100(r6)
   54ec8:	0054d441 	jmpi	54d44 <__fputwc>

00054ecc <fputwc>:
   54ecc:	008001b4 	movhi	r2,6
   54ed0:	defffc04 	addi	sp,sp,-16
   54ed4:	10b55004 	addi	r2,r2,-10944
   54ed8:	dc000115 	stw	r16,4(sp)
   54edc:	14000017 	ldw	r16,0(r2)
   54ee0:	dc400215 	stw	r17,8(sp)
   54ee4:	dfc00315 	stw	ra,12(sp)
   54ee8:	2023883a 	mov	r17,r4
   54eec:	80000226 	beq	r16,zero,54ef8 <fputwc+0x2c>
   54ef0:	80800e17 	ldw	r2,56(r16)
   54ef4:	10001026 	beq	r2,zero,54f38 <fputwc+0x6c>
   54ef8:	2880030b 	ldhu	r2,12(r5)
   54efc:	10c8000c 	andi	r3,r2,8192
   54f00:	1800051e 	bne	r3,zero,54f18 <fputwc+0x4c>
   54f04:	28c01917 	ldw	r3,100(r5)
   54f08:	10880014 	ori	r2,r2,8192
   54f0c:	2880030d 	sth	r2,12(r5)
   54f10:	18880014 	ori	r2,r3,8192
   54f14:	28801915 	stw	r2,100(r5)
   54f18:	280d883a 	mov	r6,r5
   54f1c:	8009883a 	mov	r4,r16
   54f20:	880b883a 	mov	r5,r17
   54f24:	dfc00317 	ldw	ra,12(sp)
   54f28:	dc400217 	ldw	r17,8(sp)
   54f2c:	dc000117 	ldw	r16,4(sp)
   54f30:	dec00404 	addi	sp,sp,16
   54f34:	0054d441 	jmpi	54d44 <__fputwc>
   54f38:	8009883a 	mov	r4,r16
   54f3c:	d9400015 	stw	r5,0(sp)
   54f40:	004b4ec0 	call	4b4ec <__sinit>
   54f44:	d9400017 	ldw	r5,0(sp)
   54f48:	003feb06 	br	54ef8 <__alt_data_end+0xfffd66f8>

00054f4c <_fstat_r>:
   54f4c:	defffd04 	addi	sp,sp,-12
   54f50:	2805883a 	mov	r2,r5
   54f54:	dc000015 	stw	r16,0(sp)
   54f58:	040001b4 	movhi	r16,6
   54f5c:	dc400115 	stw	r17,4(sp)
   54f60:	843cb304 	addi	r16,r16,-3380
   54f64:	2023883a 	mov	r17,r4
   54f68:	300b883a 	mov	r5,r6
   54f6c:	1009883a 	mov	r4,r2
   54f70:	dfc00215 	stw	ra,8(sp)
   54f74:	80000015 	stw	zero,0(r16)
   54f78:	00584b40 	call	584b4 <fstat>
   54f7c:	00ffffc4 	movi	r3,-1
   54f80:	10c00526 	beq	r2,r3,54f98 <_fstat_r+0x4c>
   54f84:	dfc00217 	ldw	ra,8(sp)
   54f88:	dc400117 	ldw	r17,4(sp)
   54f8c:	dc000017 	ldw	r16,0(sp)
   54f90:	dec00304 	addi	sp,sp,12
   54f94:	f800283a 	ret
   54f98:	80c00017 	ldw	r3,0(r16)
   54f9c:	183ff926 	beq	r3,zero,54f84 <__alt_data_end+0xfffd6784>
   54fa0:	88c00015 	stw	r3,0(r17)
   54fa4:	003ff706 	br	54f84 <__alt_data_end+0xfffd6784>

00054fa8 <rshift>:
   54fa8:	2807d17a 	srai	r3,r5,5
   54fac:	20800417 	ldw	r2,16(r4)
   54fb0:	22000504 	addi	r8,r4,20
   54fb4:	1880250e 	bge	r3,r2,5504c <rshift+0xa4>
   54fb8:	1085883a 	add	r2,r2,r2
   54fbc:	18c7883a 	add	r3,r3,r3
   54fc0:	1085883a 	add	r2,r2,r2
   54fc4:	18c7883a 	add	r3,r3,r3
   54fc8:	294007cc 	andi	r5,r5,31
   54fcc:	4085883a 	add	r2,r8,r2
   54fd0:	40c7883a 	add	r3,r8,r3
   54fd4:	28002026 	beq	r5,zero,55058 <rshift+0xb0>
   54fd8:	19800017 	ldw	r6,0(r3)
   54fdc:	02c00804 	movi	r11,32
   54fe0:	19c00104 	addi	r7,r3,4
   54fe4:	5957c83a 	sub	r11,r11,r5
   54fe8:	314cd83a 	srl	r6,r6,r5
   54fec:	38802c2e 	bgeu	r7,r2,550a0 <rshift+0xf8>
   54ff0:	4015883a 	mov	r10,r8
   54ff4:	3a400017 	ldw	r9,0(r7)
   54ff8:	52800104 	addi	r10,r10,4
   54ffc:	39c00104 	addi	r7,r7,4
   55000:	4ad2983a 	sll	r9,r9,r11
   55004:	498cb03a 	or	r6,r9,r6
   55008:	51bfff15 	stw	r6,-4(r10)
   5500c:	39bfff17 	ldw	r6,-4(r7)
   55010:	314cd83a 	srl	r6,r6,r5
   55014:	38bff736 	bltu	r7,r2,54ff4 <__alt_data_end+0xfffd67f4>
   55018:	10c7c83a 	sub	r3,r2,r3
   5501c:	18fffec4 	addi	r3,r3,-5
   55020:	1806d0ba 	srli	r3,r3,2
   55024:	18c00044 	addi	r3,r3,1
   55028:	18c7883a 	add	r3,r3,r3
   5502c:	18c7883a 	add	r3,r3,r3
   55030:	40c7883a 	add	r3,r8,r3
   55034:	19800015 	stw	r6,0(r3)
   55038:	30000126 	beq	r6,zero,55040 <rshift+0x98>
   5503c:	18c00104 	addi	r3,r3,4
   55040:	1a05c83a 	sub	r2,r3,r8
   55044:	1005d0ba 	srai	r2,r2,2
   55048:	00001206 	br	55094 <rshift+0xec>
   5504c:	20000415 	stw	zero,16(r4)
   55050:	20000515 	stw	zero,20(r4)
   55054:	f800283a 	ret
   55058:	18bffc2e 	bgeu	r3,r2,5504c <__alt_data_end+0xfffd684c>
   5505c:	180d883a 	mov	r6,r3
   55060:	400b883a 	mov	r5,r8
   55064:	31c00017 	ldw	r7,0(r6)
   55068:	29400104 	addi	r5,r5,4
   5506c:	31800104 	addi	r6,r6,4
   55070:	29ffff15 	stw	r7,-4(r5)
   55074:	30bffb36 	bltu	r6,r2,55064 <__alt_data_end+0xfffd6864>
   55078:	00c6303a 	nor	r3,zero,r3
   5507c:	1885883a 	add	r2,r3,r2
   55080:	1004d0ba 	srli	r2,r2,2
   55084:	10800044 	addi	r2,r2,1
   55088:	1085883a 	add	r2,r2,r2
   5508c:	1085883a 	add	r2,r2,r2
   55090:	1005d0ba 	srai	r2,r2,2
   55094:	20800415 	stw	r2,16(r4)
   55098:	103fed26 	beq	r2,zero,55050 <__alt_data_end+0xfffd6850>
   5509c:	f800283a 	ret
   550a0:	4007883a 	mov	r3,r8
   550a4:	003fe306 	br	55034 <__alt_data_end+0xfffd6834>

000550a8 <__gethex>:
   550a8:	deffeb04 	addi	sp,sp,-84
   550ac:	dfc01415 	stw	ra,80(sp)
   550b0:	dd801115 	stw	r22,68(sp)
   550b4:	dcc00e15 	stw	r19,56(sp)
   550b8:	dc800d15 	stw	r18,52(sp)
   550bc:	2827883a 	mov	r19,r5
   550c0:	d9000115 	stw	r4,4(sp)
   550c4:	d9800015 	stw	r6,0(sp)
   550c8:	d9c00415 	stw	r7,16(sp)
   550cc:	df001315 	stw	fp,76(sp)
   550d0:	ddc01215 	stw	r23,72(sp)
   550d4:	dd401015 	stw	r21,64(sp)
   550d8:	dd000f15 	stw	r20,60(sp)
   550dc:	dc400c15 	stw	r17,48(sp)
   550e0:	dc000b15 	stw	r16,44(sp)
   550e4:	004c2f00 	call	4c2f0 <_localeconv_r>
   550e8:	14800017 	ldw	r18,0(r2)
   550ec:	9009883a 	mov	r4,r18
   550f0:	00459240 	call	45924 <strlen>
   550f4:	98c00017 	ldw	r3,0(r19)
   550f8:	102d883a 	mov	r22,r2
   550fc:	9085883a 	add	r2,r18,r2
   55100:	10bfffc3 	ldbu	r2,-1(r2)
   55104:	19000083 	ldbu	r4,2(r3)
   55108:	d8800305 	stb	r2,12(sp)
   5510c:	00800c04 	movi	r2,48
   55110:	2081521e 	bne	r4,r2,5565c <__gethex+0x5b4>
   55114:	017fff84 	movi	r5,-2
   55118:	188000c4 	addi	r2,r3,3
   5511c:	28cbc83a 	sub	r5,r5,r3
   55120:	200d883a 	mov	r6,r4
   55124:	28a3883a 	add	r17,r5,r2
   55128:	102b883a 	mov	r21,r2
   5512c:	10800044 	addi	r2,r2,1
   55130:	113fffc3 	ldbu	r4,-1(r2)
   55134:	21bffb26 	beq	r4,r6,55124 <__alt_data_end+0xfffd6924>
   55138:	050001b4 	movhi	r20,6
   5513c:	a52dc004 	addi	r20,r20,-18688
   55140:	a109883a 	add	r4,r20,r4
   55144:	20800003 	ldbu	r2,0(r4)
   55148:	10008826 	beq	r2,zero,5536c <__gethex+0x2c4>
   5514c:	a8800003 	ldbu	r2,0(r21)
   55150:	0015883a 	mov	r10,zero
   55154:	002f883a 	mov	r23,zero
   55158:	a085883a 	add	r2,r20,r2
   5515c:	10800003 	ldbu	r2,0(r2)
   55160:	a821883a 	mov	r16,r21
   55164:	10000526 	beq	r2,zero,5517c <__gethex+0xd4>
   55168:	84000044 	addi	r16,r16,1
   5516c:	80800003 	ldbu	r2,0(r16)
   55170:	a085883a 	add	r2,r20,r2
   55174:	10800003 	ldbu	r2,0(r2)
   55178:	103ffb1e 	bne	r2,zero,55168 <__alt_data_end+0xfffd6968>
   5517c:	b00d883a 	mov	r6,r22
   55180:	900b883a 	mov	r5,r18
   55184:	8009883a 	mov	r4,r16
   55188:	da800a15 	stw	r10,40(sp)
   5518c:	0055c480 	call	55c48 <strncmp>
   55190:	da800a17 	ldw	r10,40(sp)
   55194:	1000031e 	bne	r2,zero,551a4 <__gethex+0xfc>
   55198:	b8015226 	beq	r23,zero,556e4 <__gethex+0x63c>
   5519c:	80800003 	ldbu	r2,0(r16)
   551a0:	00000206 	br	551ac <__gethex+0x104>
   551a4:	80800003 	ldbu	r2,0(r16)
   551a8:	b8011f26 	beq	r23,zero,55628 <__gethex+0x580>
   551ac:	85efc83a 	sub	r23,r16,r23
   551b0:	bdef883a 	add	r23,r23,r23
   551b4:	bdef883a 	add	r23,r23,r23
   551b8:	05efc83a 	sub	r23,zero,r23
   551bc:	10803fcc 	andi	r2,r2,255
   551c0:	01001404 	movi	r4,80
   551c4:	11008626 	beq	r2,r4,553e0 <__gethex+0x338>
   551c8:	01001c04 	movi	r4,112
   551cc:	11008426 	beq	r2,r4,553e0 <__gethex+0x338>
   551d0:	8039883a 	mov	fp,r16
   551d4:	9c000015 	stw	r16,0(r19)
   551d8:	5000711e 	bne	r10,zero,553a0 <__gethex+0x2f8>
   551dc:	e545c83a 	sub	r2,fp,r21
   551e0:	10bfffc4 	addi	r2,r2,-1
   551e4:	010001c4 	movi	r4,7
   551e8:	000b883a 	mov	r5,zero
   551ec:	2080030e 	bge	r4,r2,551fc <__gethex+0x154>
   551f0:	1005d07a 	srai	r2,r2,1
   551f4:	29400044 	addi	r5,r5,1
   551f8:	20bffd16 	blt	r4,r2,551f0 <__alt_data_end+0xfffd69f0>
   551fc:	d9000117 	ldw	r4,4(sp)
   55200:	004d2740 	call	4d274 <_Balloc>
   55204:	10c00504 	addi	r3,r2,20
   55208:	d8c00215 	stw	r3,8(sp)
   5520c:	1021883a 	mov	r16,r2
   55210:	af01732e 	bgeu	r21,fp,557e0 <__gethex+0x738>
   55214:	dc400303 	ldbu	r17,12(sp)
   55218:	03400044 	movi	r13,1
   5521c:	1815883a 	mov	r10,r3
   55220:	0013883a 	mov	r9,zero
   55224:	0027883a 	mov	r19,zero
   55228:	6d9bc83a 	sub	r13,r13,r22
   5522c:	02c00804 	movi	r11,32
   55230:	e0bfffc3 	ldbu	r2,-1(fp)
   55234:	e3bfffc4 	addi	r14,fp,-1
   55238:	88803026 	beq	r17,r2,552fc <__gethex+0x254>
   5523c:	9ac04526 	beq	r19,r11,55354 <__gethex+0x2ac>
   55240:	980b883a 	mov	r5,r19
   55244:	9cc00104 	addi	r19,r19,4
   55248:	e13fffc3 	ldbu	r4,-1(fp)
   5524c:	7039883a 	mov	fp,r14
   55250:	a109883a 	add	r4,r20,r4
   55254:	20800003 	ldbu	r2,0(r4)
   55258:	108003cc 	andi	r2,r2,15
   5525c:	1144983a 	sll	r2,r2,r5
   55260:	4892b03a 	or	r9,r9,r2
   55264:	af3ff236 	bltu	r21,fp,55230 <__alt_data_end+0xfffd6a30>
   55268:	d8c00217 	ldw	r3,8(sp)
   5526c:	50800104 	addi	r2,r10,4
   55270:	52400015 	stw	r9,0(r10)
   55274:	10c5c83a 	sub	r2,r2,r3
   55278:	1005d0ba 	srai	r2,r2,2
   5527c:	4809883a 	mov	r4,r9
   55280:	80800415 	stw	r2,16(r16)
   55284:	1022917a 	slli	r17,r2,5
   55288:	004d5680 	call	4d568 <__hi0bits>
   5528c:	d8c00017 	ldw	r3,0(sp)
   55290:	8885c83a 	sub	r2,r17,r2
   55294:	1c800017 	ldw	r18,0(r3)
   55298:	9080c716 	blt	r18,r2,555b8 <__gethex+0x510>
   5529c:	1480e416 	blt	r2,r18,55630 <__gethex+0x588>
   552a0:	0027883a 	mov	r19,zero
   552a4:	d8c00017 	ldw	r3,0(sp)
   552a8:	18800217 	ldw	r2,8(r3)
   552ac:	15c08d16 	blt	r2,r23,554e4 <__gethex+0x43c>
   552b0:	d8c00017 	ldw	r3,0(sp)
   552b4:	18800117 	ldw	r2,4(r3)
   552b8:	b880aa0e 	bge	r23,r2,55564 <__gethex+0x4bc>
   552bc:	15efc83a 	sub	r23,r2,r23
   552c0:	bc80ed16 	blt	r23,r18,55678 <__gethex+0x5d0>
   552c4:	18c00317 	ldw	r3,12(r3)
   552c8:	01000084 	movi	r4,2
   552cc:	19014926 	beq	r3,r4,557f4 <__gethex+0x74c>
   552d0:	010000c4 	movi	r4,3
   552d4:	19012e26 	beq	r3,r4,55790 <__gethex+0x6e8>
   552d8:	01000044 	movi	r4,1
   552dc:	19014826 	beq	r3,r4,55800 <__gethex+0x758>
   552e0:	d9000117 	ldw	r4,4(sp)
   552e4:	800b883a 	mov	r5,r16
   552e8:	004d31c0 	call	4d31c <_Bfree>
   552ec:	d8801517 	ldw	r2,84(sp)
   552f0:	10000015 	stw	zero,0(r2)
   552f4:	00801404 	movi	r2,80
   552f8:	00002b06 	br	553a8 <__gethex+0x300>
   552fc:	735f883a 	add	r15,r14,r13
   55300:	7d7fce36 	bltu	r15,r21,5523c <__alt_data_end+0xfffd6a3c>
   55304:	7809883a 	mov	r4,r15
   55308:	b00d883a 	mov	r6,r22
   5530c:	900b883a 	mov	r5,r18
   55310:	da400515 	stw	r9,20(sp)
   55314:	da800a15 	stw	r10,40(sp)
   55318:	dac00915 	stw	r11,36(sp)
   5531c:	db400815 	stw	r13,32(sp)
   55320:	db800615 	stw	r14,24(sp)
   55324:	dbc00715 	stw	r15,28(sp)
   55328:	0055c480 	call	55c48 <strncmp>
   5532c:	da400517 	ldw	r9,20(sp)
   55330:	da800a17 	ldw	r10,40(sp)
   55334:	dac00917 	ldw	r11,36(sp)
   55338:	db400817 	ldw	r13,32(sp)
   5533c:	db800617 	ldw	r14,24(sp)
   55340:	dbc00717 	ldw	r15,28(sp)
   55344:	103fbd1e 	bne	r2,zero,5523c <__alt_data_end+0xfffd6a3c>
   55348:	7839883a 	mov	fp,r15
   5534c:	af3fb836 	bltu	r21,fp,55230 <__alt_data_end+0xfffd6a30>
   55350:	003fc506 	br	55268 <__alt_data_end+0xfffd6a68>
   55354:	04c00104 	movi	r19,4
   55358:	52400015 	stw	r9,0(r10)
   5535c:	000b883a 	mov	r5,zero
   55360:	54d5883a 	add	r10,r10,r19
   55364:	0013883a 	mov	r9,zero
   55368:	003fb706 	br	55248 <__alt_data_end+0xfffd6a48>
   5536c:	b00d883a 	mov	r6,r22
   55370:	900b883a 	mov	r5,r18
   55374:	a809883a 	mov	r4,r21
   55378:	0055c480 	call	55c48 <strncmp>
   5537c:	10006426 	beq	r2,zero,55510 <__gethex+0x468>
   55380:	a8800003 	ldbu	r2,0(r21)
   55384:	a821883a 	mov	r16,r21
   55388:	10803fcc 	andi	r2,r2,255
   5538c:	01001404 	movi	r4,80
   55390:	11001126 	beq	r2,r4,553d8 <__gethex+0x330>
   55394:	01001c04 	movi	r4,112
   55398:	11000f26 	beq	r2,r4,553d8 <__gethex+0x330>
   5539c:	9c000015 	stw	r16,0(r19)
   553a0:	8800831e 	bne	r17,zero,555b0 <__gethex+0x508>
   553a4:	00800184 	movi	r2,6
   553a8:	dfc01417 	ldw	ra,80(sp)
   553ac:	df001317 	ldw	fp,76(sp)
   553b0:	ddc01217 	ldw	r23,72(sp)
   553b4:	dd801117 	ldw	r22,68(sp)
   553b8:	dd401017 	ldw	r21,64(sp)
   553bc:	dd000f17 	ldw	r20,60(sp)
   553c0:	dcc00e17 	ldw	r19,56(sp)
   553c4:	dc800d17 	ldw	r18,52(sp)
   553c8:	dc400c17 	ldw	r17,48(sp)
   553cc:	dc000b17 	ldw	r16,44(sp)
   553d0:	dec01504 	addi	sp,sp,84
   553d4:	f800283a 	ret
   553d8:	002f883a 	mov	r23,zero
   553dc:	02800044 	movi	r10,1
   553e0:	80800043 	ldbu	r2,1(r16)
   553e4:	01400ac4 	movi	r5,43
   553e8:	11003fcc 	andi	r4,r2,255
   553ec:	21406e26 	beq	r4,r5,555a8 <__gethex+0x500>
   553f0:	01400b44 	movi	r5,45
   553f4:	21404226 	beq	r4,r5,55500 <__gethex+0x458>
   553f8:	81400044 	addi	r5,r16,1
   553fc:	000d883a 	mov	r6,zero
   55400:	10803fcc 	andi	r2,r2,255
   55404:	a085883a 	add	r2,r20,r2
   55408:	11000003 	ldbu	r4,0(r2)
   5540c:	03000604 	movi	r12,24
   55410:	20bfffc4 	addi	r2,r4,-1
   55414:	10803fcc 	andi	r2,r2,255
   55418:	60bf6d36 	bltu	r12,r2,551d0 <__alt_data_end+0xfffd69d0>
   5541c:	2ac00043 	ldbu	r11,1(r5)
   55420:	20803fcc 	andi	r2,r4,255
   55424:	010001b4 	movhi	r4,6
   55428:	212dc004 	addi	r4,r4,-18688
   5542c:	22c9883a 	add	r4,r4,r11
   55430:	23400003 	ldbu	r13,0(r4)
   55434:	10bffc04 	addi	r2,r2,-16
   55438:	29400044 	addi	r5,r5,1
   5543c:	693fffc4 	addi	r4,r13,-1
   55440:	21003fcc 	andi	r4,r4,255
   55444:	6b403fcc 	andi	r13,r13,255
   55448:	61000b36 	bltu	r12,r4,55478 <__gethex+0x3d0>
   5544c:	29400044 	addi	r5,r5,1
   55450:	29000003 	ldbu	r4,0(r5)
   55454:	108002a4 	muli	r2,r2,10
   55458:	a109883a 	add	r4,r20,r4
   5545c:	22c00003 	ldbu	r11,0(r4)
   55460:	1345883a 	add	r2,r2,r13
   55464:	10bffc04 	addi	r2,r2,-16
   55468:	593fffc4 	addi	r4,r11,-1
   5546c:	21003fcc 	andi	r4,r4,255
   55470:	5b403fcc 	andi	r13,r11,255
   55474:	613ff52e 	bgeu	r12,r4,5544c <__alt_data_end+0xfffd6c4c>
   55478:	30000126 	beq	r6,zero,55480 <__gethex+0x3d8>
   5547c:	0085c83a 	sub	r2,zero,r2
   55480:	8039883a 	mov	fp,r16
   55484:	b8af883a 	add	r23,r23,r2
   55488:	2821883a 	mov	r16,r5
   5548c:	003f5106 	br	551d4 <__alt_data_end+0xfffd69d4>
   55490:	80800217 	ldw	r2,8(r16)
   55494:	e080f00e 	bge	fp,r2,55858 <__gethex+0x7b0>
   55498:	e007883a 	mov	r3,fp
   5549c:	18800144 	addi	r2,r3,5
   554a0:	1085883a 	add	r2,r2,r2
   554a4:	18c00044 	addi	r3,r3,1
   554a8:	1085883a 	add	r2,r2,r2
   554ac:	8085883a 	add	r2,r16,r2
   554b0:	80c00415 	stw	r3,16(r16)
   554b4:	01000044 	movi	r4,1
   554b8:	11000015 	stw	r4,0(r2)
   554bc:	00800084 	movi	r2,2
   554c0:	8880d826 	beq	r17,r2,55824 <__gethex+0x77c>
   554c4:	e0c0ac0e 	bge	fp,r3,55778 <__gethex+0x6d0>
   554c8:	01400044 	movi	r5,1
   554cc:	8009883a 	mov	r4,r16
   554d0:	0054fa80 	call	54fa8 <rshift>
   554d4:	d8c00017 	ldw	r3,0(sp)
   554d8:	bdc00044 	addi	r23,r23,1
   554dc:	18800217 	ldw	r2,8(r3)
   554e0:	15c0a70e 	bge	r2,r23,55780 <__gethex+0x6d8>
   554e4:	d9000117 	ldw	r4,4(sp)
   554e8:	800b883a 	mov	r5,r16
   554ec:	004d31c0 	call	4d31c <_Bfree>
   554f0:	d9001517 	ldw	r4,84(sp)
   554f4:	008028c4 	movi	r2,163
   554f8:	20000015 	stw	zero,0(r4)
   554fc:	003faa06 	br	553a8 <__alt_data_end+0xfffd6ba8>
   55500:	01800044 	movi	r6,1
   55504:	80800083 	ldbu	r2,2(r16)
   55508:	81400084 	addi	r5,r16,2
   5550c:	003fbc06 	br	55400 <__alt_data_end+0xfffd6c00>
   55510:	ada1883a 	add	r16,r21,r22
   55514:	81000003 	ldbu	r4,0(r16)
   55518:	21403fcc 	andi	r5,r4,255
   5551c:	a145883a 	add	r2,r20,r5
   55520:	10800003 	ldbu	r2,0(r2)
   55524:	11803fcc 	andi	r6,r2,255
   55528:	30004f26 	beq	r6,zero,55668 <__gethex+0x5c0>
   5552c:	00c00c04 	movi	r3,48
   55530:	802b883a 	mov	r21,r16
   55534:	28c0061e 	bne	r5,r3,55550 <__gethex+0x4a8>
   55538:	2809883a 	mov	r4,r5
   5553c:	ad400044 	addi	r21,r21,1
   55540:	a8800003 	ldbu	r2,0(r21)
   55544:	113ffd26 	beq	r2,r4,5553c <__alt_data_end+0xfffd6d3c>
   55548:	a085883a 	add	r2,r20,r2
   5554c:	10800003 	ldbu	r2,0(r2)
   55550:	10803fcc 	andi	r2,r2,255
   55554:	1015003a 	cmpeq	r10,r2,zero
   55558:	802f883a 	mov	r23,r16
   5555c:	04400044 	movi	r17,1
   55560:	003eff06 	br	55160 <__alt_data_end+0xfffd6960>
   55564:	04400044 	movi	r17,1
   55568:	98000926 	beq	r19,zero,55590 <__gethex+0x4e8>
   5556c:	d8c00017 	ldw	r3,0(sp)
   55570:	18800317 	ldw	r2,12(r3)
   55574:	00c00084 	movi	r3,2
   55578:	10c06826 	beq	r2,r3,5571c <__gethex+0x674>
   5557c:	00c000c4 	movi	r3,3
   55580:	10c06a26 	beq	r2,r3,5572c <__gethex+0x684>
   55584:	00c00044 	movi	r3,1
   55588:	10c08d26 	beq	r2,r3,557c0 <__gethex+0x718>
   5558c:	8c400414 	ori	r17,r17,16
   55590:	d9001517 	ldw	r4,84(sp)
   55594:	d8c00417 	ldw	r3,16(sp)
   55598:	8805883a 	mov	r2,r17
   5559c:	24000015 	stw	r16,0(r4)
   555a0:	1dc00015 	stw	r23,0(r3)
   555a4:	003f8006 	br	553a8 <__alt_data_end+0xfffd6ba8>
   555a8:	000d883a 	mov	r6,zero
   555ac:	003fd506 	br	55504 <__alt_data_end+0xfffd6d04>
   555b0:	0005883a 	mov	r2,zero
   555b4:	003f7c06 	br	553a8 <__alt_data_end+0xfffd6ba8>
   555b8:	14a3c83a 	sub	r17,r2,r18
   555bc:	880b883a 	mov	r5,r17
   555c0:	8009883a 	mov	r4,r16
   555c4:	004e1e40 	call	4e1e4 <__any_on>
   555c8:	10002926 	beq	r2,zero,55670 <__gethex+0x5c8>
   555cc:	897fffc4 	addi	r5,r17,-1
   555d0:	2807d17a 	srai	r3,r5,5
   555d4:	d8800217 	ldw	r2,8(sp)
   555d8:	290007cc 	andi	r4,r5,31
   555dc:	18c7883a 	add	r3,r3,r3
   555e0:	18c7883a 	add	r3,r3,r3
   555e4:	04c00044 	movi	r19,1
   555e8:	10c7883a 	add	r3,r2,r3
   555ec:	9908983a 	sll	r4,r19,r4
   555f0:	18c00017 	ldw	r3,0(r3)
   555f4:	20c6703a 	and	r3,r4,r3
   555f8:	18000626 	beq	r3,zero,55614 <__gethex+0x56c>
   555fc:	99407b0e 	bge	r19,r5,557ec <__gethex+0x744>
   55600:	897fff84 	addi	r5,r17,-2
   55604:	8009883a 	mov	r4,r16
   55608:	004e1e40 	call	4e1e4 <__any_on>
   5560c:	10007726 	beq	r2,zero,557ec <__gethex+0x744>
   55610:	04c000c4 	movi	r19,3
   55614:	880b883a 	mov	r5,r17
   55618:	8009883a 	mov	r4,r16
   5561c:	0054fa80 	call	54fa8 <rshift>
   55620:	bc6f883a 	add	r23,r23,r17
   55624:	003f1f06 	br	552a4 <__alt_data_end+0xfffd6aa4>
   55628:	002f883a 	mov	r23,zero
   5562c:	003ee306 	br	551bc <__alt_data_end+0xfffd69bc>
   55630:	d9000117 	ldw	r4,4(sp)
   55634:	90a3c83a 	sub	r17,r18,r2
   55638:	800b883a 	mov	r5,r16
   5563c:	880d883a 	mov	r6,r17
   55640:	004d9f40 	call	4d9f4 <__lshift>
   55644:	10c00504 	addi	r3,r2,20
   55648:	1021883a 	mov	r16,r2
   5564c:	bc6fc83a 	sub	r23,r23,r17
   55650:	d8c00215 	stw	r3,8(sp)
   55654:	0027883a 	mov	r19,zero
   55658:	003f1206 	br	552a4 <__alt_data_end+0xfffd6aa4>
   5565c:	1d400084 	addi	r21,r3,2
   55660:	0023883a 	mov	r17,zero
   55664:	003eb406 	br	55138 <__alt_data_end+0xfffd6938>
   55668:	2005883a 	mov	r2,r4
   5566c:	003f4606 	br	55388 <__alt_data_end+0xfffd6b88>
   55670:	0027883a 	mov	r19,zero
   55674:	003fe706 	br	55614 <__alt_data_end+0xfffd6e14>
   55678:	bc7fffc4 	addi	r17,r23,-1
   5567c:	9800421e 	bne	r19,zero,55788 <__gethex+0x6e0>
   55680:	88000426 	beq	r17,zero,55694 <__gethex+0x5ec>
   55684:	880b883a 	mov	r5,r17
   55688:	8009883a 	mov	r4,r16
   5568c:	004e1e40 	call	4e1e4 <__any_on>
   55690:	1027883a 	mov	r19,r2
   55694:	8805d17a 	srai	r2,r17,5
   55698:	d8c00217 	ldw	r3,8(sp)
   5569c:	8c4007cc 	andi	r17,r17,31
   556a0:	1085883a 	add	r2,r2,r2
   556a4:	1085883a 	add	r2,r2,r2
   556a8:	1885883a 	add	r2,r3,r2
   556ac:	00c00044 	movi	r3,1
   556b0:	1c62983a 	sll	r17,r3,r17
   556b4:	10800017 	ldw	r2,0(r2)
   556b8:	8884703a 	and	r2,r17,r2
   556bc:	10000126 	beq	r2,zero,556c4 <__gethex+0x61c>
   556c0:	9cc00094 	ori	r19,r19,2
   556c4:	b80b883a 	mov	r5,r23
   556c8:	8009883a 	mov	r4,r16
   556cc:	0054fa80 	call	54fa8 <rshift>
   556d0:	d8c00017 	ldw	r3,0(sp)
   556d4:	95e5c83a 	sub	r18,r18,r23
   556d8:	04400084 	movi	r17,2
   556dc:	1dc00117 	ldw	r23,4(r3)
   556e0:	003fa106 	br	55568 <__alt_data_end+0xfffd6d68>
   556e4:	85af883a 	add	r23,r16,r22
   556e8:	b8800003 	ldbu	r2,0(r23)
   556ec:	b821883a 	mov	r16,r23
   556f0:	11003fcc 	andi	r4,r2,255
   556f4:	a109883a 	add	r4,r20,r4
   556f8:	21000003 	ldbu	r4,0(r4)
   556fc:	203eaa26 	beq	r4,zero,551a8 <__alt_data_end+0xfffd69a8>
   55700:	84000044 	addi	r16,r16,1
   55704:	80800003 	ldbu	r2,0(r16)
   55708:	11003fcc 	andi	r4,r2,255
   5570c:	a109883a 	add	r4,r20,r4
   55710:	21000003 	ldbu	r4,0(r4)
   55714:	203ffa1e 	bne	r4,zero,55700 <__alt_data_end+0xfffd6f00>
   55718:	003ea306 	br	551a8 <__alt_data_end+0xfffd69a8>
   5571c:	d9001617 	ldw	r4,88(sp)
   55720:	00800044 	movi	r2,1
   55724:	1109c83a 	sub	r4,r2,r4
   55728:	d9001615 	stw	r4,88(sp)
   5572c:	d8801617 	ldw	r2,88(sp)
   55730:	103f9626 	beq	r2,zero,5558c <__alt_data_end+0xfffd6d8c>
   55734:	87000417 	ldw	fp,16(r16)
   55738:	d9800217 	ldw	r6,8(sp)
   5573c:	013fffc4 	movi	r4,-1
   55740:	e727883a 	add	r19,fp,fp
   55744:	9ce7883a 	add	r19,r19,r19
   55748:	3005883a 	mov	r2,r6
   5574c:	34cb883a 	add	r5,r6,r19
   55750:	00000306 	br	55760 <__gethex+0x6b8>
   55754:	10000015 	stw	zero,0(r2)
   55758:	10800104 	addi	r2,r2,4
   5575c:	117f4c2e 	bgeu	r2,r5,55490 <__alt_data_end+0xfffd6c90>
   55760:	10c00017 	ldw	r3,0(r2)
   55764:	193ffb26 	beq	r3,r4,55754 <__alt_data_end+0xfffd6f54>
   55768:	18c00044 	addi	r3,r3,1
   5576c:	10c00015 	stw	r3,0(r2)
   55770:	00800084 	movi	r2,2
   55774:	88802b26 	beq	r17,r2,55824 <__gethex+0x77c>
   55778:	948007cc 	andi	r18,r18,31
   5577c:	90002f1e 	bne	r18,zero,5583c <__gethex+0x794>
   55780:	04400844 	movi	r17,33
   55784:	003f8206 	br	55590 <__alt_data_end+0xfffd6d90>
   55788:	04c00044 	movi	r19,1
   5578c:	003fc106 	br	55694 <__alt_data_end+0xfffd6e94>
   55790:	d8c01617 	ldw	r3,88(sp)
   55794:	183ed226 	beq	r3,zero,552e0 <__alt_data_end+0xfffd6ae0>
   55798:	d8c00417 	ldw	r3,16(sp)
   5579c:	d9001517 	ldw	r4,84(sp)
   557a0:	18800015 	stw	r2,0(r3)
   557a4:	d8c00217 	ldw	r3,8(sp)
   557a8:	00800044 	movi	r2,1
   557ac:	80800415 	stw	r2,16(r16)
   557b0:	18800015 	stw	r2,0(r3)
   557b4:	24000015 	stw	r16,0(r4)
   557b8:	00801884 	movi	r2,98
   557bc:	003efa06 	br	553a8 <__alt_data_end+0xfffd6ba8>
   557c0:	9880008c 	andi	r2,r19,2
   557c4:	103f7126 	beq	r2,zero,5558c <__alt_data_end+0xfffd6d8c>
   557c8:	d8c00217 	ldw	r3,8(sp)
   557cc:	18800017 	ldw	r2,0(r3)
   557d0:	9884b03a 	or	r2,r19,r2
   557d4:	1080004c 	andi	r2,r2,1
   557d8:	103fd61e 	bne	r2,zero,55734 <__alt_data_end+0xfffd6f34>
   557dc:	003f6b06 	br	5558c <__alt_data_end+0xfffd6d8c>
   557e0:	da800217 	ldw	r10,8(sp)
   557e4:	0013883a 	mov	r9,zero
   557e8:	003e9f06 	br	55268 <__alt_data_end+0xfffd6a68>
   557ec:	04c00084 	movi	r19,2
   557f0:	003f8806 	br	55614 <__alt_data_end+0xfffd6e14>
   557f4:	d9001617 	ldw	r4,88(sp)
   557f8:	203fe726 	beq	r4,zero,55798 <__alt_data_end+0xfffd6f98>
   557fc:	003eb806 	br	552e0 <__alt_data_end+0xfffd6ae0>
   55800:	95feb71e 	bne	r18,r23,552e0 <__alt_data_end+0xfffd6ae0>
   55804:	1cbfe40e 	bge	r3,r18,55798 <__alt_data_end+0xfffd6f98>
   55808:	917fffc4 	addi	r5,r18,-1
   5580c:	8009883a 	mov	r4,r16
   55810:	004e1e40 	call	4e1e4 <__any_on>
   55814:	103eb226 	beq	r2,zero,552e0 <__alt_data_end+0xfffd6ae0>
   55818:	d8c00017 	ldw	r3,0(sp)
   5581c:	18800117 	ldw	r2,4(r3)
   55820:	003fdd06 	br	55798 <__alt_data_end+0xfffd6f98>
   55824:	d8c00017 	ldw	r3,0(sp)
   55828:	18800017 	ldw	r2,0(r3)
   5582c:	10bfffc4 	addi	r2,r2,-1
   55830:	90801c26 	beq	r18,r2,558a4 <__gethex+0x7fc>
   55834:	04400884 	movi	r17,34
   55838:	003f5506 	br	55590 <__alt_data_end+0xfffd6d90>
   5583c:	34c5883a 	add	r2,r6,r19
   55840:	113fff17 	ldw	r4,-4(r2)
   55844:	004d5680 	call	4d568 <__hi0bits>
   55848:	00c00804 	movi	r3,32
   5584c:	1ca5c83a 	sub	r18,r3,r18
   55850:	14bfcb0e 	bge	r2,r18,55780 <__alt_data_end+0xfffd6f80>
   55854:	003f1c06 	br	554c8 <__alt_data_end+0xfffd6cc8>
   55858:	81400117 	ldw	r5,4(r16)
   5585c:	d9000117 	ldw	r4,4(sp)
   55860:	29400044 	addi	r5,r5,1
   55864:	004d2740 	call	4d274 <_Balloc>
   55868:	81800417 	ldw	r6,16(r16)
   5586c:	81400304 	addi	r5,r16,12
   55870:	11000304 	addi	r4,r2,12
   55874:	31800084 	addi	r6,r6,2
   55878:	318d883a 	add	r6,r6,r6
   5587c:	318d883a 	add	r6,r6,r6
   55880:	1029883a 	mov	r20,r2
   55884:	00456300 	call	45630 <memcpy>
   55888:	d9000117 	ldw	r4,4(sp)
   5588c:	800b883a 	mov	r5,r16
   55890:	a021883a 	mov	r16,r20
   55894:	004d31c0 	call	4d31c <_Bfree>
   55898:	a0c00417 	ldw	r3,16(r20)
   5589c:	a1800504 	addi	r6,r20,20
   558a0:	003efe06 	br	5549c <__alt_data_end+0xfffd6c9c>
   558a4:	9005d17a 	srai	r2,r18,5
   558a8:	944007cc 	andi	r17,r18,31
   558ac:	1085883a 	add	r2,r2,r2
   558b0:	1085883a 	add	r2,r2,r2
   558b4:	3087883a 	add	r3,r6,r2
   558b8:	00800044 	movi	r2,1
   558bc:	1462983a 	sll	r17,r2,r17
   558c0:	18800017 	ldw	r2,0(r3)
   558c4:	8884703a 	and	r2,r17,r2
   558c8:	1022c03a 	cmpne	r17,r2,zero
   558cc:	00800884 	movi	r2,34
   558d0:	1463c83a 	sub	r17,r2,r17
   558d4:	003f2e06 	br	55590 <__alt_data_end+0xfffd6d90>

000558d8 <__hexnan>:
   558d8:	defff904 	addi	sp,sp,-28
   558dc:	dc800215 	stw	r18,8(sp)
   558e0:	2c800017 	ldw	r18,0(r5)
   558e4:	dfc00615 	stw	ra,24(sp)
   558e8:	dd400515 	stw	r21,20(sp)
   558ec:	901fd17a 	srai	r15,r18,5
   558f0:	dd000415 	stw	r20,16(sp)
   558f4:	dcc00315 	stw	r19,12(sp)
   558f8:	7bdf883a 	add	r15,r15,r15
   558fc:	7bdf883a 	add	r15,r15,r15
   55900:	dc400115 	stw	r17,4(sp)
   55904:	dc000015 	stw	r16,0(sp)
   55908:	948007cc 	andi	r18,r18,31
   5590c:	33df883a 	add	r15,r6,r15
   55910:	90000126 	beq	r18,zero,55918 <__hexnan+0x40>
   55914:	7bc00104 	addi	r15,r15,4
   55918:	22000017 	ldw	r8,0(r4)
   5591c:	7affff04 	addi	r11,r15,-4
   55920:	038001b4 	movhi	r14,6
   55924:	783fff15 	stw	zero,-4(r15)
   55928:	581b883a 	mov	r13,r11
   5592c:	580b883a 	mov	r5,r11
   55930:	000f883a 	mov	r7,zero
   55934:	003f883a 	mov	ra,zero
   55938:	0019883a 	mov	r12,zero
   5593c:	73adc004 	addi	r14,r14,-18688
   55940:	04400204 	movi	r17,8
   55944:	04000804 	movi	r16,32
   55948:	04c001c4 	movi	r19,7
   5594c:	42000044 	addi	r8,r8,1
   55950:	40c00003 	ldbu	r3,0(r8)
   55954:	18001d26 	beq	r3,zero,559cc <__hexnan+0xf4>
   55958:	70c5883a 	add	r2,r14,r3
   5595c:	10800003 	ldbu	r2,0(r2)
   55960:	12403fcc 	andi	r9,r2,255
   55964:	4800301e 	bne	r9,zero,55a28 <__hexnan+0x150>
   55968:	80c04236 	bltu	r16,r3,55a74 <__hexnan+0x19c>
   5596c:	fb3ff70e 	bge	ra,r12,5594c <__alt_data_end+0xfffd714c>
   55970:	2b40112e 	bgeu	r5,r13,559b8 <__hexnan+0xe0>
   55974:	99c01016 	blt	r19,r7,559b8 <__hexnan+0xe0>
   55978:	89e9c83a 	sub	r20,r17,r7
   5597c:	a529883a 	add	r20,r20,r20
   55980:	2a800017 	ldw	r10,0(r5)
   55984:	a529883a 	add	r20,r20,r20
   55988:	852bc83a 	sub	r21,r16,r20
   5598c:	28c00104 	addi	r3,r5,4
   55990:	2805883a 	mov	r2,r5
   55994:	19c00017 	ldw	r7,0(r3)
   55998:	10800104 	addi	r2,r2,4
   5599c:	18c00104 	addi	r3,r3,4
   559a0:	3d52983a 	sll	r9,r7,r21
   559a4:	4a92b03a 	or	r9,r9,r10
   559a8:	3d14d83a 	srl	r10,r7,r20
   559ac:	127fff15 	stw	r9,-4(r2)
   559b0:	1abfff15 	stw	r10,-4(r3)
   559b4:	137ff736 	bltu	r2,r13,55994 <__alt_data_end+0xfffd7194>
   559b8:	31402836 	bltu	r6,r5,55a5c <__hexnan+0x184>
   559bc:	42000044 	addi	r8,r8,1
   559c0:	40c00003 	ldbu	r3,0(r8)
   559c4:	01c00204 	movi	r7,8
   559c8:	183fe31e 	bne	r3,zero,55958 <__alt_data_end+0xfffd7158>
   559cc:	60002b26 	beq	r12,zero,55a7c <__hexnan+0x1a4>
   559d0:	2b40022e 	bgeu	r5,r13,559dc <__hexnan+0x104>
   559d4:	008001c4 	movi	r2,7
   559d8:	11c0430e 	bge	r2,r7,55ae8 <__hexnan+0x210>
   559dc:	3140312e 	bgeu	r6,r5,55aa4 <__hexnan+0x1cc>
   559e0:	3007883a 	mov	r3,r6
   559e4:	29000017 	ldw	r4,0(r5)
   559e8:	18800104 	addi	r2,r3,4
   559ec:	29400104 	addi	r5,r5,4
   559f0:	19000015 	stw	r4,0(r3)
   559f4:	1007883a 	mov	r3,r2
   559f8:	597ffa2e 	bgeu	r11,r5,559e4 <__alt_data_end+0xfffd71e4>
   559fc:	10000015 	stw	zero,0(r2)
   55a00:	10800104 	addi	r2,r2,4
   55a04:	58bffd2e 	bgeu	r11,r2,559fc <__alt_data_end+0xfffd71fc>
   55a08:	78bfff17 	ldw	r2,-4(r15)
   55a0c:	1000041e 	bne	r2,zero,55a20 <__hexnan+0x148>
   55a10:	32c02d26 	beq	r6,r11,55ac8 <__hexnan+0x1f0>
   55a14:	5affff04 	addi	r11,r11,-4
   55a18:	58800017 	ldw	r2,0(r11)
   55a1c:	103ffc26 	beq	r2,zero,55a10 <__alt_data_end+0xfffd7210>
   55a20:	00800144 	movi	r2,5
   55a24:	00001606 	br	55a80 <__hexnan+0x1a8>
   55a28:	39c00044 	addi	r7,r7,1
   55a2c:	63000044 	addi	r12,r12,1
   55a30:	89c0040e 	bge	r17,r7,55a44 <__hexnan+0x16c>
   55a34:	317fc52e 	bgeu	r6,r5,5594c <__alt_data_end+0xfffd714c>
   55a38:	283fff15 	stw	zero,-4(r5)
   55a3c:	01c00044 	movi	r7,1
   55a40:	297fff04 	addi	r5,r5,-4
   55a44:	28c00017 	ldw	r3,0(r5)
   55a48:	108003cc 	andi	r2,r2,15
   55a4c:	1806913a 	slli	r3,r3,4
   55a50:	1884b03a 	or	r2,r3,r2
   55a54:	28800015 	stw	r2,0(r5)
   55a58:	003fbc06 	br	5594c <__alt_data_end+0xfffd714c>
   55a5c:	2b7fff04 	addi	r13,r5,-4
   55a60:	283fff15 	stw	zero,-4(r5)
   55a64:	603f883a 	mov	ra,r12
   55a68:	680b883a 	mov	r5,r13
   55a6c:	000f883a 	mov	r7,zero
   55a70:	003fb606 	br	5594c <__alt_data_end+0xfffd714c>
   55a74:	00800a44 	movi	r2,41
   55a78:	18801726 	beq	r3,r2,55ad8 <__hexnan+0x200>
   55a7c:	00800104 	movi	r2,4
   55a80:	dfc00617 	ldw	ra,24(sp)
   55a84:	dd400517 	ldw	r21,20(sp)
   55a88:	dd000417 	ldw	r20,16(sp)
   55a8c:	dcc00317 	ldw	r19,12(sp)
   55a90:	dc800217 	ldw	r18,8(sp)
   55a94:	dc400117 	ldw	r17,4(sp)
   55a98:	dc000017 	ldw	r16,0(sp)
   55a9c:	dec00704 	addi	sp,sp,28
   55aa0:	f800283a 	ret
   55aa4:	903fd826 	beq	r18,zero,55a08 <__alt_data_end+0xfffd7208>
   55aa8:	00c00804 	movi	r3,32
   55aac:	1ca5c83a 	sub	r18,r3,r18
   55ab0:	00ffffc4 	movi	r3,-1
   55ab4:	78bfff17 	ldw	r2,-4(r15)
   55ab8:	1c86d83a 	srl	r3,r3,r18
   55abc:	1884703a 	and	r2,r3,r2
   55ac0:	78bfff15 	stw	r2,-4(r15)
   55ac4:	003fd106 	br	55a0c <__alt_data_end+0xfffd720c>
   55ac8:	00800044 	movi	r2,1
   55acc:	58800015 	stw	r2,0(r11)
   55ad0:	00800144 	movi	r2,5
   55ad4:	003fea06 	br	55a80 <__alt_data_end+0xfffd7280>
   55ad8:	42000044 	addi	r8,r8,1
   55adc:	22000015 	stw	r8,0(r4)
   55ae0:	603fbb1e 	bne	r12,zero,559d0 <__alt_data_end+0xfffd71d0>
   55ae4:	003fe506 	br	55a7c <__alt_data_end+0xfffd727c>
   55ae8:	02400204 	movi	r9,8
   55aec:	49d3c83a 	sub	r9,r9,r7
   55af0:	4a53883a 	add	r9,r9,r9
   55af4:	2a000017 	ldw	r8,0(r5)
   55af8:	4a53883a 	add	r9,r9,r9
   55afc:	02800804 	movi	r10,32
   55b00:	5255c83a 	sub	r10,r10,r9
   55b04:	28c00104 	addi	r3,r5,4
   55b08:	2805883a 	mov	r2,r5
   55b0c:	19c00017 	ldw	r7,0(r3)
   55b10:	10800104 	addi	r2,r2,4
   55b14:	18c00104 	addi	r3,r3,4
   55b18:	3a88983a 	sll	r4,r7,r10
   55b1c:	2208b03a 	or	r4,r4,r8
   55b20:	3a50d83a 	srl	r8,r7,r9
   55b24:	113fff15 	stw	r4,-4(r2)
   55b28:	1a3fff15 	stw	r8,-4(r3)
   55b2c:	137ff736 	bltu	r2,r13,55b0c <__alt_data_end+0xfffd730c>
   55b30:	003faa06 	br	559dc <__alt_data_end+0xfffd71dc>

00055b34 <_isatty_r>:
   55b34:	defffd04 	addi	sp,sp,-12
   55b38:	dc000015 	stw	r16,0(sp)
   55b3c:	040001b4 	movhi	r16,6
   55b40:	dc400115 	stw	r17,4(sp)
   55b44:	843cb304 	addi	r16,r16,-3380
   55b48:	2023883a 	mov	r17,r4
   55b4c:	2809883a 	mov	r4,r5
   55b50:	dfc00215 	stw	ra,8(sp)
   55b54:	80000015 	stw	zero,0(r16)
   55b58:	00585a00 	call	585a0 <isatty>
   55b5c:	00ffffc4 	movi	r3,-1
   55b60:	10c00526 	beq	r2,r3,55b78 <_isatty_r+0x44>
   55b64:	dfc00217 	ldw	ra,8(sp)
   55b68:	dc400117 	ldw	r17,4(sp)
   55b6c:	dc000017 	ldw	r16,0(sp)
   55b70:	dec00304 	addi	sp,sp,12
   55b74:	f800283a 	ret
   55b78:	80c00017 	ldw	r3,0(r16)
   55b7c:	183ff926 	beq	r3,zero,55b64 <__alt_data_end+0xfffd7364>
   55b80:	88c00015 	stw	r3,0(r17)
   55b84:	003ff706 	br	55b64 <__alt_data_end+0xfffd7364>

00055b88 <_lseek_r>:
   55b88:	defffd04 	addi	sp,sp,-12
   55b8c:	2805883a 	mov	r2,r5
   55b90:	dc000015 	stw	r16,0(sp)
   55b94:	040001b4 	movhi	r16,6
   55b98:	dc400115 	stw	r17,4(sp)
   55b9c:	300b883a 	mov	r5,r6
   55ba0:	843cb304 	addi	r16,r16,-3380
   55ba4:	2023883a 	mov	r17,r4
   55ba8:	380d883a 	mov	r6,r7
   55bac:	1009883a 	mov	r4,r2
   55bb0:	dfc00215 	stw	ra,8(sp)
   55bb4:	80000015 	stw	zero,0(r16)
   55bb8:	005876c0 	call	5876c <lseek>
   55bbc:	00ffffc4 	movi	r3,-1
   55bc0:	10c00526 	beq	r2,r3,55bd8 <_lseek_r+0x50>
   55bc4:	dfc00217 	ldw	ra,8(sp)
   55bc8:	dc400117 	ldw	r17,4(sp)
   55bcc:	dc000017 	ldw	r16,0(sp)
   55bd0:	dec00304 	addi	sp,sp,12
   55bd4:	f800283a 	ret
   55bd8:	80c00017 	ldw	r3,0(r16)
   55bdc:	183ff926 	beq	r3,zero,55bc4 <__alt_data_end+0xfffd73c4>
   55be0:	88c00015 	stw	r3,0(r17)
   55be4:	003ff706 	br	55bc4 <__alt_data_end+0xfffd73c4>

00055be8 <_read_r>:
   55be8:	defffd04 	addi	sp,sp,-12
   55bec:	2805883a 	mov	r2,r5
   55bf0:	dc000015 	stw	r16,0(sp)
   55bf4:	040001b4 	movhi	r16,6
   55bf8:	dc400115 	stw	r17,4(sp)
   55bfc:	300b883a 	mov	r5,r6
   55c00:	843cb304 	addi	r16,r16,-3380
   55c04:	2023883a 	mov	r17,r4
   55c08:	380d883a 	mov	r6,r7
   55c0c:	1009883a 	mov	r4,r2
   55c10:	dfc00215 	stw	ra,8(sp)
   55c14:	80000015 	stw	zero,0(r16)
   55c18:	00589400 	call	58940 <read>
   55c1c:	00ffffc4 	movi	r3,-1
   55c20:	10c00526 	beq	r2,r3,55c38 <_read_r+0x50>
   55c24:	dfc00217 	ldw	ra,8(sp)
   55c28:	dc400117 	ldw	r17,4(sp)
   55c2c:	dc000017 	ldw	r16,0(sp)
   55c30:	dec00304 	addi	sp,sp,12
   55c34:	f800283a 	ret
   55c38:	80c00017 	ldw	r3,0(r16)
   55c3c:	183ff926 	beq	r3,zero,55c24 <__alt_data_end+0xfffd7424>
   55c40:	88c00015 	stw	r3,0(r17)
   55c44:	003ff706 	br	55c24 <__alt_data_end+0xfffd7424>

00055c48 <strncmp>:
   55c48:	30003126 	beq	r6,zero,55d10 <strncmp+0xc8>
   55c4c:	2144b03a 	or	r2,r4,r5
   55c50:	108000cc 	andi	r2,r2,3
   55c54:	10001e1e 	bne	r2,zero,55cd0 <strncmp+0x88>
   55c58:	024000c4 	movi	r9,3
   55c5c:	49801c2e 	bgeu	r9,r6,55cd0 <strncmp+0x88>
   55c60:	20800017 	ldw	r2,0(r4)
   55c64:	28c00017 	ldw	r3,0(r5)
   55c68:	10c0191e 	bne	r2,r3,55cd0 <strncmp+0x88>
   55c6c:	31bfff04 	addi	r6,r6,-4
   55c70:	30002726 	beq	r6,zero,55d10 <strncmp+0xc8>
   55c74:	02ffbff4 	movhi	r11,65279
   55c78:	5affbfc4 	addi	r11,r11,-257
   55c7c:	0086303a 	nor	r3,zero,r2
   55c80:	02a02074 	movhi	r10,32897
   55c84:	12c5883a 	add	r2,r2,r11
   55c88:	52a02004 	addi	r10,r10,-32640
   55c8c:	10c4703a 	and	r2,r2,r3
   55c90:	1284703a 	and	r2,r2,r10
   55c94:	10000b26 	beq	r2,zero,55cc4 <strncmp+0x7c>
   55c98:	00001d06 	br	55d10 <strncmp+0xc8>
   55c9c:	20c00017 	ldw	r3,0(r4)
   55ca0:	29c00017 	ldw	r7,0(r5)
   55ca4:	1ad1883a 	add	r8,r3,r11
   55ca8:	00c4303a 	nor	r2,zero,r3
   55cac:	4084703a 	and	r2,r8,r2
   55cb0:	1284703a 	and	r2,r2,r10
   55cb4:	19c0061e 	bne	r3,r7,55cd0 <strncmp+0x88>
   55cb8:	31bfff04 	addi	r6,r6,-4
   55cbc:	30001426 	beq	r6,zero,55d10 <strncmp+0xc8>
   55cc0:	1000131e 	bne	r2,zero,55d10 <strncmp+0xc8>
   55cc4:	21000104 	addi	r4,r4,4
   55cc8:	29400104 	addi	r5,r5,4
   55ccc:	49bff336 	bltu	r9,r6,55c9c <__alt_data_end+0xfffd749c>
   55cd0:	28800007 	ldb	r2,0(r5)
   55cd4:	20c00007 	ldb	r3,0(r4)
   55cd8:	31bfffc4 	addi	r6,r6,-1
   55cdc:	10c0081e 	bne	r2,r3,55d00 <strncmp+0xb8>
   55ce0:	30000b26 	beq	r6,zero,55d10 <strncmp+0xc8>
   55ce4:	10000a26 	beq	r2,zero,55d10 <strncmp+0xc8>
   55ce8:	21000044 	addi	r4,r4,1
   55cec:	29400044 	addi	r5,r5,1
   55cf0:	20800007 	ldb	r2,0(r4)
   55cf4:	28c00007 	ldb	r3,0(r5)
   55cf8:	31bfffc4 	addi	r6,r6,-1
   55cfc:	10fff826 	beq	r2,r3,55ce0 <__alt_data_end+0xfffd74e0>
   55d00:	20800003 	ldbu	r2,0(r4)
   55d04:	28c00003 	ldbu	r3,0(r5)
   55d08:	10c5c83a 	sub	r2,r2,r3
   55d0c:	f800283a 	ret
   55d10:	0005883a 	mov	r2,zero
   55d14:	f800283a 	ret

00055d18 <__ssprint_r>:
   55d18:	30800217 	ldw	r2,8(r6)
   55d1c:	defff604 	addi	sp,sp,-40
   55d20:	dc800215 	stw	r18,8(sp)
   55d24:	dfc00915 	stw	ra,36(sp)
   55d28:	df000815 	stw	fp,32(sp)
   55d2c:	ddc00715 	stw	r23,28(sp)
   55d30:	dd800615 	stw	r22,24(sp)
   55d34:	dd400515 	stw	r21,20(sp)
   55d38:	dd000415 	stw	r20,16(sp)
   55d3c:	dcc00315 	stw	r19,12(sp)
   55d40:	dc400115 	stw	r17,4(sp)
   55d44:	dc000015 	stw	r16,0(sp)
   55d48:	3025883a 	mov	r18,r6
   55d4c:	10005826 	beq	r2,zero,55eb0 <__ssprint_r+0x198>
   55d50:	2027883a 	mov	r19,r4
   55d54:	35c00017 	ldw	r23,0(r6)
   55d58:	29000017 	ldw	r4,0(r5)
   55d5c:	28800217 	ldw	r2,8(r5)
   55d60:	2823883a 	mov	r17,r5
   55d64:	0039883a 	mov	fp,zero
   55d68:	0021883a 	mov	r16,zero
   55d6c:	80003926 	beq	r16,zero,55e54 <__ssprint_r+0x13c>
   55d70:	102b883a 	mov	r21,r2
   55d74:	102d883a 	mov	r22,r2
   55d78:	80803a36 	bltu	r16,r2,55e64 <__ssprint_r+0x14c>
   55d7c:	88c0030b 	ldhu	r3,12(r17)
   55d80:	1881200c 	andi	r2,r3,1152
   55d84:	10002626 	beq	r2,zero,55e20 <__ssprint_r+0x108>
   55d88:	88800517 	ldw	r2,20(r17)
   55d8c:	89400417 	ldw	r5,16(r17)
   55d90:	81800044 	addi	r6,r16,1
   55d94:	108f883a 	add	r7,r2,r2
   55d98:	3885883a 	add	r2,r7,r2
   55d9c:	100ed7fa 	srli	r7,r2,31
   55da0:	216dc83a 	sub	r22,r4,r5
   55da4:	3589883a 	add	r4,r6,r22
   55da8:	3885883a 	add	r2,r7,r2
   55dac:	102bd07a 	srai	r21,r2,1
   55db0:	a80d883a 	mov	r6,r21
   55db4:	a900022e 	bgeu	r21,r4,55dc0 <__ssprint_r+0xa8>
   55db8:	202b883a 	mov	r21,r4
   55dbc:	200d883a 	mov	r6,r4
   55dc0:	18c1000c 	andi	r3,r3,1024
   55dc4:	18002a26 	beq	r3,zero,55e70 <__ssprint_r+0x158>
   55dc8:	300b883a 	mov	r5,r6
   55dcc:	9809883a 	mov	r4,r19
   55dd0:	004c4dc0 	call	4c4dc <_malloc_r>
   55dd4:	1029883a 	mov	r20,r2
   55dd8:	10002c26 	beq	r2,zero,55e8c <__ssprint_r+0x174>
   55ddc:	89400417 	ldw	r5,16(r17)
   55de0:	b00d883a 	mov	r6,r22
   55de4:	1009883a 	mov	r4,r2
   55de8:	00456300 	call	45630 <memcpy>
   55dec:	8880030b 	ldhu	r2,12(r17)
   55df0:	00fedfc4 	movi	r3,-1153
   55df4:	10c4703a 	and	r2,r2,r3
   55df8:	10802014 	ori	r2,r2,128
   55dfc:	8880030d 	sth	r2,12(r17)
   55e00:	a589883a 	add	r4,r20,r22
   55e04:	adadc83a 	sub	r22,r21,r22
   55e08:	8d400515 	stw	r21,20(r17)
   55e0c:	8d800215 	stw	r22,8(r17)
   55e10:	8d000415 	stw	r20,16(r17)
   55e14:	89000015 	stw	r4,0(r17)
   55e18:	802b883a 	mov	r21,r16
   55e1c:	802d883a 	mov	r22,r16
   55e20:	b00d883a 	mov	r6,r22
   55e24:	e00b883a 	mov	r5,fp
   55e28:	004cff00 	call	4cff0 <memmove>
   55e2c:	88800217 	ldw	r2,8(r17)
   55e30:	89000017 	ldw	r4,0(r17)
   55e34:	90c00217 	ldw	r3,8(r18)
   55e38:	1545c83a 	sub	r2,r2,r21
   55e3c:	2589883a 	add	r4,r4,r22
   55e40:	88800215 	stw	r2,8(r17)
   55e44:	89000015 	stw	r4,0(r17)
   55e48:	1c21c83a 	sub	r16,r3,r16
   55e4c:	94000215 	stw	r16,8(r18)
   55e50:	80001726 	beq	r16,zero,55eb0 <__ssprint_r+0x198>
   55e54:	bf000017 	ldw	fp,0(r23)
   55e58:	bc000117 	ldw	r16,4(r23)
   55e5c:	bdc00204 	addi	r23,r23,8
   55e60:	003fc206 	br	55d6c <__alt_data_end+0xfffd756c>
   55e64:	802b883a 	mov	r21,r16
   55e68:	802d883a 	mov	r22,r16
   55e6c:	003fec06 	br	55e20 <__alt_data_end+0xfffd7620>
   55e70:	9809883a 	mov	r4,r19
   55e74:	004e2700 	call	4e270 <_realloc_r>
   55e78:	1029883a 	mov	r20,r2
   55e7c:	103fe01e 	bne	r2,zero,55e00 <__alt_data_end+0xfffd7600>
   55e80:	89400417 	ldw	r5,16(r17)
   55e84:	9809883a 	mov	r4,r19
   55e88:	004b8c00 	call	4b8c0 <_free_r>
   55e8c:	88c0030b 	ldhu	r3,12(r17)
   55e90:	00800304 	movi	r2,12
   55e94:	98800015 	stw	r2,0(r19)
   55e98:	18c01014 	ori	r3,r3,64
   55e9c:	88c0030d 	sth	r3,12(r17)
   55ea0:	00bfffc4 	movi	r2,-1
   55ea4:	90000215 	stw	zero,8(r18)
   55ea8:	90000115 	stw	zero,4(r18)
   55eac:	00000206 	br	55eb8 <__ssprint_r+0x1a0>
   55eb0:	90000115 	stw	zero,4(r18)
   55eb4:	0005883a 	mov	r2,zero
   55eb8:	dfc00917 	ldw	ra,36(sp)
   55ebc:	df000817 	ldw	fp,32(sp)
   55ec0:	ddc00717 	ldw	r23,28(sp)
   55ec4:	dd800617 	ldw	r22,24(sp)
   55ec8:	dd400517 	ldw	r21,20(sp)
   55ecc:	dd000417 	ldw	r20,16(sp)
   55ed0:	dcc00317 	ldw	r19,12(sp)
   55ed4:	dc800217 	ldw	r18,8(sp)
   55ed8:	dc400117 	ldw	r17,4(sp)
   55edc:	dc000017 	ldw	r16,0(sp)
   55ee0:	dec00a04 	addi	sp,sp,40
   55ee4:	f800283a 	ret

00055ee8 <___svfiprintf_internal_r>:
   55ee8:	2880030b 	ldhu	r2,12(r5)
   55eec:	deffc804 	addi	sp,sp,-224
   55ef0:	dcc03115 	stw	r19,196(sp)
   55ef4:	dfc03715 	stw	ra,220(sp)
   55ef8:	df003615 	stw	fp,216(sp)
   55efc:	ddc03515 	stw	r23,212(sp)
   55f00:	dd803415 	stw	r22,208(sp)
   55f04:	dd403315 	stw	r21,204(sp)
   55f08:	dd003215 	stw	r20,200(sp)
   55f0c:	dc803015 	stw	r18,192(sp)
   55f10:	dc402f15 	stw	r17,188(sp)
   55f14:	dc002e15 	stw	r16,184(sp)
   55f18:	d9402715 	stw	r5,156(sp)
   55f1c:	d9002a15 	stw	r4,168(sp)
   55f20:	1080200c 	andi	r2,r2,128
   55f24:	d9c02315 	stw	r7,140(sp)
   55f28:	3027883a 	mov	r19,r6
   55f2c:	10000226 	beq	r2,zero,55f38 <___svfiprintf_internal_r+0x50>
   55f30:	28800417 	ldw	r2,16(r5)
   55f34:	10041d26 	beq	r2,zero,56fac <___svfiprintf_internal_r+0x10c4>
   55f38:	dac01a04 	addi	r11,sp,104
   55f3c:	dac01e15 	stw	r11,120(sp)
   55f40:	d8801e17 	ldw	r2,120(sp)
   55f44:	dac019c4 	addi	r11,sp,103
   55f48:	dd402a17 	ldw	r21,168(sp)
   55f4c:	ddc02717 	ldw	r23,156(sp)
   55f50:	058001b4 	movhi	r22,6
   55f54:	050001b4 	movhi	r20,6
   55f58:	dac01f15 	stw	r11,124(sp)
   55f5c:	12d7c83a 	sub	r11,r2,r11
   55f60:	b5ae0404 	addi	r22,r22,-18416
   55f64:	a52e0004 	addi	r20,r20,-18432
   55f68:	dec01a15 	stw	sp,104(sp)
   55f6c:	d8001c15 	stw	zero,112(sp)
   55f70:	d8001b15 	stw	zero,108(sp)
   55f74:	d811883a 	mov	r8,sp
   55f78:	d8002915 	stw	zero,164(sp)
   55f7c:	d8002515 	stw	zero,148(sp)
   55f80:	dac02b15 	stw	r11,172(sp)
   55f84:	98800007 	ldb	r2,0(r19)
   55f88:	1002dd26 	beq	r2,zero,56b00 <___svfiprintf_internal_r+0xc18>
   55f8c:	00c00944 	movi	r3,37
   55f90:	9823883a 	mov	r17,r19
   55f94:	10c0021e 	bne	r2,r3,55fa0 <___svfiprintf_internal_r+0xb8>
   55f98:	00001406 	br	55fec <___svfiprintf_internal_r+0x104>
   55f9c:	10c00326 	beq	r2,r3,55fac <___svfiprintf_internal_r+0xc4>
   55fa0:	8c400044 	addi	r17,r17,1
   55fa4:	88800007 	ldb	r2,0(r17)
   55fa8:	103ffc1e 	bne	r2,zero,55f9c <__alt_data_end+0xfffd779c>
   55fac:	8ce1c83a 	sub	r16,r17,r19
   55fb0:	80000e26 	beq	r16,zero,55fec <___svfiprintf_internal_r+0x104>
   55fb4:	d8c01c17 	ldw	r3,112(sp)
   55fb8:	d8801b17 	ldw	r2,108(sp)
   55fbc:	44c00015 	stw	r19,0(r8)
   55fc0:	1c07883a 	add	r3,r3,r16
   55fc4:	10800044 	addi	r2,r2,1
   55fc8:	d8c01c15 	stw	r3,112(sp)
   55fcc:	44000115 	stw	r16,4(r8)
   55fd0:	d8801b15 	stw	r2,108(sp)
   55fd4:	00c001c4 	movi	r3,7
   55fd8:	18831e16 	blt	r3,r2,56c54 <___svfiprintf_internal_r+0xd6c>
   55fdc:	42000204 	addi	r8,r8,8
   55fe0:	dac02517 	ldw	r11,148(sp)
   55fe4:	5c17883a 	add	r11,r11,r16
   55fe8:	dac02515 	stw	r11,148(sp)
   55fec:	88800007 	ldb	r2,0(r17)
   55ff0:	1002c526 	beq	r2,zero,56b08 <___svfiprintf_internal_r+0xc20>
   55ff4:	88c00047 	ldb	r3,1(r17)
   55ff8:	8cc00044 	addi	r19,r17,1
   55ffc:	d8001d85 	stb	zero,118(sp)
   56000:	0009883a 	mov	r4,zero
   56004:	000f883a 	mov	r7,zero
   56008:	043fffc4 	movi	r16,-1
   5600c:	d8002415 	stw	zero,144(sp)
   56010:	0025883a 	mov	r18,zero
   56014:	01401604 	movi	r5,88
   56018:	01800244 	movi	r6,9
   5601c:	02800a84 	movi	r10,42
   56020:	02401b04 	movi	r9,108
   56024:	9cc00044 	addi	r19,r19,1
   56028:	18bff804 	addi	r2,r3,-32
   5602c:	2881dd36 	bltu	r5,r2,567a4 <___svfiprintf_internal_r+0x8bc>
   56030:	100490ba 	slli	r2,r2,2
   56034:	02c00174 	movhi	r11,5
   56038:	5ad81204 	addi	r11,r11,24648
   5603c:	12c5883a 	add	r2,r2,r11
   56040:	10800017 	ldw	r2,0(r2)
   56044:	1000683a 	jmp	r2
   56048:	00056244 	movi	zero,5513
   5604c:	000567a4 	muli	zero,zero,5534
   56050:	000567a4 	muli	zero,zero,5534
   56054:	00056238 	rdprs	zero,zero,5512
   56058:	000567a4 	muli	zero,zero,5534
   5605c:	000567a4 	muli	zero,zero,5534
   56060:	000567a4 	muli	zero,zero,5534
   56064:	000567a4 	muli	zero,zero,5534
   56068:	000567a4 	muli	zero,zero,5534
   5606c:	000567a4 	muli	zero,zero,5534
   56070:	000561ac 	andhi	zero,zero,5510
   56074:	00056388 	cmpgei	zero,zero,5518
   56078:	000567a4 	muli	zero,zero,5534
   5607c:	000561d8 	cmpnei	zero,zero,5511
   56080:	000567d8 	cmpnei	zero,zero,5535
   56084:	000567a4 	muli	zero,zero,5534
   56088:	000567cc 	andi	zero,zero,5535
   5608c:	0005676c 	andhi	zero,zero,5533
   56090:	0005676c 	andhi	zero,zero,5533
   56094:	0005676c 	andhi	zero,zero,5533
   56098:	0005676c 	andhi	zero,zero,5533
   5609c:	0005676c 	andhi	zero,zero,5533
   560a0:	0005676c 	andhi	zero,zero,5533
   560a4:	0005676c 	andhi	zero,zero,5533
   560a8:	0005676c 	andhi	zero,zero,5533
   560ac:	0005676c 	andhi	zero,zero,5533
   560b0:	000567a4 	muli	zero,zero,5534
   560b4:	000567a4 	muli	zero,zero,5534
   560b8:	000567a4 	muli	zero,zero,5534
   560bc:	000567a4 	muli	zero,zero,5534
   560c0:	000567a4 	muli	zero,zero,5534
   560c4:	000567a4 	muli	zero,zero,5534
   560c8:	000567a4 	muli	zero,zero,5534
   560cc:	000567a4 	muli	zero,zero,5534
   560d0:	000567a4 	muli	zero,zero,5534
   560d4:	000567a4 	muli	zero,zero,5534
   560d8:	00056708 	cmpgei	zero,zero,5532
   560dc:	000567a4 	muli	zero,zero,5534
   560e0:	000567a4 	muli	zero,zero,5534
   560e4:	000567a4 	muli	zero,zero,5534
   560e8:	000567a4 	muli	zero,zero,5534
   560ec:	000567a4 	muli	zero,zero,5534
   560f0:	000567a4 	muli	zero,zero,5534
   560f4:	000567a4 	muli	zero,zero,5534
   560f8:	000567a4 	muli	zero,zero,5534
   560fc:	000567a4 	muli	zero,zero,5534
   56100:	000567a4 	muli	zero,zero,5534
   56104:	00056880 	call	5688 <__alt_mem_onchip_memory2-0x3a978>
   56108:	000567a4 	muli	zero,zero,5534
   5610c:	000567a4 	muli	zero,zero,5534
   56110:	000567a4 	muli	zero,zero,5534
   56114:	000567a4 	muli	zero,zero,5534
   56118:	000567a4 	muli	zero,zero,5534
   5611c:	00056818 	cmpnei	zero,zero,5536
   56120:	000567a4 	muli	zero,zero,5534
   56124:	000567a4 	muli	zero,zero,5534
   56128:	0005654c 	andi	zero,zero,5525
   5612c:	000567a4 	muli	zero,zero,5534
   56130:	000567a4 	muli	zero,zero,5534
   56134:	000567a4 	muli	zero,zero,5534
   56138:	000567a4 	muli	zero,zero,5534
   5613c:	000567a4 	muli	zero,zero,5534
   56140:	000567a4 	muli	zero,zero,5534
   56144:	000567a4 	muli	zero,zero,5534
   56148:	000567a4 	muli	zero,zero,5534
   5614c:	000567a4 	muli	zero,zero,5534
   56150:	000567a4 	muli	zero,zero,5534
   56154:	0005643c 	xorhi	zero,zero,5520
   56158:	000565e8 	cmpgeui	zero,zero,5527
   5615c:	000567a4 	muli	zero,zero,5534
   56160:	000567a4 	muli	zero,zero,5534
   56164:	000567a4 	muli	zero,zero,5534
   56168:	000565dc 	xori	zero,zero,5527
   5616c:	000565e8 	cmpgeui	zero,zero,5527
   56170:	000567a4 	muli	zero,zero,5534
   56174:	000567a4 	muli	zero,zero,5534
   56178:	000565cc 	andi	zero,zero,5527
   5617c:	000567a4 	muli	zero,zero,5534
   56180:	00056590 	cmplti	zero,zero,5526
   56184:	00056398 	cmpnei	zero,zero,5518
   56188:	000561e4 	muli	zero,zero,5511
   5618c:	000566fc 	xorhi	zero,zero,5531
   56190:	000567a4 	muli	zero,zero,5534
   56194:	000566b0 	cmpltui	zero,zero,5530
   56198:	000567a4 	muli	zero,zero,5534
   5619c:	00056308 	cmpgei	zero,zero,5516
   561a0:	000567a4 	muli	zero,zero,5534
   561a4:	000567a4 	muli	zero,zero,5534
   561a8:	00056264 	muli	zero,zero,5513
   561ac:	dac02317 	ldw	r11,140(sp)
   561b0:	5ac00017 	ldw	r11,0(r11)
   561b4:	dac02415 	stw	r11,144(sp)
   561b8:	dac02317 	ldw	r11,140(sp)
   561bc:	58800104 	addi	r2,r11,4
   561c0:	dac02417 	ldw	r11,144(sp)
   561c4:	5802e90e 	bge	r11,zero,56d6c <___svfiprintf_internal_r+0xe84>
   561c8:	dac02417 	ldw	r11,144(sp)
   561cc:	d8802315 	stw	r2,140(sp)
   561d0:	02d7c83a 	sub	r11,zero,r11
   561d4:	dac02415 	stw	r11,144(sp)
   561d8:	94800114 	ori	r18,r18,4
   561dc:	98c00007 	ldb	r3,0(r19)
   561e0:	003f9006 	br	56024 <__alt_data_end+0xfffd7824>
   561e4:	00800c04 	movi	r2,48
   561e8:	dac02317 	ldw	r11,140(sp)
   561ec:	d8801d05 	stb	r2,116(sp)
   561f0:	00801e04 	movi	r2,120
   561f4:	d8801d45 	stb	r2,117(sp)
   561f8:	d8001d85 	stb	zero,118(sp)
   561fc:	58c00104 	addi	r3,r11,4
   56200:	5f000017 	ldw	fp,0(r11)
   56204:	0013883a 	mov	r9,zero
   56208:	90800094 	ori	r2,r18,2
   5620c:	80032b16 	blt	r16,zero,56ebc <___svfiprintf_internal_r+0xfd4>
   56210:	00bfdfc4 	movi	r2,-129
   56214:	90a4703a 	and	r18,r18,r2
   56218:	d8c02315 	stw	r3,140(sp)
   5621c:	94800094 	ori	r18,r18,2
   56220:	e002dc26 	beq	fp,zero,56d94 <___svfiprintf_internal_r+0xeac>
   56224:	010001b4 	movhi	r4,6
   56228:	212c8c04 	addi	r4,r4,-19920
   5622c:	0015883a 	mov	r10,zero
   56230:	d9002915 	stw	r4,164(sp)
   56234:	00002306 	br	562c4 <___svfiprintf_internal_r+0x3dc>
   56238:	94800054 	ori	r18,r18,1
   5623c:	98c00007 	ldb	r3,0(r19)
   56240:	003f7806 	br	56024 <__alt_data_end+0xfffd7824>
   56244:	38803fcc 	andi	r2,r7,255
   56248:	1080201c 	xori	r2,r2,128
   5624c:	10bfe004 	addi	r2,r2,-128
   56250:	1002f31e 	bne	r2,zero,56e20 <___svfiprintf_internal_r+0xf38>
   56254:	01000044 	movi	r4,1
   56258:	01c00804 	movi	r7,32
   5625c:	98c00007 	ldb	r3,0(r19)
   56260:	003f7006 	br	56024 <__alt_data_end+0xfffd7824>
   56264:	21003fcc 	andi	r4,r4,255
   56268:	2003aa1e 	bne	r4,zero,57114 <___svfiprintf_internal_r+0x122c>
   5626c:	008001b4 	movhi	r2,6
   56270:	10ac8c04 	addi	r2,r2,-19920
   56274:	d8802915 	stw	r2,164(sp)
   56278:	9080080c 	andi	r2,r18,32
   5627c:	1000ba26 	beq	r2,zero,56568 <___svfiprintf_internal_r+0x680>
   56280:	dac02317 	ldw	r11,140(sp)
   56284:	5f000017 	ldw	fp,0(r11)
   56288:	5a400117 	ldw	r9,4(r11)
   5628c:	5ac00204 	addi	r11,r11,8
   56290:	dac02315 	stw	r11,140(sp)
   56294:	9080004c 	andi	r2,r18,1
   56298:	10029026 	beq	r2,zero,56cdc <___svfiprintf_internal_r+0xdf4>
   5629c:	e244b03a 	or	r2,fp,r9
   562a0:	1002d41e 	bne	r2,zero,56df4 <___svfiprintf_internal_r+0xf0c>
   562a4:	d8001d85 	stb	zero,118(sp)
   562a8:	80030b16 	blt	r16,zero,56ed8 <___svfiprintf_internal_r+0xff0>
   562ac:	00bfdfc4 	movi	r2,-129
   562b0:	90a4703a 	and	r18,r18,r2
   562b4:	0015883a 	mov	r10,zero
   562b8:	80002426 	beq	r16,zero,5634c <___svfiprintf_internal_r+0x464>
   562bc:	0039883a 	mov	fp,zero
   562c0:	0013883a 	mov	r9,zero
   562c4:	d9002917 	ldw	r4,164(sp)
   562c8:	dc401a04 	addi	r17,sp,104
   562cc:	e08003cc 	andi	r2,fp,15
   562d0:	4806973a 	slli	r3,r9,28
   562d4:	2085883a 	add	r2,r4,r2
   562d8:	e038d13a 	srli	fp,fp,4
   562dc:	10800003 	ldbu	r2,0(r2)
   562e0:	4812d13a 	srli	r9,r9,4
   562e4:	8c7fffc4 	addi	r17,r17,-1
   562e8:	1f38b03a 	or	fp,r3,fp
   562ec:	88800005 	stb	r2,0(r17)
   562f0:	e244b03a 	or	r2,fp,r9
   562f4:	103ff51e 	bne	r2,zero,562cc <__alt_data_end+0xfffd7acc>
   562f8:	dac01e17 	ldw	r11,120(sp)
   562fc:	5c57c83a 	sub	r11,r11,r17
   56300:	dac02115 	stw	r11,132(sp)
   56304:	00001406 	br	56358 <___svfiprintf_internal_r+0x470>
   56308:	21003fcc 	andi	r4,r4,255
   5630c:	2003741e 	bne	r4,zero,570e0 <___svfiprintf_internal_r+0x11f8>
   56310:	9080080c 	andi	r2,r18,32
   56314:	10014526 	beq	r2,zero,5682c <___svfiprintf_internal_r+0x944>
   56318:	dac02317 	ldw	r11,140(sp)
   5631c:	d8001d85 	stb	zero,118(sp)
   56320:	58c00204 	addi	r3,r11,8
   56324:	5f000017 	ldw	fp,0(r11)
   56328:	5a400117 	ldw	r9,4(r11)
   5632c:	8002d916 	blt	r16,zero,56e94 <___svfiprintf_internal_r+0xfac>
   56330:	013fdfc4 	movi	r4,-129
   56334:	e244b03a 	or	r2,fp,r9
   56338:	d8c02315 	stw	r3,140(sp)
   5633c:	9124703a 	and	r18,r18,r4
   56340:	0015883a 	mov	r10,zero
   56344:	1000b91e 	bne	r2,zero,5662c <___svfiprintf_internal_r+0x744>
   56348:	8002e61e 	bne	r16,zero,56ee4 <___svfiprintf_internal_r+0xffc>
   5634c:	0021883a 	mov	r16,zero
   56350:	d8002115 	stw	zero,132(sp)
   56354:	dc401a04 	addi	r17,sp,104
   56358:	d8c02117 	ldw	r3,132(sp)
   5635c:	dc002015 	stw	r16,128(sp)
   56360:	80c0010e 	bge	r16,r3,56368 <___svfiprintf_internal_r+0x480>
   56364:	d8c02015 	stw	r3,128(sp)
   56368:	52803fcc 	andi	r10,r10,255
   5636c:	5280201c 	xori	r10,r10,128
   56370:	52bfe004 	addi	r10,r10,-128
   56374:	50003c26 	beq	r10,zero,56468 <___svfiprintf_internal_r+0x580>
   56378:	dac02017 	ldw	r11,128(sp)
   5637c:	5ac00044 	addi	r11,r11,1
   56380:	dac02015 	stw	r11,128(sp)
   56384:	00003806 	br	56468 <___svfiprintf_internal_r+0x580>
   56388:	01000044 	movi	r4,1
   5638c:	01c00ac4 	movi	r7,43
   56390:	98c00007 	ldb	r3,0(r19)
   56394:	003f2306 	br	56024 <__alt_data_end+0xfffd7824>
   56398:	21003fcc 	andi	r4,r4,255
   5639c:	2003481e 	bne	r4,zero,570c0 <___svfiprintf_internal_r+0x11d8>
   563a0:	9080080c 	andi	r2,r18,32
   563a4:	10013b26 	beq	r2,zero,56894 <___svfiprintf_internal_r+0x9ac>
   563a8:	dac02317 	ldw	r11,140(sp)
   563ac:	d8001d85 	stb	zero,118(sp)
   563b0:	58800204 	addi	r2,r11,8
   563b4:	5f000017 	ldw	fp,0(r11)
   563b8:	5a400117 	ldw	r9,4(r11)
   563bc:	8002a816 	blt	r16,zero,56e60 <___svfiprintf_internal_r+0xf78>
   563c0:	013fdfc4 	movi	r4,-129
   563c4:	e246b03a 	or	r3,fp,r9
   563c8:	d8802315 	stw	r2,140(sp)
   563cc:	9124703a 	and	r18,r18,r4
   563d0:	18013c26 	beq	r3,zero,568c4 <___svfiprintf_internal_r+0x9dc>
   563d4:	0015883a 	mov	r10,zero
   563d8:	dc401a04 	addi	r17,sp,104
   563dc:	e006d0fa 	srli	r3,fp,3
   563e0:	4808977a 	slli	r4,r9,29
   563e4:	4812d0fa 	srli	r9,r9,3
   563e8:	e70001cc 	andi	fp,fp,7
   563ec:	e0800c04 	addi	r2,fp,48
   563f0:	8c7fffc4 	addi	r17,r17,-1
   563f4:	20f8b03a 	or	fp,r4,r3
   563f8:	88800005 	stb	r2,0(r17)
   563fc:	e246b03a 	or	r3,fp,r9
   56400:	183ff61e 	bne	r3,zero,563dc <__alt_data_end+0xfffd7bdc>
   56404:	90c0004c 	andi	r3,r18,1
   56408:	1800a526 	beq	r3,zero,566a0 <___svfiprintf_internal_r+0x7b8>
   5640c:	10803fcc 	andi	r2,r2,255
   56410:	1080201c 	xori	r2,r2,128
   56414:	10bfe004 	addi	r2,r2,-128
   56418:	00c00c04 	movi	r3,48
   5641c:	10ffb626 	beq	r2,r3,562f8 <__alt_data_end+0xfffd7af8>
   56420:	88ffffc5 	stb	r3,-1(r17)
   56424:	d8c01e17 	ldw	r3,120(sp)
   56428:	88bfffc4 	addi	r2,r17,-1
   5642c:	1023883a 	mov	r17,r2
   56430:	1887c83a 	sub	r3,r3,r2
   56434:	d8c02115 	stw	r3,132(sp)
   56438:	003fc706 	br	56358 <__alt_data_end+0xfffd7b58>
   5643c:	dac02317 	ldw	r11,140(sp)
   56440:	00c00044 	movi	r3,1
   56444:	d8c02015 	stw	r3,128(sp)
   56448:	58800017 	ldw	r2,0(r11)
   5644c:	5ac00104 	addi	r11,r11,4
   56450:	d8001d85 	stb	zero,118(sp)
   56454:	d8801005 	stb	r2,64(sp)
   56458:	dac02315 	stw	r11,140(sp)
   5645c:	d8c02115 	stw	r3,132(sp)
   56460:	dc401004 	addi	r17,sp,64
   56464:	0021883a 	mov	r16,zero
   56468:	90c0008c 	andi	r3,r18,2
   5646c:	d8c02215 	stw	r3,136(sp)
   56470:	18000326 	beq	r3,zero,56480 <___svfiprintf_internal_r+0x598>
   56474:	dac02017 	ldw	r11,128(sp)
   56478:	5ac00084 	addi	r11,r11,2
   5647c:	dac02015 	stw	r11,128(sp)
   56480:	90c0210c 	andi	r3,r18,132
   56484:	d8c02615 	stw	r3,152(sp)
   56488:	1801131e 	bne	r3,zero,568d8 <___svfiprintf_internal_r+0x9f0>
   5648c:	dac02417 	ldw	r11,144(sp)
   56490:	d8c02017 	ldw	r3,128(sp)
   56494:	58f9c83a 	sub	fp,r11,r3
   56498:	07010f0e 	bge	zero,fp,568d8 <___svfiprintf_internal_r+0x9f0>
   5649c:	02400404 	movi	r9,16
   564a0:	d8c01c17 	ldw	r3,112(sp)
   564a4:	d8801b17 	ldw	r2,108(sp)
   564a8:	4f02d60e 	bge	r9,fp,57004 <___svfiprintf_internal_r+0x111c>
   564ac:	014001b4 	movhi	r5,6
   564b0:	296e0404 	addi	r5,r5,-18416
   564b4:	d9402815 	stw	r5,160(sp)
   564b8:	028001c4 	movi	r10,7
   564bc:	00000306 	br	564cc <___svfiprintf_internal_r+0x5e4>
   564c0:	e73ffc04 	addi	fp,fp,-16
   564c4:	42000204 	addi	r8,r8,8
   564c8:	4f00150e 	bge	r9,fp,56520 <___svfiprintf_internal_r+0x638>
   564cc:	18c00404 	addi	r3,r3,16
   564d0:	10800044 	addi	r2,r2,1
   564d4:	45800015 	stw	r22,0(r8)
   564d8:	42400115 	stw	r9,4(r8)
   564dc:	d8c01c15 	stw	r3,112(sp)
   564e0:	d8801b15 	stw	r2,108(sp)
   564e4:	50bff60e 	bge	r10,r2,564c0 <__alt_data_end+0xfffd7cc0>
   564e8:	d9801a04 	addi	r6,sp,104
   564ec:	b80b883a 	mov	r5,r23
   564f0:	a809883a 	mov	r4,r21
   564f4:	da402c15 	stw	r9,176(sp)
   564f8:	da802d15 	stw	r10,180(sp)
   564fc:	0055d180 	call	55d18 <__ssprint_r>
   56500:	da402c17 	ldw	r9,176(sp)
   56504:	da802d17 	ldw	r10,180(sp)
   56508:	1001851e 	bne	r2,zero,56b20 <___svfiprintf_internal_r+0xc38>
   5650c:	e73ffc04 	addi	fp,fp,-16
   56510:	d8c01c17 	ldw	r3,112(sp)
   56514:	d8801b17 	ldw	r2,108(sp)
   56518:	d811883a 	mov	r8,sp
   5651c:	4f3feb16 	blt	r9,fp,564cc <__alt_data_end+0xfffd7ccc>
   56520:	dac02817 	ldw	r11,160(sp)
   56524:	e0c7883a 	add	r3,fp,r3
   56528:	10800044 	addi	r2,r2,1
   5652c:	42c00015 	stw	r11,0(r8)
   56530:	47000115 	stw	fp,4(r8)
   56534:	d8c01c15 	stw	r3,112(sp)
   56538:	d8801b15 	stw	r2,108(sp)
   5653c:	010001c4 	movi	r4,7
   56540:	2081ee16 	blt	r4,r2,56cfc <___svfiprintf_internal_r+0xe14>
   56544:	42000204 	addi	r8,r8,8
   56548:	0000e506 	br	568e0 <___svfiprintf_internal_r+0x9f8>
   5654c:	21003fcc 	andi	r4,r4,255
   56550:	2002dd1e 	bne	r4,zero,570c8 <___svfiprintf_internal_r+0x11e0>
   56554:	008001b4 	movhi	r2,6
   56558:	10ac8704 	addi	r2,r2,-19940
   5655c:	d8802915 	stw	r2,164(sp)
   56560:	9080080c 	andi	r2,r18,32
   56564:	103f461e 	bne	r2,zero,56280 <__alt_data_end+0xfffd7a80>
   56568:	9080040c 	andi	r2,r18,16
   5656c:	10022e1e 	bne	r2,zero,56e28 <___svfiprintf_internal_r+0xf40>
   56570:	9080100c 	andi	r2,r18,64
   56574:	dac02317 	ldw	r11,140(sp)
   56578:	10027326 	beq	r2,zero,56f48 <___svfiprintf_internal_r+0x1060>
   5657c:	5f00000b 	ldhu	fp,0(r11)
   56580:	5ac00104 	addi	r11,r11,4
   56584:	0013883a 	mov	r9,zero
   56588:	dac02315 	stw	r11,140(sp)
   5658c:	003f4106 	br	56294 <__alt_data_end+0xfffd7a94>
   56590:	21003fcc 	andi	r4,r4,255
   56594:	2002e11e 	bne	r4,zero,5711c <___svfiprintf_internal_r+0x1234>
   56598:	9080080c 	andi	r2,r18,32
   5659c:	1002011e 	bne	r2,zero,56da4 <___svfiprintf_internal_r+0xebc>
   565a0:	9080040c 	andi	r2,r18,16
   565a4:	10023e1e 	bne	r2,zero,56ea0 <___svfiprintf_internal_r+0xfb8>
   565a8:	9480100c 	andi	r18,r18,64
   565ac:	90023c26 	beq	r18,zero,56ea0 <___svfiprintf_internal_r+0xfb8>
   565b0:	dac02317 	ldw	r11,140(sp)
   565b4:	58800017 	ldw	r2,0(r11)
   565b8:	5ac00104 	addi	r11,r11,4
   565bc:	dac02315 	stw	r11,140(sp)
   565c0:	dac02517 	ldw	r11,148(sp)
   565c4:	12c0000d 	sth	r11,0(r2)
   565c8:	003e6e06 	br	55f84 <__alt_data_end+0xfffd7784>
   565cc:	98c00007 	ldb	r3,0(r19)
   565d0:	1a422926 	beq	r3,r9,56e78 <___svfiprintf_internal_r+0xf90>
   565d4:	94800414 	ori	r18,r18,16
   565d8:	003e9206 	br	56024 <__alt_data_end+0xfffd7824>
   565dc:	94801014 	ori	r18,r18,64
   565e0:	98c00007 	ldb	r3,0(r19)
   565e4:	003e8f06 	br	56024 <__alt_data_end+0xfffd7824>
   565e8:	21003fcc 	andi	r4,r4,255
   565ec:	2002c71e 	bne	r4,zero,5710c <___svfiprintf_internal_r+0x1224>
   565f0:	9080080c 	andi	r2,r18,32
   565f4:	10004926 	beq	r2,zero,5671c <___svfiprintf_internal_r+0x834>
   565f8:	dac02317 	ldw	r11,140(sp)
   565fc:	58800117 	ldw	r2,4(r11)
   56600:	5f000017 	ldw	fp,0(r11)
   56604:	5ac00204 	addi	r11,r11,8
   56608:	dac02315 	stw	r11,140(sp)
   5660c:	1013883a 	mov	r9,r2
   56610:	10004b16 	blt	r2,zero,56740 <___svfiprintf_internal_r+0x858>
   56614:	da801d83 	ldbu	r10,118(sp)
   56618:	8001cb16 	blt	r16,zero,56d48 <___svfiprintf_internal_r+0xe60>
   5661c:	00ffdfc4 	movi	r3,-129
   56620:	e244b03a 	or	r2,fp,r9
   56624:	90e4703a 	and	r18,r18,r3
   56628:	103f4726 	beq	r2,zero,56348 <__alt_data_end+0xfffd7b48>
   5662c:	48008c26 	beq	r9,zero,56860 <___svfiprintf_internal_r+0x978>
   56630:	dc802015 	stw	r18,128(sp)
   56634:	dc002115 	stw	r16,132(sp)
   56638:	dc401a04 	addi	r17,sp,104
   5663c:	e021883a 	mov	r16,fp
   56640:	da002215 	stw	r8,136(sp)
   56644:	5039883a 	mov	fp,r10
   56648:	4825883a 	mov	r18,r9
   5664c:	8009883a 	mov	r4,r16
   56650:	900b883a 	mov	r5,r18
   56654:	01800284 	movi	r6,10
   56658:	000f883a 	mov	r7,zero
   5665c:	00579dc0 	call	579dc <__umoddi3>
   56660:	10800c04 	addi	r2,r2,48
   56664:	8c7fffc4 	addi	r17,r17,-1
   56668:	8009883a 	mov	r4,r16
   5666c:	900b883a 	mov	r5,r18
   56670:	88800005 	stb	r2,0(r17)
   56674:	01800284 	movi	r6,10
   56678:	000f883a 	mov	r7,zero
   5667c:	00574640 	call	57464 <__udivdi3>
   56680:	1021883a 	mov	r16,r2
   56684:	10c4b03a 	or	r2,r2,r3
   56688:	1825883a 	mov	r18,r3
   5668c:	103fef1e 	bne	r2,zero,5664c <__alt_data_end+0xfffd7e4c>
   56690:	dc802017 	ldw	r18,128(sp)
   56694:	dc002117 	ldw	r16,132(sp)
   56698:	da002217 	ldw	r8,136(sp)
   5669c:	e015883a 	mov	r10,fp
   566a0:	d8c01e17 	ldw	r3,120(sp)
   566a4:	1c47c83a 	sub	r3,r3,r17
   566a8:	d8c02115 	stw	r3,132(sp)
   566ac:	003f2a06 	br	56358 <__alt_data_end+0xfffd7b58>
   566b0:	dac02317 	ldw	r11,140(sp)
   566b4:	d8001d85 	stb	zero,118(sp)
   566b8:	5c400017 	ldw	r17,0(r11)
   566bc:	5f000104 	addi	fp,r11,4
   566c0:	88022f26 	beq	r17,zero,56f80 <___svfiprintf_internal_r+0x1098>
   566c4:	80022516 	blt	r16,zero,56f5c <___svfiprintf_internal_r+0x1074>
   566c8:	800d883a 	mov	r6,r16
   566cc:	000b883a 	mov	r5,zero
   566d0:	8809883a 	mov	r4,r17
   566d4:	da002c15 	stw	r8,176(sp)
   566d8:	004cf0c0 	call	4cf0c <memchr>
   566dc:	da002c17 	ldw	r8,176(sp)
   566e0:	10026426 	beq	r2,zero,57074 <___svfiprintf_internal_r+0x118c>
   566e4:	1445c83a 	sub	r2,r2,r17
   566e8:	d8802115 	stw	r2,132(sp)
   566ec:	da801d83 	ldbu	r10,118(sp)
   566f0:	df002315 	stw	fp,140(sp)
   566f4:	0021883a 	mov	r16,zero
   566f8:	003f1706 	br	56358 <__alt_data_end+0xfffd7b58>
   566fc:	94800814 	ori	r18,r18,32
   56700:	98c00007 	ldb	r3,0(r19)
   56704:	003e4706 	br	56024 <__alt_data_end+0xfffd7824>
   56708:	21003fcc 	andi	r4,r4,255
   5670c:	2002701e 	bne	r4,zero,570d0 <___svfiprintf_internal_r+0x11e8>
   56710:	94800414 	ori	r18,r18,16
   56714:	9080080c 	andi	r2,r18,32
   56718:	103fb71e 	bne	r2,zero,565f8 <__alt_data_end+0xfffd7df8>
   5671c:	9080040c 	andi	r2,r18,16
   56720:	1001ab26 	beq	r2,zero,56dd0 <___svfiprintf_internal_r+0xee8>
   56724:	dac02317 	ldw	r11,140(sp)
   56728:	5f000017 	ldw	fp,0(r11)
   5672c:	5ac00104 	addi	r11,r11,4
   56730:	dac02315 	stw	r11,140(sp)
   56734:	e013d7fa 	srai	r9,fp,31
   56738:	4805883a 	mov	r2,r9
   5673c:	103fb50e 	bge	r2,zero,56614 <__alt_data_end+0xfffd7e14>
   56740:	0739c83a 	sub	fp,zero,fp
   56744:	02800b44 	movi	r10,45
   56748:	e004c03a 	cmpne	r2,fp,zero
   5674c:	0253c83a 	sub	r9,zero,r9
   56750:	da801d85 	stb	r10,118(sp)
   56754:	4893c83a 	sub	r9,r9,r2
   56758:	80023016 	blt	r16,zero,5701c <___svfiprintf_internal_r+0x1134>
   5675c:	00bfdfc4 	movi	r2,-129
   56760:	90a4703a 	and	r18,r18,r2
   56764:	483fb21e 	bne	r9,zero,56630 <__alt_data_end+0xfffd7e30>
   56768:	00003d06 	br	56860 <___svfiprintf_internal_r+0x978>
   5676c:	9817883a 	mov	r11,r19
   56770:	d8002415 	stw	zero,144(sp)
   56774:	18bff404 	addi	r2,r3,-48
   56778:	0019883a 	mov	r12,zero
   5677c:	58c00007 	ldb	r3,0(r11)
   56780:	630002a4 	muli	r12,r12,10
   56784:	9cc00044 	addi	r19,r19,1
   56788:	9817883a 	mov	r11,r19
   5678c:	1319883a 	add	r12,r2,r12
   56790:	18bff404 	addi	r2,r3,-48
   56794:	30bff92e 	bgeu	r6,r2,5677c <__alt_data_end+0xfffd7f7c>
   56798:	db002415 	stw	r12,144(sp)
   5679c:	18bff804 	addi	r2,r3,-32
   567a0:	28be232e 	bgeu	r5,r2,56030 <__alt_data_end+0xfffd7830>
   567a4:	21003fcc 	andi	r4,r4,255
   567a8:	20024b1e 	bne	r4,zero,570d8 <___svfiprintf_internal_r+0x11f0>
   567ac:	1800d626 	beq	r3,zero,56b08 <___svfiprintf_internal_r+0xc20>
   567b0:	02c00044 	movi	r11,1
   567b4:	dac02015 	stw	r11,128(sp)
   567b8:	d8c01005 	stb	r3,64(sp)
   567bc:	d8001d85 	stb	zero,118(sp)
   567c0:	dac02115 	stw	r11,132(sp)
   567c4:	dc401004 	addi	r17,sp,64
   567c8:	003f2606 	br	56464 <__alt_data_end+0xfffd7c64>
   567cc:	94802014 	ori	r18,r18,128
   567d0:	98c00007 	ldb	r3,0(r19)
   567d4:	003e1306 	br	56024 <__alt_data_end+0xfffd7824>
   567d8:	98c00007 	ldb	r3,0(r19)
   567dc:	9ac00044 	addi	r11,r19,1
   567e0:	1a822b26 	beq	r3,r10,57090 <___svfiprintf_internal_r+0x11a8>
   567e4:	18bff404 	addi	r2,r3,-48
   567e8:	0021883a 	mov	r16,zero
   567ec:	30821e36 	bltu	r6,r2,57068 <___svfiprintf_internal_r+0x1180>
   567f0:	58c00007 	ldb	r3,0(r11)
   567f4:	840002a4 	muli	r16,r16,10
   567f8:	5cc00044 	addi	r19,r11,1
   567fc:	9817883a 	mov	r11,r19
   56800:	80a1883a 	add	r16,r16,r2
   56804:	18bff404 	addi	r2,r3,-48
   56808:	30bff92e 	bgeu	r6,r2,567f0 <__alt_data_end+0xfffd7ff0>
   5680c:	803e060e 	bge	r16,zero,56028 <__alt_data_end+0xfffd7828>
   56810:	043fffc4 	movi	r16,-1
   56814:	003e0406 	br	56028 <__alt_data_end+0xfffd7828>
   56818:	21003fcc 	andi	r4,r4,255
   5681c:	2002371e 	bne	r4,zero,570fc <___svfiprintf_internal_r+0x1214>
   56820:	94800414 	ori	r18,r18,16
   56824:	9080080c 	andi	r2,r18,32
   56828:	103ebb1e 	bne	r2,zero,56318 <__alt_data_end+0xfffd7b18>
   5682c:	9080040c 	andi	r2,r18,16
   56830:	10013b26 	beq	r2,zero,56d20 <___svfiprintf_internal_r+0xe38>
   56834:	dac02317 	ldw	r11,140(sp)
   56838:	d8001d85 	stb	zero,118(sp)
   5683c:	0013883a 	mov	r9,zero
   56840:	58800104 	addi	r2,r11,4
   56844:	5f000017 	ldw	fp,0(r11)
   56848:	80013d16 	blt	r16,zero,56d40 <___svfiprintf_internal_r+0xe58>
   5684c:	00ffdfc4 	movi	r3,-129
   56850:	d8802315 	stw	r2,140(sp)
   56854:	90e4703a 	and	r18,r18,r3
   56858:	0015883a 	mov	r10,zero
   5685c:	e03eba26 	beq	fp,zero,56348 <__alt_data_end+0xfffd7b48>
   56860:	00800244 	movi	r2,9
   56864:	173f7236 	bltu	r2,fp,56630 <__alt_data_end+0xfffd7e30>
   56868:	dac02b17 	ldw	r11,172(sp)
   5686c:	e7000c04 	addi	fp,fp,48
   56870:	df0019c5 	stb	fp,103(sp)
   56874:	dac02115 	stw	r11,132(sp)
   56878:	dc4019c4 	addi	r17,sp,103
   5687c:	003eb606 	br	56358 <__alt_data_end+0xfffd7b58>
   56880:	21003fcc 	andi	r4,r4,255
   56884:	20021f1e 	bne	r4,zero,57104 <___svfiprintf_internal_r+0x121c>
   56888:	94800414 	ori	r18,r18,16
   5688c:	9080080c 	andi	r2,r18,32
   56890:	103ec51e 	bne	r2,zero,563a8 <__alt_data_end+0xfffd7ba8>
   56894:	9080040c 	andi	r2,r18,16
   56898:	10016926 	beq	r2,zero,56e40 <___svfiprintf_internal_r+0xf58>
   5689c:	dac02317 	ldw	r11,140(sp)
   568a0:	d8001d85 	stb	zero,118(sp)
   568a4:	0013883a 	mov	r9,zero
   568a8:	58800104 	addi	r2,r11,4
   568ac:	5f000017 	ldw	fp,0(r11)
   568b0:	80016b16 	blt	r16,zero,56e60 <___svfiprintf_internal_r+0xf78>
   568b4:	00ffdfc4 	movi	r3,-129
   568b8:	d8802315 	stw	r2,140(sp)
   568bc:	90e4703a 	and	r18,r18,r3
   568c0:	e03ec41e 	bne	fp,zero,563d4 <__alt_data_end+0xfffd7bd4>
   568c4:	0015883a 	mov	r10,zero
   568c8:	8001c226 	beq	r16,zero,56fd4 <___svfiprintf_internal_r+0x10ec>
   568cc:	0039883a 	mov	fp,zero
   568d0:	0013883a 	mov	r9,zero
   568d4:	003ec006 	br	563d8 <__alt_data_end+0xfffd7bd8>
   568d8:	d8c01c17 	ldw	r3,112(sp)
   568dc:	d8801b17 	ldw	r2,108(sp)
   568e0:	d9001d87 	ldb	r4,118(sp)
   568e4:	20000b26 	beq	r4,zero,56914 <___svfiprintf_internal_r+0xa2c>
   568e8:	d9001d84 	addi	r4,sp,118
   568ec:	18c00044 	addi	r3,r3,1
   568f0:	10800044 	addi	r2,r2,1
   568f4:	41000015 	stw	r4,0(r8)
   568f8:	01000044 	movi	r4,1
   568fc:	41000115 	stw	r4,4(r8)
   56900:	d8c01c15 	stw	r3,112(sp)
   56904:	d8801b15 	stw	r2,108(sp)
   56908:	010001c4 	movi	r4,7
   5690c:	2080e116 	blt	r4,r2,56c94 <___svfiprintf_internal_r+0xdac>
   56910:	42000204 	addi	r8,r8,8
   56914:	dac02217 	ldw	r11,136(sp)
   56918:	58000b26 	beq	r11,zero,56948 <___svfiprintf_internal_r+0xa60>
   5691c:	d9001d04 	addi	r4,sp,116
   56920:	18c00084 	addi	r3,r3,2
   56924:	10800044 	addi	r2,r2,1
   56928:	41000015 	stw	r4,0(r8)
   5692c:	01000084 	movi	r4,2
   56930:	41000115 	stw	r4,4(r8)
   56934:	d8c01c15 	stw	r3,112(sp)
   56938:	d8801b15 	stw	r2,108(sp)
   5693c:	010001c4 	movi	r4,7
   56940:	2080dd16 	blt	r4,r2,56cb8 <___svfiprintf_internal_r+0xdd0>
   56944:	42000204 	addi	r8,r8,8
   56948:	dac02617 	ldw	r11,152(sp)
   5694c:	01002004 	movi	r4,128
   56950:	59008426 	beq	r11,r4,56b64 <___svfiprintf_internal_r+0xc7c>
   56954:	dac02117 	ldw	r11,132(sp)
   56958:	82e1c83a 	sub	r16,r16,r11
   5695c:	0400270e 	bge	zero,r16,569fc <___svfiprintf_internal_r+0xb14>
   56960:	01c00404 	movi	r7,16
   56964:	3c016a0e 	bge	r7,r16,56f10 <___svfiprintf_internal_r+0x1028>
   56968:	014001b4 	movhi	r5,6
   5696c:	296e0004 	addi	r5,r5,-18432
   56970:	d9402215 	stw	r5,136(sp)
   56974:	070001c4 	movi	fp,7
   56978:	00000306 	br	56988 <___svfiprintf_internal_r+0xaa0>
   5697c:	843ffc04 	addi	r16,r16,-16
   56980:	42000204 	addi	r8,r8,8
   56984:	3c00130e 	bge	r7,r16,569d4 <___svfiprintf_internal_r+0xaec>
   56988:	18c00404 	addi	r3,r3,16
   5698c:	10800044 	addi	r2,r2,1
   56990:	45000015 	stw	r20,0(r8)
   56994:	41c00115 	stw	r7,4(r8)
   56998:	d8c01c15 	stw	r3,112(sp)
   5699c:	d8801b15 	stw	r2,108(sp)
   569a0:	e0bff60e 	bge	fp,r2,5697c <__alt_data_end+0xfffd817c>
   569a4:	d9801a04 	addi	r6,sp,104
   569a8:	b80b883a 	mov	r5,r23
   569ac:	a809883a 	mov	r4,r21
   569b0:	d9c02c15 	stw	r7,176(sp)
   569b4:	0055d180 	call	55d18 <__ssprint_r>
   569b8:	d9c02c17 	ldw	r7,176(sp)
   569bc:	1000581e 	bne	r2,zero,56b20 <___svfiprintf_internal_r+0xc38>
   569c0:	843ffc04 	addi	r16,r16,-16
   569c4:	d8c01c17 	ldw	r3,112(sp)
   569c8:	d8801b17 	ldw	r2,108(sp)
   569cc:	d811883a 	mov	r8,sp
   569d0:	3c3fed16 	blt	r7,r16,56988 <__alt_data_end+0xfffd8188>
   569d4:	dac02217 	ldw	r11,136(sp)
   569d8:	1c07883a 	add	r3,r3,r16
   569dc:	10800044 	addi	r2,r2,1
   569e0:	42c00015 	stw	r11,0(r8)
   569e4:	44000115 	stw	r16,4(r8)
   569e8:	d8c01c15 	stw	r3,112(sp)
   569ec:	d8801b15 	stw	r2,108(sp)
   569f0:	010001c4 	movi	r4,7
   569f4:	20809e16 	blt	r4,r2,56c70 <___svfiprintf_internal_r+0xd88>
   569f8:	42000204 	addi	r8,r8,8
   569fc:	dac02117 	ldw	r11,132(sp)
   56a00:	10800044 	addi	r2,r2,1
   56a04:	44400015 	stw	r17,0(r8)
   56a08:	58c7883a 	add	r3,r11,r3
   56a0c:	42c00115 	stw	r11,4(r8)
   56a10:	d8c01c15 	stw	r3,112(sp)
   56a14:	d8801b15 	stw	r2,108(sp)
   56a18:	010001c4 	movi	r4,7
   56a1c:	20807f16 	blt	r4,r2,56c1c <___svfiprintf_internal_r+0xd34>
   56a20:	42000204 	addi	r8,r8,8
   56a24:	9480010c 	andi	r18,r18,4
   56a28:	90002926 	beq	r18,zero,56ad0 <___svfiprintf_internal_r+0xbe8>
   56a2c:	dac02417 	ldw	r11,144(sp)
   56a30:	d8802017 	ldw	r2,128(sp)
   56a34:	58a1c83a 	sub	r16,r11,r2
   56a38:	0400250e 	bge	zero,r16,56ad0 <___svfiprintf_internal_r+0xbe8>
   56a3c:	04400404 	movi	r17,16
   56a40:	d8801b17 	ldw	r2,108(sp)
   56a44:	8c017c0e 	bge	r17,r16,57038 <___svfiprintf_internal_r+0x1150>
   56a48:	014001b4 	movhi	r5,6
   56a4c:	296e0404 	addi	r5,r5,-18416
   56a50:	d9402815 	stw	r5,160(sp)
   56a54:	048001c4 	movi	r18,7
   56a58:	00000306 	br	56a68 <___svfiprintf_internal_r+0xb80>
   56a5c:	843ffc04 	addi	r16,r16,-16
   56a60:	42000204 	addi	r8,r8,8
   56a64:	8c00110e 	bge	r17,r16,56aac <___svfiprintf_internal_r+0xbc4>
   56a68:	18c00404 	addi	r3,r3,16
   56a6c:	10800044 	addi	r2,r2,1
   56a70:	45800015 	stw	r22,0(r8)
   56a74:	44400115 	stw	r17,4(r8)
   56a78:	d8c01c15 	stw	r3,112(sp)
   56a7c:	d8801b15 	stw	r2,108(sp)
   56a80:	90bff60e 	bge	r18,r2,56a5c <__alt_data_end+0xfffd825c>
   56a84:	d9801a04 	addi	r6,sp,104
   56a88:	b80b883a 	mov	r5,r23
   56a8c:	a809883a 	mov	r4,r21
   56a90:	0055d180 	call	55d18 <__ssprint_r>
   56a94:	1000221e 	bne	r2,zero,56b20 <___svfiprintf_internal_r+0xc38>
   56a98:	843ffc04 	addi	r16,r16,-16
   56a9c:	d8c01c17 	ldw	r3,112(sp)
   56aa0:	d8801b17 	ldw	r2,108(sp)
   56aa4:	d811883a 	mov	r8,sp
   56aa8:	8c3fef16 	blt	r17,r16,56a68 <__alt_data_end+0xfffd8268>
   56aac:	dac02817 	ldw	r11,160(sp)
   56ab0:	1c07883a 	add	r3,r3,r16
   56ab4:	10800044 	addi	r2,r2,1
   56ab8:	42c00015 	stw	r11,0(r8)
   56abc:	44000115 	stw	r16,4(r8)
   56ac0:	d8c01c15 	stw	r3,112(sp)
   56ac4:	d8801b15 	stw	r2,108(sp)
   56ac8:	010001c4 	movi	r4,7
   56acc:	2080aa16 	blt	r4,r2,56d78 <___svfiprintf_internal_r+0xe90>
   56ad0:	d8802417 	ldw	r2,144(sp)
   56ad4:	dac02017 	ldw	r11,128(sp)
   56ad8:	12c0010e 	bge	r2,r11,56ae0 <___svfiprintf_internal_r+0xbf8>
   56adc:	5805883a 	mov	r2,r11
   56ae0:	dac02517 	ldw	r11,148(sp)
   56ae4:	5897883a 	add	r11,r11,r2
   56ae8:	dac02515 	stw	r11,148(sp)
   56aec:	1800531e 	bne	r3,zero,56c3c <___svfiprintf_internal_r+0xd54>
   56af0:	98800007 	ldb	r2,0(r19)
   56af4:	d8001b15 	stw	zero,108(sp)
   56af8:	d811883a 	mov	r8,sp
   56afc:	103d231e 	bne	r2,zero,55f8c <__alt_data_end+0xfffd778c>
   56b00:	9823883a 	mov	r17,r19
   56b04:	003d3906 	br	55fec <__alt_data_end+0xfffd77ec>
   56b08:	d8801c17 	ldw	r2,112(sp)
   56b0c:	10000426 	beq	r2,zero,56b20 <___svfiprintf_internal_r+0xc38>
   56b10:	d9402717 	ldw	r5,156(sp)
   56b14:	d9002a17 	ldw	r4,168(sp)
   56b18:	d9801a04 	addi	r6,sp,104
   56b1c:	0055d180 	call	55d18 <__ssprint_r>
   56b20:	dac02717 	ldw	r11,156(sp)
   56b24:	d8802517 	ldw	r2,148(sp)
   56b28:	58c0030b 	ldhu	r3,12(r11)
   56b2c:	18c0100c 	andi	r3,r3,64
   56b30:	1801381e 	bne	r3,zero,57014 <___svfiprintf_internal_r+0x112c>
   56b34:	dfc03717 	ldw	ra,220(sp)
   56b38:	df003617 	ldw	fp,216(sp)
   56b3c:	ddc03517 	ldw	r23,212(sp)
   56b40:	dd803417 	ldw	r22,208(sp)
   56b44:	dd403317 	ldw	r21,204(sp)
   56b48:	dd003217 	ldw	r20,200(sp)
   56b4c:	dcc03117 	ldw	r19,196(sp)
   56b50:	dc803017 	ldw	r18,192(sp)
   56b54:	dc402f17 	ldw	r17,188(sp)
   56b58:	dc002e17 	ldw	r16,184(sp)
   56b5c:	dec03804 	addi	sp,sp,224
   56b60:	f800283a 	ret
   56b64:	dac02417 	ldw	r11,144(sp)
   56b68:	d9002017 	ldw	r4,128(sp)
   56b6c:	5939c83a 	sub	fp,r11,r4
   56b70:	073f780e 	bge	zero,fp,56954 <__alt_data_end+0xfffd8154>
   56b74:	02400404 	movi	r9,16
   56b78:	4f01370e 	bge	r9,fp,57058 <___svfiprintf_internal_r+0x1170>
   56b7c:	02c001b4 	movhi	r11,6
   56b80:	5aee0004 	addi	r11,r11,-18432
   56b84:	dac02215 	stw	r11,136(sp)
   56b88:	028001c4 	movi	r10,7
   56b8c:	00000306 	br	56b9c <___svfiprintf_internal_r+0xcb4>
   56b90:	e73ffc04 	addi	fp,fp,-16
   56b94:	42000204 	addi	r8,r8,8
   56b98:	4f00150e 	bge	r9,fp,56bf0 <___svfiprintf_internal_r+0xd08>
   56b9c:	18c00404 	addi	r3,r3,16
   56ba0:	10800044 	addi	r2,r2,1
   56ba4:	45000015 	stw	r20,0(r8)
   56ba8:	42400115 	stw	r9,4(r8)
   56bac:	d8c01c15 	stw	r3,112(sp)
   56bb0:	d8801b15 	stw	r2,108(sp)
   56bb4:	50bff60e 	bge	r10,r2,56b90 <__alt_data_end+0xfffd8390>
   56bb8:	d9801a04 	addi	r6,sp,104
   56bbc:	b80b883a 	mov	r5,r23
   56bc0:	a809883a 	mov	r4,r21
   56bc4:	da402c15 	stw	r9,176(sp)
   56bc8:	da802d15 	stw	r10,180(sp)
   56bcc:	0055d180 	call	55d18 <__ssprint_r>
   56bd0:	da402c17 	ldw	r9,176(sp)
   56bd4:	da802d17 	ldw	r10,180(sp)
   56bd8:	103fd11e 	bne	r2,zero,56b20 <__alt_data_end+0xfffd8320>
   56bdc:	e73ffc04 	addi	fp,fp,-16
   56be0:	d8c01c17 	ldw	r3,112(sp)
   56be4:	d8801b17 	ldw	r2,108(sp)
   56be8:	d811883a 	mov	r8,sp
   56bec:	4f3feb16 	blt	r9,fp,56b9c <__alt_data_end+0xfffd839c>
   56bf0:	dac02217 	ldw	r11,136(sp)
   56bf4:	1f07883a 	add	r3,r3,fp
   56bf8:	10800044 	addi	r2,r2,1
   56bfc:	42c00015 	stw	r11,0(r8)
   56c00:	47000115 	stw	fp,4(r8)
   56c04:	d8c01c15 	stw	r3,112(sp)
   56c08:	d8801b15 	stw	r2,108(sp)
   56c0c:	010001c4 	movi	r4,7
   56c10:	2080b616 	blt	r4,r2,56eec <___svfiprintf_internal_r+0x1004>
   56c14:	42000204 	addi	r8,r8,8
   56c18:	003f4e06 	br	56954 <__alt_data_end+0xfffd8154>
   56c1c:	d9801a04 	addi	r6,sp,104
   56c20:	b80b883a 	mov	r5,r23
   56c24:	a809883a 	mov	r4,r21
   56c28:	0055d180 	call	55d18 <__ssprint_r>
   56c2c:	103fbc1e 	bne	r2,zero,56b20 <__alt_data_end+0xfffd8320>
   56c30:	d8c01c17 	ldw	r3,112(sp)
   56c34:	d811883a 	mov	r8,sp
   56c38:	003f7a06 	br	56a24 <__alt_data_end+0xfffd8224>
   56c3c:	d9801a04 	addi	r6,sp,104
   56c40:	b80b883a 	mov	r5,r23
   56c44:	a809883a 	mov	r4,r21
   56c48:	0055d180 	call	55d18 <__ssprint_r>
   56c4c:	103fa826 	beq	r2,zero,56af0 <__alt_data_end+0xfffd82f0>
   56c50:	003fb306 	br	56b20 <__alt_data_end+0xfffd8320>
   56c54:	d9801a04 	addi	r6,sp,104
   56c58:	b80b883a 	mov	r5,r23
   56c5c:	a809883a 	mov	r4,r21
   56c60:	0055d180 	call	55d18 <__ssprint_r>
   56c64:	103fae1e 	bne	r2,zero,56b20 <__alt_data_end+0xfffd8320>
   56c68:	d811883a 	mov	r8,sp
   56c6c:	003cdc06 	br	55fe0 <__alt_data_end+0xfffd77e0>
   56c70:	d9801a04 	addi	r6,sp,104
   56c74:	b80b883a 	mov	r5,r23
   56c78:	a809883a 	mov	r4,r21
   56c7c:	0055d180 	call	55d18 <__ssprint_r>
   56c80:	103fa71e 	bne	r2,zero,56b20 <__alt_data_end+0xfffd8320>
   56c84:	d8c01c17 	ldw	r3,112(sp)
   56c88:	d8801b17 	ldw	r2,108(sp)
   56c8c:	d811883a 	mov	r8,sp
   56c90:	003f5a06 	br	569fc <__alt_data_end+0xfffd81fc>
   56c94:	d9801a04 	addi	r6,sp,104
   56c98:	b80b883a 	mov	r5,r23
   56c9c:	a809883a 	mov	r4,r21
   56ca0:	0055d180 	call	55d18 <__ssprint_r>
   56ca4:	103f9e1e 	bne	r2,zero,56b20 <__alt_data_end+0xfffd8320>
   56ca8:	d8c01c17 	ldw	r3,112(sp)
   56cac:	d8801b17 	ldw	r2,108(sp)
   56cb0:	d811883a 	mov	r8,sp
   56cb4:	003f1706 	br	56914 <__alt_data_end+0xfffd8114>
   56cb8:	d9801a04 	addi	r6,sp,104
   56cbc:	b80b883a 	mov	r5,r23
   56cc0:	a809883a 	mov	r4,r21
   56cc4:	0055d180 	call	55d18 <__ssprint_r>
   56cc8:	103f951e 	bne	r2,zero,56b20 <__alt_data_end+0xfffd8320>
   56ccc:	d8c01c17 	ldw	r3,112(sp)
   56cd0:	d8801b17 	ldw	r2,108(sp)
   56cd4:	d811883a 	mov	r8,sp
   56cd8:	003f1b06 	br	56948 <__alt_data_end+0xfffd8148>
   56cdc:	d8001d85 	stb	zero,118(sp)
   56ce0:	80007b16 	blt	r16,zero,56ed0 <___svfiprintf_internal_r+0xfe8>
   56ce4:	00ffdfc4 	movi	r3,-129
   56ce8:	e244b03a 	or	r2,fp,r9
   56cec:	90e4703a 	and	r18,r18,r3
   56cf0:	103d7026 	beq	r2,zero,562b4 <__alt_data_end+0xfffd7ab4>
   56cf4:	0015883a 	mov	r10,zero
   56cf8:	003d7206 	br	562c4 <__alt_data_end+0xfffd7ac4>
   56cfc:	d9801a04 	addi	r6,sp,104
   56d00:	b80b883a 	mov	r5,r23
   56d04:	a809883a 	mov	r4,r21
   56d08:	0055d180 	call	55d18 <__ssprint_r>
   56d0c:	103f841e 	bne	r2,zero,56b20 <__alt_data_end+0xfffd8320>
   56d10:	d8c01c17 	ldw	r3,112(sp)
   56d14:	d8801b17 	ldw	r2,108(sp)
   56d18:	d811883a 	mov	r8,sp
   56d1c:	003ef006 	br	568e0 <__alt_data_end+0xfffd80e0>
   56d20:	9080100c 	andi	r2,r18,64
   56d24:	d8001d85 	stb	zero,118(sp)
   56d28:	dac02317 	ldw	r11,140(sp)
   56d2c:	10008126 	beq	r2,zero,56f34 <___svfiprintf_internal_r+0x104c>
   56d30:	58800104 	addi	r2,r11,4
   56d34:	5f00000b 	ldhu	fp,0(r11)
   56d38:	0013883a 	mov	r9,zero
   56d3c:	803ec30e 	bge	r16,zero,5684c <__alt_data_end+0xfffd804c>
   56d40:	d8802315 	stw	r2,140(sp)
   56d44:	0015883a 	mov	r10,zero
   56d48:	e244b03a 	or	r2,fp,r9
   56d4c:	103e371e 	bne	r2,zero,5662c <__alt_data_end+0xfffd7e2c>
   56d50:	00800044 	movi	r2,1
   56d54:	10803fcc 	andi	r2,r2,255
   56d58:	00c00044 	movi	r3,1
   56d5c:	10c06126 	beq	r2,r3,56ee4 <___svfiprintf_internal_r+0xffc>
   56d60:	00c00084 	movi	r3,2
   56d64:	10fd5526 	beq	r2,r3,562bc <__alt_data_end+0xfffd7abc>
   56d68:	003ed806 	br	568cc <__alt_data_end+0xfffd80cc>
   56d6c:	d8802315 	stw	r2,140(sp)
   56d70:	98c00007 	ldb	r3,0(r19)
   56d74:	003cab06 	br	56024 <__alt_data_end+0xfffd7824>
   56d78:	d9801a04 	addi	r6,sp,104
   56d7c:	b80b883a 	mov	r5,r23
   56d80:	a809883a 	mov	r4,r21
   56d84:	0055d180 	call	55d18 <__ssprint_r>
   56d88:	103f651e 	bne	r2,zero,56b20 <__alt_data_end+0xfffd8320>
   56d8c:	d8c01c17 	ldw	r3,112(sp)
   56d90:	003f4f06 	br	56ad0 <__alt_data_end+0xfffd82d0>
   56d94:	008001b4 	movhi	r2,6
   56d98:	10ac8c04 	addi	r2,r2,-19920
   56d9c:	d8802915 	stw	r2,164(sp)
   56da0:	003d4406 	br	562b4 <__alt_data_end+0xfffd7ab4>
   56da4:	dac02317 	ldw	r11,140(sp)
   56da8:	58800017 	ldw	r2,0(r11)
   56dac:	dac02517 	ldw	r11,148(sp)
   56db0:	5807d7fa 	srai	r3,r11,31
   56db4:	dac02317 	ldw	r11,140(sp)
   56db8:	10c00115 	stw	r3,4(r2)
   56dbc:	5ac00104 	addi	r11,r11,4
   56dc0:	dac02315 	stw	r11,140(sp)
   56dc4:	dac02517 	ldw	r11,148(sp)
   56dc8:	12c00015 	stw	r11,0(r2)
   56dcc:	003c6d06 	br	55f84 <__alt_data_end+0xfffd7784>
   56dd0:	9080100c 	andi	r2,r18,64
   56dd4:	dac02317 	ldw	r11,140(sp)
   56dd8:	103e5326 	beq	r2,zero,56728 <__alt_data_end+0xfffd7f28>
   56ddc:	5f00000f 	ldh	fp,0(r11)
   56de0:	5ac00104 	addi	r11,r11,4
   56de4:	dac02315 	stw	r11,140(sp)
   56de8:	e013d7fa 	srai	r9,fp,31
   56dec:	4805883a 	mov	r2,r9
   56df0:	003e0706 	br	56610 <__alt_data_end+0xfffd7e10>
   56df4:	00800c04 	movi	r2,48
   56df8:	d8801d05 	stb	r2,116(sp)
   56dfc:	d8c01d45 	stb	r3,117(sp)
   56e00:	d8001d85 	stb	zero,118(sp)
   56e04:	90800094 	ori	r2,r18,2
   56e08:	80008f16 	blt	r16,zero,57048 <___svfiprintf_internal_r+0x1160>
   56e0c:	00bfdfc4 	movi	r2,-129
   56e10:	90a4703a 	and	r18,r18,r2
   56e14:	94800094 	ori	r18,r18,2
   56e18:	0015883a 	mov	r10,zero
   56e1c:	003d2906 	br	562c4 <__alt_data_end+0xfffd7ac4>
   56e20:	98c00007 	ldb	r3,0(r19)
   56e24:	003c7f06 	br	56024 <__alt_data_end+0xfffd7824>
   56e28:	dac02317 	ldw	r11,140(sp)
   56e2c:	0013883a 	mov	r9,zero
   56e30:	5f000017 	ldw	fp,0(r11)
   56e34:	5ac00104 	addi	r11,r11,4
   56e38:	dac02315 	stw	r11,140(sp)
   56e3c:	003d1506 	br	56294 <__alt_data_end+0xfffd7a94>
   56e40:	9080100c 	andi	r2,r18,64
   56e44:	d8001d85 	stb	zero,118(sp)
   56e48:	dac02317 	ldw	r11,140(sp)
   56e4c:	10003426 	beq	r2,zero,56f20 <___svfiprintf_internal_r+0x1038>
   56e50:	58800104 	addi	r2,r11,4
   56e54:	5f00000b 	ldhu	fp,0(r11)
   56e58:	0013883a 	mov	r9,zero
   56e5c:	803e950e 	bge	r16,zero,568b4 <__alt_data_end+0xfffd80b4>
   56e60:	e246b03a 	or	r3,fp,r9
   56e64:	d8802315 	stw	r2,140(sp)
   56e68:	183d5a1e 	bne	r3,zero,563d4 <__alt_data_end+0xfffd7bd4>
   56e6c:	0015883a 	mov	r10,zero
   56e70:	0005883a 	mov	r2,zero
   56e74:	003fb706 	br	56d54 <__alt_data_end+0xfffd8554>
   56e78:	98c00043 	ldbu	r3,1(r19)
   56e7c:	94800814 	ori	r18,r18,32
   56e80:	9cc00044 	addi	r19,r19,1
   56e84:	18c03fcc 	andi	r3,r3,255
   56e88:	18c0201c 	xori	r3,r3,128
   56e8c:	18ffe004 	addi	r3,r3,-128
   56e90:	003c6406 	br	56024 <__alt_data_end+0xfffd7824>
   56e94:	d8c02315 	stw	r3,140(sp)
   56e98:	0015883a 	mov	r10,zero
   56e9c:	003faa06 	br	56d48 <__alt_data_end+0xfffd8548>
   56ea0:	dac02317 	ldw	r11,140(sp)
   56ea4:	58800017 	ldw	r2,0(r11)
   56ea8:	5ac00104 	addi	r11,r11,4
   56eac:	dac02315 	stw	r11,140(sp)
   56eb0:	dac02517 	ldw	r11,148(sp)
   56eb4:	12c00015 	stw	r11,0(r2)
   56eb8:	003c3206 	br	55f84 <__alt_data_end+0xfffd7784>
   56ebc:	010001b4 	movhi	r4,6
   56ec0:	212c8c04 	addi	r4,r4,-19920
   56ec4:	d9002915 	stw	r4,164(sp)
   56ec8:	d8c02315 	stw	r3,140(sp)
   56ecc:	1025883a 	mov	r18,r2
   56ed0:	e244b03a 	or	r2,fp,r9
   56ed4:	103f871e 	bne	r2,zero,56cf4 <__alt_data_end+0xfffd84f4>
   56ed8:	0015883a 	mov	r10,zero
   56edc:	00800084 	movi	r2,2
   56ee0:	003f9c06 	br	56d54 <__alt_data_end+0xfffd8554>
   56ee4:	0039883a 	mov	fp,zero
   56ee8:	003e5f06 	br	56868 <__alt_data_end+0xfffd8068>
   56eec:	d9801a04 	addi	r6,sp,104
   56ef0:	b80b883a 	mov	r5,r23
   56ef4:	a809883a 	mov	r4,r21
   56ef8:	0055d180 	call	55d18 <__ssprint_r>
   56efc:	103f081e 	bne	r2,zero,56b20 <__alt_data_end+0xfffd8320>
   56f00:	d8c01c17 	ldw	r3,112(sp)
   56f04:	d8801b17 	ldw	r2,108(sp)
   56f08:	d811883a 	mov	r8,sp
   56f0c:	003e9106 	br	56954 <__alt_data_end+0xfffd8154>
   56f10:	010001b4 	movhi	r4,6
   56f14:	212e0004 	addi	r4,r4,-18432
   56f18:	d9002215 	stw	r4,136(sp)
   56f1c:	003ead06 	br	569d4 <__alt_data_end+0xfffd81d4>
   56f20:	58800104 	addi	r2,r11,4
   56f24:	5f000017 	ldw	fp,0(r11)
   56f28:	0013883a 	mov	r9,zero
   56f2c:	803e610e 	bge	r16,zero,568b4 <__alt_data_end+0xfffd80b4>
   56f30:	003fcb06 	br	56e60 <__alt_data_end+0xfffd8660>
   56f34:	58800104 	addi	r2,r11,4
   56f38:	5f000017 	ldw	fp,0(r11)
   56f3c:	0013883a 	mov	r9,zero
   56f40:	803e420e 	bge	r16,zero,5684c <__alt_data_end+0xfffd804c>
   56f44:	003f7e06 	br	56d40 <__alt_data_end+0xfffd8540>
   56f48:	5f000017 	ldw	fp,0(r11)
   56f4c:	5ac00104 	addi	r11,r11,4
   56f50:	0013883a 	mov	r9,zero
   56f54:	dac02315 	stw	r11,140(sp)
   56f58:	003cce06 	br	56294 <__alt_data_end+0xfffd7a94>
   56f5c:	8809883a 	mov	r4,r17
   56f60:	da002c15 	stw	r8,176(sp)
   56f64:	00459240 	call	45924 <strlen>
   56f68:	d8802115 	stw	r2,132(sp)
   56f6c:	da801d83 	ldbu	r10,118(sp)
   56f70:	df002315 	stw	fp,140(sp)
   56f74:	0021883a 	mov	r16,zero
   56f78:	da002c17 	ldw	r8,176(sp)
   56f7c:	003cf606 	br	56358 <__alt_data_end+0xfffd7b58>
   56f80:	00800184 	movi	r2,6
   56f84:	1400012e 	bgeu	r2,r16,56f8c <___svfiprintf_internal_r+0x10a4>
   56f88:	1021883a 	mov	r16,r2
   56f8c:	dc002115 	stw	r16,132(sp)
   56f90:	8005883a 	mov	r2,r16
   56f94:	80003c16 	blt	r16,zero,57088 <___svfiprintf_internal_r+0x11a0>
   56f98:	044001b4 	movhi	r17,6
   56f9c:	d8802015 	stw	r2,128(sp)
   56fa0:	df002315 	stw	fp,140(sp)
   56fa4:	8c6c9104 	addi	r17,r17,-19900
   56fa8:	003d2e06 	br	56464 <__alt_data_end+0xfffd7c64>
   56fac:	04001004 	movi	r16,64
   56fb0:	800b883a 	mov	r5,r16
   56fb4:	004c4dc0 	call	4c4dc <_malloc_r>
   56fb8:	dac02717 	ldw	r11,156(sp)
   56fbc:	58800015 	stw	r2,0(r11)
   56fc0:	58800415 	stw	r2,16(r11)
   56fc4:	10004826 	beq	r2,zero,570e8 <___svfiprintf_internal_r+0x1200>
   56fc8:	dac02717 	ldw	r11,156(sp)
   56fcc:	5c000515 	stw	r16,20(r11)
   56fd0:	003bd906 	br	55f38 <__alt_data_end+0xfffd7738>
   56fd4:	9080004c 	andi	r2,r18,1
   56fd8:	0015883a 	mov	r10,zero
   56fdc:	10000626 	beq	r2,zero,56ff8 <___svfiprintf_internal_r+0x1110>
   56fe0:	dac02b17 	ldw	r11,172(sp)
   56fe4:	00800c04 	movi	r2,48
   56fe8:	d88019c5 	stb	r2,103(sp)
   56fec:	dac02115 	stw	r11,132(sp)
   56ff0:	dc4019c4 	addi	r17,sp,103
   56ff4:	003cd806 	br	56358 <__alt_data_end+0xfffd7b58>
   56ff8:	d8002115 	stw	zero,132(sp)
   56ffc:	dc401a04 	addi	r17,sp,104
   57000:	003cd506 	br	56358 <__alt_data_end+0xfffd7b58>
   57004:	010001b4 	movhi	r4,6
   57008:	212e0404 	addi	r4,r4,-18416
   5700c:	d9002815 	stw	r4,160(sp)
   57010:	003d4306 	br	56520 <__alt_data_end+0xfffd7d20>
   57014:	00bfffc4 	movi	r2,-1
   57018:	003ec606 	br	56b34 <__alt_data_end+0xfffd8334>
   5701c:	00800044 	movi	r2,1
   57020:	10803fcc 	andi	r2,r2,255
   57024:	00c00044 	movi	r3,1
   57028:	10fd8026 	beq	r2,r3,5662c <__alt_data_end+0xfffd7e2c>
   5702c:	00c00084 	movi	r3,2
   57030:	10fca426 	beq	r2,r3,562c4 <__alt_data_end+0xfffd7ac4>
   57034:	003ce806 	br	563d8 <__alt_data_end+0xfffd7bd8>
   57038:	010001b4 	movhi	r4,6
   5703c:	212e0404 	addi	r4,r4,-18416
   57040:	d9002815 	stw	r4,160(sp)
   57044:	003e9906 	br	56aac <__alt_data_end+0xfffd82ac>
   57048:	1025883a 	mov	r18,r2
   5704c:	0015883a 	mov	r10,zero
   57050:	00800084 	movi	r2,2
   57054:	003ff206 	br	57020 <__alt_data_end+0xfffd8820>
   57058:	014001b4 	movhi	r5,6
   5705c:	296e0004 	addi	r5,r5,-18432
   57060:	d9402215 	stw	r5,136(sp)
   57064:	003ee206 	br	56bf0 <__alt_data_end+0xfffd83f0>
   57068:	5827883a 	mov	r19,r11
   5706c:	0021883a 	mov	r16,zero
   57070:	003bed06 	br	56028 <__alt_data_end+0xfffd7828>
   57074:	dc002115 	stw	r16,132(sp)
   57078:	da801d83 	ldbu	r10,118(sp)
   5707c:	df002315 	stw	fp,140(sp)
   57080:	0021883a 	mov	r16,zero
   57084:	003cb406 	br	56358 <__alt_data_end+0xfffd7b58>
   57088:	0005883a 	mov	r2,zero
   5708c:	003fc206 	br	56f98 <__alt_data_end+0xfffd8798>
   57090:	d8802317 	ldw	r2,140(sp)
   57094:	98c00043 	ldbu	r3,1(r19)
   57098:	5827883a 	mov	r19,r11
   5709c:	14000017 	ldw	r16,0(r2)
   570a0:	10800104 	addi	r2,r2,4
   570a4:	d8802315 	stw	r2,140(sp)
   570a8:	803f760e 	bge	r16,zero,56e84 <__alt_data_end+0xfffd8684>
   570ac:	18c03fcc 	andi	r3,r3,255
   570b0:	18c0201c 	xori	r3,r3,128
   570b4:	043fffc4 	movi	r16,-1
   570b8:	18ffe004 	addi	r3,r3,-128
   570bc:	003bd906 	br	56024 <__alt_data_end+0xfffd7824>
   570c0:	d9c01d85 	stb	r7,118(sp)
   570c4:	003cb606 	br	563a0 <__alt_data_end+0xfffd7ba0>
   570c8:	d9c01d85 	stb	r7,118(sp)
   570cc:	003d2106 	br	56554 <__alt_data_end+0xfffd7d54>
   570d0:	d9c01d85 	stb	r7,118(sp)
   570d4:	003d8e06 	br	56710 <__alt_data_end+0xfffd7f10>
   570d8:	d9c01d85 	stb	r7,118(sp)
   570dc:	003db306 	br	567ac <__alt_data_end+0xfffd7fac>
   570e0:	d9c01d85 	stb	r7,118(sp)
   570e4:	003c8a06 	br	56310 <__alt_data_end+0xfffd7b10>
   570e8:	dac02a17 	ldw	r11,168(sp)
   570ec:	00800304 	movi	r2,12
   570f0:	58800015 	stw	r2,0(r11)
   570f4:	00bfffc4 	movi	r2,-1
   570f8:	003e8e06 	br	56b34 <__alt_data_end+0xfffd8334>
   570fc:	d9c01d85 	stb	r7,118(sp)
   57100:	003dc706 	br	56820 <__alt_data_end+0xfffd8020>
   57104:	d9c01d85 	stb	r7,118(sp)
   57108:	003ddf06 	br	56888 <__alt_data_end+0xfffd8088>
   5710c:	d9c01d85 	stb	r7,118(sp)
   57110:	003d3706 	br	565f0 <__alt_data_end+0xfffd7df0>
   57114:	d9c01d85 	stb	r7,118(sp)
   57118:	003c5406 	br	5626c <__alt_data_end+0xfffd7a6c>
   5711c:	d9c01d85 	stb	r7,118(sp)
   57120:	003d1d06 	br	56598 <__alt_data_end+0xfffd7d98>

00057124 <__swbuf_r>:
   57124:	defffb04 	addi	sp,sp,-20
   57128:	dcc00315 	stw	r19,12(sp)
   5712c:	dc800215 	stw	r18,8(sp)
   57130:	dc000015 	stw	r16,0(sp)
   57134:	dfc00415 	stw	ra,16(sp)
   57138:	dc400115 	stw	r17,4(sp)
   5713c:	2025883a 	mov	r18,r4
   57140:	2827883a 	mov	r19,r5
   57144:	3021883a 	mov	r16,r6
   57148:	20000226 	beq	r4,zero,57154 <__swbuf_r+0x30>
   5714c:	20800e17 	ldw	r2,56(r4)
   57150:	10004226 	beq	r2,zero,5725c <__swbuf_r+0x138>
   57154:	80800617 	ldw	r2,24(r16)
   57158:	8100030b 	ldhu	r4,12(r16)
   5715c:	80800215 	stw	r2,8(r16)
   57160:	2080020c 	andi	r2,r4,8
   57164:	10003626 	beq	r2,zero,57240 <__swbuf_r+0x11c>
   57168:	80c00417 	ldw	r3,16(r16)
   5716c:	18003426 	beq	r3,zero,57240 <__swbuf_r+0x11c>
   57170:	2088000c 	andi	r2,r4,8192
   57174:	9c403fcc 	andi	r17,r19,255
   57178:	10001a26 	beq	r2,zero,571e4 <__swbuf_r+0xc0>
   5717c:	80800017 	ldw	r2,0(r16)
   57180:	81000517 	ldw	r4,20(r16)
   57184:	10c7c83a 	sub	r3,r2,r3
   57188:	1900200e 	bge	r3,r4,5720c <__swbuf_r+0xe8>
   5718c:	18c00044 	addi	r3,r3,1
   57190:	81000217 	ldw	r4,8(r16)
   57194:	11400044 	addi	r5,r2,1
   57198:	81400015 	stw	r5,0(r16)
   5719c:	213fffc4 	addi	r4,r4,-1
   571a0:	81000215 	stw	r4,8(r16)
   571a4:	14c00005 	stb	r19,0(r2)
   571a8:	80800517 	ldw	r2,20(r16)
   571ac:	10c01e26 	beq	r2,r3,57228 <__swbuf_r+0x104>
   571b0:	8080030b 	ldhu	r2,12(r16)
   571b4:	1080004c 	andi	r2,r2,1
   571b8:	10000226 	beq	r2,zero,571c4 <__swbuf_r+0xa0>
   571bc:	00800284 	movi	r2,10
   571c0:	88801926 	beq	r17,r2,57228 <__swbuf_r+0x104>
   571c4:	8805883a 	mov	r2,r17
   571c8:	dfc00417 	ldw	ra,16(sp)
   571cc:	dcc00317 	ldw	r19,12(sp)
   571d0:	dc800217 	ldw	r18,8(sp)
   571d4:	dc400117 	ldw	r17,4(sp)
   571d8:	dc000017 	ldw	r16,0(sp)
   571dc:	dec00504 	addi	sp,sp,20
   571e0:	f800283a 	ret
   571e4:	81401917 	ldw	r5,100(r16)
   571e8:	00b7ffc4 	movi	r2,-8193
   571ec:	21080014 	ori	r4,r4,8192
   571f0:	2884703a 	and	r2,r5,r2
   571f4:	80801915 	stw	r2,100(r16)
   571f8:	80800017 	ldw	r2,0(r16)
   571fc:	8100030d 	sth	r4,12(r16)
   57200:	81000517 	ldw	r4,20(r16)
   57204:	10c7c83a 	sub	r3,r2,r3
   57208:	193fe016 	blt	r3,r4,5718c <__alt_data_end+0xfffd898c>
   5720c:	800b883a 	mov	r5,r16
   57210:	9009883a 	mov	r4,r18
   57214:	004b1100 	call	4b110 <_fflush_r>
   57218:	1000071e 	bne	r2,zero,57238 <__swbuf_r+0x114>
   5721c:	80800017 	ldw	r2,0(r16)
   57220:	00c00044 	movi	r3,1
   57224:	003fda06 	br	57190 <__alt_data_end+0xfffd8990>
   57228:	800b883a 	mov	r5,r16
   5722c:	9009883a 	mov	r4,r18
   57230:	004b1100 	call	4b110 <_fflush_r>
   57234:	103fe326 	beq	r2,zero,571c4 <__alt_data_end+0xfffd89c4>
   57238:	00bfffc4 	movi	r2,-1
   5723c:	003fe206 	br	571c8 <__alt_data_end+0xfffd89c8>
   57240:	800b883a 	mov	r5,r16
   57244:	9009883a 	mov	r4,r18
   57248:	00495180 	call	49518 <__swsetup_r>
   5724c:	103ffa1e 	bne	r2,zero,57238 <__alt_data_end+0xfffd8a38>
   57250:	8100030b 	ldhu	r4,12(r16)
   57254:	80c00417 	ldw	r3,16(r16)
   57258:	003fc506 	br	57170 <__alt_data_end+0xfffd8970>
   5725c:	004b4ec0 	call	4b4ec <__sinit>
   57260:	003fbc06 	br	57154 <__alt_data_end+0xfffd8954>

00057264 <__swbuf>:
   57264:	008001b4 	movhi	r2,6
   57268:	10b55004 	addi	r2,r2,-10944
   5726c:	280d883a 	mov	r6,r5
   57270:	200b883a 	mov	r5,r4
   57274:	11000017 	ldw	r4,0(r2)
   57278:	00571241 	jmpi	57124 <__swbuf_r>

0005727c <_wcrtomb_r>:
   5727c:	defff604 	addi	sp,sp,-40
   57280:	008001b4 	movhi	r2,6
   57284:	dc800815 	stw	r18,32(sp)
   57288:	dc400715 	stw	r17,28(sp)
   5728c:	dc000615 	stw	r16,24(sp)
   57290:	10b55504 	addi	r2,r2,-10924
   57294:	dfc00915 	stw	ra,36(sp)
   57298:	2021883a 	mov	r16,r4
   5729c:	3823883a 	mov	r17,r7
   572a0:	14800017 	ldw	r18,0(r2)
   572a4:	28001426 	beq	r5,zero,572f8 <_wcrtomb_r+0x7c>
   572a8:	d9400415 	stw	r5,16(sp)
   572ac:	d9800515 	stw	r6,20(sp)
   572b0:	004c2c00 	call	4c2c0 <__locale_charset>
   572b4:	d9800517 	ldw	r6,20(sp)
   572b8:	d9400417 	ldw	r5,16(sp)
   572bc:	100f883a 	mov	r7,r2
   572c0:	dc400015 	stw	r17,0(sp)
   572c4:	8009883a 	mov	r4,r16
   572c8:	903ee83a 	callr	r18
   572cc:	00ffffc4 	movi	r3,-1
   572d0:	10c0031e 	bne	r2,r3,572e0 <_wcrtomb_r+0x64>
   572d4:	88000015 	stw	zero,0(r17)
   572d8:	00c02284 	movi	r3,138
   572dc:	80c00015 	stw	r3,0(r16)
   572e0:	dfc00917 	ldw	ra,36(sp)
   572e4:	dc800817 	ldw	r18,32(sp)
   572e8:	dc400717 	ldw	r17,28(sp)
   572ec:	dc000617 	ldw	r16,24(sp)
   572f0:	dec00a04 	addi	sp,sp,40
   572f4:	f800283a 	ret
   572f8:	004c2c00 	call	4c2c0 <__locale_charset>
   572fc:	100f883a 	mov	r7,r2
   57300:	dc400015 	stw	r17,0(sp)
   57304:	000d883a 	mov	r6,zero
   57308:	d9400104 	addi	r5,sp,4
   5730c:	8009883a 	mov	r4,r16
   57310:	903ee83a 	callr	r18
   57314:	003fed06 	br	572cc <__alt_data_end+0xfffd8acc>

00057318 <wcrtomb>:
   57318:	defff604 	addi	sp,sp,-40
   5731c:	008001b4 	movhi	r2,6
   57320:	dc800615 	stw	r18,24(sp)
   57324:	dc400515 	stw	r17,20(sp)
   57328:	10b55004 	addi	r2,r2,-10944
   5732c:	dfc00915 	stw	ra,36(sp)
   57330:	dd000815 	stw	r20,32(sp)
   57334:	dcc00715 	stw	r19,28(sp)
   57338:	dc000415 	stw	r16,16(sp)
   5733c:	3025883a 	mov	r18,r6
   57340:	14400017 	ldw	r17,0(r2)
   57344:	20001926 	beq	r4,zero,573ac <wcrtomb+0x94>
   57348:	008001b4 	movhi	r2,6
   5734c:	10b55504 	addi	r2,r2,-10924
   57350:	15000017 	ldw	r20,0(r2)
   57354:	2021883a 	mov	r16,r4
   57358:	2827883a 	mov	r19,r5
   5735c:	004c2c00 	call	4c2c0 <__locale_charset>
   57360:	100f883a 	mov	r7,r2
   57364:	dc800015 	stw	r18,0(sp)
   57368:	980d883a 	mov	r6,r19
   5736c:	800b883a 	mov	r5,r16
   57370:	8809883a 	mov	r4,r17
   57374:	a03ee83a 	callr	r20
   57378:	00ffffc4 	movi	r3,-1
   5737c:	10c0031e 	bne	r2,r3,5738c <wcrtomb+0x74>
   57380:	90000015 	stw	zero,0(r18)
   57384:	00c02284 	movi	r3,138
   57388:	88c00015 	stw	r3,0(r17)
   5738c:	dfc00917 	ldw	ra,36(sp)
   57390:	dd000817 	ldw	r20,32(sp)
   57394:	dcc00717 	ldw	r19,28(sp)
   57398:	dc800617 	ldw	r18,24(sp)
   5739c:	dc400517 	ldw	r17,20(sp)
   573a0:	dc000417 	ldw	r16,16(sp)
   573a4:	dec00a04 	addi	sp,sp,40
   573a8:	f800283a 	ret
   573ac:	008001b4 	movhi	r2,6
   573b0:	10b55504 	addi	r2,r2,-10924
   573b4:	14000017 	ldw	r16,0(r2)
   573b8:	004c2c00 	call	4c2c0 <__locale_charset>
   573bc:	100f883a 	mov	r7,r2
   573c0:	dc800015 	stw	r18,0(sp)
   573c4:	000d883a 	mov	r6,zero
   573c8:	d9400104 	addi	r5,sp,4
   573cc:	8809883a 	mov	r4,r17
   573d0:	803ee83a 	callr	r16
   573d4:	003fe806 	br	57378 <__alt_data_end+0xfffd8b78>

000573d8 <__ascii_wctomb>:
   573d8:	28000526 	beq	r5,zero,573f0 <__ascii_wctomb+0x18>
   573dc:	00803fc4 	movi	r2,255
   573e0:	11800536 	bltu	r2,r6,573f8 <__ascii_wctomb+0x20>
   573e4:	29800005 	stb	r6,0(r5)
   573e8:	00800044 	movi	r2,1
   573ec:	f800283a 	ret
   573f0:	0005883a 	mov	r2,zero
   573f4:	f800283a 	ret
   573f8:	00802284 	movi	r2,138
   573fc:	20800015 	stw	r2,0(r4)
   57400:	00bfffc4 	movi	r2,-1
   57404:	f800283a 	ret

00057408 <_wctomb_r>:
   57408:	008001b4 	movhi	r2,6
   5740c:	defff904 	addi	sp,sp,-28
   57410:	10b55504 	addi	r2,r2,-10924
   57414:	dfc00615 	stw	ra,24(sp)
   57418:	dc400515 	stw	r17,20(sp)
   5741c:	dc000415 	stw	r16,16(sp)
   57420:	3823883a 	mov	r17,r7
   57424:	14000017 	ldw	r16,0(r2)
   57428:	d9000115 	stw	r4,4(sp)
   5742c:	d9400215 	stw	r5,8(sp)
   57430:	d9800315 	stw	r6,12(sp)
   57434:	004c2c00 	call	4c2c0 <__locale_charset>
   57438:	d9800317 	ldw	r6,12(sp)
   5743c:	d9400217 	ldw	r5,8(sp)
   57440:	d9000117 	ldw	r4,4(sp)
   57444:	100f883a 	mov	r7,r2
   57448:	dc400015 	stw	r17,0(sp)
   5744c:	803ee83a 	callr	r16
   57450:	dfc00617 	ldw	ra,24(sp)
   57454:	dc400517 	ldw	r17,20(sp)
   57458:	dc000417 	ldw	r16,16(sp)
   5745c:	dec00704 	addi	sp,sp,28
   57460:	f800283a 	ret

00057464 <__udivdi3>:
   57464:	defff504 	addi	sp,sp,-44
   57468:	dcc00415 	stw	r19,16(sp)
   5746c:	dc000115 	stw	r16,4(sp)
   57470:	dfc00a15 	stw	ra,40(sp)
   57474:	df000915 	stw	fp,36(sp)
   57478:	ddc00815 	stw	r23,32(sp)
   5747c:	dd800715 	stw	r22,28(sp)
   57480:	dd400615 	stw	r21,24(sp)
   57484:	dd000515 	stw	r20,20(sp)
   57488:	dc800315 	stw	r18,12(sp)
   5748c:	dc400215 	stw	r17,8(sp)
   57490:	2027883a 	mov	r19,r4
   57494:	2821883a 	mov	r16,r5
   57498:	3800411e 	bne	r7,zero,575a0 <__udivdi3+0x13c>
   5749c:	3023883a 	mov	r17,r6
   574a0:	2025883a 	mov	r18,r4
   574a4:	2980522e 	bgeu	r5,r6,575f0 <__udivdi3+0x18c>
   574a8:	00bfffd4 	movui	r2,65535
   574ac:	282d883a 	mov	r22,r5
   574b0:	1180a836 	bltu	r2,r6,57754 <__udivdi3+0x2f0>
   574b4:	00803fc4 	movi	r2,255
   574b8:	1185803a 	cmpltu	r2,r2,r6
   574bc:	100490fa 	slli	r2,r2,3
   574c0:	3086d83a 	srl	r3,r6,r2
   574c4:	010001b4 	movhi	r4,6
   574c8:	212c4204 	addi	r4,r4,-20216
   574cc:	20c7883a 	add	r3,r4,r3
   574d0:	18c00003 	ldbu	r3,0(r3)
   574d4:	1885883a 	add	r2,r3,r2
   574d8:	00c00804 	movi	r3,32
   574dc:	1887c83a 	sub	r3,r3,r2
   574e0:	18000526 	beq	r3,zero,574f8 <__udivdi3+0x94>
   574e4:	80e0983a 	sll	r16,r16,r3
   574e8:	9884d83a 	srl	r2,r19,r2
   574ec:	30e2983a 	sll	r17,r6,r3
   574f0:	98e4983a 	sll	r18,r19,r3
   574f4:	142cb03a 	or	r22,r2,r16
   574f8:	882ad43a 	srli	r21,r17,16
   574fc:	b009883a 	mov	r4,r22
   57500:	8d3fffcc 	andi	r20,r17,65535
   57504:	a80b883a 	mov	r5,r21
   57508:	00455d80 	call	455d8 <__umodsi3>
   5750c:	b009883a 	mov	r4,r22
   57510:	a80b883a 	mov	r5,r21
   57514:	1027883a 	mov	r19,r2
   57518:	00455740 	call	45574 <__udivsi3>
   5751c:	102d883a 	mov	r22,r2
   57520:	9826943a 	slli	r19,r19,16
   57524:	9004d43a 	srli	r2,r18,16
   57528:	a5a1383a 	mul	r16,r20,r22
   5752c:	14c4b03a 	or	r2,r2,r19
   57530:	1400052e 	bgeu	r2,r16,57548 <__udivdi3+0xe4>
   57534:	1445883a 	add	r2,r2,r17
   57538:	b0ffffc4 	addi	r3,r22,-1
   5753c:	14400136 	bltu	r2,r17,57544 <__udivdi3+0xe0>
   57540:	14012336 	bltu	r2,r16,579d0 <__udivdi3+0x56c>
   57544:	182d883a 	mov	r22,r3
   57548:	1421c83a 	sub	r16,r2,r16
   5754c:	a80b883a 	mov	r5,r21
   57550:	8009883a 	mov	r4,r16
   57554:	00455d80 	call	455d8 <__umodsi3>
   57558:	1027883a 	mov	r19,r2
   5755c:	a80b883a 	mov	r5,r21
   57560:	8009883a 	mov	r4,r16
   57564:	00455740 	call	45574 <__udivsi3>
   57568:	9826943a 	slli	r19,r19,16
   5756c:	a0a9383a 	mul	r20,r20,r2
   57570:	94bfffcc 	andi	r18,r18,65535
   57574:	94e4b03a 	or	r18,r18,r19
   57578:	9500052e 	bgeu	r18,r20,57590 <__udivdi3+0x12c>
   5757c:	8ca5883a 	add	r18,r17,r18
   57580:	10ffffc4 	addi	r3,r2,-1
   57584:	9440f136 	bltu	r18,r17,5794c <__udivdi3+0x4e8>
   57588:	9500f02e 	bgeu	r18,r20,5794c <__udivdi3+0x4e8>
   5758c:	10bfff84 	addi	r2,r2,-2
   57590:	b00c943a 	slli	r6,r22,16
   57594:	0007883a 	mov	r3,zero
   57598:	3084b03a 	or	r2,r6,r2
   5759c:	00005906 	br	57704 <__udivdi3+0x2a0>
   575a0:	29c05636 	bltu	r5,r7,576fc <__udivdi3+0x298>
   575a4:	00bfffd4 	movui	r2,65535
   575a8:	11c0622e 	bgeu	r2,r7,57734 <__udivdi3+0x2d0>
   575ac:	00804034 	movhi	r2,256
   575b0:	10bfffc4 	addi	r2,r2,-1
   575b4:	11c0ee36 	bltu	r2,r7,57970 <__udivdi3+0x50c>
   575b8:	00800404 	movi	r2,16
   575bc:	3886d83a 	srl	r3,r7,r2
   575c0:	010001b4 	movhi	r4,6
   575c4:	212c4204 	addi	r4,r4,-20216
   575c8:	20c7883a 	add	r3,r4,r3
   575cc:	18c00003 	ldbu	r3,0(r3)
   575d0:	05400804 	movi	r21,32
   575d4:	1885883a 	add	r2,r3,r2
   575d8:	a8abc83a 	sub	r21,r21,r2
   575dc:	a800621e 	bne	r21,zero,57768 <__udivdi3+0x304>
   575e0:	3c00e936 	bltu	r7,r16,57988 <__udivdi3+0x524>
   575e4:	9985403a 	cmpgeu	r2,r19,r6
   575e8:	0007883a 	mov	r3,zero
   575ec:	00004506 	br	57704 <__udivdi3+0x2a0>
   575f0:	3000041e 	bne	r6,zero,57604 <__udivdi3+0x1a0>
   575f4:	000b883a 	mov	r5,zero
   575f8:	01000044 	movi	r4,1
   575fc:	00455740 	call	45574 <__udivsi3>
   57600:	1023883a 	mov	r17,r2
   57604:	00bfffd4 	movui	r2,65535
   57608:	14404e2e 	bgeu	r2,r17,57744 <__udivdi3+0x2e0>
   5760c:	00804034 	movhi	r2,256
   57610:	10bfffc4 	addi	r2,r2,-1
   57614:	1440d836 	bltu	r2,r17,57978 <__udivdi3+0x514>
   57618:	00800404 	movi	r2,16
   5761c:	8886d83a 	srl	r3,r17,r2
   57620:	010001b4 	movhi	r4,6
   57624:	212c4204 	addi	r4,r4,-20216
   57628:	20c7883a 	add	r3,r4,r3
   5762c:	18c00003 	ldbu	r3,0(r3)
   57630:	1885883a 	add	r2,r3,r2
   57634:	00c00804 	movi	r3,32
   57638:	1887c83a 	sub	r3,r3,r2
   5763c:	18008f1e 	bne	r3,zero,5787c <__udivdi3+0x418>
   57640:	882ad43a 	srli	r21,r17,16
   57644:	8461c83a 	sub	r16,r16,r17
   57648:	8d3fffcc 	andi	r20,r17,65535
   5764c:	00c00044 	movi	r3,1
   57650:	8009883a 	mov	r4,r16
   57654:	a80b883a 	mov	r5,r21
   57658:	d8c00015 	stw	r3,0(sp)
   5765c:	00455d80 	call	455d8 <__umodsi3>
   57660:	8009883a 	mov	r4,r16
   57664:	a80b883a 	mov	r5,r21
   57668:	1027883a 	mov	r19,r2
   5766c:	00455740 	call	45574 <__udivsi3>
   57670:	9826943a 	slli	r19,r19,16
   57674:	9008d43a 	srli	r4,r18,16
   57678:	1521383a 	mul	r16,r2,r20
   5767c:	102d883a 	mov	r22,r2
   57680:	24c8b03a 	or	r4,r4,r19
   57684:	d8c00017 	ldw	r3,0(sp)
   57688:	2400052e 	bgeu	r4,r16,576a0 <__udivdi3+0x23c>
   5768c:	2449883a 	add	r4,r4,r17
   57690:	b0bfffc4 	addi	r2,r22,-1
   57694:	24400136 	bltu	r4,r17,5769c <__udivdi3+0x238>
   57698:	2400ca36 	bltu	r4,r16,579c4 <__udivdi3+0x560>
   5769c:	102d883a 	mov	r22,r2
   576a0:	2421c83a 	sub	r16,r4,r16
   576a4:	a80b883a 	mov	r5,r21
   576a8:	8009883a 	mov	r4,r16
   576ac:	d8c00015 	stw	r3,0(sp)
   576b0:	00455d80 	call	455d8 <__umodsi3>
   576b4:	1027883a 	mov	r19,r2
   576b8:	a80b883a 	mov	r5,r21
   576bc:	8009883a 	mov	r4,r16
   576c0:	00455740 	call	45574 <__udivsi3>
   576c4:	9826943a 	slli	r19,r19,16
   576c8:	1529383a 	mul	r20,r2,r20
   576cc:	94bfffcc 	andi	r18,r18,65535
   576d0:	94e4b03a 	or	r18,r18,r19
   576d4:	d8c00017 	ldw	r3,0(sp)
   576d8:	9500052e 	bgeu	r18,r20,576f0 <__udivdi3+0x28c>
   576dc:	8ca5883a 	add	r18,r17,r18
   576e0:	113fffc4 	addi	r4,r2,-1
   576e4:	94409736 	bltu	r18,r17,57944 <__udivdi3+0x4e0>
   576e8:	9500962e 	bgeu	r18,r20,57944 <__udivdi3+0x4e0>
   576ec:	10bfff84 	addi	r2,r2,-2
   576f0:	b00c943a 	slli	r6,r22,16
   576f4:	3084b03a 	or	r2,r6,r2
   576f8:	00000206 	br	57704 <__udivdi3+0x2a0>
   576fc:	0007883a 	mov	r3,zero
   57700:	0005883a 	mov	r2,zero
   57704:	dfc00a17 	ldw	ra,40(sp)
   57708:	df000917 	ldw	fp,36(sp)
   5770c:	ddc00817 	ldw	r23,32(sp)
   57710:	dd800717 	ldw	r22,28(sp)
   57714:	dd400617 	ldw	r21,24(sp)
   57718:	dd000517 	ldw	r20,20(sp)
   5771c:	dcc00417 	ldw	r19,16(sp)
   57720:	dc800317 	ldw	r18,12(sp)
   57724:	dc400217 	ldw	r17,8(sp)
   57728:	dc000117 	ldw	r16,4(sp)
   5772c:	dec00b04 	addi	sp,sp,44
   57730:	f800283a 	ret
   57734:	00803fc4 	movi	r2,255
   57738:	11c5803a 	cmpltu	r2,r2,r7
   5773c:	100490fa 	slli	r2,r2,3
   57740:	003f9e06 	br	575bc <__alt_data_end+0xfffd8dbc>
   57744:	00803fc4 	movi	r2,255
   57748:	1445803a 	cmpltu	r2,r2,r17
   5774c:	100490fa 	slli	r2,r2,3
   57750:	003fb206 	br	5761c <__alt_data_end+0xfffd8e1c>
   57754:	00804034 	movhi	r2,256
   57758:	10bfffc4 	addi	r2,r2,-1
   5775c:	11808836 	bltu	r2,r6,57980 <__udivdi3+0x51c>
   57760:	00800404 	movi	r2,16
   57764:	003f5606 	br	574c0 <__alt_data_end+0xfffd8cc0>
   57768:	30aed83a 	srl	r23,r6,r2
   5776c:	3d4e983a 	sll	r7,r7,r21
   57770:	80acd83a 	srl	r22,r16,r2
   57774:	9884d83a 	srl	r2,r19,r2
   57778:	3deeb03a 	or	r23,r7,r23
   5777c:	b824d43a 	srli	r18,r23,16
   57780:	8560983a 	sll	r16,r16,r21
   57784:	b009883a 	mov	r4,r22
   57788:	900b883a 	mov	r5,r18
   5778c:	3568983a 	sll	r20,r6,r21
   57790:	1420b03a 	or	r16,r2,r16
   57794:	00455d80 	call	455d8 <__umodsi3>
   57798:	b009883a 	mov	r4,r22
   5779c:	900b883a 	mov	r5,r18
   577a0:	1023883a 	mov	r17,r2
   577a4:	00455740 	call	45574 <__udivsi3>
   577a8:	8808943a 	slli	r4,r17,16
   577ac:	bf3fffcc 	andi	fp,r23,65535
   577b0:	8006d43a 	srli	r3,r16,16
   577b4:	e0a3383a 	mul	r17,fp,r2
   577b8:	100d883a 	mov	r6,r2
   577bc:	1906b03a 	or	r3,r3,r4
   577c0:	1c40042e 	bgeu	r3,r17,577d4 <__udivdi3+0x370>
   577c4:	1dc7883a 	add	r3,r3,r23
   577c8:	10bfffc4 	addi	r2,r2,-1
   577cc:	1dc0752e 	bgeu	r3,r23,579a4 <__udivdi3+0x540>
   577d0:	100d883a 	mov	r6,r2
   577d4:	1c63c83a 	sub	r17,r3,r17
   577d8:	900b883a 	mov	r5,r18
   577dc:	8809883a 	mov	r4,r17
   577e0:	d9800015 	stw	r6,0(sp)
   577e4:	00455d80 	call	455d8 <__umodsi3>
   577e8:	102d883a 	mov	r22,r2
   577ec:	8809883a 	mov	r4,r17
   577f0:	900b883a 	mov	r5,r18
   577f4:	00455740 	call	45574 <__udivsi3>
   577f8:	b02c943a 	slli	r22,r22,16
   577fc:	e089383a 	mul	r4,fp,r2
   57800:	843fffcc 	andi	r16,r16,65535
   57804:	85a0b03a 	or	r16,r16,r22
   57808:	d9800017 	ldw	r6,0(sp)
   5780c:	8100042e 	bgeu	r16,r4,57820 <__udivdi3+0x3bc>
   57810:	85e1883a 	add	r16,r16,r23
   57814:	10ffffc4 	addi	r3,r2,-1
   57818:	85c05e2e 	bgeu	r16,r23,57994 <__udivdi3+0x530>
   5781c:	1805883a 	mov	r2,r3
   57820:	300c943a 	slli	r6,r6,16
   57824:	a17fffcc 	andi	r5,r20,65535
   57828:	a028d43a 	srli	r20,r20,16
   5782c:	3084b03a 	or	r2,r6,r2
   57830:	10ffffcc 	andi	r3,r2,65535
   57834:	100cd43a 	srli	r6,r2,16
   57838:	194f383a 	mul	r7,r3,r5
   5783c:	1d07383a 	mul	r3,r3,r20
   57840:	314b383a 	mul	r5,r6,r5
   57844:	3810d43a 	srli	r8,r7,16
   57848:	8121c83a 	sub	r16,r16,r4
   5784c:	1947883a 	add	r3,r3,r5
   57850:	40c7883a 	add	r3,r8,r3
   57854:	350d383a 	mul	r6,r6,r20
   57858:	1940022e 	bgeu	r3,r5,57864 <__udivdi3+0x400>
   5785c:	01000074 	movhi	r4,1
   57860:	310d883a 	add	r6,r6,r4
   57864:	1828d43a 	srli	r20,r3,16
   57868:	a18d883a 	add	r6,r20,r6
   5786c:	81803e36 	bltu	r16,r6,57968 <__udivdi3+0x504>
   57870:	81803826 	beq	r16,r6,57954 <__udivdi3+0x4f0>
   57874:	0007883a 	mov	r3,zero
   57878:	003fa206 	br	57704 <__alt_data_end+0xfffd8f04>
   5787c:	88e2983a 	sll	r17,r17,r3
   57880:	80a8d83a 	srl	r20,r16,r2
   57884:	80e0983a 	sll	r16,r16,r3
   57888:	882ad43a 	srli	r21,r17,16
   5788c:	9884d83a 	srl	r2,r19,r2
   57890:	a009883a 	mov	r4,r20
   57894:	a80b883a 	mov	r5,r21
   57898:	142eb03a 	or	r23,r2,r16
   5789c:	98e4983a 	sll	r18,r19,r3
   578a0:	00455d80 	call	455d8 <__umodsi3>
   578a4:	a009883a 	mov	r4,r20
   578a8:	a80b883a 	mov	r5,r21
   578ac:	1021883a 	mov	r16,r2
   578b0:	00455740 	call	45574 <__udivsi3>
   578b4:	1039883a 	mov	fp,r2
   578b8:	8d3fffcc 	andi	r20,r17,65535
   578bc:	8020943a 	slli	r16,r16,16
   578c0:	b804d43a 	srli	r2,r23,16
   578c4:	a72d383a 	mul	r22,r20,fp
   578c8:	1404b03a 	or	r2,r2,r16
   578cc:	1580062e 	bgeu	r2,r22,578e8 <__udivdi3+0x484>
   578d0:	1445883a 	add	r2,r2,r17
   578d4:	e0ffffc4 	addi	r3,fp,-1
   578d8:	14403836 	bltu	r2,r17,579bc <__udivdi3+0x558>
   578dc:	1580372e 	bgeu	r2,r22,579bc <__udivdi3+0x558>
   578e0:	e73fff84 	addi	fp,fp,-2
   578e4:	1445883a 	add	r2,r2,r17
   578e8:	15adc83a 	sub	r22,r2,r22
   578ec:	a80b883a 	mov	r5,r21
   578f0:	b009883a 	mov	r4,r22
   578f4:	00455d80 	call	455d8 <__umodsi3>
   578f8:	1027883a 	mov	r19,r2
   578fc:	b009883a 	mov	r4,r22
   57900:	a80b883a 	mov	r5,r21
   57904:	00455740 	call	45574 <__udivsi3>
   57908:	9826943a 	slli	r19,r19,16
   5790c:	a0a1383a 	mul	r16,r20,r2
   57910:	b93fffcc 	andi	r4,r23,65535
   57914:	24c8b03a 	or	r4,r4,r19
   57918:	2400062e 	bgeu	r4,r16,57934 <__udivdi3+0x4d0>
   5791c:	2449883a 	add	r4,r4,r17
   57920:	10ffffc4 	addi	r3,r2,-1
   57924:	24402336 	bltu	r4,r17,579b4 <__udivdi3+0x550>
   57928:	2400222e 	bgeu	r4,r16,579b4 <__udivdi3+0x550>
   5792c:	10bfff84 	addi	r2,r2,-2
   57930:	2449883a 	add	r4,r4,r17
   57934:	e038943a 	slli	fp,fp,16
   57938:	2421c83a 	sub	r16,r4,r16
   5793c:	e086b03a 	or	r3,fp,r2
   57940:	003f4306 	br	57650 <__alt_data_end+0xfffd8e50>
   57944:	2005883a 	mov	r2,r4
   57948:	003f6906 	br	576f0 <__alt_data_end+0xfffd8ef0>
   5794c:	1805883a 	mov	r2,r3
   57950:	003f0f06 	br	57590 <__alt_data_end+0xfffd8d90>
   57954:	1806943a 	slli	r3,r3,16
   57958:	9d66983a 	sll	r19,r19,r21
   5795c:	39ffffcc 	andi	r7,r7,65535
   57960:	19c7883a 	add	r3,r3,r7
   57964:	98ffc32e 	bgeu	r19,r3,57874 <__alt_data_end+0xfffd9074>
   57968:	10bfffc4 	addi	r2,r2,-1
   5796c:	003fc106 	br	57874 <__alt_data_end+0xfffd9074>
   57970:	00800604 	movi	r2,24
   57974:	003f1106 	br	575bc <__alt_data_end+0xfffd8dbc>
   57978:	00800604 	movi	r2,24
   5797c:	003f2706 	br	5761c <__alt_data_end+0xfffd8e1c>
   57980:	00800604 	movi	r2,24
   57984:	003ece06 	br	574c0 <__alt_data_end+0xfffd8cc0>
   57988:	0007883a 	mov	r3,zero
   5798c:	00800044 	movi	r2,1
   57990:	003f5c06 	br	57704 <__alt_data_end+0xfffd8f04>
   57994:	813fa12e 	bgeu	r16,r4,5781c <__alt_data_end+0xfffd901c>
   57998:	10bfff84 	addi	r2,r2,-2
   5799c:	85e1883a 	add	r16,r16,r23
   579a0:	003f9f06 	br	57820 <__alt_data_end+0xfffd9020>
   579a4:	1c7f8a2e 	bgeu	r3,r17,577d0 <__alt_data_end+0xfffd8fd0>
   579a8:	31bfff84 	addi	r6,r6,-2
   579ac:	1dc7883a 	add	r3,r3,r23
   579b0:	003f8806 	br	577d4 <__alt_data_end+0xfffd8fd4>
   579b4:	1805883a 	mov	r2,r3
   579b8:	003fde06 	br	57934 <__alt_data_end+0xfffd9134>
   579bc:	1839883a 	mov	fp,r3
   579c0:	003fc906 	br	578e8 <__alt_data_end+0xfffd90e8>
   579c4:	b5bfff84 	addi	r22,r22,-2
   579c8:	2449883a 	add	r4,r4,r17
   579cc:	003f3406 	br	576a0 <__alt_data_end+0xfffd8ea0>
   579d0:	b5bfff84 	addi	r22,r22,-2
   579d4:	1445883a 	add	r2,r2,r17
   579d8:	003edb06 	br	57548 <__alt_data_end+0xfffd8d48>

000579dc <__umoddi3>:
   579dc:	defff404 	addi	sp,sp,-48
   579e0:	df000a15 	stw	fp,40(sp)
   579e4:	dc400315 	stw	r17,12(sp)
   579e8:	dc000215 	stw	r16,8(sp)
   579ec:	dfc00b15 	stw	ra,44(sp)
   579f0:	ddc00915 	stw	r23,36(sp)
   579f4:	dd800815 	stw	r22,32(sp)
   579f8:	dd400715 	stw	r21,28(sp)
   579fc:	dd000615 	stw	r20,24(sp)
   57a00:	dcc00515 	stw	r19,20(sp)
   57a04:	dc800415 	stw	r18,16(sp)
   57a08:	2021883a 	mov	r16,r4
   57a0c:	2823883a 	mov	r17,r5
   57a10:	2839883a 	mov	fp,r5
   57a14:	38003c1e 	bne	r7,zero,57b08 <__umoddi3+0x12c>
   57a18:	3027883a 	mov	r19,r6
   57a1c:	2029883a 	mov	r20,r4
   57a20:	2980512e 	bgeu	r5,r6,57b68 <__umoddi3+0x18c>
   57a24:	00bfffd4 	movui	r2,65535
   57a28:	11809a36 	bltu	r2,r6,57c94 <__umoddi3+0x2b8>
   57a2c:	01003fc4 	movi	r4,255
   57a30:	2189803a 	cmpltu	r4,r4,r6
   57a34:	200890fa 	slli	r4,r4,3
   57a38:	3104d83a 	srl	r2,r6,r4
   57a3c:	00c001b4 	movhi	r3,6
   57a40:	18ec4204 	addi	r3,r3,-20216
   57a44:	1885883a 	add	r2,r3,r2
   57a48:	10c00003 	ldbu	r3,0(r2)
   57a4c:	00800804 	movi	r2,32
   57a50:	1909883a 	add	r4,r3,r4
   57a54:	1125c83a 	sub	r18,r2,r4
   57a58:	90000526 	beq	r18,zero,57a70 <__umoddi3+0x94>
   57a5c:	8ca2983a 	sll	r17,r17,r18
   57a60:	8108d83a 	srl	r4,r16,r4
   57a64:	34a6983a 	sll	r19,r6,r18
   57a68:	84a8983a 	sll	r20,r16,r18
   57a6c:	2478b03a 	or	fp,r4,r17
   57a70:	982ed43a 	srli	r23,r19,16
   57a74:	e009883a 	mov	r4,fp
   57a78:	9dbfffcc 	andi	r22,r19,65535
   57a7c:	b80b883a 	mov	r5,r23
   57a80:	00455d80 	call	455d8 <__umodsi3>
   57a84:	e009883a 	mov	r4,fp
   57a88:	b80b883a 	mov	r5,r23
   57a8c:	102b883a 	mov	r21,r2
   57a90:	00455740 	call	45574 <__udivsi3>
   57a94:	a806943a 	slli	r3,r21,16
   57a98:	a008d43a 	srli	r4,r20,16
   57a9c:	b085383a 	mul	r2,r22,r2
   57aa0:	20c8b03a 	or	r4,r4,r3
   57aa4:	2080032e 	bgeu	r4,r2,57ab4 <__umoddi3+0xd8>
   57aa8:	24c9883a 	add	r4,r4,r19
   57aac:	24c00136 	bltu	r4,r19,57ab4 <__umoddi3+0xd8>
   57ab0:	20811036 	bltu	r4,r2,57ef4 <__umoddi3+0x518>
   57ab4:	20abc83a 	sub	r21,r4,r2
   57ab8:	b80b883a 	mov	r5,r23
   57abc:	a809883a 	mov	r4,r21
   57ac0:	00455d80 	call	455d8 <__umodsi3>
   57ac4:	1023883a 	mov	r17,r2
   57ac8:	b80b883a 	mov	r5,r23
   57acc:	a809883a 	mov	r4,r21
   57ad0:	00455740 	call	45574 <__udivsi3>
   57ad4:	8822943a 	slli	r17,r17,16
   57ad8:	b085383a 	mul	r2,r22,r2
   57adc:	a0ffffcc 	andi	r3,r20,65535
   57ae0:	1c46b03a 	or	r3,r3,r17
   57ae4:	1880042e 	bgeu	r3,r2,57af8 <__umoddi3+0x11c>
   57ae8:	1cc7883a 	add	r3,r3,r19
   57aec:	1cc00236 	bltu	r3,r19,57af8 <__umoddi3+0x11c>
   57af0:	1880012e 	bgeu	r3,r2,57af8 <__umoddi3+0x11c>
   57af4:	1cc7883a 	add	r3,r3,r19
   57af8:	1885c83a 	sub	r2,r3,r2
   57afc:	1484d83a 	srl	r2,r2,r18
   57b00:	0007883a 	mov	r3,zero
   57b04:	00004f06 	br	57c44 <__umoddi3+0x268>
   57b08:	29c04c36 	bltu	r5,r7,57c3c <__umoddi3+0x260>
   57b0c:	00bfffd4 	movui	r2,65535
   57b10:	11c0582e 	bgeu	r2,r7,57c74 <__umoddi3+0x298>
   57b14:	00804034 	movhi	r2,256
   57b18:	10bfffc4 	addi	r2,r2,-1
   57b1c:	11c0e736 	bltu	r2,r7,57ebc <__umoddi3+0x4e0>
   57b20:	01000404 	movi	r4,16
   57b24:	3904d83a 	srl	r2,r7,r4
   57b28:	00c001b4 	movhi	r3,6
   57b2c:	18ec4204 	addi	r3,r3,-20216
   57b30:	1885883a 	add	r2,r3,r2
   57b34:	14c00003 	ldbu	r19,0(r2)
   57b38:	00c00804 	movi	r3,32
   57b3c:	9927883a 	add	r19,r19,r4
   57b40:	1ce9c83a 	sub	r20,r3,r19
   57b44:	a000581e 	bne	r20,zero,57ca8 <__umoddi3+0x2cc>
   57b48:	3c400136 	bltu	r7,r17,57b50 <__umoddi3+0x174>
   57b4c:	8180eb36 	bltu	r16,r6,57efc <__umoddi3+0x520>
   57b50:	8185c83a 	sub	r2,r16,r6
   57b54:	89e3c83a 	sub	r17,r17,r7
   57b58:	8089803a 	cmpltu	r4,r16,r2
   57b5c:	8939c83a 	sub	fp,r17,r4
   57b60:	e007883a 	mov	r3,fp
   57b64:	00003706 	br	57c44 <__umoddi3+0x268>
   57b68:	3000041e 	bne	r6,zero,57b7c <__umoddi3+0x1a0>
   57b6c:	000b883a 	mov	r5,zero
   57b70:	01000044 	movi	r4,1
   57b74:	00455740 	call	45574 <__udivsi3>
   57b78:	1027883a 	mov	r19,r2
   57b7c:	00bfffd4 	movui	r2,65535
   57b80:	14c0402e 	bgeu	r2,r19,57c84 <__umoddi3+0x2a8>
   57b84:	00804034 	movhi	r2,256
   57b88:	10bfffc4 	addi	r2,r2,-1
   57b8c:	14c0cd36 	bltu	r2,r19,57ec4 <__umoddi3+0x4e8>
   57b90:	00800404 	movi	r2,16
   57b94:	9886d83a 	srl	r3,r19,r2
   57b98:	010001b4 	movhi	r4,6
   57b9c:	212c4204 	addi	r4,r4,-20216
   57ba0:	20c7883a 	add	r3,r4,r3
   57ba4:	18c00003 	ldbu	r3,0(r3)
   57ba8:	1887883a 	add	r3,r3,r2
   57bac:	00800804 	movi	r2,32
   57bb0:	10e5c83a 	sub	r18,r2,r3
   57bb4:	9000901e 	bne	r18,zero,57df8 <__umoddi3+0x41c>
   57bb8:	982cd43a 	srli	r22,r19,16
   57bbc:	8ce3c83a 	sub	r17,r17,r19
   57bc0:	9d7fffcc 	andi	r21,r19,65535
   57bc4:	b00b883a 	mov	r5,r22
   57bc8:	8809883a 	mov	r4,r17
   57bcc:	00455d80 	call	455d8 <__umodsi3>
   57bd0:	8809883a 	mov	r4,r17
   57bd4:	b00b883a 	mov	r5,r22
   57bd8:	1021883a 	mov	r16,r2
   57bdc:	00455740 	call	45574 <__udivsi3>
   57be0:	8006943a 	slli	r3,r16,16
   57be4:	a008d43a 	srli	r4,r20,16
   57be8:	1545383a 	mul	r2,r2,r21
   57bec:	20c8b03a 	or	r4,r4,r3
   57bf0:	2080042e 	bgeu	r4,r2,57c04 <__umoddi3+0x228>
   57bf4:	24c9883a 	add	r4,r4,r19
   57bf8:	24c00236 	bltu	r4,r19,57c04 <__umoddi3+0x228>
   57bfc:	2080012e 	bgeu	r4,r2,57c04 <__umoddi3+0x228>
   57c00:	24c9883a 	add	r4,r4,r19
   57c04:	20a1c83a 	sub	r16,r4,r2
   57c08:	b00b883a 	mov	r5,r22
   57c0c:	8009883a 	mov	r4,r16
   57c10:	00455d80 	call	455d8 <__umodsi3>
   57c14:	1023883a 	mov	r17,r2
   57c18:	b00b883a 	mov	r5,r22
   57c1c:	8009883a 	mov	r4,r16
   57c20:	00455740 	call	45574 <__udivsi3>
   57c24:	8822943a 	slli	r17,r17,16
   57c28:	1545383a 	mul	r2,r2,r21
   57c2c:	a53fffcc 	andi	r20,r20,65535
   57c30:	a446b03a 	or	r3,r20,r17
   57c34:	18bfb02e 	bgeu	r3,r2,57af8 <__alt_data_end+0xfffd92f8>
   57c38:	003fab06 	br	57ae8 <__alt_data_end+0xfffd92e8>
   57c3c:	2005883a 	mov	r2,r4
   57c40:	2807883a 	mov	r3,r5
   57c44:	dfc00b17 	ldw	ra,44(sp)
   57c48:	df000a17 	ldw	fp,40(sp)
   57c4c:	ddc00917 	ldw	r23,36(sp)
   57c50:	dd800817 	ldw	r22,32(sp)
   57c54:	dd400717 	ldw	r21,28(sp)
   57c58:	dd000617 	ldw	r20,24(sp)
   57c5c:	dcc00517 	ldw	r19,20(sp)
   57c60:	dc800417 	ldw	r18,16(sp)
   57c64:	dc400317 	ldw	r17,12(sp)
   57c68:	dc000217 	ldw	r16,8(sp)
   57c6c:	dec00c04 	addi	sp,sp,48
   57c70:	f800283a 	ret
   57c74:	04c03fc4 	movi	r19,255
   57c78:	99c9803a 	cmpltu	r4,r19,r7
   57c7c:	200890fa 	slli	r4,r4,3
   57c80:	003fa806 	br	57b24 <__alt_data_end+0xfffd9324>
   57c84:	00803fc4 	movi	r2,255
   57c88:	14c5803a 	cmpltu	r2,r2,r19
   57c8c:	100490fa 	slli	r2,r2,3
   57c90:	003fc006 	br	57b94 <__alt_data_end+0xfffd9394>
   57c94:	00804034 	movhi	r2,256
   57c98:	10bfffc4 	addi	r2,r2,-1
   57c9c:	11808b36 	bltu	r2,r6,57ecc <__umoddi3+0x4f0>
   57ca0:	01000404 	movi	r4,16
   57ca4:	003f6406 	br	57a38 <__alt_data_end+0xfffd9238>
   57ca8:	34c4d83a 	srl	r2,r6,r19
   57cac:	3d0e983a 	sll	r7,r7,r20
   57cb0:	8cf8d83a 	srl	fp,r17,r19
   57cb4:	8d10983a 	sll	r8,r17,r20
   57cb8:	38aab03a 	or	r21,r7,r2
   57cbc:	a82cd43a 	srli	r22,r21,16
   57cc0:	84e2d83a 	srl	r17,r16,r19
   57cc4:	e009883a 	mov	r4,fp
   57cc8:	b00b883a 	mov	r5,r22
   57ccc:	8a22b03a 	or	r17,r17,r8
   57cd0:	3524983a 	sll	r18,r6,r20
   57cd4:	00455d80 	call	455d8 <__umodsi3>
   57cd8:	e009883a 	mov	r4,fp
   57cdc:	b00b883a 	mov	r5,r22
   57ce0:	102f883a 	mov	r23,r2
   57ce4:	00455740 	call	45574 <__udivsi3>
   57ce8:	100d883a 	mov	r6,r2
   57cec:	b808943a 	slli	r4,r23,16
   57cf0:	aa3fffcc 	andi	r8,r21,65535
   57cf4:	8804d43a 	srli	r2,r17,16
   57cf8:	41af383a 	mul	r23,r8,r6
   57cfc:	8520983a 	sll	r16,r16,r20
   57d00:	1104b03a 	or	r2,r2,r4
   57d04:	15c0042e 	bgeu	r2,r23,57d18 <__umoddi3+0x33c>
   57d08:	1545883a 	add	r2,r2,r21
   57d0c:	30ffffc4 	addi	r3,r6,-1
   57d10:	1540742e 	bgeu	r2,r21,57ee4 <__umoddi3+0x508>
   57d14:	180d883a 	mov	r6,r3
   57d18:	15efc83a 	sub	r23,r2,r23
   57d1c:	b00b883a 	mov	r5,r22
   57d20:	b809883a 	mov	r4,r23
   57d24:	d9800115 	stw	r6,4(sp)
   57d28:	da000015 	stw	r8,0(sp)
   57d2c:	00455d80 	call	455d8 <__umodsi3>
   57d30:	b00b883a 	mov	r5,r22
   57d34:	b809883a 	mov	r4,r23
   57d38:	1039883a 	mov	fp,r2
   57d3c:	00455740 	call	45574 <__udivsi3>
   57d40:	da000017 	ldw	r8,0(sp)
   57d44:	e038943a 	slli	fp,fp,16
   57d48:	100b883a 	mov	r5,r2
   57d4c:	4089383a 	mul	r4,r8,r2
   57d50:	8a3fffcc 	andi	r8,r17,65535
   57d54:	4710b03a 	or	r8,r8,fp
   57d58:	d9800117 	ldw	r6,4(sp)
   57d5c:	4100042e 	bgeu	r8,r4,57d70 <__umoddi3+0x394>
   57d60:	4551883a 	add	r8,r8,r21
   57d64:	10bfffc4 	addi	r2,r2,-1
   57d68:	45405a2e 	bgeu	r8,r21,57ed4 <__umoddi3+0x4f8>
   57d6c:	100b883a 	mov	r5,r2
   57d70:	300c943a 	slli	r6,r6,16
   57d74:	91ffffcc 	andi	r7,r18,65535
   57d78:	9004d43a 	srli	r2,r18,16
   57d7c:	314cb03a 	or	r6,r6,r5
   57d80:	317fffcc 	andi	r5,r6,65535
   57d84:	300cd43a 	srli	r6,r6,16
   57d88:	29d3383a 	mul	r9,r5,r7
   57d8c:	288b383a 	mul	r5,r5,r2
   57d90:	31cf383a 	mul	r7,r6,r7
   57d94:	4806d43a 	srli	r3,r9,16
   57d98:	4111c83a 	sub	r8,r8,r4
   57d9c:	29cb883a 	add	r5,r5,r7
   57da0:	194b883a 	add	r5,r3,r5
   57da4:	3085383a 	mul	r2,r6,r2
   57da8:	29c0022e 	bgeu	r5,r7,57db4 <__umoddi3+0x3d8>
   57dac:	00c00074 	movhi	r3,1
   57db0:	10c5883a 	add	r2,r2,r3
   57db4:	2808d43a 	srli	r4,r5,16
   57db8:	280a943a 	slli	r5,r5,16
   57dbc:	4a7fffcc 	andi	r9,r9,65535
   57dc0:	2085883a 	add	r2,r4,r2
   57dc4:	2a4b883a 	add	r5,r5,r9
   57dc8:	40803636 	bltu	r8,r2,57ea4 <__umoddi3+0x4c8>
   57dcc:	40804d26 	beq	r8,r2,57f04 <__umoddi3+0x528>
   57dd0:	4089c83a 	sub	r4,r8,r2
   57dd4:	280f883a 	mov	r7,r5
   57dd8:	81cfc83a 	sub	r7,r16,r7
   57ddc:	81c7803a 	cmpltu	r3,r16,r7
   57de0:	20c7c83a 	sub	r3,r4,r3
   57de4:	1cc4983a 	sll	r2,r3,r19
   57de8:	3d0ed83a 	srl	r7,r7,r20
   57dec:	1d06d83a 	srl	r3,r3,r20
   57df0:	11c4b03a 	or	r2,r2,r7
   57df4:	003f9306 	br	57c44 <__alt_data_end+0xfffd9444>
   57df8:	9ca6983a 	sll	r19,r19,r18
   57dfc:	88e8d83a 	srl	r20,r17,r3
   57e00:	80c4d83a 	srl	r2,r16,r3
   57e04:	982cd43a 	srli	r22,r19,16
   57e08:	8ca2983a 	sll	r17,r17,r18
   57e0c:	a009883a 	mov	r4,r20
   57e10:	b00b883a 	mov	r5,r22
   57e14:	1478b03a 	or	fp,r2,r17
   57e18:	00455d80 	call	455d8 <__umodsi3>
   57e1c:	a009883a 	mov	r4,r20
   57e20:	b00b883a 	mov	r5,r22
   57e24:	1023883a 	mov	r17,r2
   57e28:	00455740 	call	45574 <__udivsi3>
   57e2c:	9d7fffcc 	andi	r21,r19,65535
   57e30:	880a943a 	slli	r5,r17,16
   57e34:	e008d43a 	srli	r4,fp,16
   57e38:	a885383a 	mul	r2,r21,r2
   57e3c:	84a8983a 	sll	r20,r16,r18
   57e40:	2148b03a 	or	r4,r4,r5
   57e44:	2080042e 	bgeu	r4,r2,57e58 <__umoddi3+0x47c>
   57e48:	24c9883a 	add	r4,r4,r19
   57e4c:	24c00236 	bltu	r4,r19,57e58 <__umoddi3+0x47c>
   57e50:	2080012e 	bgeu	r4,r2,57e58 <__umoddi3+0x47c>
   57e54:	24c9883a 	add	r4,r4,r19
   57e58:	20a3c83a 	sub	r17,r4,r2
   57e5c:	b00b883a 	mov	r5,r22
   57e60:	8809883a 	mov	r4,r17
   57e64:	00455d80 	call	455d8 <__umodsi3>
   57e68:	102f883a 	mov	r23,r2
   57e6c:	8809883a 	mov	r4,r17
   57e70:	b00b883a 	mov	r5,r22
   57e74:	00455740 	call	45574 <__udivsi3>
   57e78:	b82e943a 	slli	r23,r23,16
   57e7c:	a885383a 	mul	r2,r21,r2
   57e80:	e13fffcc 	andi	r4,fp,65535
   57e84:	25c8b03a 	or	r4,r4,r23
   57e88:	2080042e 	bgeu	r4,r2,57e9c <__umoddi3+0x4c0>
   57e8c:	24c9883a 	add	r4,r4,r19
   57e90:	24c00236 	bltu	r4,r19,57e9c <__umoddi3+0x4c0>
   57e94:	2080012e 	bgeu	r4,r2,57e9c <__umoddi3+0x4c0>
   57e98:	24c9883a 	add	r4,r4,r19
   57e9c:	20a3c83a 	sub	r17,r4,r2
   57ea0:	003f4806 	br	57bc4 <__alt_data_end+0xfffd93c4>
   57ea4:	2c8fc83a 	sub	r7,r5,r18
   57ea8:	1545c83a 	sub	r2,r2,r21
   57eac:	29cb803a 	cmpltu	r5,r5,r7
   57eb0:	1145c83a 	sub	r2,r2,r5
   57eb4:	4089c83a 	sub	r4,r8,r2
   57eb8:	003fc706 	br	57dd8 <__alt_data_end+0xfffd95d8>
   57ebc:	01000604 	movi	r4,24
   57ec0:	003f1806 	br	57b24 <__alt_data_end+0xfffd9324>
   57ec4:	00800604 	movi	r2,24
   57ec8:	003f3206 	br	57b94 <__alt_data_end+0xfffd9394>
   57ecc:	01000604 	movi	r4,24
   57ed0:	003ed906 	br	57a38 <__alt_data_end+0xfffd9238>
   57ed4:	413fa52e 	bgeu	r8,r4,57d6c <__alt_data_end+0xfffd956c>
   57ed8:	297fff84 	addi	r5,r5,-2
   57edc:	4551883a 	add	r8,r8,r21
   57ee0:	003fa306 	br	57d70 <__alt_data_end+0xfffd9570>
   57ee4:	15ff8b2e 	bgeu	r2,r23,57d14 <__alt_data_end+0xfffd9514>
   57ee8:	31bfff84 	addi	r6,r6,-2
   57eec:	1545883a 	add	r2,r2,r21
   57ef0:	003f8906 	br	57d18 <__alt_data_end+0xfffd9518>
   57ef4:	24c9883a 	add	r4,r4,r19
   57ef8:	003eee06 	br	57ab4 <__alt_data_end+0xfffd92b4>
   57efc:	8005883a 	mov	r2,r16
   57f00:	003f1706 	br	57b60 <__alt_data_end+0xfffd9360>
   57f04:	817fe736 	bltu	r16,r5,57ea4 <__alt_data_end+0xfffd96a4>
   57f08:	280f883a 	mov	r7,r5
   57f0c:	0009883a 	mov	r4,zero
   57f10:	003fb106 	br	57dd8 <__alt_data_end+0xfffd95d8>

00057f14 <__eqsf2>:
   57f14:	2006d5fa 	srli	r3,r4,23
   57f18:	280cd5fa 	srli	r6,r5,23
   57f1c:	01c02034 	movhi	r7,128
   57f20:	39ffffc4 	addi	r7,r7,-1
   57f24:	18c03fcc 	andi	r3,r3,255
   57f28:	02003fc4 	movi	r8,255
   57f2c:	3904703a 	and	r2,r7,r4
   57f30:	31803fcc 	andi	r6,r6,255
   57f34:	394e703a 	and	r7,r7,r5
   57f38:	2008d7fa 	srli	r4,r4,31
   57f3c:	280ad7fa 	srli	r5,r5,31
   57f40:	1a000d26 	beq	r3,r8,57f78 <__eqsf2+0x64>
   57f44:	02003fc4 	movi	r8,255
   57f48:	32000826 	beq	r6,r8,57f6c <__eqsf2+0x58>
   57f4c:	19800226 	beq	r3,r6,57f58 <__eqsf2+0x44>
   57f50:	00800044 	movi	r2,1
   57f54:	f800283a 	ret
   57f58:	11fffd1e 	bne	r2,r7,57f50 <__alt_data_end+0xfffd9750>
   57f5c:	21400926 	beq	r4,r5,57f84 <__eqsf2+0x70>
   57f60:	183ffb1e 	bne	r3,zero,57f50 <__alt_data_end+0xfffd9750>
   57f64:	1004c03a 	cmpne	r2,r2,zero
   57f68:	f800283a 	ret
   57f6c:	383ff726 	beq	r7,zero,57f4c <__alt_data_end+0xfffd974c>
   57f70:	00800044 	movi	r2,1
   57f74:	f800283a 	ret
   57f78:	103ff226 	beq	r2,zero,57f44 <__alt_data_end+0xfffd9744>
   57f7c:	00800044 	movi	r2,1
   57f80:	f800283a 	ret
   57f84:	0005883a 	mov	r2,zero
   57f88:	f800283a 	ret

00057f8c <__gesf2>:
   57f8c:	2004d5fa 	srli	r2,r4,23
   57f90:	2806d5fa 	srli	r3,r5,23
   57f94:	01802034 	movhi	r6,128
   57f98:	31bfffc4 	addi	r6,r6,-1
   57f9c:	10803fcc 	andi	r2,r2,255
   57fa0:	01c03fc4 	movi	r7,255
   57fa4:	3110703a 	and	r8,r6,r4
   57fa8:	18c03fcc 	andi	r3,r3,255
   57fac:	314c703a 	and	r6,r6,r5
   57fb0:	2008d7fa 	srli	r4,r4,31
   57fb4:	280ad7fa 	srli	r5,r5,31
   57fb8:	11c01926 	beq	r2,r7,58020 <__gesf2+0x94>
   57fbc:	01c03fc4 	movi	r7,255
   57fc0:	19c00f26 	beq	r3,r7,58000 <__gesf2+0x74>
   57fc4:	1000061e 	bne	r2,zero,57fe0 <__gesf2+0x54>
   57fc8:	400f003a 	cmpeq	r7,r8,zero
   57fcc:	1800071e 	bne	r3,zero,57fec <__gesf2+0x60>
   57fd0:	3000061e 	bne	r6,zero,57fec <__gesf2+0x60>
   57fd4:	0005883a 	mov	r2,zero
   57fd8:	40000e1e 	bne	r8,zero,58014 <__gesf2+0x88>
   57fdc:	f800283a 	ret
   57fe0:	18000a1e 	bne	r3,zero,5800c <__gesf2+0x80>
   57fe4:	30000b26 	beq	r6,zero,58014 <__gesf2+0x88>
   57fe8:	000f883a 	mov	r7,zero
   57fec:	29403fcc 	andi	r5,r5,255
   57ff0:	38000726 	beq	r7,zero,58010 <__gesf2+0x84>
   57ff4:	28000826 	beq	r5,zero,58018 <__gesf2+0x8c>
   57ff8:	00800044 	movi	r2,1
   57ffc:	f800283a 	ret
   58000:	303ff026 	beq	r6,zero,57fc4 <__alt_data_end+0xfffd97c4>
   58004:	00bfff84 	movi	r2,-2
   58008:	f800283a 	ret
   5800c:	29403fcc 	andi	r5,r5,255
   58010:	21400526 	beq	r4,r5,58028 <__gesf2+0x9c>
   58014:	203ff826 	beq	r4,zero,57ff8 <__alt_data_end+0xfffd97f8>
   58018:	00bfffc4 	movi	r2,-1
   5801c:	f800283a 	ret
   58020:	403fe626 	beq	r8,zero,57fbc <__alt_data_end+0xfffd97bc>
   58024:	003ff706 	br	58004 <__alt_data_end+0xfffd9804>
   58028:	18bffa16 	blt	r3,r2,58014 <__alt_data_end+0xfffd9814>
   5802c:	10c00216 	blt	r2,r3,58038 <__gesf2+0xac>
   58030:	323ff836 	bltu	r6,r8,58014 <__alt_data_end+0xfffd9814>
   58034:	4180022e 	bgeu	r8,r6,58040 <__gesf2+0xb4>
   58038:	203fef1e 	bne	r4,zero,57ff8 <__alt_data_end+0xfffd97f8>
   5803c:	003ff606 	br	58018 <__alt_data_end+0xfffd9818>
   58040:	0005883a 	mov	r2,zero
   58044:	f800283a 	ret

00058048 <__lesf2>:
   58048:	2004d5fa 	srli	r2,r4,23
   5804c:	280cd5fa 	srli	r6,r5,23
   58050:	00c02034 	movhi	r3,128
   58054:	18ffffc4 	addi	r3,r3,-1
   58058:	10803fcc 	andi	r2,r2,255
   5805c:	01c03fc4 	movi	r7,255
   58060:	1910703a 	and	r8,r3,r4
   58064:	31803fcc 	andi	r6,r6,255
   58068:	1946703a 	and	r3,r3,r5
   5806c:	2008d7fa 	srli	r4,r4,31
   58070:	280ad7fa 	srli	r5,r5,31
   58074:	11c01b26 	beq	r2,r7,580e4 <__lesf2+0x9c>
   58078:	01c03fc4 	movi	r7,255
   5807c:	31c01126 	beq	r6,r7,580c4 <__lesf2+0x7c>
   58080:	1000071e 	bne	r2,zero,580a0 <__lesf2+0x58>
   58084:	400f003a 	cmpeq	r7,r8,zero
   58088:	21003fcc 	andi	r4,r4,255
   5808c:	3000081e 	bne	r6,zero,580b0 <__lesf2+0x68>
   58090:	1800071e 	bne	r3,zero,580b0 <__lesf2+0x68>
   58094:	0005883a 	mov	r2,zero
   58098:	40000f1e 	bne	r8,zero,580d8 <__lesf2+0x90>
   5809c:	f800283a 	ret
   580a0:	21003fcc 	andi	r4,r4,255
   580a4:	30000a1e 	bne	r6,zero,580d0 <__lesf2+0x88>
   580a8:	18000b26 	beq	r3,zero,580d8 <__lesf2+0x90>
   580ac:	000f883a 	mov	r7,zero
   580b0:	29403fcc 	andi	r5,r5,255
   580b4:	38000726 	beq	r7,zero,580d4 <__lesf2+0x8c>
   580b8:	28000826 	beq	r5,zero,580dc <__lesf2+0x94>
   580bc:	00800044 	movi	r2,1
   580c0:	f800283a 	ret
   580c4:	183fee26 	beq	r3,zero,58080 <__alt_data_end+0xfffd9880>
   580c8:	00800084 	movi	r2,2
   580cc:	f800283a 	ret
   580d0:	29403fcc 	andi	r5,r5,255
   580d4:	21400626 	beq	r4,r5,580f0 <__lesf2+0xa8>
   580d8:	203ff826 	beq	r4,zero,580bc <__alt_data_end+0xfffd98bc>
   580dc:	00bfffc4 	movi	r2,-1
   580e0:	f800283a 	ret
   580e4:	403fe426 	beq	r8,zero,58078 <__alt_data_end+0xfffd9878>
   580e8:	00800084 	movi	r2,2
   580ec:	f800283a 	ret
   580f0:	30bff916 	blt	r6,r2,580d8 <__alt_data_end+0xfffd98d8>
   580f4:	11800216 	blt	r2,r6,58100 <__lesf2+0xb8>
   580f8:	1a3ff736 	bltu	r3,r8,580d8 <__alt_data_end+0xfffd98d8>
   580fc:	40c0022e 	bgeu	r8,r3,58108 <__lesf2+0xc0>
   58100:	203fee1e 	bne	r4,zero,580bc <__alt_data_end+0xfffd98bc>
   58104:	003ff506 	br	580dc <__alt_data_end+0xfffd98dc>
   58108:	0005883a 	mov	r2,zero
   5810c:	f800283a 	ret

00058110 <__eqdf2>:
   58110:	2804d53a 	srli	r2,r5,20
   58114:	3806d53a 	srli	r3,r7,20
   58118:	02000434 	movhi	r8,16
   5811c:	423fffc4 	addi	r8,r8,-1
   58120:	1081ffcc 	andi	r2,r2,2047
   58124:	0281ffc4 	movi	r10,2047
   58128:	2a12703a 	and	r9,r5,r8
   5812c:	18c1ffcc 	andi	r3,r3,2047
   58130:	3a10703a 	and	r8,r7,r8
   58134:	280ad7fa 	srli	r5,r5,31
   58138:	380ed7fa 	srli	r7,r7,31
   5813c:	12801026 	beq	r2,r10,58180 <__eqdf2+0x70>
   58140:	0281ffc4 	movi	r10,2047
   58144:	1a800a26 	beq	r3,r10,58170 <__eqdf2+0x60>
   58148:	10c00226 	beq	r2,r3,58154 <__eqdf2+0x44>
   5814c:	00800044 	movi	r2,1
   58150:	f800283a 	ret
   58154:	4a3ffd1e 	bne	r9,r8,5814c <__alt_data_end+0xfffd994c>
   58158:	21bffc1e 	bne	r4,r6,5814c <__alt_data_end+0xfffd994c>
   5815c:	29c00c26 	beq	r5,r7,58190 <__eqdf2+0x80>
   58160:	103ffa1e 	bne	r2,zero,5814c <__alt_data_end+0xfffd994c>
   58164:	2244b03a 	or	r2,r4,r9
   58168:	1004c03a 	cmpne	r2,r2,zero
   5816c:	f800283a 	ret
   58170:	3214b03a 	or	r10,r6,r8
   58174:	503ff426 	beq	r10,zero,58148 <__alt_data_end+0xfffd9948>
   58178:	00800044 	movi	r2,1
   5817c:	f800283a 	ret
   58180:	2254b03a 	or	r10,r4,r9
   58184:	503fee26 	beq	r10,zero,58140 <__alt_data_end+0xfffd9940>
   58188:	00800044 	movi	r2,1
   5818c:	f800283a 	ret
   58190:	0005883a 	mov	r2,zero
   58194:	f800283a 	ret

00058198 <__truncdfsf2>:
   58198:	2810d53a 	srli	r8,r5,20
   5819c:	01c00434 	movhi	r7,16
   581a0:	39ffffc4 	addi	r7,r7,-1
   581a4:	29ce703a 	and	r7,r5,r7
   581a8:	4201ffcc 	andi	r8,r8,2047
   581ac:	380e90fa 	slli	r7,r7,3
   581b0:	200cd77a 	srli	r6,r4,29
   581b4:	42400044 	addi	r9,r8,1
   581b8:	4a41ffcc 	andi	r9,r9,2047
   581bc:	00c00044 	movi	r3,1
   581c0:	280ad7fa 	srli	r5,r5,31
   581c4:	31ceb03a 	or	r7,r6,r7
   581c8:	200490fa 	slli	r2,r4,3
   581cc:	1a40230e 	bge	r3,r9,5825c <__truncdfsf2+0xc4>
   581d0:	40ff2004 	addi	r3,r8,-896
   581d4:	01803f84 	movi	r6,254
   581d8:	30c01516 	blt	r6,r3,58230 <__truncdfsf2+0x98>
   581dc:	00c0380e 	bge	zero,r3,582c0 <__truncdfsf2+0x128>
   581e0:	200c91ba 	slli	r6,r4,6
   581e4:	380e90fa 	slli	r7,r7,3
   581e8:	1004d77a 	srli	r2,r2,29
   581ec:	300cc03a 	cmpne	r6,r6,zero
   581f0:	31ccb03a 	or	r6,r6,r7
   581f4:	308cb03a 	or	r6,r6,r2
   581f8:	308001cc 	andi	r2,r6,7
   581fc:	10000426 	beq	r2,zero,58210 <__truncdfsf2+0x78>
   58200:	308003cc 	andi	r2,r6,15
   58204:	01000104 	movi	r4,4
   58208:	11000126 	beq	r2,r4,58210 <__truncdfsf2+0x78>
   5820c:	31800104 	addi	r6,r6,4
   58210:	3081002c 	andhi	r2,r6,1024
   58214:	10001626 	beq	r2,zero,58270 <__truncdfsf2+0xd8>
   58218:	18c00044 	addi	r3,r3,1
   5821c:	00803fc4 	movi	r2,255
   58220:	18800326 	beq	r3,r2,58230 <__truncdfsf2+0x98>
   58224:	300c91ba 	slli	r6,r6,6
   58228:	300cd27a 	srli	r6,r6,9
   5822c:	00000206 	br	58238 <__truncdfsf2+0xa0>
   58230:	00ffffc4 	movi	r3,-1
   58234:	000d883a 	mov	r6,zero
   58238:	18c03fcc 	andi	r3,r3,255
   5823c:	180895fa 	slli	r4,r3,23
   58240:	00c02034 	movhi	r3,128
   58244:	280a97fa 	slli	r5,r5,31
   58248:	18ffffc4 	addi	r3,r3,-1
   5824c:	30c6703a 	and	r3,r6,r3
   58250:	1906b03a 	or	r3,r3,r4
   58254:	1944b03a 	or	r2,r3,r5
   58258:	f800283a 	ret
   5825c:	40000b1e 	bne	r8,zero,5828c <__truncdfsf2+0xf4>
   58260:	388cb03a 	or	r6,r7,r2
   58264:	0007883a 	mov	r3,zero
   58268:	30000426 	beq	r6,zero,5827c <__truncdfsf2+0xe4>
   5826c:	01800144 	movi	r6,5
   58270:	00803fc4 	movi	r2,255
   58274:	300cd0fa 	srli	r6,r6,3
   58278:	18800a26 	beq	r3,r2,582a4 <__truncdfsf2+0x10c>
   5827c:	00802034 	movhi	r2,128
   58280:	10bfffc4 	addi	r2,r2,-1
   58284:	308c703a 	and	r6,r6,r2
   58288:	003feb06 	br	58238 <__alt_data_end+0xfffd9a38>
   5828c:	3888b03a 	or	r4,r7,r2
   58290:	203fe726 	beq	r4,zero,58230 <__alt_data_end+0xfffd9a30>
   58294:	380c90fa 	slli	r6,r7,3
   58298:	00c03fc4 	movi	r3,255
   5829c:	31808034 	orhi	r6,r6,512
   582a0:	003fd506 	br	581f8 <__alt_data_end+0xfffd99f8>
   582a4:	303fe226 	beq	r6,zero,58230 <__alt_data_end+0xfffd9a30>
   582a8:	00802034 	movhi	r2,128
   582ac:	31801034 	orhi	r6,r6,64
   582b0:	10bfffc4 	addi	r2,r2,-1
   582b4:	00ffffc4 	movi	r3,-1
   582b8:	308c703a 	and	r6,r6,r2
   582bc:	003fde06 	br	58238 <__alt_data_end+0xfffd9a38>
   582c0:	013ffa44 	movi	r4,-23
   582c4:	19000e16 	blt	r3,r4,58300 <__truncdfsf2+0x168>
   582c8:	01000784 	movi	r4,30
   582cc:	20c9c83a 	sub	r4,r4,r3
   582d0:	018007c4 	movi	r6,31
   582d4:	39c02034 	orhi	r7,r7,128
   582d8:	31000b16 	blt	r6,r4,58308 <__truncdfsf2+0x170>
   582dc:	423f2084 	addi	r8,r8,-894
   582e0:	120c983a 	sll	r6,r2,r8
   582e4:	3a0e983a 	sll	r7,r7,r8
   582e8:	1104d83a 	srl	r2,r2,r4
   582ec:	300cc03a 	cmpne	r6,r6,zero
   582f0:	31ceb03a 	or	r7,r6,r7
   582f4:	388cb03a 	or	r6,r7,r2
   582f8:	0007883a 	mov	r3,zero
   582fc:	003fbe06 	br	581f8 <__alt_data_end+0xfffd99f8>
   58300:	0007883a 	mov	r3,zero
   58304:	003fd906 	br	5826c <__alt_data_end+0xfffd9a6c>
   58308:	01bfff84 	movi	r6,-2
   5830c:	30cdc83a 	sub	r6,r6,r3
   58310:	00c00804 	movi	r3,32
   58314:	398cd83a 	srl	r6,r7,r6
   58318:	20c00726 	beq	r4,r3,58338 <__truncdfsf2+0x1a0>
   5831c:	423f2884 	addi	r8,r8,-862
   58320:	3a0e983a 	sll	r7,r7,r8
   58324:	3884b03a 	or	r2,r7,r2
   58328:	1004c03a 	cmpne	r2,r2,zero
   5832c:	118cb03a 	or	r6,r2,r6
   58330:	0007883a 	mov	r3,zero
   58334:	003fb006 	br	581f8 <__alt_data_end+0xfffd99f8>
   58338:	000f883a 	mov	r7,zero
   5833c:	003ff906 	br	58324 <__alt_data_end+0xfffd9b24>

00058340 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   58340:	defffe04 	addi	sp,sp,-8
   58344:	dfc00115 	stw	ra,4(sp)
   58348:	df000015 	stw	fp,0(sp)
   5834c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   58350:	d0a00d17 	ldw	r2,-32716(gp)
   58354:	10000326 	beq	r2,zero,58364 <alt_get_errno+0x24>
   58358:	d0a00d17 	ldw	r2,-32716(gp)
   5835c:	103ee83a 	callr	r2
   58360:	00000106 	br	58368 <alt_get_errno+0x28>
   58364:	d0a76504 	addi	r2,gp,-25196
}
   58368:	e037883a 	mov	sp,fp
   5836c:	dfc00117 	ldw	ra,4(sp)
   58370:	df000017 	ldw	fp,0(sp)
   58374:	dec00204 	addi	sp,sp,8
   58378:	f800283a 	ret

0005837c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   5837c:	defffb04 	addi	sp,sp,-20
   58380:	dfc00415 	stw	ra,16(sp)
   58384:	df000315 	stw	fp,12(sp)
   58388:	df000304 	addi	fp,sp,12
   5838c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   58390:	e0bfff17 	ldw	r2,-4(fp)
   58394:	10000616 	blt	r2,zero,583b0 <close+0x34>
   58398:	e0bfff17 	ldw	r2,-4(fp)
   5839c:	10c00324 	muli	r3,r2,12
   583a0:	008001b4 	movhi	r2,6
   583a4:	10b0d604 	addi	r2,r2,-15528
   583a8:	1885883a 	add	r2,r3,r2
   583ac:	00000106 	br	583b4 <close+0x38>
   583b0:	0005883a 	mov	r2,zero
   583b4:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   583b8:	e0bffd17 	ldw	r2,-12(fp)
   583bc:	10001926 	beq	r2,zero,58424 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   583c0:	e0bffd17 	ldw	r2,-12(fp)
   583c4:	10800017 	ldw	r2,0(r2)
   583c8:	10800417 	ldw	r2,16(r2)
   583cc:	10000626 	beq	r2,zero,583e8 <close+0x6c>
   583d0:	e0bffd17 	ldw	r2,-12(fp)
   583d4:	10800017 	ldw	r2,0(r2)
   583d8:	10800417 	ldw	r2,16(r2)
   583dc:	e13ffd17 	ldw	r4,-12(fp)
   583e0:	103ee83a 	callr	r2
   583e4:	00000106 	br	583ec <close+0x70>
   583e8:	0005883a 	mov	r2,zero
   583ec:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   583f0:	e13fff17 	ldw	r4,-4(fp)
   583f4:	0058a3c0 	call	58a3c <alt_release_fd>
    if (rval < 0)
   583f8:	e0bffe17 	ldw	r2,-8(fp)
   583fc:	1000070e 	bge	r2,zero,5841c <close+0xa0>
    {
      ALT_ERRNO = -rval;
   58400:	00583400 	call	58340 <alt_get_errno>
   58404:	1007883a 	mov	r3,r2
   58408:	e0bffe17 	ldw	r2,-8(fp)
   5840c:	0085c83a 	sub	r2,zero,r2
   58410:	18800015 	stw	r2,0(r3)
      return -1;
   58414:	00bfffc4 	movi	r2,-1
   58418:	00000706 	br	58438 <close+0xbc>
    }
    return 0;
   5841c:	0005883a 	mov	r2,zero
   58420:	00000506 	br	58438 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   58424:	00583400 	call	58340 <alt_get_errno>
   58428:	1007883a 	mov	r3,r2
   5842c:	00801444 	movi	r2,81
   58430:	18800015 	stw	r2,0(r3)
    return -1;
   58434:	00bfffc4 	movi	r2,-1
  }
}
   58438:	e037883a 	mov	sp,fp
   5843c:	dfc00117 	ldw	ra,4(sp)
   58440:	df000017 	ldw	fp,0(sp)
   58444:	dec00204 	addi	sp,sp,8
   58448:	f800283a 	ret

0005844c <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   5844c:	defffc04 	addi	sp,sp,-16
   58450:	df000315 	stw	fp,12(sp)
   58454:	df000304 	addi	fp,sp,12
   58458:	e13ffd15 	stw	r4,-12(fp)
   5845c:	e17ffe15 	stw	r5,-8(fp)
   58460:	e1bfff15 	stw	r6,-4(fp)
  return len;
   58464:	e0bfff17 	ldw	r2,-4(fp)
}
   58468:	e037883a 	mov	sp,fp
   5846c:	df000017 	ldw	fp,0(sp)
   58470:	dec00104 	addi	sp,sp,4
   58474:	f800283a 	ret

00058478 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   58478:	defffe04 	addi	sp,sp,-8
   5847c:	dfc00115 	stw	ra,4(sp)
   58480:	df000015 	stw	fp,0(sp)
   58484:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   58488:	d0a00d17 	ldw	r2,-32716(gp)
   5848c:	10000326 	beq	r2,zero,5849c <alt_get_errno+0x24>
   58490:	d0a00d17 	ldw	r2,-32716(gp)
   58494:	103ee83a 	callr	r2
   58498:	00000106 	br	584a0 <alt_get_errno+0x28>
   5849c:	d0a76504 	addi	r2,gp,-25196
}
   584a0:	e037883a 	mov	sp,fp
   584a4:	dfc00117 	ldw	ra,4(sp)
   584a8:	df000017 	ldw	fp,0(sp)
   584ac:	dec00204 	addi	sp,sp,8
   584b0:	f800283a 	ret

000584b4 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   584b4:	defffb04 	addi	sp,sp,-20
   584b8:	dfc00415 	stw	ra,16(sp)
   584bc:	df000315 	stw	fp,12(sp)
   584c0:	df000304 	addi	fp,sp,12
   584c4:	e13ffe15 	stw	r4,-8(fp)
   584c8:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   584cc:	e0bffe17 	ldw	r2,-8(fp)
   584d0:	10000616 	blt	r2,zero,584ec <fstat+0x38>
   584d4:	e0bffe17 	ldw	r2,-8(fp)
   584d8:	10c00324 	muli	r3,r2,12
   584dc:	008001b4 	movhi	r2,6
   584e0:	10b0d604 	addi	r2,r2,-15528
   584e4:	1885883a 	add	r2,r3,r2
   584e8:	00000106 	br	584f0 <fstat+0x3c>
   584ec:	0005883a 	mov	r2,zero
   584f0:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   584f4:	e0bffd17 	ldw	r2,-12(fp)
   584f8:	10001026 	beq	r2,zero,5853c <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   584fc:	e0bffd17 	ldw	r2,-12(fp)
   58500:	10800017 	ldw	r2,0(r2)
   58504:	10800817 	ldw	r2,32(r2)
   58508:	10000726 	beq	r2,zero,58528 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   5850c:	e0bffd17 	ldw	r2,-12(fp)
   58510:	10800017 	ldw	r2,0(r2)
   58514:	10800817 	ldw	r2,32(r2)
   58518:	e17fff17 	ldw	r5,-4(fp)
   5851c:	e13ffd17 	ldw	r4,-12(fp)
   58520:	103ee83a 	callr	r2
   58524:	00000a06 	br	58550 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   58528:	e0bfff17 	ldw	r2,-4(fp)
   5852c:	00c80004 	movi	r3,8192
   58530:	10c00115 	stw	r3,4(r2)
      return 0;
   58534:	0005883a 	mov	r2,zero
   58538:	00000506 	br	58550 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   5853c:	00584780 	call	58478 <alt_get_errno>
   58540:	1007883a 	mov	r3,r2
   58544:	00801444 	movi	r2,81
   58548:	18800015 	stw	r2,0(r3)
    return -1;
   5854c:	00bfffc4 	movi	r2,-1
  }
}
   58550:	e037883a 	mov	sp,fp
   58554:	dfc00117 	ldw	ra,4(sp)
   58558:	df000017 	ldw	fp,0(sp)
   5855c:	dec00204 	addi	sp,sp,8
   58560:	f800283a 	ret

00058564 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   58564:	defffe04 	addi	sp,sp,-8
   58568:	dfc00115 	stw	ra,4(sp)
   5856c:	df000015 	stw	fp,0(sp)
   58570:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   58574:	d0a00d17 	ldw	r2,-32716(gp)
   58578:	10000326 	beq	r2,zero,58588 <alt_get_errno+0x24>
   5857c:	d0a00d17 	ldw	r2,-32716(gp)
   58580:	103ee83a 	callr	r2
   58584:	00000106 	br	5858c <alt_get_errno+0x28>
   58588:	d0a76504 	addi	r2,gp,-25196
}
   5858c:	e037883a 	mov	sp,fp
   58590:	dfc00117 	ldw	ra,4(sp)
   58594:	df000017 	ldw	fp,0(sp)
   58598:	dec00204 	addi	sp,sp,8
   5859c:	f800283a 	ret

000585a0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   585a0:	deffed04 	addi	sp,sp,-76
   585a4:	dfc01215 	stw	ra,72(sp)
   585a8:	df001115 	stw	fp,68(sp)
   585ac:	df001104 	addi	fp,sp,68
   585b0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   585b4:	e0bfff17 	ldw	r2,-4(fp)
   585b8:	10000616 	blt	r2,zero,585d4 <isatty+0x34>
   585bc:	e0bfff17 	ldw	r2,-4(fp)
   585c0:	10c00324 	muli	r3,r2,12
   585c4:	008001b4 	movhi	r2,6
   585c8:	10b0d604 	addi	r2,r2,-15528
   585cc:	1885883a 	add	r2,r3,r2
   585d0:	00000106 	br	585d8 <isatty+0x38>
   585d4:	0005883a 	mov	r2,zero
   585d8:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   585dc:	e0bfef17 	ldw	r2,-68(fp)
   585e0:	10000e26 	beq	r2,zero,5861c <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   585e4:	e0bfef17 	ldw	r2,-68(fp)
   585e8:	10800017 	ldw	r2,0(r2)
   585ec:	10800817 	ldw	r2,32(r2)
   585f0:	1000021e 	bne	r2,zero,585fc <isatty+0x5c>
    {
      return 1;
   585f4:	00800044 	movi	r2,1
   585f8:	00000d06 	br	58630 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   585fc:	e0bff004 	addi	r2,fp,-64
   58600:	100b883a 	mov	r5,r2
   58604:	e13fff17 	ldw	r4,-4(fp)
   58608:	00584b40 	call	584b4 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   5860c:	e0bff117 	ldw	r2,-60(fp)
   58610:	10880020 	cmpeqi	r2,r2,8192
   58614:	10803fcc 	andi	r2,r2,255
   58618:	00000506 	br	58630 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   5861c:	00585640 	call	58564 <alt_get_errno>
   58620:	1007883a 	mov	r3,r2
   58624:	00801444 	movi	r2,81
   58628:	18800015 	stw	r2,0(r3)
    return 0;
   5862c:	0005883a 	mov	r2,zero
  }
}
   58630:	e037883a 	mov	sp,fp
   58634:	dfc00117 	ldw	ra,4(sp)
   58638:	df000017 	ldw	fp,0(sp)
   5863c:	dec00204 	addi	sp,sp,8
   58640:	f800283a 	ret

00058644 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   58644:	defffc04 	addi	sp,sp,-16
   58648:	df000315 	stw	fp,12(sp)
   5864c:	df000304 	addi	fp,sp,12
   58650:	e13ffd15 	stw	r4,-12(fp)
   58654:	e17ffe15 	stw	r5,-8(fp)
   58658:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   5865c:	e0fffe17 	ldw	r3,-8(fp)
   58660:	e0bffd17 	ldw	r2,-12(fp)
   58664:	18800c26 	beq	r3,r2,58698 <alt_load_section+0x54>
  {
    while( to != end )
   58668:	00000806 	br	5868c <alt_load_section+0x48>
    {
      *to++ = *from++;
   5866c:	e0bffe17 	ldw	r2,-8(fp)
   58670:	10c00104 	addi	r3,r2,4
   58674:	e0fffe15 	stw	r3,-8(fp)
   58678:	e0fffd17 	ldw	r3,-12(fp)
   5867c:	19000104 	addi	r4,r3,4
   58680:	e13ffd15 	stw	r4,-12(fp)
   58684:	18c00017 	ldw	r3,0(r3)
   58688:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   5868c:	e0fffe17 	ldw	r3,-8(fp)
   58690:	e0bfff17 	ldw	r2,-4(fp)
   58694:	18bff51e 	bne	r3,r2,5866c <__alt_data_end+0xfffd9e6c>
    {
      *to++ = *from++;
    }
  }
}
   58698:	0001883a 	nop
   5869c:	e037883a 	mov	sp,fp
   586a0:	df000017 	ldw	fp,0(sp)
   586a4:	dec00104 	addi	sp,sp,4
   586a8:	f800283a 	ret

000586ac <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   586ac:	defffe04 	addi	sp,sp,-8
   586b0:	dfc00115 	stw	ra,4(sp)
   586b4:	df000015 	stw	fp,0(sp)
   586b8:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   586bc:	018001b4 	movhi	r6,6
   586c0:	31b56004 	addi	r6,r6,-10880
   586c4:	014001b4 	movhi	r5,6
   586c8:	296e1304 	addi	r5,r5,-18356
   586cc:	010001b4 	movhi	r4,6
   586d0:	21356004 	addi	r4,r4,-10880
   586d4:	00586440 	call	58644 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   586d8:	01800134 	movhi	r6,4
   586dc:	31807004 	addi	r6,r6,448
   586e0:	01400134 	movhi	r5,4
   586e4:	29400804 	addi	r5,r5,32
   586e8:	01000134 	movhi	r4,4
   586ec:	21000804 	addi	r4,r4,32
   586f0:	00586440 	call	58644 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   586f4:	018001b4 	movhi	r6,6
   586f8:	31ae1304 	addi	r6,r6,-18356
   586fc:	014001b4 	movhi	r5,6
   58700:	296af604 	addi	r5,r5,-21544
   58704:	010001b4 	movhi	r4,6
   58708:	212af604 	addi	r4,r4,-21544
   5870c:	00586440 	call	58644 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   58710:	0059b600 	call	59b60 <alt_dcache_flush_all>
  alt_icache_flush_all();
   58714:	0059d480 	call	59d48 <alt_icache_flush_all>
}
   58718:	0001883a 	nop
   5871c:	e037883a 	mov	sp,fp
   58720:	dfc00117 	ldw	ra,4(sp)
   58724:	df000017 	ldw	fp,0(sp)
   58728:	dec00204 	addi	sp,sp,8
   5872c:	f800283a 	ret

00058730 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   58730:	defffe04 	addi	sp,sp,-8
   58734:	dfc00115 	stw	ra,4(sp)
   58738:	df000015 	stw	fp,0(sp)
   5873c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   58740:	d0a00d17 	ldw	r2,-32716(gp)
   58744:	10000326 	beq	r2,zero,58754 <alt_get_errno+0x24>
   58748:	d0a00d17 	ldw	r2,-32716(gp)
   5874c:	103ee83a 	callr	r2
   58750:	00000106 	br	58758 <alt_get_errno+0x28>
   58754:	d0a76504 	addi	r2,gp,-25196
}
   58758:	e037883a 	mov	sp,fp
   5875c:	dfc00117 	ldw	ra,4(sp)
   58760:	df000017 	ldw	fp,0(sp)
   58764:	dec00204 	addi	sp,sp,8
   58768:	f800283a 	ret

0005876c <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   5876c:	defff904 	addi	sp,sp,-28
   58770:	dfc00615 	stw	ra,24(sp)
   58774:	df000515 	stw	fp,20(sp)
   58778:	df000504 	addi	fp,sp,20
   5877c:	e13ffd15 	stw	r4,-12(fp)
   58780:	e17ffe15 	stw	r5,-8(fp)
   58784:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   58788:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   5878c:	e0bffd17 	ldw	r2,-12(fp)
   58790:	10000616 	blt	r2,zero,587ac <lseek+0x40>
   58794:	e0bffd17 	ldw	r2,-12(fp)
   58798:	10c00324 	muli	r3,r2,12
   5879c:	008001b4 	movhi	r2,6
   587a0:	10b0d604 	addi	r2,r2,-15528
   587a4:	1885883a 	add	r2,r3,r2
   587a8:	00000106 	br	587b0 <lseek+0x44>
   587ac:	0005883a 	mov	r2,zero
   587b0:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   587b4:	e0bffc17 	ldw	r2,-16(fp)
   587b8:	10001026 	beq	r2,zero,587fc <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   587bc:	e0bffc17 	ldw	r2,-16(fp)
   587c0:	10800017 	ldw	r2,0(r2)
   587c4:	10800717 	ldw	r2,28(r2)
   587c8:	10000926 	beq	r2,zero,587f0 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   587cc:	e0bffc17 	ldw	r2,-16(fp)
   587d0:	10800017 	ldw	r2,0(r2)
   587d4:	10800717 	ldw	r2,28(r2)
   587d8:	e1bfff17 	ldw	r6,-4(fp)
   587dc:	e17ffe17 	ldw	r5,-8(fp)
   587e0:	e13ffc17 	ldw	r4,-16(fp)
   587e4:	103ee83a 	callr	r2
   587e8:	e0bffb15 	stw	r2,-20(fp)
   587ec:	00000506 	br	58804 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   587f0:	00bfde84 	movi	r2,-134
   587f4:	e0bffb15 	stw	r2,-20(fp)
   587f8:	00000206 	br	58804 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   587fc:	00bfebc4 	movi	r2,-81
   58800:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   58804:	e0bffb17 	ldw	r2,-20(fp)
   58808:	1000070e 	bge	r2,zero,58828 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   5880c:	00587300 	call	58730 <alt_get_errno>
   58810:	1007883a 	mov	r3,r2
   58814:	e0bffb17 	ldw	r2,-20(fp)
   58818:	0085c83a 	sub	r2,zero,r2
   5881c:	18800015 	stw	r2,0(r3)
    rc = -1;
   58820:	00bfffc4 	movi	r2,-1
   58824:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   58828:	e0bffb17 	ldw	r2,-20(fp)
}
   5882c:	e037883a 	mov	sp,fp
   58830:	dfc00117 	ldw	ra,4(sp)
   58834:	df000017 	ldw	fp,0(sp)
   58838:	dec00204 	addi	sp,sp,8
   5883c:	f800283a 	ret

00058840 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   58840:	defffd04 	addi	sp,sp,-12
   58844:	dfc00215 	stw	ra,8(sp)
   58848:	df000115 	stw	fp,4(sp)
   5884c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   58850:	0009883a 	mov	r4,zero
   58854:	0058ce80 	call	58ce8 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   58858:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   5885c:	0058d200 	call	58d20 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   58860:	018001b4 	movhi	r6,6
   58864:	31ae0b04 	addi	r6,r6,-18388
   58868:	014001b4 	movhi	r5,6
   5886c:	296e0b04 	addi	r5,r5,-18388
   58870:	010001b4 	movhi	r4,6
   58874:	212e0b04 	addi	r4,r4,-18388
   58878:	005a0e00 	call	5a0e0 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   5887c:	0059c880 	call	59c88 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   58880:	010001b4 	movhi	r4,6
   58884:	21273a04 	addi	r4,r4,-25368
   58888:	005a8440 	call	5a844 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   5888c:	d0a76617 	ldw	r2,-25192(gp)
   58890:	d0e76717 	ldw	r3,-25188(gp)
   58894:	d1276817 	ldw	r4,-25184(gp)
   58898:	200d883a 	mov	r6,r4
   5889c:	180b883a 	mov	r5,r3
   588a0:	1009883a 	mov	r4,r2
   588a4:	0040fb80 	call	40fb8 <main>
   588a8:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   588ac:	01000044 	movi	r4,1
   588b0:	005837c0 	call	5837c <close>
  exit (result);
   588b4:	e13fff17 	ldw	r4,-4(fp)
   588b8:	005a8580 	call	5a858 <exit>

000588bc <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   588bc:	defffe04 	addi	sp,sp,-8
   588c0:	df000115 	stw	fp,4(sp)
   588c4:	df000104 	addi	fp,sp,4
   588c8:	e13fff15 	stw	r4,-4(fp)
}
   588cc:	0001883a 	nop
   588d0:	e037883a 	mov	sp,fp
   588d4:	df000017 	ldw	fp,0(sp)
   588d8:	dec00104 	addi	sp,sp,4
   588dc:	f800283a 	ret

000588e0 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   588e0:	defffe04 	addi	sp,sp,-8
   588e4:	df000115 	stw	fp,4(sp)
   588e8:	df000104 	addi	fp,sp,4
   588ec:	e13fff15 	stw	r4,-4(fp)
}
   588f0:	0001883a 	nop
   588f4:	e037883a 	mov	sp,fp
   588f8:	df000017 	ldw	fp,0(sp)
   588fc:	dec00104 	addi	sp,sp,4
   58900:	f800283a 	ret

00058904 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   58904:	defffe04 	addi	sp,sp,-8
   58908:	dfc00115 	stw	ra,4(sp)
   5890c:	df000015 	stw	fp,0(sp)
   58910:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   58914:	d0a00d17 	ldw	r2,-32716(gp)
   58918:	10000326 	beq	r2,zero,58928 <alt_get_errno+0x24>
   5891c:	d0a00d17 	ldw	r2,-32716(gp)
   58920:	103ee83a 	callr	r2
   58924:	00000106 	br	5892c <alt_get_errno+0x28>
   58928:	d0a76504 	addi	r2,gp,-25196
}
   5892c:	e037883a 	mov	sp,fp
   58930:	dfc00117 	ldw	ra,4(sp)
   58934:	df000017 	ldw	fp,0(sp)
   58938:	dec00204 	addi	sp,sp,8
   5893c:	f800283a 	ret

00058940 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   58940:	defff904 	addi	sp,sp,-28
   58944:	dfc00615 	stw	ra,24(sp)
   58948:	df000515 	stw	fp,20(sp)
   5894c:	df000504 	addi	fp,sp,20
   58950:	e13ffd15 	stw	r4,-12(fp)
   58954:	e17ffe15 	stw	r5,-8(fp)
   58958:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   5895c:	e0bffd17 	ldw	r2,-12(fp)
   58960:	10000616 	blt	r2,zero,5897c <read+0x3c>
   58964:	e0bffd17 	ldw	r2,-12(fp)
   58968:	10c00324 	muli	r3,r2,12
   5896c:	008001b4 	movhi	r2,6
   58970:	10b0d604 	addi	r2,r2,-15528
   58974:	1885883a 	add	r2,r3,r2
   58978:	00000106 	br	58980 <read+0x40>
   5897c:	0005883a 	mov	r2,zero
   58980:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   58984:	e0bffb17 	ldw	r2,-20(fp)
   58988:	10002226 	beq	r2,zero,58a14 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   5898c:	e0bffb17 	ldw	r2,-20(fp)
   58990:	10800217 	ldw	r2,8(r2)
   58994:	108000cc 	andi	r2,r2,3
   58998:	10800060 	cmpeqi	r2,r2,1
   5899c:	1000181e 	bne	r2,zero,58a00 <read+0xc0>
        (fd->dev->read))
   589a0:	e0bffb17 	ldw	r2,-20(fp)
   589a4:	10800017 	ldw	r2,0(r2)
   589a8:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   589ac:	10001426 	beq	r2,zero,58a00 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   589b0:	e0bffb17 	ldw	r2,-20(fp)
   589b4:	10800017 	ldw	r2,0(r2)
   589b8:	10800517 	ldw	r2,20(r2)
   589bc:	e0ffff17 	ldw	r3,-4(fp)
   589c0:	180d883a 	mov	r6,r3
   589c4:	e17ffe17 	ldw	r5,-8(fp)
   589c8:	e13ffb17 	ldw	r4,-20(fp)
   589cc:	103ee83a 	callr	r2
   589d0:	e0bffc15 	stw	r2,-16(fp)
   589d4:	e0bffc17 	ldw	r2,-16(fp)
   589d8:	1000070e 	bge	r2,zero,589f8 <read+0xb8>
        {
          ALT_ERRNO = -rval;
   589dc:	00589040 	call	58904 <alt_get_errno>
   589e0:	1007883a 	mov	r3,r2
   589e4:	e0bffc17 	ldw	r2,-16(fp)
   589e8:	0085c83a 	sub	r2,zero,r2
   589ec:	18800015 	stw	r2,0(r3)
          return -1;
   589f0:	00bfffc4 	movi	r2,-1
   589f4:	00000c06 	br	58a28 <read+0xe8>
        }
        return rval;
   589f8:	e0bffc17 	ldw	r2,-16(fp)
   589fc:	00000a06 	br	58a28 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
   58a00:	00589040 	call	58904 <alt_get_errno>
   58a04:	1007883a 	mov	r3,r2
   58a08:	00800344 	movi	r2,13
   58a0c:	18800015 	stw	r2,0(r3)
   58a10:	00000406 	br	58a24 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   58a14:	00589040 	call	58904 <alt_get_errno>
   58a18:	1007883a 	mov	r3,r2
   58a1c:	00801444 	movi	r2,81
   58a20:	18800015 	stw	r2,0(r3)
  }
  return -1;
   58a24:	00bfffc4 	movi	r2,-1
}
   58a28:	e037883a 	mov	sp,fp
   58a2c:	dfc00117 	ldw	ra,4(sp)
   58a30:	df000017 	ldw	fp,0(sp)
   58a34:	dec00204 	addi	sp,sp,8
   58a38:	f800283a 	ret

00058a3c <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   58a3c:	defffe04 	addi	sp,sp,-8
   58a40:	df000115 	stw	fp,4(sp)
   58a44:	df000104 	addi	fp,sp,4
   58a48:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   58a4c:	e0bfff17 	ldw	r2,-4(fp)
   58a50:	108000d0 	cmplti	r2,r2,3
   58a54:	10000d1e 	bne	r2,zero,58a8c <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
   58a58:	008001b4 	movhi	r2,6
   58a5c:	10b0d604 	addi	r2,r2,-15528
   58a60:	e0ffff17 	ldw	r3,-4(fp)
   58a64:	18c00324 	muli	r3,r3,12
   58a68:	10c5883a 	add	r2,r2,r3
   58a6c:	10800204 	addi	r2,r2,8
   58a70:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   58a74:	008001b4 	movhi	r2,6
   58a78:	10b0d604 	addi	r2,r2,-15528
   58a7c:	e0ffff17 	ldw	r3,-4(fp)
   58a80:	18c00324 	muli	r3,r3,12
   58a84:	10c5883a 	add	r2,r2,r3
   58a88:	10000015 	stw	zero,0(r2)
  }
}
   58a8c:	0001883a 	nop
   58a90:	e037883a 	mov	sp,fp
   58a94:	df000017 	ldw	fp,0(sp)
   58a98:	dec00104 	addi	sp,sp,4
   58a9c:	f800283a 	ret

00058aa0 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   58aa0:	defff904 	addi	sp,sp,-28
   58aa4:	df000615 	stw	fp,24(sp)
   58aa8:	df000604 	addi	fp,sp,24
   58aac:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   58ab0:	0005303a 	rdctl	r2,status
   58ab4:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   58ab8:	e0fffe17 	ldw	r3,-8(fp)
   58abc:	00bfff84 	movi	r2,-2
   58ac0:	1884703a 	and	r2,r3,r2
   58ac4:	1001703a 	wrctl	status,r2
  
  return context;
   58ac8:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   58acc:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   58ad0:	d0a00e17 	ldw	r2,-32712(gp)
   58ad4:	10c000c4 	addi	r3,r2,3
   58ad8:	00bfff04 	movi	r2,-4
   58adc:	1884703a 	and	r2,r3,r2
   58ae0:	d0a00e15 	stw	r2,-32712(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   58ae4:	d0e00e17 	ldw	r3,-32712(gp)
   58ae8:	e0bfff17 	ldw	r2,-4(fp)
   58aec:	1887883a 	add	r3,r3,r2
   58af0:	00800234 	movhi	r2,8
   58af4:	10ba0004 	addi	r2,r2,-6144
   58af8:	10c0062e 	bgeu	r2,r3,58b14 <sbrk+0x74>
   58afc:	e0bffb17 	ldw	r2,-20(fp)
   58b00:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   58b04:	e0bffa17 	ldw	r2,-24(fp)
   58b08:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   58b0c:	00bfffc4 	movi	r2,-1
   58b10:	00000b06 	br	58b40 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   58b14:	d0a00e17 	ldw	r2,-32712(gp)
   58b18:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   58b1c:	d0e00e17 	ldw	r3,-32712(gp)
   58b20:	e0bfff17 	ldw	r2,-4(fp)
   58b24:	1885883a 	add	r2,r3,r2
   58b28:	d0a00e15 	stw	r2,-32712(gp)
   58b2c:	e0bffb17 	ldw	r2,-20(fp)
   58b30:	e0bffc15 	stw	r2,-16(fp)
   58b34:	e0bffc17 	ldw	r2,-16(fp)
   58b38:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   58b3c:	e0bffd17 	ldw	r2,-12(fp)
} 
   58b40:	e037883a 	mov	sp,fp
   58b44:	df000017 	ldw	fp,0(sp)
   58b48:	dec00104 	addi	sp,sp,4
   58b4c:	f800283a 	ret

00058b50 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
   58b50:	defffd04 	addi	sp,sp,-12
   58b54:	dfc00215 	stw	ra,8(sp)
   58b58:	df000115 	stw	fp,4(sp)
   58b5c:	df000104 	addi	fp,sp,4
   58b60:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
   58b64:	e13fff17 	ldw	r4,-4(fp)
   58b68:	0059a080 	call	59a08 <alt_busy_sleep>
}
   58b6c:	e037883a 	mov	sp,fp
   58b70:	dfc00117 	ldw	ra,4(sp)
   58b74:	df000017 	ldw	fp,0(sp)
   58b78:	dec00204 	addi	sp,sp,8
   58b7c:	f800283a 	ret

00058b80 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   58b80:	defffe04 	addi	sp,sp,-8
   58b84:	dfc00115 	stw	ra,4(sp)
   58b88:	df000015 	stw	fp,0(sp)
   58b8c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   58b90:	d0a00d17 	ldw	r2,-32716(gp)
   58b94:	10000326 	beq	r2,zero,58ba4 <alt_get_errno+0x24>
   58b98:	d0a00d17 	ldw	r2,-32716(gp)
   58b9c:	103ee83a 	callr	r2
   58ba0:	00000106 	br	58ba8 <alt_get_errno+0x28>
   58ba4:	d0a76504 	addi	r2,gp,-25196
}
   58ba8:	e037883a 	mov	sp,fp
   58bac:	dfc00117 	ldw	ra,4(sp)
   58bb0:	df000017 	ldw	fp,0(sp)
   58bb4:	dec00204 	addi	sp,sp,8
   58bb8:	f800283a 	ret

00058bbc <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   58bbc:	defff904 	addi	sp,sp,-28
   58bc0:	dfc00615 	stw	ra,24(sp)
   58bc4:	df000515 	stw	fp,20(sp)
   58bc8:	df000504 	addi	fp,sp,20
   58bcc:	e13ffd15 	stw	r4,-12(fp)
   58bd0:	e17ffe15 	stw	r5,-8(fp)
   58bd4:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   58bd8:	e0bffd17 	ldw	r2,-12(fp)
   58bdc:	10000616 	blt	r2,zero,58bf8 <write+0x3c>
   58be0:	e0bffd17 	ldw	r2,-12(fp)
   58be4:	10c00324 	muli	r3,r2,12
   58be8:	008001b4 	movhi	r2,6
   58bec:	10b0d604 	addi	r2,r2,-15528
   58bf0:	1885883a 	add	r2,r3,r2
   58bf4:	00000106 	br	58bfc <write+0x40>
   58bf8:	0005883a 	mov	r2,zero
   58bfc:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   58c00:	e0bffb17 	ldw	r2,-20(fp)
   58c04:	10002126 	beq	r2,zero,58c8c <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   58c08:	e0bffb17 	ldw	r2,-20(fp)
   58c0c:	10800217 	ldw	r2,8(r2)
   58c10:	108000cc 	andi	r2,r2,3
   58c14:	10001826 	beq	r2,zero,58c78 <write+0xbc>
   58c18:	e0bffb17 	ldw	r2,-20(fp)
   58c1c:	10800017 	ldw	r2,0(r2)
   58c20:	10800617 	ldw	r2,24(r2)
   58c24:	10001426 	beq	r2,zero,58c78 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   58c28:	e0bffb17 	ldw	r2,-20(fp)
   58c2c:	10800017 	ldw	r2,0(r2)
   58c30:	10800617 	ldw	r2,24(r2)
   58c34:	e0ffff17 	ldw	r3,-4(fp)
   58c38:	180d883a 	mov	r6,r3
   58c3c:	e17ffe17 	ldw	r5,-8(fp)
   58c40:	e13ffb17 	ldw	r4,-20(fp)
   58c44:	103ee83a 	callr	r2
   58c48:	e0bffc15 	stw	r2,-16(fp)
   58c4c:	e0bffc17 	ldw	r2,-16(fp)
   58c50:	1000070e 	bge	r2,zero,58c70 <write+0xb4>
      {
        ALT_ERRNO = -rval;
   58c54:	0058b800 	call	58b80 <alt_get_errno>
   58c58:	1007883a 	mov	r3,r2
   58c5c:	e0bffc17 	ldw	r2,-16(fp)
   58c60:	0085c83a 	sub	r2,zero,r2
   58c64:	18800015 	stw	r2,0(r3)
        return -1;
   58c68:	00bfffc4 	movi	r2,-1
   58c6c:	00000c06 	br	58ca0 <write+0xe4>
      }
      return rval;
   58c70:	e0bffc17 	ldw	r2,-16(fp)
   58c74:	00000a06 	br	58ca0 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
   58c78:	0058b800 	call	58b80 <alt_get_errno>
   58c7c:	1007883a 	mov	r3,r2
   58c80:	00800344 	movi	r2,13
   58c84:	18800015 	stw	r2,0(r3)
   58c88:	00000406 	br	58c9c <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   58c8c:	0058b800 	call	58b80 <alt_get_errno>
   58c90:	1007883a 	mov	r3,r2
   58c94:	00801444 	movi	r2,81
   58c98:	18800015 	stw	r2,0(r3)
  }
  return -1;
   58c9c:	00bfffc4 	movi	r2,-1
}
   58ca0:	e037883a 	mov	sp,fp
   58ca4:	dfc00117 	ldw	ra,4(sp)
   58ca8:	df000017 	ldw	fp,0(sp)
   58cac:	dec00204 	addi	sp,sp,8
   58cb0:	f800283a 	ret

00058cb4 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   58cb4:	defffd04 	addi	sp,sp,-12
   58cb8:	dfc00215 	stw	ra,8(sp)
   58cbc:	df000115 	stw	fp,4(sp)
   58cc0:	df000104 	addi	fp,sp,4
   58cc4:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   58cc8:	d1600a04 	addi	r5,gp,-32728
   58ccc:	e13fff17 	ldw	r4,-4(fp)
   58cd0:	0059be40 	call	59be4 <alt_dev_llist_insert>
}
   58cd4:	e037883a 	mov	sp,fp
   58cd8:	dfc00117 	ldw	ra,4(sp)
   58cdc:	df000017 	ldw	fp,0(sp)
   58ce0:	dec00204 	addi	sp,sp,8
   58ce4:	f800283a 	ret

00058ce8 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   58ce8:	defffd04 	addi	sp,sp,-12
   58cec:	dfc00215 	stw	ra,8(sp)
   58cf0:	df000115 	stw	fp,4(sp)
   58cf4:	df000104 	addi	fp,sp,4
   58cf8:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_QSYS, nios2_qsys);
   58cfc:	005a5540 	call	5a554 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   58d00:	00800044 	movi	r2,1
   58d04:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   58d08:	0001883a 	nop
   58d0c:	e037883a 	mov	sp,fp
   58d10:	dfc00117 	ldw	ra,4(sp)
   58d14:	df000017 	ldw	fp,0(sp)
   58d18:	dec00204 	addi	sp,sp,8
   58d1c:	f800283a 	ret

00058d20 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   58d20:	defffe04 	addi	sp,sp,-8
   58d24:	dfc00115 	stw	ra,4(sp)
   58d28:	df000015 	stw	fp,0(sp)
   58d2c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
   58d30:	01c0fa04 	movi	r7,1000
   58d34:	000d883a 	mov	r6,zero
   58d38:	000b883a 	mov	r5,zero
   58d3c:	01000234 	movhi	r4,8
   58d40:	21040004 	addi	r4,r4,4096
   58d44:	00598600 	call	59860 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
   58d48:	01800044 	movi	r6,1
   58d4c:	000b883a 	mov	r5,zero
   58d50:	010001b4 	movhi	r4,6
   58d54:	21314004 	addi	r4,r4,-15104
   58d58:	0058ee40 	call	58ee4 <altera_avalon_jtag_uart_init>
   58d5c:	010001b4 	movhi	r4,6
   58d60:	21313604 	addi	r4,r4,-15144
   58d64:	0058cb40 	call	58cb4 <alt_dev_reg>
}
   58d68:	0001883a 	nop
   58d6c:	e037883a 	mov	sp,fp
   58d70:	dfc00117 	ldw	ra,4(sp)
   58d74:	df000017 	ldw	fp,0(sp)
   58d78:	dec00204 	addi	sp,sp,8
   58d7c:	f800283a 	ret

00058d80 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   58d80:	defffa04 	addi	sp,sp,-24
   58d84:	dfc00515 	stw	ra,20(sp)
   58d88:	df000415 	stw	fp,16(sp)
   58d8c:	df000404 	addi	fp,sp,16
   58d90:	e13ffd15 	stw	r4,-12(fp)
   58d94:	e17ffe15 	stw	r5,-8(fp)
   58d98:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   58d9c:	e0bffd17 	ldw	r2,-12(fp)
   58da0:	10800017 	ldw	r2,0(r2)
   58da4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   58da8:	e0bffc17 	ldw	r2,-16(fp)
   58dac:	10c00a04 	addi	r3,r2,40
   58db0:	e0bffd17 	ldw	r2,-12(fp)
   58db4:	10800217 	ldw	r2,8(r2)
   58db8:	100f883a 	mov	r7,r2
   58dbc:	e1bfff17 	ldw	r6,-4(fp)
   58dc0:	e17ffe17 	ldw	r5,-8(fp)
   58dc4:	1809883a 	mov	r4,r3
   58dc8:	00593a80 	call	593a8 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   58dcc:	e037883a 	mov	sp,fp
   58dd0:	dfc00117 	ldw	ra,4(sp)
   58dd4:	df000017 	ldw	fp,0(sp)
   58dd8:	dec00204 	addi	sp,sp,8
   58ddc:	f800283a 	ret

00058de0 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   58de0:	defffa04 	addi	sp,sp,-24
   58de4:	dfc00515 	stw	ra,20(sp)
   58de8:	df000415 	stw	fp,16(sp)
   58dec:	df000404 	addi	fp,sp,16
   58df0:	e13ffd15 	stw	r4,-12(fp)
   58df4:	e17ffe15 	stw	r5,-8(fp)
   58df8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   58dfc:	e0bffd17 	ldw	r2,-12(fp)
   58e00:	10800017 	ldw	r2,0(r2)
   58e04:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   58e08:	e0bffc17 	ldw	r2,-16(fp)
   58e0c:	10c00a04 	addi	r3,r2,40
   58e10:	e0bffd17 	ldw	r2,-12(fp)
   58e14:	10800217 	ldw	r2,8(r2)
   58e18:	100f883a 	mov	r7,r2
   58e1c:	e1bfff17 	ldw	r6,-4(fp)
   58e20:	e17ffe17 	ldw	r5,-8(fp)
   58e24:	1809883a 	mov	r4,r3
   58e28:	00595c40 	call	595c4 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   58e2c:	e037883a 	mov	sp,fp
   58e30:	dfc00117 	ldw	ra,4(sp)
   58e34:	df000017 	ldw	fp,0(sp)
   58e38:	dec00204 	addi	sp,sp,8
   58e3c:	f800283a 	ret

00058e40 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   58e40:	defffc04 	addi	sp,sp,-16
   58e44:	dfc00315 	stw	ra,12(sp)
   58e48:	df000215 	stw	fp,8(sp)
   58e4c:	df000204 	addi	fp,sp,8
   58e50:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   58e54:	e0bfff17 	ldw	r2,-4(fp)
   58e58:	10800017 	ldw	r2,0(r2)
   58e5c:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   58e60:	e0bffe17 	ldw	r2,-8(fp)
   58e64:	10c00a04 	addi	r3,r2,40
   58e68:	e0bfff17 	ldw	r2,-4(fp)
   58e6c:	10800217 	ldw	r2,8(r2)
   58e70:	100b883a 	mov	r5,r2
   58e74:	1809883a 	mov	r4,r3
   58e78:	00592500 	call	59250 <altera_avalon_jtag_uart_close>
}
   58e7c:	e037883a 	mov	sp,fp
   58e80:	dfc00117 	ldw	ra,4(sp)
   58e84:	df000017 	ldw	fp,0(sp)
   58e88:	dec00204 	addi	sp,sp,8
   58e8c:	f800283a 	ret

00058e90 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   58e90:	defffa04 	addi	sp,sp,-24
   58e94:	dfc00515 	stw	ra,20(sp)
   58e98:	df000415 	stw	fp,16(sp)
   58e9c:	df000404 	addi	fp,sp,16
   58ea0:	e13ffd15 	stw	r4,-12(fp)
   58ea4:	e17ffe15 	stw	r5,-8(fp)
   58ea8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   58eac:	e0bffd17 	ldw	r2,-12(fp)
   58eb0:	10800017 	ldw	r2,0(r2)
   58eb4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   58eb8:	e0bffc17 	ldw	r2,-16(fp)
   58ebc:	10800a04 	addi	r2,r2,40
   58ec0:	e1bfff17 	ldw	r6,-4(fp)
   58ec4:	e17ffe17 	ldw	r5,-8(fp)
   58ec8:	1009883a 	mov	r4,r2
   58ecc:	00592b80 	call	592b8 <altera_avalon_jtag_uart_ioctl>
}
   58ed0:	e037883a 	mov	sp,fp
   58ed4:	dfc00117 	ldw	ra,4(sp)
   58ed8:	df000017 	ldw	fp,0(sp)
   58edc:	dec00204 	addi	sp,sp,8
   58ee0:	f800283a 	ret

00058ee4 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   58ee4:	defffa04 	addi	sp,sp,-24
   58ee8:	dfc00515 	stw	ra,20(sp)
   58eec:	df000415 	stw	fp,16(sp)
   58ef0:	df000404 	addi	fp,sp,16
   58ef4:	e13ffd15 	stw	r4,-12(fp)
   58ef8:	e17ffe15 	stw	r5,-8(fp)
   58efc:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   58f00:	e0bffd17 	ldw	r2,-12(fp)
   58f04:	00c00044 	movi	r3,1
   58f08:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   58f0c:	e0bffd17 	ldw	r2,-12(fp)
   58f10:	10800017 	ldw	r2,0(r2)
   58f14:	10800104 	addi	r2,r2,4
   58f18:	1007883a 	mov	r3,r2
   58f1c:	e0bffd17 	ldw	r2,-12(fp)
   58f20:	10800817 	ldw	r2,32(r2)
   58f24:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   58f28:	e0bffe17 	ldw	r2,-8(fp)
   58f2c:	e0ffff17 	ldw	r3,-4(fp)
   58f30:	d8000015 	stw	zero,0(sp)
   58f34:	e1fffd17 	ldw	r7,-12(fp)
   58f38:	018001b4 	movhi	r6,6
   58f3c:	31a3e904 	addi	r6,r6,-28764
   58f40:	180b883a 	mov	r5,r3
   58f44:	1009883a 	mov	r4,r2
   58f48:	0059d7c0 	call	59d7c <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   58f4c:	e0bffd17 	ldw	r2,-12(fp)
   58f50:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   58f54:	e0bffd17 	ldw	r2,-12(fp)
   58f58:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   58f5c:	d0e76a17 	ldw	r3,-25176(gp)
   58f60:	e1fffd17 	ldw	r7,-12(fp)
   58f64:	018001b4 	movhi	r6,6
   58f68:	31a46c04 	addi	r6,r6,-28240
   58f6c:	180b883a 	mov	r5,r3
   58f70:	1009883a 	mov	r4,r2
   58f74:	00598dc0 	call	598dc <alt_alarm_start>
   58f78:	1000040e 	bge	r2,zero,58f8c <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   58f7c:	e0fffd17 	ldw	r3,-12(fp)
   58f80:	00a00034 	movhi	r2,32768
   58f84:	10bfffc4 	addi	r2,r2,-1
   58f88:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   58f8c:	0001883a 	nop
   58f90:	e037883a 	mov	sp,fp
   58f94:	dfc00117 	ldw	ra,4(sp)
   58f98:	df000017 	ldw	fp,0(sp)
   58f9c:	dec00204 	addi	sp,sp,8
   58fa0:	f800283a 	ret

00058fa4 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   58fa4:	defff804 	addi	sp,sp,-32
   58fa8:	df000715 	stw	fp,28(sp)
   58fac:	df000704 	addi	fp,sp,28
   58fb0:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   58fb4:	e0bfff17 	ldw	r2,-4(fp)
   58fb8:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   58fbc:	e0bffb17 	ldw	r2,-20(fp)
   58fc0:	10800017 	ldw	r2,0(r2)
   58fc4:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   58fc8:	e0bffc17 	ldw	r2,-16(fp)
   58fcc:	10800104 	addi	r2,r2,4
   58fd0:	10800037 	ldwio	r2,0(r2)
   58fd4:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   58fd8:	e0bffd17 	ldw	r2,-12(fp)
   58fdc:	1080c00c 	andi	r2,r2,768
   58fe0:	10006d26 	beq	r2,zero,59198 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   58fe4:	e0bffd17 	ldw	r2,-12(fp)
   58fe8:	1080400c 	andi	r2,r2,256
   58fec:	10003526 	beq	r2,zero,590c4 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   58ff0:	00800074 	movhi	r2,1
   58ff4:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   58ff8:	e0bffb17 	ldw	r2,-20(fp)
   58ffc:	10800a17 	ldw	r2,40(r2)
   59000:	10800044 	addi	r2,r2,1
   59004:	1081ffcc 	andi	r2,r2,2047
   59008:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   5900c:	e0bffb17 	ldw	r2,-20(fp)
   59010:	10c00b17 	ldw	r3,44(r2)
   59014:	e0bffe17 	ldw	r2,-8(fp)
   59018:	18801526 	beq	r3,r2,59070 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   5901c:	e0bffc17 	ldw	r2,-16(fp)
   59020:	10800037 	ldwio	r2,0(r2)
   59024:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   59028:	e0bff917 	ldw	r2,-28(fp)
   5902c:	10a0000c 	andi	r2,r2,32768
   59030:	10001126 	beq	r2,zero,59078 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   59034:	e0bffb17 	ldw	r2,-20(fp)
   59038:	10800a17 	ldw	r2,40(r2)
   5903c:	e0fff917 	ldw	r3,-28(fp)
   59040:	1809883a 	mov	r4,r3
   59044:	e0fffb17 	ldw	r3,-20(fp)
   59048:	1885883a 	add	r2,r3,r2
   5904c:	10800e04 	addi	r2,r2,56
   59050:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   59054:	e0bffb17 	ldw	r2,-20(fp)
   59058:	10800a17 	ldw	r2,40(r2)
   5905c:	10800044 	addi	r2,r2,1
   59060:	10c1ffcc 	andi	r3,r2,2047
   59064:	e0bffb17 	ldw	r2,-20(fp)
   59068:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   5906c:	003fe206 	br	58ff8 <__alt_data_end+0xfffda7f8>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   59070:	0001883a 	nop
   59074:	00000106 	br	5907c <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   59078:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   5907c:	e0bff917 	ldw	r2,-28(fp)
   59080:	10bfffec 	andhi	r2,r2,65535
   59084:	10000f26 	beq	r2,zero,590c4 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   59088:	e0bffb17 	ldw	r2,-20(fp)
   5908c:	10c00817 	ldw	r3,32(r2)
   59090:	00bfff84 	movi	r2,-2
   59094:	1886703a 	and	r3,r3,r2
   59098:	e0bffb17 	ldw	r2,-20(fp)
   5909c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   590a0:	e0bffc17 	ldw	r2,-16(fp)
   590a4:	10800104 	addi	r2,r2,4
   590a8:	1007883a 	mov	r3,r2
   590ac:	e0bffb17 	ldw	r2,-20(fp)
   590b0:	10800817 	ldw	r2,32(r2)
   590b4:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   590b8:	e0bffc17 	ldw	r2,-16(fp)
   590bc:	10800104 	addi	r2,r2,4
   590c0:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   590c4:	e0bffd17 	ldw	r2,-12(fp)
   590c8:	1080800c 	andi	r2,r2,512
   590cc:	103fbe26 	beq	r2,zero,58fc8 <__alt_data_end+0xfffda7c8>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   590d0:	e0bffd17 	ldw	r2,-12(fp)
   590d4:	1004d43a 	srli	r2,r2,16
   590d8:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   590dc:	00001406 	br	59130 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   590e0:	e0bffc17 	ldw	r2,-16(fp)
   590e4:	e0fffb17 	ldw	r3,-20(fp)
   590e8:	18c00d17 	ldw	r3,52(r3)
   590ec:	e13ffb17 	ldw	r4,-20(fp)
   590f0:	20c7883a 	add	r3,r4,r3
   590f4:	18c20e04 	addi	r3,r3,2104
   590f8:	18c00003 	ldbu	r3,0(r3)
   590fc:	18c03fcc 	andi	r3,r3,255
   59100:	18c0201c 	xori	r3,r3,128
   59104:	18ffe004 	addi	r3,r3,-128
   59108:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   5910c:	e0bffb17 	ldw	r2,-20(fp)
   59110:	10800d17 	ldw	r2,52(r2)
   59114:	10800044 	addi	r2,r2,1
   59118:	10c1ffcc 	andi	r3,r2,2047
   5911c:	e0bffb17 	ldw	r2,-20(fp)
   59120:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   59124:	e0bffa17 	ldw	r2,-24(fp)
   59128:	10bfffc4 	addi	r2,r2,-1
   5912c:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   59130:	e0bffa17 	ldw	r2,-24(fp)
   59134:	10000526 	beq	r2,zero,5914c <altera_avalon_jtag_uart_irq+0x1a8>
   59138:	e0bffb17 	ldw	r2,-20(fp)
   5913c:	10c00d17 	ldw	r3,52(r2)
   59140:	e0bffb17 	ldw	r2,-20(fp)
   59144:	10800c17 	ldw	r2,48(r2)
   59148:	18bfe51e 	bne	r3,r2,590e0 <__alt_data_end+0xfffda8e0>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   5914c:	e0bffa17 	ldw	r2,-24(fp)
   59150:	103f9d26 	beq	r2,zero,58fc8 <__alt_data_end+0xfffda7c8>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   59154:	e0bffb17 	ldw	r2,-20(fp)
   59158:	10c00817 	ldw	r3,32(r2)
   5915c:	00bfff44 	movi	r2,-3
   59160:	1886703a 	and	r3,r3,r2
   59164:	e0bffb17 	ldw	r2,-20(fp)
   59168:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   5916c:	e0bffb17 	ldw	r2,-20(fp)
   59170:	10800017 	ldw	r2,0(r2)
   59174:	10800104 	addi	r2,r2,4
   59178:	1007883a 	mov	r3,r2
   5917c:	e0bffb17 	ldw	r2,-20(fp)
   59180:	10800817 	ldw	r2,32(r2)
   59184:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   59188:	e0bffc17 	ldw	r2,-16(fp)
   5918c:	10800104 	addi	r2,r2,4
   59190:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   59194:	003f8c06 	br	58fc8 <__alt_data_end+0xfffda7c8>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   59198:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   5919c:	0001883a 	nop
   591a0:	e037883a 	mov	sp,fp
   591a4:	df000017 	ldw	fp,0(sp)
   591a8:	dec00104 	addi	sp,sp,4
   591ac:	f800283a 	ret

000591b0 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   591b0:	defff804 	addi	sp,sp,-32
   591b4:	df000715 	stw	fp,28(sp)
   591b8:	df000704 	addi	fp,sp,28
   591bc:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   591c0:	e0bffb17 	ldw	r2,-20(fp)
   591c4:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   591c8:	e0bff917 	ldw	r2,-28(fp)
   591cc:	10800017 	ldw	r2,0(r2)
   591d0:	10800104 	addi	r2,r2,4
   591d4:	10800037 	ldwio	r2,0(r2)
   591d8:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   591dc:	e0bffa17 	ldw	r2,-24(fp)
   591e0:	1081000c 	andi	r2,r2,1024
   591e4:	10000b26 	beq	r2,zero,59214 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   591e8:	e0bff917 	ldw	r2,-28(fp)
   591ec:	10800017 	ldw	r2,0(r2)
   591f0:	10800104 	addi	r2,r2,4
   591f4:	1007883a 	mov	r3,r2
   591f8:	e0bff917 	ldw	r2,-28(fp)
   591fc:	10800817 	ldw	r2,32(r2)
   59200:	10810014 	ori	r2,r2,1024
   59204:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   59208:	e0bff917 	ldw	r2,-28(fp)
   5920c:	10000915 	stw	zero,36(r2)
   59210:	00000a06 	br	5923c <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   59214:	e0bff917 	ldw	r2,-28(fp)
   59218:	10c00917 	ldw	r3,36(r2)
   5921c:	00a00034 	movhi	r2,32768
   59220:	10bfff04 	addi	r2,r2,-4
   59224:	10c00536 	bltu	r2,r3,5923c <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   59228:	e0bff917 	ldw	r2,-28(fp)
   5922c:	10800917 	ldw	r2,36(r2)
   59230:	10c00044 	addi	r3,r2,1
   59234:	e0bff917 	ldw	r2,-28(fp)
   59238:	10c00915 	stw	r3,36(r2)
   5923c:	d0a76a17 	ldw	r2,-25176(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   59240:	e037883a 	mov	sp,fp
   59244:	df000017 	ldw	fp,0(sp)
   59248:	dec00104 	addi	sp,sp,4
   5924c:	f800283a 	ret

00059250 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   59250:	defffd04 	addi	sp,sp,-12
   59254:	df000215 	stw	fp,8(sp)
   59258:	df000204 	addi	fp,sp,8
   5925c:	e13ffe15 	stw	r4,-8(fp)
   59260:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   59264:	00000506 	br	5927c <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   59268:	e0bfff17 	ldw	r2,-4(fp)
   5926c:	1090000c 	andi	r2,r2,16384
   59270:	10000226 	beq	r2,zero,5927c <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   59274:	00bffd44 	movi	r2,-11
   59278:	00000b06 	br	592a8 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   5927c:	e0bffe17 	ldw	r2,-8(fp)
   59280:	10c00d17 	ldw	r3,52(r2)
   59284:	e0bffe17 	ldw	r2,-8(fp)
   59288:	10800c17 	ldw	r2,48(r2)
   5928c:	18800526 	beq	r3,r2,592a4 <altera_avalon_jtag_uart_close+0x54>
   59290:	e0bffe17 	ldw	r2,-8(fp)
   59294:	10c00917 	ldw	r3,36(r2)
   59298:	e0bffe17 	ldw	r2,-8(fp)
   5929c:	10800117 	ldw	r2,4(r2)
   592a0:	18bff136 	bltu	r3,r2,59268 <__alt_data_end+0xfffdaa68>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   592a4:	0005883a 	mov	r2,zero
}
   592a8:	e037883a 	mov	sp,fp
   592ac:	df000017 	ldw	fp,0(sp)
   592b0:	dec00104 	addi	sp,sp,4
   592b4:	f800283a 	ret

000592b8 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   592b8:	defffa04 	addi	sp,sp,-24
   592bc:	df000515 	stw	fp,20(sp)
   592c0:	df000504 	addi	fp,sp,20
   592c4:	e13ffd15 	stw	r4,-12(fp)
   592c8:	e17ffe15 	stw	r5,-8(fp)
   592cc:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   592d0:	00bff9c4 	movi	r2,-25
   592d4:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   592d8:	e0bffe17 	ldw	r2,-8(fp)
   592dc:	10da8060 	cmpeqi	r3,r2,27137
   592e0:	1800031e 	bne	r3,zero,592f0 <altera_avalon_jtag_uart_ioctl+0x38>
   592e4:	109a80a0 	cmpeqi	r2,r2,27138
   592e8:	1000181e 	bne	r2,zero,5934c <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   592ec:	00002906 	br	59394 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   592f0:	e0bffd17 	ldw	r2,-12(fp)
   592f4:	10c00117 	ldw	r3,4(r2)
   592f8:	00a00034 	movhi	r2,32768
   592fc:	10bfffc4 	addi	r2,r2,-1
   59300:	18802126 	beq	r3,r2,59388 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   59304:	e0bfff17 	ldw	r2,-4(fp)
   59308:	10800017 	ldw	r2,0(r2)
   5930c:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   59310:	e0bffc17 	ldw	r2,-16(fp)
   59314:	10800090 	cmplti	r2,r2,2
   59318:	1000061e 	bne	r2,zero,59334 <altera_avalon_jtag_uart_ioctl+0x7c>
   5931c:	e0fffc17 	ldw	r3,-16(fp)
   59320:	00a00034 	movhi	r2,32768
   59324:	10bfffc4 	addi	r2,r2,-1
   59328:	18800226 	beq	r3,r2,59334 <altera_avalon_jtag_uart_ioctl+0x7c>
   5932c:	e0bffc17 	ldw	r2,-16(fp)
   59330:	00000206 	br	5933c <altera_avalon_jtag_uart_ioctl+0x84>
   59334:	00a00034 	movhi	r2,32768
   59338:	10bfff84 	addi	r2,r2,-2
   5933c:	e0fffd17 	ldw	r3,-12(fp)
   59340:	18800115 	stw	r2,4(r3)
      rc = 0;
   59344:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   59348:	00000f06 	br	59388 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   5934c:	e0bffd17 	ldw	r2,-12(fp)
   59350:	10c00117 	ldw	r3,4(r2)
   59354:	00a00034 	movhi	r2,32768
   59358:	10bfffc4 	addi	r2,r2,-1
   5935c:	18800c26 	beq	r3,r2,59390 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   59360:	e0bffd17 	ldw	r2,-12(fp)
   59364:	10c00917 	ldw	r3,36(r2)
   59368:	e0bffd17 	ldw	r2,-12(fp)
   5936c:	10800117 	ldw	r2,4(r2)
   59370:	1885803a 	cmpltu	r2,r3,r2
   59374:	10c03fcc 	andi	r3,r2,255
   59378:	e0bfff17 	ldw	r2,-4(fp)
   5937c:	10c00015 	stw	r3,0(r2)
      rc = 0;
   59380:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   59384:	00000206 	br	59390 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   59388:	0001883a 	nop
   5938c:	00000106 	br	59394 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   59390:	0001883a 	nop

  default:
    break;
  }

  return rc;
   59394:	e0bffb17 	ldw	r2,-20(fp)
}
   59398:	e037883a 	mov	sp,fp
   5939c:	df000017 	ldw	fp,0(sp)
   593a0:	dec00104 	addi	sp,sp,4
   593a4:	f800283a 	ret

000593a8 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   593a8:	defff304 	addi	sp,sp,-52
   593ac:	dfc00c15 	stw	ra,48(sp)
   593b0:	df000b15 	stw	fp,44(sp)
   593b4:	df000b04 	addi	fp,sp,44
   593b8:	e13ffc15 	stw	r4,-16(fp)
   593bc:	e17ffd15 	stw	r5,-12(fp)
   593c0:	e1bffe15 	stw	r6,-8(fp)
   593c4:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   593c8:	e0bffd17 	ldw	r2,-12(fp)
   593cc:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   593d0:	00004706 	br	594f0 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   593d4:	e0bffc17 	ldw	r2,-16(fp)
   593d8:	10800a17 	ldw	r2,40(r2)
   593dc:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   593e0:	e0bffc17 	ldw	r2,-16(fp)
   593e4:	10800b17 	ldw	r2,44(r2)
   593e8:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   593ec:	e0fff717 	ldw	r3,-36(fp)
   593f0:	e0bff817 	ldw	r2,-32(fp)
   593f4:	18800536 	bltu	r3,r2,5940c <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   593f8:	e0fff717 	ldw	r3,-36(fp)
   593fc:	e0bff817 	ldw	r2,-32(fp)
   59400:	1885c83a 	sub	r2,r3,r2
   59404:	e0bff615 	stw	r2,-40(fp)
   59408:	00000406 	br	5941c <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   5940c:	00c20004 	movi	r3,2048
   59410:	e0bff817 	ldw	r2,-32(fp)
   59414:	1885c83a 	sub	r2,r3,r2
   59418:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   5941c:	e0bff617 	ldw	r2,-40(fp)
   59420:	10001e26 	beq	r2,zero,5949c <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   59424:	e0fffe17 	ldw	r3,-8(fp)
   59428:	e0bff617 	ldw	r2,-40(fp)
   5942c:	1880022e 	bgeu	r3,r2,59438 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   59430:	e0bffe17 	ldw	r2,-8(fp)
   59434:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   59438:	e0bffc17 	ldw	r2,-16(fp)
   5943c:	10c00e04 	addi	r3,r2,56
   59440:	e0bff817 	ldw	r2,-32(fp)
   59444:	1885883a 	add	r2,r3,r2
   59448:	e1bff617 	ldw	r6,-40(fp)
   5944c:	100b883a 	mov	r5,r2
   59450:	e13ff517 	ldw	r4,-44(fp)
   59454:	00456300 	call	45630 <memcpy>
      ptr   += n;
   59458:	e0fff517 	ldw	r3,-44(fp)
   5945c:	e0bff617 	ldw	r2,-40(fp)
   59460:	1885883a 	add	r2,r3,r2
   59464:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   59468:	e0fffe17 	ldw	r3,-8(fp)
   5946c:	e0bff617 	ldw	r2,-40(fp)
   59470:	1885c83a 	sub	r2,r3,r2
   59474:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   59478:	e0fff817 	ldw	r3,-32(fp)
   5947c:	e0bff617 	ldw	r2,-40(fp)
   59480:	1885883a 	add	r2,r3,r2
   59484:	10c1ffcc 	andi	r3,r2,2047
   59488:	e0bffc17 	ldw	r2,-16(fp)
   5948c:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   59490:	e0bffe17 	ldw	r2,-8(fp)
   59494:	00bfcf16 	blt	zero,r2,593d4 <__alt_data_end+0xfffdabd4>
   59498:	00000106 	br	594a0 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   5949c:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   594a0:	e0fff517 	ldw	r3,-44(fp)
   594a4:	e0bffd17 	ldw	r2,-12(fp)
   594a8:	1880141e 	bne	r3,r2,594fc <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   594ac:	e0bfff17 	ldw	r2,-4(fp)
   594b0:	1090000c 	andi	r2,r2,16384
   594b4:	1000131e 	bne	r2,zero,59504 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   594b8:	0001883a 	nop
   594bc:	e0bffc17 	ldw	r2,-16(fp)
   594c0:	10c00a17 	ldw	r3,40(r2)
   594c4:	e0bff717 	ldw	r2,-36(fp)
   594c8:	1880051e 	bne	r3,r2,594e0 <altera_avalon_jtag_uart_read+0x138>
   594cc:	e0bffc17 	ldw	r2,-16(fp)
   594d0:	10c00917 	ldw	r3,36(r2)
   594d4:	e0bffc17 	ldw	r2,-16(fp)
   594d8:	10800117 	ldw	r2,4(r2)
   594dc:	18bff736 	bltu	r3,r2,594bc <__alt_data_end+0xfffdacbc>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   594e0:	e0bffc17 	ldw	r2,-16(fp)
   594e4:	10c00a17 	ldw	r3,40(r2)
   594e8:	e0bff717 	ldw	r2,-36(fp)
   594ec:	18800726 	beq	r3,r2,5950c <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   594f0:	e0bffe17 	ldw	r2,-8(fp)
   594f4:	00bfb716 	blt	zero,r2,593d4 <__alt_data_end+0xfffdabd4>
   594f8:	00000506 	br	59510 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   594fc:	0001883a 	nop
   59500:	00000306 	br	59510 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   59504:	0001883a 	nop
   59508:	00000106 	br	59510 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   5950c:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   59510:	e0fff517 	ldw	r3,-44(fp)
   59514:	e0bffd17 	ldw	r2,-12(fp)
   59518:	18801826 	beq	r3,r2,5957c <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   5951c:	0005303a 	rdctl	r2,status
   59520:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   59524:	e0fffb17 	ldw	r3,-20(fp)
   59528:	00bfff84 	movi	r2,-2
   5952c:	1884703a 	and	r2,r3,r2
   59530:	1001703a 	wrctl	status,r2
  
  return context;
   59534:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   59538:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   5953c:	e0bffc17 	ldw	r2,-16(fp)
   59540:	10800817 	ldw	r2,32(r2)
   59544:	10c00054 	ori	r3,r2,1
   59548:	e0bffc17 	ldw	r2,-16(fp)
   5954c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   59550:	e0bffc17 	ldw	r2,-16(fp)
   59554:	10800017 	ldw	r2,0(r2)
   59558:	10800104 	addi	r2,r2,4
   5955c:	1007883a 	mov	r3,r2
   59560:	e0bffc17 	ldw	r2,-16(fp)
   59564:	10800817 	ldw	r2,32(r2)
   59568:	18800035 	stwio	r2,0(r3)
   5956c:	e0bffa17 	ldw	r2,-24(fp)
   59570:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   59574:	e0bff917 	ldw	r2,-28(fp)
   59578:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   5957c:	e0fff517 	ldw	r3,-44(fp)
   59580:	e0bffd17 	ldw	r2,-12(fp)
   59584:	18800426 	beq	r3,r2,59598 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   59588:	e0fff517 	ldw	r3,-44(fp)
   5958c:	e0bffd17 	ldw	r2,-12(fp)
   59590:	1885c83a 	sub	r2,r3,r2
   59594:	00000606 	br	595b0 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   59598:	e0bfff17 	ldw	r2,-4(fp)
   5959c:	1090000c 	andi	r2,r2,16384
   595a0:	10000226 	beq	r2,zero,595ac <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   595a4:	00bffd44 	movi	r2,-11
   595a8:	00000106 	br	595b0 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   595ac:	00bffec4 	movi	r2,-5
}
   595b0:	e037883a 	mov	sp,fp
   595b4:	dfc00117 	ldw	ra,4(sp)
   595b8:	df000017 	ldw	fp,0(sp)
   595bc:	dec00204 	addi	sp,sp,8
   595c0:	f800283a 	ret

000595c4 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   595c4:	defff304 	addi	sp,sp,-52
   595c8:	dfc00c15 	stw	ra,48(sp)
   595cc:	df000b15 	stw	fp,44(sp)
   595d0:	df000b04 	addi	fp,sp,44
   595d4:	e13ffc15 	stw	r4,-16(fp)
   595d8:	e17ffd15 	stw	r5,-12(fp)
   595dc:	e1bffe15 	stw	r6,-8(fp)
   595e0:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   595e4:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   595e8:	e0bffd17 	ldw	r2,-12(fp)
   595ec:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   595f0:	00003706 	br	596d0 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   595f4:	e0bffc17 	ldw	r2,-16(fp)
   595f8:	10800c17 	ldw	r2,48(r2)
   595fc:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   59600:	e0bffc17 	ldw	r2,-16(fp)
   59604:	10800d17 	ldw	r2,52(r2)
   59608:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   5960c:	e0fff917 	ldw	r3,-28(fp)
   59610:	e0bff517 	ldw	r2,-44(fp)
   59614:	1880062e 	bgeu	r3,r2,59630 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   59618:	e0fff517 	ldw	r3,-44(fp)
   5961c:	e0bff917 	ldw	r2,-28(fp)
   59620:	1885c83a 	sub	r2,r3,r2
   59624:	10bfffc4 	addi	r2,r2,-1
   59628:	e0bff615 	stw	r2,-40(fp)
   5962c:	00000b06 	br	5965c <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   59630:	e0bff517 	ldw	r2,-44(fp)
   59634:	10000526 	beq	r2,zero,5964c <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   59638:	00c20004 	movi	r3,2048
   5963c:	e0bff917 	ldw	r2,-28(fp)
   59640:	1885c83a 	sub	r2,r3,r2
   59644:	e0bff615 	stw	r2,-40(fp)
   59648:	00000406 	br	5965c <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   5964c:	00c1ffc4 	movi	r3,2047
   59650:	e0bff917 	ldw	r2,-28(fp)
   59654:	1885c83a 	sub	r2,r3,r2
   59658:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   5965c:	e0bff617 	ldw	r2,-40(fp)
   59660:	10001e26 	beq	r2,zero,596dc <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   59664:	e0fffe17 	ldw	r3,-8(fp)
   59668:	e0bff617 	ldw	r2,-40(fp)
   5966c:	1880022e 	bgeu	r3,r2,59678 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   59670:	e0bffe17 	ldw	r2,-8(fp)
   59674:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   59678:	e0bffc17 	ldw	r2,-16(fp)
   5967c:	10c20e04 	addi	r3,r2,2104
   59680:	e0bff917 	ldw	r2,-28(fp)
   59684:	1885883a 	add	r2,r3,r2
   59688:	e1bff617 	ldw	r6,-40(fp)
   5968c:	e17ffd17 	ldw	r5,-12(fp)
   59690:	1009883a 	mov	r4,r2
   59694:	00456300 	call	45630 <memcpy>
      ptr   += n;
   59698:	e0fffd17 	ldw	r3,-12(fp)
   5969c:	e0bff617 	ldw	r2,-40(fp)
   596a0:	1885883a 	add	r2,r3,r2
   596a4:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   596a8:	e0fffe17 	ldw	r3,-8(fp)
   596ac:	e0bff617 	ldw	r2,-40(fp)
   596b0:	1885c83a 	sub	r2,r3,r2
   596b4:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   596b8:	e0fff917 	ldw	r3,-28(fp)
   596bc:	e0bff617 	ldw	r2,-40(fp)
   596c0:	1885883a 	add	r2,r3,r2
   596c4:	10c1ffcc 	andi	r3,r2,2047
   596c8:	e0bffc17 	ldw	r2,-16(fp)
   596cc:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   596d0:	e0bffe17 	ldw	r2,-8(fp)
   596d4:	00bfc716 	blt	zero,r2,595f4 <__alt_data_end+0xfffdadf4>
   596d8:	00000106 	br	596e0 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   596dc:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   596e0:	0005303a 	rdctl	r2,status
   596e4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   596e8:	e0fffb17 	ldw	r3,-20(fp)
   596ec:	00bfff84 	movi	r2,-2
   596f0:	1884703a 	and	r2,r3,r2
   596f4:	1001703a 	wrctl	status,r2
  
  return context;
   596f8:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   596fc:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   59700:	e0bffc17 	ldw	r2,-16(fp)
   59704:	10800817 	ldw	r2,32(r2)
   59708:	10c00094 	ori	r3,r2,2
   5970c:	e0bffc17 	ldw	r2,-16(fp)
   59710:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   59714:	e0bffc17 	ldw	r2,-16(fp)
   59718:	10800017 	ldw	r2,0(r2)
   5971c:	10800104 	addi	r2,r2,4
   59720:	1007883a 	mov	r3,r2
   59724:	e0bffc17 	ldw	r2,-16(fp)
   59728:	10800817 	ldw	r2,32(r2)
   5972c:	18800035 	stwio	r2,0(r3)
   59730:	e0bffa17 	ldw	r2,-24(fp)
   59734:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   59738:	e0bff817 	ldw	r2,-32(fp)
   5973c:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   59740:	e0bffe17 	ldw	r2,-8(fp)
   59744:	0080100e 	bge	zero,r2,59788 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   59748:	e0bfff17 	ldw	r2,-4(fp)
   5974c:	1090000c 	andi	r2,r2,16384
   59750:	1000101e 	bne	r2,zero,59794 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   59754:	0001883a 	nop
   59758:	e0bffc17 	ldw	r2,-16(fp)
   5975c:	10c00d17 	ldw	r3,52(r2)
   59760:	e0bff517 	ldw	r2,-44(fp)
   59764:	1880051e 	bne	r3,r2,5977c <altera_avalon_jtag_uart_write+0x1b8>
   59768:	e0bffc17 	ldw	r2,-16(fp)
   5976c:	10c00917 	ldw	r3,36(r2)
   59770:	e0bffc17 	ldw	r2,-16(fp)
   59774:	10800117 	ldw	r2,4(r2)
   59778:	18bff736 	bltu	r3,r2,59758 <__alt_data_end+0xfffdaf58>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   5977c:	e0bffc17 	ldw	r2,-16(fp)
   59780:	10800917 	ldw	r2,36(r2)
   59784:	1000051e 	bne	r2,zero,5979c <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   59788:	e0bffe17 	ldw	r2,-8(fp)
   5978c:	00bfd016 	blt	zero,r2,596d0 <__alt_data_end+0xfffdaed0>
   59790:	00000306 	br	597a0 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   59794:	0001883a 	nop
   59798:	00000106 	br	597a0 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   5979c:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   597a0:	e0fffd17 	ldw	r3,-12(fp)
   597a4:	e0bff717 	ldw	r2,-36(fp)
   597a8:	18800426 	beq	r3,r2,597bc <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   597ac:	e0fffd17 	ldw	r3,-12(fp)
   597b0:	e0bff717 	ldw	r2,-36(fp)
   597b4:	1885c83a 	sub	r2,r3,r2
   597b8:	00000606 	br	597d4 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   597bc:	e0bfff17 	ldw	r2,-4(fp)
   597c0:	1090000c 	andi	r2,r2,16384
   597c4:	10000226 	beq	r2,zero,597d0 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   597c8:	00bffd44 	movi	r2,-11
   597cc:	00000106 	br	597d4 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   597d0:	00bffec4 	movi	r2,-5
}
   597d4:	e037883a 	mov	sp,fp
   597d8:	dfc00117 	ldw	ra,4(sp)
   597dc:	df000017 	ldw	fp,0(sp)
   597e0:	dec00204 	addi	sp,sp,8
   597e4:	f800283a 	ret

000597e8 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   597e8:	defffa04 	addi	sp,sp,-24
   597ec:	dfc00515 	stw	ra,20(sp)
   597f0:	df000415 	stw	fp,16(sp)
   597f4:	df000404 	addi	fp,sp,16
   597f8:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   597fc:	0007883a 	mov	r3,zero
   59800:	e0bfff17 	ldw	r2,-4(fp)
   59804:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   59808:	e0bfff17 	ldw	r2,-4(fp)
   5980c:	10800104 	addi	r2,r2,4
   59810:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   59814:	0005303a 	rdctl	r2,status
   59818:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   5981c:	e0fffd17 	ldw	r3,-12(fp)
   59820:	00bfff84 	movi	r2,-2
   59824:	1884703a 	and	r2,r3,r2
   59828:	1001703a 	wrctl	status,r2
  
  return context;
   5982c:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   59830:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
   59834:	005a44c0 	call	5a44c <alt_tick>
   59838:	e0bffc17 	ldw	r2,-16(fp)
   5983c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   59840:	e0bffe17 	ldw	r2,-8(fp)
   59844:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
   59848:	0001883a 	nop
   5984c:	e037883a 	mov	sp,fp
   59850:	dfc00117 	ldw	ra,4(sp)
   59854:	df000017 	ldw	fp,0(sp)
   59858:	dec00204 	addi	sp,sp,8
   5985c:	f800283a 	ret

00059860 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   59860:	defff804 	addi	sp,sp,-32
   59864:	dfc00715 	stw	ra,28(sp)
   59868:	df000615 	stw	fp,24(sp)
   5986c:	df000604 	addi	fp,sp,24
   59870:	e13ffc15 	stw	r4,-16(fp)
   59874:	e17ffd15 	stw	r5,-12(fp)
   59878:	e1bffe15 	stw	r6,-8(fp)
   5987c:	e1ffff15 	stw	r7,-4(fp)
   59880:	e0bfff17 	ldw	r2,-4(fp)
   59884:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   59888:	d0a76a17 	ldw	r2,-25176(gp)
   5988c:	1000021e 	bne	r2,zero,59898 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
   59890:	e0bffb17 	ldw	r2,-20(fp)
   59894:	d0a76a15 	stw	r2,-25176(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   59898:	e0bffc17 	ldw	r2,-16(fp)
   5989c:	10800104 	addi	r2,r2,4
   598a0:	00c001c4 	movi	r3,7
   598a4:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
   598a8:	d8000015 	stw	zero,0(sp)
   598ac:	e1fffc17 	ldw	r7,-16(fp)
   598b0:	018001b4 	movhi	r6,6
   598b4:	31a5fa04 	addi	r6,r6,-26648
   598b8:	e17ffe17 	ldw	r5,-8(fp)
   598bc:	e13ffd17 	ldw	r4,-12(fp)
   598c0:	0059d7c0 	call	59d7c <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
   598c4:	0001883a 	nop
   598c8:	e037883a 	mov	sp,fp
   598cc:	dfc00117 	ldw	ra,4(sp)
   598d0:	df000017 	ldw	fp,0(sp)
   598d4:	dec00204 	addi	sp,sp,8
   598d8:	f800283a 	ret

000598dc <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   598dc:	defff504 	addi	sp,sp,-44
   598e0:	df000a15 	stw	fp,40(sp)
   598e4:	df000a04 	addi	fp,sp,40
   598e8:	e13ffc15 	stw	r4,-16(fp)
   598ec:	e17ffd15 	stw	r5,-12(fp)
   598f0:	e1bffe15 	stw	r6,-8(fp)
   598f4:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   598f8:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   598fc:	d0a76a17 	ldw	r2,-25176(gp)
  
  if (alt_ticks_per_second ())
   59900:	10003c26 	beq	r2,zero,599f4 <alt_alarm_start+0x118>
  {
    if (alarm)
   59904:	e0bffc17 	ldw	r2,-16(fp)
   59908:	10003826 	beq	r2,zero,599ec <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   5990c:	e0bffc17 	ldw	r2,-16(fp)
   59910:	e0fffe17 	ldw	r3,-8(fp)
   59914:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   59918:	e0bffc17 	ldw	r2,-16(fp)
   5991c:	e0ffff17 	ldw	r3,-4(fp)
   59920:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   59924:	0005303a 	rdctl	r2,status
   59928:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   5992c:	e0fff917 	ldw	r3,-28(fp)
   59930:	00bfff84 	movi	r2,-2
   59934:	1884703a 	and	r2,r3,r2
   59938:	1001703a 	wrctl	status,r2
  
  return context;
   5993c:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   59940:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   59944:	d0a76b17 	ldw	r2,-25172(gp)
      
      current_nticks = alt_nticks();
   59948:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   5994c:	e0fffd17 	ldw	r3,-12(fp)
   59950:	e0bff617 	ldw	r2,-40(fp)
   59954:	1885883a 	add	r2,r3,r2
   59958:	10c00044 	addi	r3,r2,1
   5995c:	e0bffc17 	ldw	r2,-16(fp)
   59960:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   59964:	e0bffc17 	ldw	r2,-16(fp)
   59968:	10c00217 	ldw	r3,8(r2)
   5996c:	e0bff617 	ldw	r2,-40(fp)
   59970:	1880042e 	bgeu	r3,r2,59984 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   59974:	e0bffc17 	ldw	r2,-16(fp)
   59978:	00c00044 	movi	r3,1
   5997c:	10c00405 	stb	r3,16(r2)
   59980:	00000206 	br	5998c <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   59984:	e0bffc17 	ldw	r2,-16(fp)
   59988:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   5998c:	e0bffc17 	ldw	r2,-16(fp)
   59990:	d0e01004 	addi	r3,gp,-32704
   59994:	e0fffa15 	stw	r3,-24(fp)
   59998:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   5999c:	e0bffb17 	ldw	r2,-20(fp)
   599a0:	e0fffa17 	ldw	r3,-24(fp)
   599a4:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   599a8:	e0bffa17 	ldw	r2,-24(fp)
   599ac:	10c00017 	ldw	r3,0(r2)
   599b0:	e0bffb17 	ldw	r2,-20(fp)
   599b4:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   599b8:	e0bffa17 	ldw	r2,-24(fp)
   599bc:	10800017 	ldw	r2,0(r2)
   599c0:	e0fffb17 	ldw	r3,-20(fp)
   599c4:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   599c8:	e0bffa17 	ldw	r2,-24(fp)
   599cc:	e0fffb17 	ldw	r3,-20(fp)
   599d0:	10c00015 	stw	r3,0(r2)
   599d4:	e0bff817 	ldw	r2,-32(fp)
   599d8:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   599dc:	e0bff717 	ldw	r2,-36(fp)
   599e0:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   599e4:	0005883a 	mov	r2,zero
   599e8:	00000306 	br	599f8 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   599ec:	00bffa84 	movi	r2,-22
   599f0:	00000106 	br	599f8 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   599f4:	00bfde84 	movi	r2,-134
  }
}
   599f8:	e037883a 	mov	sp,fp
   599fc:	df000017 	ldw	fp,0(sp)
   59a00:	dec00104 	addi	sp,sp,4
   59a04:	f800283a 	ret

00059a08 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
   59a08:	defffa04 	addi	sp,sp,-24
   59a0c:	dfc00515 	stw	ra,20(sp)
   59a10:	df000415 	stw	fp,16(sp)
   59a14:	df000404 	addi	fp,sp,16
   59a18:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
   59a1c:	008000c4 	movi	r2,3
   59a20:	e0bffd15 	stw	r2,-12(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
   59a24:	e0fffd17 	ldw	r3,-12(fp)
   59a28:	008003f4 	movhi	r2,15
   59a2c:	10909004 	addi	r2,r2,16960
   59a30:	1885383a 	mul	r2,r3,r2
   59a34:	100b883a 	mov	r5,r2
   59a38:	0100bef4 	movhi	r4,763
   59a3c:	213c2004 	addi	r4,r4,-3968
   59a40:	00455740 	call	45574 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
   59a44:	100b883a 	mov	r5,r2
   59a48:	01200034 	movhi	r4,32768
   59a4c:	213fffc4 	addi	r4,r4,-1
   59a50:	00455740 	call	45574 <__udivsi3>
   59a54:	100b883a 	mov	r5,r2
   59a58:	e13fff17 	ldw	r4,-4(fp)
   59a5c:	00455740 	call	45574 <__udivsi3>
   59a60:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
   59a64:	e0bffe17 	ldw	r2,-8(fp)
   59a68:	10002a26 	beq	r2,zero,59b14 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
   59a6c:	e03ffc15 	stw	zero,-16(fp)
   59a70:	00001706 	br	59ad0 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
   59a74:	00a00034 	movhi	r2,32768
   59a78:	10bfffc4 	addi	r2,r2,-1
   59a7c:	10bfffc4 	addi	r2,r2,-1
   59a80:	103ffe1e 	bne	r2,zero,59a7c <__alt_data_end+0xfffdb27c>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
   59a84:	e0fffd17 	ldw	r3,-12(fp)
   59a88:	008003f4 	movhi	r2,15
   59a8c:	10909004 	addi	r2,r2,16960
   59a90:	1885383a 	mul	r2,r3,r2
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
   59a94:	100b883a 	mov	r5,r2
   59a98:	0100bef4 	movhi	r4,763
   59a9c:	213c2004 	addi	r4,r4,-3968
   59aa0:	00455740 	call	45574 <__udivsi3>
   59aa4:	100b883a 	mov	r5,r2
   59aa8:	01200034 	movhi	r4,32768
   59aac:	213fffc4 	addi	r4,r4,-1
   59ab0:	00455740 	call	45574 <__udivsi3>
   59ab4:	1007883a 	mov	r3,r2
   59ab8:	e0bfff17 	ldw	r2,-4(fp)
   59abc:	10c5c83a 	sub	r2,r2,r3
   59ac0:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
   59ac4:	e0bffc17 	ldw	r2,-16(fp)
   59ac8:	10800044 	addi	r2,r2,1
   59acc:	e0bffc15 	stw	r2,-16(fp)
   59ad0:	e0fffc17 	ldw	r3,-16(fp)
   59ad4:	e0bffe17 	ldw	r2,-8(fp)
   59ad8:	18bfe616 	blt	r3,r2,59a74 <__alt_data_end+0xfffdb274>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   59adc:	e0fffd17 	ldw	r3,-12(fp)
   59ae0:	008003f4 	movhi	r2,15
   59ae4:	10909004 	addi	r2,r2,16960
   59ae8:	1885383a 	mul	r2,r3,r2
   59aec:	100b883a 	mov	r5,r2
   59af0:	0100bef4 	movhi	r4,763
   59af4:	213c2004 	addi	r4,r4,-3968
   59af8:	00455740 	call	45574 <__udivsi3>
   59afc:	1007883a 	mov	r3,r2
   59b00:	e0bfff17 	ldw	r2,-4(fp)
   59b04:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   59b08:	10bfffc4 	addi	r2,r2,-1
   59b0c:	103ffe1e 	bne	r2,zero,59b08 <__alt_data_end+0xfffdb308>
   59b10:	00000d06 	br	59b48 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   59b14:	e0fffd17 	ldw	r3,-12(fp)
   59b18:	008003f4 	movhi	r2,15
   59b1c:	10909004 	addi	r2,r2,16960
   59b20:	1885383a 	mul	r2,r3,r2
   59b24:	100b883a 	mov	r5,r2
   59b28:	0100bef4 	movhi	r4,763
   59b2c:	213c2004 	addi	r4,r4,-3968
   59b30:	00455740 	call	45574 <__udivsi3>
   59b34:	1007883a 	mov	r3,r2
   59b38:	e0bfff17 	ldw	r2,-4(fp)
   59b3c:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   59b40:	10bfffc4 	addi	r2,r2,-1
   59b44:	00bffe16 	blt	zero,r2,59b40 <__alt_data_end+0xfffdb340>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
   59b48:	0005883a 	mov	r2,zero
}
   59b4c:	e037883a 	mov	sp,fp
   59b50:	dfc00117 	ldw	ra,4(sp)
   59b54:	df000017 	ldw	fp,0(sp)
   59b58:	dec00204 	addi	sp,sp,8
   59b5c:	f800283a 	ret

00059b60 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   59b60:	defffe04 	addi	sp,sp,-8
   59b64:	df000115 	stw	fp,4(sp)
   59b68:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   59b6c:	e03fff15 	stw	zero,-4(fp)
   59b70:	00000506 	br	59b88 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   59b74:	e0bfff17 	ldw	r2,-4(fp)
   59b78:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   59b7c:	e0bfff17 	ldw	r2,-4(fp)
   59b80:	10800804 	addi	r2,r2,32
   59b84:	e0bfff15 	stw	r2,-4(fp)
   59b88:	e0bfff17 	ldw	r2,-4(fp)
   59b8c:	10820030 	cmpltui	r2,r2,2048
   59b90:	103ff81e 	bne	r2,zero,59b74 <__alt_data_end+0xfffdb374>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   59b94:	0001883a 	nop
   59b98:	e037883a 	mov	sp,fp
   59b9c:	df000017 	ldw	fp,0(sp)
   59ba0:	dec00104 	addi	sp,sp,4
   59ba4:	f800283a 	ret

00059ba8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   59ba8:	defffe04 	addi	sp,sp,-8
   59bac:	dfc00115 	stw	ra,4(sp)
   59bb0:	df000015 	stw	fp,0(sp)
   59bb4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   59bb8:	d0a00d17 	ldw	r2,-32716(gp)
   59bbc:	10000326 	beq	r2,zero,59bcc <alt_get_errno+0x24>
   59bc0:	d0a00d17 	ldw	r2,-32716(gp)
   59bc4:	103ee83a 	callr	r2
   59bc8:	00000106 	br	59bd0 <alt_get_errno+0x28>
   59bcc:	d0a76504 	addi	r2,gp,-25196
}
   59bd0:	e037883a 	mov	sp,fp
   59bd4:	dfc00117 	ldw	ra,4(sp)
   59bd8:	df000017 	ldw	fp,0(sp)
   59bdc:	dec00204 	addi	sp,sp,8
   59be0:	f800283a 	ret

00059be4 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   59be4:	defffa04 	addi	sp,sp,-24
   59be8:	dfc00515 	stw	ra,20(sp)
   59bec:	df000415 	stw	fp,16(sp)
   59bf0:	df000404 	addi	fp,sp,16
   59bf4:	e13ffe15 	stw	r4,-8(fp)
   59bf8:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   59bfc:	e0bffe17 	ldw	r2,-8(fp)
   59c00:	10000326 	beq	r2,zero,59c10 <alt_dev_llist_insert+0x2c>
   59c04:	e0bffe17 	ldw	r2,-8(fp)
   59c08:	10800217 	ldw	r2,8(r2)
   59c0c:	1000061e 	bne	r2,zero,59c28 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   59c10:	0059ba80 	call	59ba8 <alt_get_errno>
   59c14:	1007883a 	mov	r3,r2
   59c18:	00800584 	movi	r2,22
   59c1c:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   59c20:	00bffa84 	movi	r2,-22
   59c24:	00001306 	br	59c74 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   59c28:	e0bffe17 	ldw	r2,-8(fp)
   59c2c:	e0ffff17 	ldw	r3,-4(fp)
   59c30:	e0fffc15 	stw	r3,-16(fp)
   59c34:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   59c38:	e0bffd17 	ldw	r2,-12(fp)
   59c3c:	e0fffc17 	ldw	r3,-16(fp)
   59c40:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   59c44:	e0bffc17 	ldw	r2,-16(fp)
   59c48:	10c00017 	ldw	r3,0(r2)
   59c4c:	e0bffd17 	ldw	r2,-12(fp)
   59c50:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   59c54:	e0bffc17 	ldw	r2,-16(fp)
   59c58:	10800017 	ldw	r2,0(r2)
   59c5c:	e0fffd17 	ldw	r3,-12(fp)
   59c60:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   59c64:	e0bffc17 	ldw	r2,-16(fp)
   59c68:	e0fffd17 	ldw	r3,-12(fp)
   59c6c:	10c00015 	stw	r3,0(r2)

  return 0;  
   59c70:	0005883a 	mov	r2,zero
}
   59c74:	e037883a 	mov	sp,fp
   59c78:	dfc00117 	ldw	ra,4(sp)
   59c7c:	df000017 	ldw	fp,0(sp)
   59c80:	dec00204 	addi	sp,sp,8
   59c84:	f800283a 	ret

00059c88 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   59c88:	defffd04 	addi	sp,sp,-12
   59c8c:	dfc00215 	stw	ra,8(sp)
   59c90:	df000115 	stw	fp,4(sp)
   59c94:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   59c98:	008001b4 	movhi	r2,6
   59c9c:	10aaf504 	addi	r2,r2,-21548
   59ca0:	e0bfff15 	stw	r2,-4(fp)
   59ca4:	00000606 	br	59cc0 <_do_ctors+0x38>
        (*ctor) (); 
   59ca8:	e0bfff17 	ldw	r2,-4(fp)
   59cac:	10800017 	ldw	r2,0(r2)
   59cb0:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   59cb4:	e0bfff17 	ldw	r2,-4(fp)
   59cb8:	10bfff04 	addi	r2,r2,-4
   59cbc:	e0bfff15 	stw	r2,-4(fp)
   59cc0:	e0ffff17 	ldw	r3,-4(fp)
   59cc4:	008001b4 	movhi	r2,6
   59cc8:	10aaf604 	addi	r2,r2,-21544
   59ccc:	18bff62e 	bgeu	r3,r2,59ca8 <__alt_data_end+0xfffdb4a8>
        (*ctor) (); 
}
   59cd0:	0001883a 	nop
   59cd4:	e037883a 	mov	sp,fp
   59cd8:	dfc00117 	ldw	ra,4(sp)
   59cdc:	df000017 	ldw	fp,0(sp)
   59ce0:	dec00204 	addi	sp,sp,8
   59ce4:	f800283a 	ret

00059ce8 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   59ce8:	defffd04 	addi	sp,sp,-12
   59cec:	dfc00215 	stw	ra,8(sp)
   59cf0:	df000115 	stw	fp,4(sp)
   59cf4:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   59cf8:	008001b4 	movhi	r2,6
   59cfc:	10aaf504 	addi	r2,r2,-21548
   59d00:	e0bfff15 	stw	r2,-4(fp)
   59d04:	00000606 	br	59d20 <_do_dtors+0x38>
        (*dtor) (); 
   59d08:	e0bfff17 	ldw	r2,-4(fp)
   59d0c:	10800017 	ldw	r2,0(r2)
   59d10:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   59d14:	e0bfff17 	ldw	r2,-4(fp)
   59d18:	10bfff04 	addi	r2,r2,-4
   59d1c:	e0bfff15 	stw	r2,-4(fp)
   59d20:	e0ffff17 	ldw	r3,-4(fp)
   59d24:	008001b4 	movhi	r2,6
   59d28:	10aaf604 	addi	r2,r2,-21544
   59d2c:	18bff62e 	bgeu	r3,r2,59d08 <__alt_data_end+0xfffdb508>
        (*dtor) (); 
}
   59d30:	0001883a 	nop
   59d34:	e037883a 	mov	sp,fp
   59d38:	dfc00117 	ldw	ra,4(sp)
   59d3c:	df000017 	ldw	fp,0(sp)
   59d40:	dec00204 	addi	sp,sp,8
   59d44:	f800283a 	ret

00059d48 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   59d48:	defffe04 	addi	sp,sp,-8
   59d4c:	dfc00115 	stw	ra,4(sp)
   59d50:	df000015 	stw	fp,0(sp)
   59d54:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   59d58:	01440004 	movi	r5,4096
   59d5c:	0009883a 	mov	r4,zero
   59d60:	005a7b40 	call	5a7b4 <alt_icache_flush>
#endif
}
   59d64:	0001883a 	nop
   59d68:	e037883a 	mov	sp,fp
   59d6c:	dfc00117 	ldw	ra,4(sp)
   59d70:	df000017 	ldw	fp,0(sp)
   59d74:	dec00204 	addi	sp,sp,8
   59d78:	f800283a 	ret

00059d7c <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   59d7c:	defff904 	addi	sp,sp,-28
   59d80:	dfc00615 	stw	ra,24(sp)
   59d84:	df000515 	stw	fp,20(sp)
   59d88:	df000504 	addi	fp,sp,20
   59d8c:	e13ffc15 	stw	r4,-16(fp)
   59d90:	e17ffd15 	stw	r5,-12(fp)
   59d94:	e1bffe15 	stw	r6,-8(fp)
   59d98:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   59d9c:	e0800217 	ldw	r2,8(fp)
   59da0:	d8800015 	stw	r2,0(sp)
   59da4:	e1ffff17 	ldw	r7,-4(fp)
   59da8:	e1bffe17 	ldw	r6,-8(fp)
   59dac:	e17ffd17 	ldw	r5,-12(fp)
   59db0:	e13ffc17 	ldw	r4,-16(fp)
   59db4:	0059f2c0 	call	59f2c <alt_iic_isr_register>
}  
   59db8:	e037883a 	mov	sp,fp
   59dbc:	dfc00117 	ldw	ra,4(sp)
   59dc0:	df000017 	ldw	fp,0(sp)
   59dc4:	dec00204 	addi	sp,sp,8
   59dc8:	f800283a 	ret

00059dcc <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   59dcc:	defff904 	addi	sp,sp,-28
   59dd0:	df000615 	stw	fp,24(sp)
   59dd4:	df000604 	addi	fp,sp,24
   59dd8:	e13ffe15 	stw	r4,-8(fp)
   59ddc:	e17fff15 	stw	r5,-4(fp)
   59de0:	e0bfff17 	ldw	r2,-4(fp)
   59de4:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   59de8:	0005303a 	rdctl	r2,status
   59dec:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   59df0:	e0fffb17 	ldw	r3,-20(fp)
   59df4:	00bfff84 	movi	r2,-2
   59df8:	1884703a 	and	r2,r3,r2
   59dfc:	1001703a 	wrctl	status,r2
  
  return context;
   59e00:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   59e04:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   59e08:	00c00044 	movi	r3,1
   59e0c:	e0bffa17 	ldw	r2,-24(fp)
   59e10:	1884983a 	sll	r2,r3,r2
   59e14:	1007883a 	mov	r3,r2
   59e18:	d0a76917 	ldw	r2,-25180(gp)
   59e1c:	1884b03a 	or	r2,r3,r2
   59e20:	d0a76915 	stw	r2,-25180(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   59e24:	d0a76917 	ldw	r2,-25180(gp)
   59e28:	100170fa 	wrctl	ienable,r2
   59e2c:	e0bffc17 	ldw	r2,-16(fp)
   59e30:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   59e34:	e0bffd17 	ldw	r2,-12(fp)
   59e38:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   59e3c:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   59e40:	0001883a 	nop
}
   59e44:	e037883a 	mov	sp,fp
   59e48:	df000017 	ldw	fp,0(sp)
   59e4c:	dec00104 	addi	sp,sp,4
   59e50:	f800283a 	ret

00059e54 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   59e54:	defff904 	addi	sp,sp,-28
   59e58:	df000615 	stw	fp,24(sp)
   59e5c:	df000604 	addi	fp,sp,24
   59e60:	e13ffe15 	stw	r4,-8(fp)
   59e64:	e17fff15 	stw	r5,-4(fp)
   59e68:	e0bfff17 	ldw	r2,-4(fp)
   59e6c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   59e70:	0005303a 	rdctl	r2,status
   59e74:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   59e78:	e0fffb17 	ldw	r3,-20(fp)
   59e7c:	00bfff84 	movi	r2,-2
   59e80:	1884703a 	and	r2,r3,r2
   59e84:	1001703a 	wrctl	status,r2
  
  return context;
   59e88:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   59e8c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   59e90:	00c00044 	movi	r3,1
   59e94:	e0bffa17 	ldw	r2,-24(fp)
   59e98:	1884983a 	sll	r2,r3,r2
   59e9c:	0084303a 	nor	r2,zero,r2
   59ea0:	1007883a 	mov	r3,r2
   59ea4:	d0a76917 	ldw	r2,-25180(gp)
   59ea8:	1884703a 	and	r2,r3,r2
   59eac:	d0a76915 	stw	r2,-25180(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   59eb0:	d0a76917 	ldw	r2,-25180(gp)
   59eb4:	100170fa 	wrctl	ienable,r2
   59eb8:	e0bffc17 	ldw	r2,-16(fp)
   59ebc:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   59ec0:	e0bffd17 	ldw	r2,-12(fp)
   59ec4:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   59ec8:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   59ecc:	0001883a 	nop
}
   59ed0:	e037883a 	mov	sp,fp
   59ed4:	df000017 	ldw	fp,0(sp)
   59ed8:	dec00104 	addi	sp,sp,4
   59edc:	f800283a 	ret

00059ee0 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   59ee0:	defffc04 	addi	sp,sp,-16
   59ee4:	df000315 	stw	fp,12(sp)
   59ee8:	df000304 	addi	fp,sp,12
   59eec:	e13ffe15 	stw	r4,-8(fp)
   59ef0:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   59ef4:	000530fa 	rdctl	r2,ienable
   59ef8:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   59efc:	00c00044 	movi	r3,1
   59f00:	e0bfff17 	ldw	r2,-4(fp)
   59f04:	1884983a 	sll	r2,r3,r2
   59f08:	1007883a 	mov	r3,r2
   59f0c:	e0bffd17 	ldw	r2,-12(fp)
   59f10:	1884703a 	and	r2,r3,r2
   59f14:	1004c03a 	cmpne	r2,r2,zero
   59f18:	10803fcc 	andi	r2,r2,255
}
   59f1c:	e037883a 	mov	sp,fp
   59f20:	df000017 	ldw	fp,0(sp)
   59f24:	dec00104 	addi	sp,sp,4
   59f28:	f800283a 	ret

00059f2c <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   59f2c:	defff504 	addi	sp,sp,-44
   59f30:	dfc00a15 	stw	ra,40(sp)
   59f34:	df000915 	stw	fp,36(sp)
   59f38:	df000904 	addi	fp,sp,36
   59f3c:	e13ffc15 	stw	r4,-16(fp)
   59f40:	e17ffd15 	stw	r5,-12(fp)
   59f44:	e1bffe15 	stw	r6,-8(fp)
   59f48:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   59f4c:	00bffa84 	movi	r2,-22
   59f50:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   59f54:	e0bffd17 	ldw	r2,-12(fp)
   59f58:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   59f5c:	e0bff817 	ldw	r2,-32(fp)
   59f60:	10800808 	cmpgei	r2,r2,32
   59f64:	1000271e 	bne	r2,zero,5a004 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   59f68:	0005303a 	rdctl	r2,status
   59f6c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   59f70:	e0fffb17 	ldw	r3,-20(fp)
   59f74:	00bfff84 	movi	r2,-2
   59f78:	1884703a 	and	r2,r3,r2
   59f7c:	1001703a 	wrctl	status,r2
  
  return context;
   59f80:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   59f84:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   59f88:	008001b4 	movhi	r2,6
   59f8c:	10bcc404 	addi	r2,r2,-3312
   59f90:	e0fff817 	ldw	r3,-32(fp)
   59f94:	180690fa 	slli	r3,r3,3
   59f98:	10c5883a 	add	r2,r2,r3
   59f9c:	e0fffe17 	ldw	r3,-8(fp)
   59fa0:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   59fa4:	008001b4 	movhi	r2,6
   59fa8:	10bcc404 	addi	r2,r2,-3312
   59fac:	e0fff817 	ldw	r3,-32(fp)
   59fb0:	180690fa 	slli	r3,r3,3
   59fb4:	10c5883a 	add	r2,r2,r3
   59fb8:	10800104 	addi	r2,r2,4
   59fbc:	e0ffff17 	ldw	r3,-4(fp)
   59fc0:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   59fc4:	e0bffe17 	ldw	r2,-8(fp)
   59fc8:	10000526 	beq	r2,zero,59fe0 <alt_iic_isr_register+0xb4>
   59fcc:	e0bff817 	ldw	r2,-32(fp)
   59fd0:	100b883a 	mov	r5,r2
   59fd4:	e13ffc17 	ldw	r4,-16(fp)
   59fd8:	0059dcc0 	call	59dcc <alt_ic_irq_enable>
   59fdc:	00000406 	br	59ff0 <alt_iic_isr_register+0xc4>
   59fe0:	e0bff817 	ldw	r2,-32(fp)
   59fe4:	100b883a 	mov	r5,r2
   59fe8:	e13ffc17 	ldw	r4,-16(fp)
   59fec:	0059e540 	call	59e54 <alt_ic_irq_disable>
   59ff0:	e0bff715 	stw	r2,-36(fp)
   59ff4:	e0bffa17 	ldw	r2,-24(fp)
   59ff8:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   59ffc:	e0bff917 	ldw	r2,-28(fp)
   5a000:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   5a004:	e0bff717 	ldw	r2,-36(fp)
}
   5a008:	e037883a 	mov	sp,fp
   5a00c:	dfc00117 	ldw	ra,4(sp)
   5a010:	df000017 	ldw	fp,0(sp)
   5a014:	dec00204 	addi	sp,sp,8
   5a018:	f800283a 	ret

0005a01c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   5a01c:	defff904 	addi	sp,sp,-28
   5a020:	dfc00615 	stw	ra,24(sp)
   5a024:	df000515 	stw	fp,20(sp)
   5a028:	df000504 	addi	fp,sp,20
   5a02c:	e13ffc15 	stw	r4,-16(fp)
   5a030:	e17ffd15 	stw	r5,-12(fp)
   5a034:	e1bffe15 	stw	r6,-8(fp)
   5a038:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   5a03c:	e1bfff17 	ldw	r6,-4(fp)
   5a040:	e17ffe17 	ldw	r5,-8(fp)
   5a044:	e13ffd17 	ldw	r4,-12(fp)
   5a048:	005a25c0 	call	5a25c <open>
   5a04c:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   5a050:	e0bffb17 	ldw	r2,-20(fp)
   5a054:	10001c16 	blt	r2,zero,5a0c8 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
   5a058:	008001b4 	movhi	r2,6
   5a05c:	10b0d604 	addi	r2,r2,-15528
   5a060:	e0fffb17 	ldw	r3,-20(fp)
   5a064:	18c00324 	muli	r3,r3,12
   5a068:	10c5883a 	add	r2,r2,r3
   5a06c:	10c00017 	ldw	r3,0(r2)
   5a070:	e0bffc17 	ldw	r2,-16(fp)
   5a074:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   5a078:	008001b4 	movhi	r2,6
   5a07c:	10b0d604 	addi	r2,r2,-15528
   5a080:	e0fffb17 	ldw	r3,-20(fp)
   5a084:	18c00324 	muli	r3,r3,12
   5a088:	10c5883a 	add	r2,r2,r3
   5a08c:	10800104 	addi	r2,r2,4
   5a090:	10c00017 	ldw	r3,0(r2)
   5a094:	e0bffc17 	ldw	r2,-16(fp)
   5a098:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   5a09c:	008001b4 	movhi	r2,6
   5a0a0:	10b0d604 	addi	r2,r2,-15528
   5a0a4:	e0fffb17 	ldw	r3,-20(fp)
   5a0a8:	18c00324 	muli	r3,r3,12
   5a0ac:	10c5883a 	add	r2,r2,r3
   5a0b0:	10800204 	addi	r2,r2,8
   5a0b4:	10c00017 	ldw	r3,0(r2)
   5a0b8:	e0bffc17 	ldw	r2,-16(fp)
   5a0bc:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   5a0c0:	e13ffb17 	ldw	r4,-20(fp)
   5a0c4:	0058a3c0 	call	58a3c <alt_release_fd>
  }
} 
   5a0c8:	0001883a 	nop
   5a0cc:	e037883a 	mov	sp,fp
   5a0d0:	dfc00117 	ldw	ra,4(sp)
   5a0d4:	df000017 	ldw	fp,0(sp)
   5a0d8:	dec00204 	addi	sp,sp,8
   5a0dc:	f800283a 	ret

0005a0e0 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   5a0e0:	defffb04 	addi	sp,sp,-20
   5a0e4:	dfc00415 	stw	ra,16(sp)
   5a0e8:	df000315 	stw	fp,12(sp)
   5a0ec:	df000304 	addi	fp,sp,12
   5a0f0:	e13ffd15 	stw	r4,-12(fp)
   5a0f4:	e17ffe15 	stw	r5,-8(fp)
   5a0f8:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   5a0fc:	01c07fc4 	movi	r7,511
   5a100:	01800044 	movi	r6,1
   5a104:	e17ffd17 	ldw	r5,-12(fp)
   5a108:	010001b4 	movhi	r4,6
   5a10c:	2130d904 	addi	r4,r4,-15516
   5a110:	005a01c0 	call	5a01c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   5a114:	01c07fc4 	movi	r7,511
   5a118:	000d883a 	mov	r6,zero
   5a11c:	e17ffe17 	ldw	r5,-8(fp)
   5a120:	010001b4 	movhi	r4,6
   5a124:	2130d604 	addi	r4,r4,-15528
   5a128:	005a01c0 	call	5a01c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   5a12c:	01c07fc4 	movi	r7,511
   5a130:	01800044 	movi	r6,1
   5a134:	e17fff17 	ldw	r5,-4(fp)
   5a138:	010001b4 	movhi	r4,6
   5a13c:	2130dc04 	addi	r4,r4,-15504
   5a140:	005a01c0 	call	5a01c <alt_open_fd>
}  
   5a144:	0001883a 	nop
   5a148:	e037883a 	mov	sp,fp
   5a14c:	dfc00117 	ldw	ra,4(sp)
   5a150:	df000017 	ldw	fp,0(sp)
   5a154:	dec00204 	addi	sp,sp,8
   5a158:	f800283a 	ret

0005a15c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   5a15c:	defffe04 	addi	sp,sp,-8
   5a160:	dfc00115 	stw	ra,4(sp)
   5a164:	df000015 	stw	fp,0(sp)
   5a168:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   5a16c:	d0a00d17 	ldw	r2,-32716(gp)
   5a170:	10000326 	beq	r2,zero,5a180 <alt_get_errno+0x24>
   5a174:	d0a00d17 	ldw	r2,-32716(gp)
   5a178:	103ee83a 	callr	r2
   5a17c:	00000106 	br	5a184 <alt_get_errno+0x28>
   5a180:	d0a76504 	addi	r2,gp,-25196
}
   5a184:	e037883a 	mov	sp,fp
   5a188:	dfc00117 	ldw	ra,4(sp)
   5a18c:	df000017 	ldw	fp,0(sp)
   5a190:	dec00204 	addi	sp,sp,8
   5a194:	f800283a 	ret

0005a198 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   5a198:	defffd04 	addi	sp,sp,-12
   5a19c:	df000215 	stw	fp,8(sp)
   5a1a0:	df000204 	addi	fp,sp,8
   5a1a4:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   5a1a8:	e0bfff17 	ldw	r2,-4(fp)
   5a1ac:	10800217 	ldw	r2,8(r2)
   5a1b0:	10d00034 	orhi	r3,r2,16384
   5a1b4:	e0bfff17 	ldw	r2,-4(fp)
   5a1b8:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   5a1bc:	e03ffe15 	stw	zero,-8(fp)
   5a1c0:	00001d06 	br	5a238 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   5a1c4:	008001b4 	movhi	r2,6
   5a1c8:	10b0d604 	addi	r2,r2,-15528
   5a1cc:	e0fffe17 	ldw	r3,-8(fp)
   5a1d0:	18c00324 	muli	r3,r3,12
   5a1d4:	10c5883a 	add	r2,r2,r3
   5a1d8:	10c00017 	ldw	r3,0(r2)
   5a1dc:	e0bfff17 	ldw	r2,-4(fp)
   5a1e0:	10800017 	ldw	r2,0(r2)
   5a1e4:	1880111e 	bne	r3,r2,5a22c <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   5a1e8:	008001b4 	movhi	r2,6
   5a1ec:	10b0d604 	addi	r2,r2,-15528
   5a1f0:	e0fffe17 	ldw	r3,-8(fp)
   5a1f4:	18c00324 	muli	r3,r3,12
   5a1f8:	10c5883a 	add	r2,r2,r3
   5a1fc:	10800204 	addi	r2,r2,8
   5a200:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   5a204:	1000090e 	bge	r2,zero,5a22c <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   5a208:	e0bffe17 	ldw	r2,-8(fp)
   5a20c:	10c00324 	muli	r3,r2,12
   5a210:	008001b4 	movhi	r2,6
   5a214:	10b0d604 	addi	r2,r2,-15528
   5a218:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   5a21c:	e0bfff17 	ldw	r2,-4(fp)
   5a220:	18800226 	beq	r3,r2,5a22c <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   5a224:	00bffcc4 	movi	r2,-13
   5a228:	00000806 	br	5a24c <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   5a22c:	e0bffe17 	ldw	r2,-8(fp)
   5a230:	10800044 	addi	r2,r2,1
   5a234:	e0bffe15 	stw	r2,-8(fp)
   5a238:	d0a00c17 	ldw	r2,-32720(gp)
   5a23c:	1007883a 	mov	r3,r2
   5a240:	e0bffe17 	ldw	r2,-8(fp)
   5a244:	18bfdf2e 	bgeu	r3,r2,5a1c4 <__alt_data_end+0xfffdb9c4>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   5a248:	0005883a 	mov	r2,zero
}
   5a24c:	e037883a 	mov	sp,fp
   5a250:	df000017 	ldw	fp,0(sp)
   5a254:	dec00104 	addi	sp,sp,4
   5a258:	f800283a 	ret

0005a25c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   5a25c:	defff604 	addi	sp,sp,-40
   5a260:	dfc00915 	stw	ra,36(sp)
   5a264:	df000815 	stw	fp,32(sp)
   5a268:	df000804 	addi	fp,sp,32
   5a26c:	e13ffd15 	stw	r4,-12(fp)
   5a270:	e17ffe15 	stw	r5,-8(fp)
   5a274:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   5a278:	00bfffc4 	movi	r2,-1
   5a27c:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   5a280:	00bffb44 	movi	r2,-19
   5a284:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   5a288:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   5a28c:	d1600a04 	addi	r5,gp,-32728
   5a290:	e13ffd17 	ldw	r4,-12(fp)
   5a294:	005a5780 	call	5a578 <alt_find_dev>
   5a298:	e0bff815 	stw	r2,-32(fp)
   5a29c:	e0bff817 	ldw	r2,-32(fp)
   5a2a0:	1000051e 	bne	r2,zero,5a2b8 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   5a2a4:	e13ffd17 	ldw	r4,-12(fp)
   5a2a8:	005a6080 	call	5a608 <alt_find_file>
   5a2ac:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   5a2b0:	00800044 	movi	r2,1
   5a2b4:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   5a2b8:	e0bff817 	ldw	r2,-32(fp)
   5a2bc:	10002926 	beq	r2,zero,5a364 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   5a2c0:	e13ff817 	ldw	r4,-32(fp)
   5a2c4:	005a7100 	call	5a710 <alt_get_fd>
   5a2c8:	e0bff915 	stw	r2,-28(fp)
   5a2cc:	e0bff917 	ldw	r2,-28(fp)
   5a2d0:	1000030e 	bge	r2,zero,5a2e0 <open+0x84>
    {
      status = index;
   5a2d4:	e0bff917 	ldw	r2,-28(fp)
   5a2d8:	e0bffa15 	stw	r2,-24(fp)
   5a2dc:	00002306 	br	5a36c <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   5a2e0:	e0bff917 	ldw	r2,-28(fp)
   5a2e4:	10c00324 	muli	r3,r2,12
   5a2e8:	008001b4 	movhi	r2,6
   5a2ec:	10b0d604 	addi	r2,r2,-15528
   5a2f0:	1885883a 	add	r2,r3,r2
   5a2f4:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   5a2f8:	e0fffe17 	ldw	r3,-8(fp)
   5a2fc:	00900034 	movhi	r2,16384
   5a300:	10bfffc4 	addi	r2,r2,-1
   5a304:	1886703a 	and	r3,r3,r2
   5a308:	e0bffc17 	ldw	r2,-16(fp)
   5a30c:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   5a310:	e0bffb17 	ldw	r2,-20(fp)
   5a314:	1000051e 	bne	r2,zero,5a32c <open+0xd0>
   5a318:	e13ffc17 	ldw	r4,-16(fp)
   5a31c:	005a1980 	call	5a198 <alt_file_locked>
   5a320:	e0bffa15 	stw	r2,-24(fp)
   5a324:	e0bffa17 	ldw	r2,-24(fp)
   5a328:	10001016 	blt	r2,zero,5a36c <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   5a32c:	e0bff817 	ldw	r2,-32(fp)
   5a330:	10800317 	ldw	r2,12(r2)
   5a334:	10000826 	beq	r2,zero,5a358 <open+0xfc>
   5a338:	e0bff817 	ldw	r2,-32(fp)
   5a33c:	10800317 	ldw	r2,12(r2)
   5a340:	e1ffff17 	ldw	r7,-4(fp)
   5a344:	e1bffe17 	ldw	r6,-8(fp)
   5a348:	e17ffd17 	ldw	r5,-12(fp)
   5a34c:	e13ffc17 	ldw	r4,-16(fp)
   5a350:	103ee83a 	callr	r2
   5a354:	00000106 	br	5a35c <open+0x100>
   5a358:	0005883a 	mov	r2,zero
   5a35c:	e0bffa15 	stw	r2,-24(fp)
   5a360:	00000206 	br	5a36c <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   5a364:	00bffb44 	movi	r2,-19
   5a368:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   5a36c:	e0bffa17 	ldw	r2,-24(fp)
   5a370:	1000090e 	bge	r2,zero,5a398 <open+0x13c>
  {
    alt_release_fd (index);  
   5a374:	e13ff917 	ldw	r4,-28(fp)
   5a378:	0058a3c0 	call	58a3c <alt_release_fd>
    ALT_ERRNO = -status;
   5a37c:	005a15c0 	call	5a15c <alt_get_errno>
   5a380:	1007883a 	mov	r3,r2
   5a384:	e0bffa17 	ldw	r2,-24(fp)
   5a388:	0085c83a 	sub	r2,zero,r2
   5a38c:	18800015 	stw	r2,0(r3)
    return -1;
   5a390:	00bfffc4 	movi	r2,-1
   5a394:	00000106 	br	5a39c <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   5a398:	e0bff917 	ldw	r2,-28(fp)
}
   5a39c:	e037883a 	mov	sp,fp
   5a3a0:	dfc00117 	ldw	ra,4(sp)
   5a3a4:	df000017 	ldw	fp,0(sp)
   5a3a8:	dec00204 	addi	sp,sp,8
   5a3ac:	f800283a 	ret

0005a3b0 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   5a3b0:	defffa04 	addi	sp,sp,-24
   5a3b4:	df000515 	stw	fp,20(sp)
   5a3b8:	df000504 	addi	fp,sp,20
   5a3bc:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   5a3c0:	0005303a 	rdctl	r2,status
   5a3c4:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   5a3c8:	e0fffc17 	ldw	r3,-16(fp)
   5a3cc:	00bfff84 	movi	r2,-2
   5a3d0:	1884703a 	and	r2,r3,r2
   5a3d4:	1001703a 	wrctl	status,r2
  
  return context;
   5a3d8:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   5a3dc:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   5a3e0:	e0bfff17 	ldw	r2,-4(fp)
   5a3e4:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   5a3e8:	e0bffd17 	ldw	r2,-12(fp)
   5a3ec:	10800017 	ldw	r2,0(r2)
   5a3f0:	e0fffd17 	ldw	r3,-12(fp)
   5a3f4:	18c00117 	ldw	r3,4(r3)
   5a3f8:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   5a3fc:	e0bffd17 	ldw	r2,-12(fp)
   5a400:	10800117 	ldw	r2,4(r2)
   5a404:	e0fffd17 	ldw	r3,-12(fp)
   5a408:	18c00017 	ldw	r3,0(r3)
   5a40c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   5a410:	e0bffd17 	ldw	r2,-12(fp)
   5a414:	e0fffd17 	ldw	r3,-12(fp)
   5a418:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   5a41c:	e0bffd17 	ldw	r2,-12(fp)
   5a420:	e0fffd17 	ldw	r3,-12(fp)
   5a424:	10c00015 	stw	r3,0(r2)
   5a428:	e0bffb17 	ldw	r2,-20(fp)
   5a42c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   5a430:	e0bffe17 	ldw	r2,-8(fp)
   5a434:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   5a438:	0001883a 	nop
   5a43c:	e037883a 	mov	sp,fp
   5a440:	df000017 	ldw	fp,0(sp)
   5a444:	dec00104 	addi	sp,sp,4
   5a448:	f800283a 	ret

0005a44c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   5a44c:	defffb04 	addi	sp,sp,-20
   5a450:	dfc00415 	stw	ra,16(sp)
   5a454:	df000315 	stw	fp,12(sp)
   5a458:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   5a45c:	d0a01017 	ldw	r2,-32704(gp)
   5a460:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   5a464:	d0a76b17 	ldw	r2,-25172(gp)
   5a468:	10800044 	addi	r2,r2,1
   5a46c:	d0a76b15 	stw	r2,-25172(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   5a470:	00002e06 	br	5a52c <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   5a474:	e0bffd17 	ldw	r2,-12(fp)
   5a478:	10800017 	ldw	r2,0(r2)
   5a47c:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   5a480:	e0bffd17 	ldw	r2,-12(fp)
   5a484:	10800403 	ldbu	r2,16(r2)
   5a488:	10803fcc 	andi	r2,r2,255
   5a48c:	10000426 	beq	r2,zero,5a4a0 <alt_tick+0x54>
   5a490:	d0a76b17 	ldw	r2,-25172(gp)
   5a494:	1000021e 	bne	r2,zero,5a4a0 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   5a498:	e0bffd17 	ldw	r2,-12(fp)
   5a49c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   5a4a0:	e0bffd17 	ldw	r2,-12(fp)
   5a4a4:	10800217 	ldw	r2,8(r2)
   5a4a8:	d0e76b17 	ldw	r3,-25172(gp)
   5a4ac:	18801d36 	bltu	r3,r2,5a524 <alt_tick+0xd8>
   5a4b0:	e0bffd17 	ldw	r2,-12(fp)
   5a4b4:	10800403 	ldbu	r2,16(r2)
   5a4b8:	10803fcc 	andi	r2,r2,255
   5a4bc:	1000191e 	bne	r2,zero,5a524 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   5a4c0:	e0bffd17 	ldw	r2,-12(fp)
   5a4c4:	10800317 	ldw	r2,12(r2)
   5a4c8:	e0fffd17 	ldw	r3,-12(fp)
   5a4cc:	18c00517 	ldw	r3,20(r3)
   5a4d0:	1809883a 	mov	r4,r3
   5a4d4:	103ee83a 	callr	r2
   5a4d8:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   5a4dc:	e0bfff17 	ldw	r2,-4(fp)
   5a4e0:	1000031e 	bne	r2,zero,5a4f0 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   5a4e4:	e13ffd17 	ldw	r4,-12(fp)
   5a4e8:	005a3b00 	call	5a3b0 <alt_alarm_stop>
   5a4ec:	00000d06 	br	5a524 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   5a4f0:	e0bffd17 	ldw	r2,-12(fp)
   5a4f4:	10c00217 	ldw	r3,8(r2)
   5a4f8:	e0bfff17 	ldw	r2,-4(fp)
   5a4fc:	1887883a 	add	r3,r3,r2
   5a500:	e0bffd17 	ldw	r2,-12(fp)
   5a504:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   5a508:	e0bffd17 	ldw	r2,-12(fp)
   5a50c:	10c00217 	ldw	r3,8(r2)
   5a510:	d0a76b17 	ldw	r2,-25172(gp)
   5a514:	1880032e 	bgeu	r3,r2,5a524 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   5a518:	e0bffd17 	ldw	r2,-12(fp)
   5a51c:	00c00044 	movi	r3,1
   5a520:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   5a524:	e0bffe17 	ldw	r2,-8(fp)
   5a528:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   5a52c:	e0fffd17 	ldw	r3,-12(fp)
   5a530:	d0a01004 	addi	r2,gp,-32704
   5a534:	18bfcf1e 	bne	r3,r2,5a474 <__alt_data_end+0xfffdbc74>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   5a538:	0001883a 	nop
}
   5a53c:	0001883a 	nop
   5a540:	e037883a 	mov	sp,fp
   5a544:	dfc00117 	ldw	ra,4(sp)
   5a548:	df000017 	ldw	fp,0(sp)
   5a54c:	dec00204 	addi	sp,sp,8
   5a550:	f800283a 	ret

0005a554 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   5a554:	deffff04 	addi	sp,sp,-4
   5a558:	df000015 	stw	fp,0(sp)
   5a55c:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   5a560:	000170fa 	wrctl	ienable,zero
}
   5a564:	0001883a 	nop
   5a568:	e037883a 	mov	sp,fp
   5a56c:	df000017 	ldw	fp,0(sp)
   5a570:	dec00104 	addi	sp,sp,4
   5a574:	f800283a 	ret

0005a578 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   5a578:	defffa04 	addi	sp,sp,-24
   5a57c:	dfc00515 	stw	ra,20(sp)
   5a580:	df000415 	stw	fp,16(sp)
   5a584:	df000404 	addi	fp,sp,16
   5a588:	e13ffe15 	stw	r4,-8(fp)
   5a58c:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   5a590:	e0bfff17 	ldw	r2,-4(fp)
   5a594:	10800017 	ldw	r2,0(r2)
   5a598:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   5a59c:	e13ffe17 	ldw	r4,-8(fp)
   5a5a0:	00459240 	call	45924 <strlen>
   5a5a4:	10800044 	addi	r2,r2,1
   5a5a8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   5a5ac:	00000d06 	br	5a5e4 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   5a5b0:	e0bffc17 	ldw	r2,-16(fp)
   5a5b4:	10800217 	ldw	r2,8(r2)
   5a5b8:	e0fffd17 	ldw	r3,-12(fp)
   5a5bc:	180d883a 	mov	r6,r3
   5a5c0:	e17ffe17 	ldw	r5,-8(fp)
   5a5c4:	1009883a 	mov	r4,r2
   5a5c8:	005a8900 	call	5a890 <memcmp>
   5a5cc:	1000021e 	bne	r2,zero,5a5d8 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   5a5d0:	e0bffc17 	ldw	r2,-16(fp)
   5a5d4:	00000706 	br	5a5f4 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   5a5d8:	e0bffc17 	ldw	r2,-16(fp)
   5a5dc:	10800017 	ldw	r2,0(r2)
   5a5e0:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   5a5e4:	e0fffc17 	ldw	r3,-16(fp)
   5a5e8:	e0bfff17 	ldw	r2,-4(fp)
   5a5ec:	18bff01e 	bne	r3,r2,5a5b0 <__alt_data_end+0xfffdbdb0>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   5a5f0:	0005883a 	mov	r2,zero
}
   5a5f4:	e037883a 	mov	sp,fp
   5a5f8:	dfc00117 	ldw	ra,4(sp)
   5a5fc:	df000017 	ldw	fp,0(sp)
   5a600:	dec00204 	addi	sp,sp,8
   5a604:	f800283a 	ret

0005a608 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   5a608:	defffb04 	addi	sp,sp,-20
   5a60c:	dfc00415 	stw	ra,16(sp)
   5a610:	df000315 	stw	fp,12(sp)
   5a614:	df000304 	addi	fp,sp,12
   5a618:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   5a61c:	d0a00817 	ldw	r2,-32736(gp)
   5a620:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   5a624:	00003106 	br	5a6ec <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   5a628:	e0bffd17 	ldw	r2,-12(fp)
   5a62c:	10800217 	ldw	r2,8(r2)
   5a630:	1009883a 	mov	r4,r2
   5a634:	00459240 	call	45924 <strlen>
   5a638:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   5a63c:	e0bffd17 	ldw	r2,-12(fp)
   5a640:	10c00217 	ldw	r3,8(r2)
   5a644:	e0bffe17 	ldw	r2,-8(fp)
   5a648:	10bfffc4 	addi	r2,r2,-1
   5a64c:	1885883a 	add	r2,r3,r2
   5a650:	10800003 	ldbu	r2,0(r2)
   5a654:	10803fcc 	andi	r2,r2,255
   5a658:	1080201c 	xori	r2,r2,128
   5a65c:	10bfe004 	addi	r2,r2,-128
   5a660:	10800bd8 	cmpnei	r2,r2,47
   5a664:	1000031e 	bne	r2,zero,5a674 <alt_find_file+0x6c>
    {
      len -= 1;
   5a668:	e0bffe17 	ldw	r2,-8(fp)
   5a66c:	10bfffc4 	addi	r2,r2,-1
   5a670:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   5a674:	e0bffe17 	ldw	r2,-8(fp)
   5a678:	e0ffff17 	ldw	r3,-4(fp)
   5a67c:	1885883a 	add	r2,r3,r2
   5a680:	10800003 	ldbu	r2,0(r2)
   5a684:	10803fcc 	andi	r2,r2,255
   5a688:	1080201c 	xori	r2,r2,128
   5a68c:	10bfe004 	addi	r2,r2,-128
   5a690:	10800be0 	cmpeqi	r2,r2,47
   5a694:	1000081e 	bne	r2,zero,5a6b8 <alt_find_file+0xb0>
   5a698:	e0bffe17 	ldw	r2,-8(fp)
   5a69c:	e0ffff17 	ldw	r3,-4(fp)
   5a6a0:	1885883a 	add	r2,r3,r2
   5a6a4:	10800003 	ldbu	r2,0(r2)
   5a6a8:	10803fcc 	andi	r2,r2,255
   5a6ac:	1080201c 	xori	r2,r2,128
   5a6b0:	10bfe004 	addi	r2,r2,-128
   5a6b4:	10000a1e 	bne	r2,zero,5a6e0 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   5a6b8:	e0bffd17 	ldw	r2,-12(fp)
   5a6bc:	10800217 	ldw	r2,8(r2)
   5a6c0:	e0fffe17 	ldw	r3,-8(fp)
   5a6c4:	180d883a 	mov	r6,r3
   5a6c8:	e17fff17 	ldw	r5,-4(fp)
   5a6cc:	1009883a 	mov	r4,r2
   5a6d0:	005a8900 	call	5a890 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   5a6d4:	1000021e 	bne	r2,zero,5a6e0 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   5a6d8:	e0bffd17 	ldw	r2,-12(fp)
   5a6dc:	00000706 	br	5a6fc <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   5a6e0:	e0bffd17 	ldw	r2,-12(fp)
   5a6e4:	10800017 	ldw	r2,0(r2)
   5a6e8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   5a6ec:	e0fffd17 	ldw	r3,-12(fp)
   5a6f0:	d0a00804 	addi	r2,gp,-32736
   5a6f4:	18bfcc1e 	bne	r3,r2,5a628 <__alt_data_end+0xfffdbe28>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   5a6f8:	0005883a 	mov	r2,zero
}
   5a6fc:	e037883a 	mov	sp,fp
   5a700:	dfc00117 	ldw	ra,4(sp)
   5a704:	df000017 	ldw	fp,0(sp)
   5a708:	dec00204 	addi	sp,sp,8
   5a70c:	f800283a 	ret

0005a710 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   5a710:	defffc04 	addi	sp,sp,-16
   5a714:	df000315 	stw	fp,12(sp)
   5a718:	df000304 	addi	fp,sp,12
   5a71c:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   5a720:	00bffa04 	movi	r2,-24
   5a724:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   5a728:	e03ffd15 	stw	zero,-12(fp)
   5a72c:	00001906 	br	5a794 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
   5a730:	008001b4 	movhi	r2,6
   5a734:	10b0d604 	addi	r2,r2,-15528
   5a738:	e0fffd17 	ldw	r3,-12(fp)
   5a73c:	18c00324 	muli	r3,r3,12
   5a740:	10c5883a 	add	r2,r2,r3
   5a744:	10800017 	ldw	r2,0(r2)
   5a748:	10000f1e 	bne	r2,zero,5a788 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
   5a74c:	008001b4 	movhi	r2,6
   5a750:	10b0d604 	addi	r2,r2,-15528
   5a754:	e0fffd17 	ldw	r3,-12(fp)
   5a758:	18c00324 	muli	r3,r3,12
   5a75c:	10c5883a 	add	r2,r2,r3
   5a760:	e0ffff17 	ldw	r3,-4(fp)
   5a764:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   5a768:	d0e00c17 	ldw	r3,-32720(gp)
   5a76c:	e0bffd17 	ldw	r2,-12(fp)
   5a770:	1880020e 	bge	r3,r2,5a77c <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
   5a774:	e0bffd17 	ldw	r2,-12(fp)
   5a778:	d0a00c15 	stw	r2,-32720(gp)
      }
      rc = i;
   5a77c:	e0bffd17 	ldw	r2,-12(fp)
   5a780:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   5a784:	00000606 	br	5a7a0 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   5a788:	e0bffd17 	ldw	r2,-12(fp)
   5a78c:	10800044 	addi	r2,r2,1
   5a790:	e0bffd15 	stw	r2,-12(fp)
   5a794:	e0bffd17 	ldw	r2,-12(fp)
   5a798:	10800810 	cmplti	r2,r2,32
   5a79c:	103fe41e 	bne	r2,zero,5a730 <__alt_data_end+0xfffdbf30>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   5a7a0:	e0bffe17 	ldw	r2,-8(fp)
}
   5a7a4:	e037883a 	mov	sp,fp
   5a7a8:	df000017 	ldw	fp,0(sp)
   5a7ac:	dec00104 	addi	sp,sp,4
   5a7b0:	f800283a 	ret

0005a7b4 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   5a7b4:	defffb04 	addi	sp,sp,-20
   5a7b8:	df000415 	stw	fp,16(sp)
   5a7bc:	df000404 	addi	fp,sp,16
   5a7c0:	e13ffe15 	stw	r4,-8(fp)
   5a7c4:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   5a7c8:	e0bfff17 	ldw	r2,-4(fp)
   5a7cc:	10840070 	cmpltui	r2,r2,4097
   5a7d0:	1000021e 	bne	r2,zero,5a7dc <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   5a7d4:	00840004 	movi	r2,4096
   5a7d8:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   5a7dc:	e0fffe17 	ldw	r3,-8(fp)
   5a7e0:	e0bfff17 	ldw	r2,-4(fp)
   5a7e4:	1885883a 	add	r2,r3,r2
   5a7e8:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   5a7ec:	e0bffe17 	ldw	r2,-8(fp)
   5a7f0:	e0bffc15 	stw	r2,-16(fp)
   5a7f4:	00000506 	br	5a80c <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   5a7f8:	e0bffc17 	ldw	r2,-16(fp)
   5a7fc:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   5a800:	e0bffc17 	ldw	r2,-16(fp)
   5a804:	10800804 	addi	r2,r2,32
   5a808:	e0bffc15 	stw	r2,-16(fp)
   5a80c:	e0fffc17 	ldw	r3,-16(fp)
   5a810:	e0bffd17 	ldw	r2,-12(fp)
   5a814:	18bff836 	bltu	r3,r2,5a7f8 <__alt_data_end+0xfffdbff8>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   5a818:	e0bffe17 	ldw	r2,-8(fp)
   5a81c:	108007cc 	andi	r2,r2,31
   5a820:	10000226 	beq	r2,zero,5a82c <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   5a824:	e0bffc17 	ldw	r2,-16(fp)
   5a828:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   5a82c:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   5a830:	0001883a 	nop
   5a834:	e037883a 	mov	sp,fp
   5a838:	df000017 	ldw	fp,0(sp)
   5a83c:	dec00104 	addi	sp,sp,4
   5a840:	f800283a 	ret

0005a844 <atexit>:
   5a844:	200b883a 	mov	r5,r4
   5a848:	000f883a 	mov	r7,zero
   5a84c:	000d883a 	mov	r6,zero
   5a850:	0009883a 	mov	r4,zero
   5a854:	005a90c1 	jmpi	5a90c <__register_exitproc>

0005a858 <exit>:
   5a858:	defffe04 	addi	sp,sp,-8
   5a85c:	000b883a 	mov	r5,zero
   5a860:	dc000015 	stw	r16,0(sp)
   5a864:	dfc00115 	stw	ra,4(sp)
   5a868:	2021883a 	mov	r16,r4
   5a86c:	005aa240 	call	5aa24 <__call_exitprocs>
   5a870:	008001b4 	movhi	r2,6
   5a874:	10b54f04 	addi	r2,r2,-10948
   5a878:	11000017 	ldw	r4,0(r2)
   5a87c:	20800f17 	ldw	r2,60(r4)
   5a880:	10000126 	beq	r2,zero,5a888 <exit+0x30>
   5a884:	103ee83a 	callr	r2
   5a888:	8009883a 	mov	r4,r16
   5a88c:	005aba40 	call	5aba4 <_exit>

0005a890 <memcmp>:
   5a890:	01c000c4 	movi	r7,3
   5a894:	3980192e 	bgeu	r7,r6,5a8fc <memcmp+0x6c>
   5a898:	2144b03a 	or	r2,r4,r5
   5a89c:	11c4703a 	and	r2,r2,r7
   5a8a0:	10000f26 	beq	r2,zero,5a8e0 <memcmp+0x50>
   5a8a4:	20800003 	ldbu	r2,0(r4)
   5a8a8:	28c00003 	ldbu	r3,0(r5)
   5a8ac:	10c0151e 	bne	r2,r3,5a904 <memcmp+0x74>
   5a8b0:	31bfff84 	addi	r6,r6,-2
   5a8b4:	01ffffc4 	movi	r7,-1
   5a8b8:	00000406 	br	5a8cc <memcmp+0x3c>
   5a8bc:	20800003 	ldbu	r2,0(r4)
   5a8c0:	28c00003 	ldbu	r3,0(r5)
   5a8c4:	31bfffc4 	addi	r6,r6,-1
   5a8c8:	10c00e1e 	bne	r2,r3,5a904 <memcmp+0x74>
   5a8cc:	21000044 	addi	r4,r4,1
   5a8d0:	29400044 	addi	r5,r5,1
   5a8d4:	31fff91e 	bne	r6,r7,5a8bc <__alt_data_end+0xfffdc0bc>
   5a8d8:	0005883a 	mov	r2,zero
   5a8dc:	f800283a 	ret
   5a8e0:	20c00017 	ldw	r3,0(r4)
   5a8e4:	28800017 	ldw	r2,0(r5)
   5a8e8:	18bfee1e 	bne	r3,r2,5a8a4 <__alt_data_end+0xfffdc0a4>
   5a8ec:	31bfff04 	addi	r6,r6,-4
   5a8f0:	21000104 	addi	r4,r4,4
   5a8f4:	29400104 	addi	r5,r5,4
   5a8f8:	39bff936 	bltu	r7,r6,5a8e0 <__alt_data_end+0xfffdc0e0>
   5a8fc:	303fe91e 	bne	r6,zero,5a8a4 <__alt_data_end+0xfffdc0a4>
   5a900:	003ff506 	br	5a8d8 <__alt_data_end+0xfffdc0d8>
   5a904:	10c5c83a 	sub	r2,r2,r3
   5a908:	f800283a 	ret

0005a90c <__register_exitproc>:
   5a90c:	defffa04 	addi	sp,sp,-24
   5a910:	dc000315 	stw	r16,12(sp)
   5a914:	040001b4 	movhi	r16,6
   5a918:	84354f04 	addi	r16,r16,-10948
   5a91c:	80c00017 	ldw	r3,0(r16)
   5a920:	dc400415 	stw	r17,16(sp)
   5a924:	dfc00515 	stw	ra,20(sp)
   5a928:	18805217 	ldw	r2,328(r3)
   5a92c:	2023883a 	mov	r17,r4
   5a930:	10003726 	beq	r2,zero,5aa10 <__register_exitproc+0x104>
   5a934:	10c00117 	ldw	r3,4(r2)
   5a938:	010007c4 	movi	r4,31
   5a93c:	20c00e16 	blt	r4,r3,5a978 <__register_exitproc+0x6c>
   5a940:	1a000044 	addi	r8,r3,1
   5a944:	8800221e 	bne	r17,zero,5a9d0 <__register_exitproc+0xc4>
   5a948:	18c00084 	addi	r3,r3,2
   5a94c:	18c7883a 	add	r3,r3,r3
   5a950:	18c7883a 	add	r3,r3,r3
   5a954:	12000115 	stw	r8,4(r2)
   5a958:	10c7883a 	add	r3,r2,r3
   5a95c:	19400015 	stw	r5,0(r3)
   5a960:	0005883a 	mov	r2,zero
   5a964:	dfc00517 	ldw	ra,20(sp)
   5a968:	dc400417 	ldw	r17,16(sp)
   5a96c:	dc000317 	ldw	r16,12(sp)
   5a970:	dec00604 	addi	sp,sp,24
   5a974:	f800283a 	ret
   5a978:	00800034 	movhi	r2,0
   5a97c:	10800004 	addi	r2,r2,0
   5a980:	10002626 	beq	r2,zero,5aa1c <__register_exitproc+0x110>
   5a984:	01006404 	movi	r4,400
   5a988:	d9400015 	stw	r5,0(sp)
   5a98c:	d9800115 	stw	r6,4(sp)
   5a990:	d9c00215 	stw	r7,8(sp)
   5a994:	00000000 	call	0 <__alt_mem_onchip_memory2-0x40000>
   5a998:	d9400017 	ldw	r5,0(sp)
   5a99c:	d9800117 	ldw	r6,4(sp)
   5a9a0:	d9c00217 	ldw	r7,8(sp)
   5a9a4:	10001d26 	beq	r2,zero,5aa1c <__register_exitproc+0x110>
   5a9a8:	81000017 	ldw	r4,0(r16)
   5a9ac:	10000115 	stw	zero,4(r2)
   5a9b0:	02000044 	movi	r8,1
   5a9b4:	22405217 	ldw	r9,328(r4)
   5a9b8:	0007883a 	mov	r3,zero
   5a9bc:	12400015 	stw	r9,0(r2)
   5a9c0:	20805215 	stw	r2,328(r4)
   5a9c4:	10006215 	stw	zero,392(r2)
   5a9c8:	10006315 	stw	zero,396(r2)
   5a9cc:	883fde26 	beq	r17,zero,5a948 <__alt_data_end+0xfffdc148>
   5a9d0:	18c9883a 	add	r4,r3,r3
   5a9d4:	2109883a 	add	r4,r4,r4
   5a9d8:	1109883a 	add	r4,r2,r4
   5a9dc:	21802215 	stw	r6,136(r4)
   5a9e0:	01800044 	movi	r6,1
   5a9e4:	12406217 	ldw	r9,392(r2)
   5a9e8:	30cc983a 	sll	r6,r6,r3
   5a9ec:	4992b03a 	or	r9,r9,r6
   5a9f0:	12406215 	stw	r9,392(r2)
   5a9f4:	21c04215 	stw	r7,264(r4)
   5a9f8:	01000084 	movi	r4,2
   5a9fc:	893fd21e 	bne	r17,r4,5a948 <__alt_data_end+0xfffdc148>
   5aa00:	11006317 	ldw	r4,396(r2)
   5aa04:	218cb03a 	or	r6,r4,r6
   5aa08:	11806315 	stw	r6,396(r2)
   5aa0c:	003fce06 	br	5a948 <__alt_data_end+0xfffdc148>
   5aa10:	18805304 	addi	r2,r3,332
   5aa14:	18805215 	stw	r2,328(r3)
   5aa18:	003fc606 	br	5a934 <__alt_data_end+0xfffdc134>
   5aa1c:	00bfffc4 	movi	r2,-1
   5aa20:	003fd006 	br	5a964 <__alt_data_end+0xfffdc164>

0005aa24 <__call_exitprocs>:
   5aa24:	defff504 	addi	sp,sp,-44
   5aa28:	df000915 	stw	fp,36(sp)
   5aa2c:	dd400615 	stw	r21,24(sp)
   5aa30:	dc800315 	stw	r18,12(sp)
   5aa34:	dfc00a15 	stw	ra,40(sp)
   5aa38:	ddc00815 	stw	r23,32(sp)
   5aa3c:	dd800715 	stw	r22,28(sp)
   5aa40:	dd000515 	stw	r20,20(sp)
   5aa44:	dcc00415 	stw	r19,16(sp)
   5aa48:	dc400215 	stw	r17,8(sp)
   5aa4c:	dc000115 	stw	r16,4(sp)
   5aa50:	d9000015 	stw	r4,0(sp)
   5aa54:	2839883a 	mov	fp,r5
   5aa58:	04800044 	movi	r18,1
   5aa5c:	057fffc4 	movi	r21,-1
   5aa60:	008001b4 	movhi	r2,6
   5aa64:	10b54f04 	addi	r2,r2,-10948
   5aa68:	12000017 	ldw	r8,0(r2)
   5aa6c:	45005217 	ldw	r20,328(r8)
   5aa70:	44c05204 	addi	r19,r8,328
   5aa74:	a0001c26 	beq	r20,zero,5aae8 <__call_exitprocs+0xc4>
   5aa78:	a0800117 	ldw	r2,4(r20)
   5aa7c:	15ffffc4 	addi	r23,r2,-1
   5aa80:	b8000d16 	blt	r23,zero,5aab8 <__call_exitprocs+0x94>
   5aa84:	14000044 	addi	r16,r2,1
   5aa88:	8421883a 	add	r16,r16,r16
   5aa8c:	8421883a 	add	r16,r16,r16
   5aa90:	84402004 	addi	r17,r16,128
   5aa94:	a463883a 	add	r17,r20,r17
   5aa98:	a421883a 	add	r16,r20,r16
   5aa9c:	e0001e26 	beq	fp,zero,5ab18 <__call_exitprocs+0xf4>
   5aaa0:	80804017 	ldw	r2,256(r16)
   5aaa4:	e0801c26 	beq	fp,r2,5ab18 <__call_exitprocs+0xf4>
   5aaa8:	bdffffc4 	addi	r23,r23,-1
   5aaac:	843fff04 	addi	r16,r16,-4
   5aab0:	8c7fff04 	addi	r17,r17,-4
   5aab4:	bd7ff91e 	bne	r23,r21,5aa9c <__alt_data_end+0xfffdc29c>
   5aab8:	00800034 	movhi	r2,0
   5aabc:	10800004 	addi	r2,r2,0
   5aac0:	10000926 	beq	r2,zero,5aae8 <__call_exitprocs+0xc4>
   5aac4:	a0800117 	ldw	r2,4(r20)
   5aac8:	1000301e 	bne	r2,zero,5ab8c <__call_exitprocs+0x168>
   5aacc:	a0800017 	ldw	r2,0(r20)
   5aad0:	10003226 	beq	r2,zero,5ab9c <__call_exitprocs+0x178>
   5aad4:	a009883a 	mov	r4,r20
   5aad8:	98800015 	stw	r2,0(r19)
   5aadc:	00000000 	call	0 <__alt_mem_onchip_memory2-0x40000>
   5aae0:	9d000017 	ldw	r20,0(r19)
   5aae4:	a03fe41e 	bne	r20,zero,5aa78 <__alt_data_end+0xfffdc278>
   5aae8:	dfc00a17 	ldw	ra,40(sp)
   5aaec:	df000917 	ldw	fp,36(sp)
   5aaf0:	ddc00817 	ldw	r23,32(sp)
   5aaf4:	dd800717 	ldw	r22,28(sp)
   5aaf8:	dd400617 	ldw	r21,24(sp)
   5aafc:	dd000517 	ldw	r20,20(sp)
   5ab00:	dcc00417 	ldw	r19,16(sp)
   5ab04:	dc800317 	ldw	r18,12(sp)
   5ab08:	dc400217 	ldw	r17,8(sp)
   5ab0c:	dc000117 	ldw	r16,4(sp)
   5ab10:	dec00b04 	addi	sp,sp,44
   5ab14:	f800283a 	ret
   5ab18:	a0800117 	ldw	r2,4(r20)
   5ab1c:	80c00017 	ldw	r3,0(r16)
   5ab20:	10bfffc4 	addi	r2,r2,-1
   5ab24:	15c01426 	beq	r2,r23,5ab78 <__call_exitprocs+0x154>
   5ab28:	80000015 	stw	zero,0(r16)
   5ab2c:	183fde26 	beq	r3,zero,5aaa8 <__alt_data_end+0xfffdc2a8>
   5ab30:	95c8983a 	sll	r4,r18,r23
   5ab34:	a0806217 	ldw	r2,392(r20)
   5ab38:	a5800117 	ldw	r22,4(r20)
   5ab3c:	2084703a 	and	r2,r4,r2
   5ab40:	10000b26 	beq	r2,zero,5ab70 <__call_exitprocs+0x14c>
   5ab44:	a0806317 	ldw	r2,396(r20)
   5ab48:	2088703a 	and	r4,r4,r2
   5ab4c:	20000c1e 	bne	r4,zero,5ab80 <__call_exitprocs+0x15c>
   5ab50:	89400017 	ldw	r5,0(r17)
   5ab54:	d9000017 	ldw	r4,0(sp)
   5ab58:	183ee83a 	callr	r3
   5ab5c:	a0800117 	ldw	r2,4(r20)
   5ab60:	15bfbf1e 	bne	r2,r22,5aa60 <__alt_data_end+0xfffdc260>
   5ab64:	98800017 	ldw	r2,0(r19)
   5ab68:	153fcf26 	beq	r2,r20,5aaa8 <__alt_data_end+0xfffdc2a8>
   5ab6c:	003fbc06 	br	5aa60 <__alt_data_end+0xfffdc260>
   5ab70:	183ee83a 	callr	r3
   5ab74:	003ff906 	br	5ab5c <__alt_data_end+0xfffdc35c>
   5ab78:	a5c00115 	stw	r23,4(r20)
   5ab7c:	003feb06 	br	5ab2c <__alt_data_end+0xfffdc32c>
   5ab80:	89000017 	ldw	r4,0(r17)
   5ab84:	183ee83a 	callr	r3
   5ab88:	003ff406 	br	5ab5c <__alt_data_end+0xfffdc35c>
   5ab8c:	a0800017 	ldw	r2,0(r20)
   5ab90:	a027883a 	mov	r19,r20
   5ab94:	1029883a 	mov	r20,r2
   5ab98:	003fb606 	br	5aa74 <__alt_data_end+0xfffdc274>
   5ab9c:	0005883a 	mov	r2,zero
   5aba0:	003ffb06 	br	5ab90 <__alt_data_end+0xfffdc390>

0005aba4 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   5aba4:	defffd04 	addi	sp,sp,-12
   5aba8:	df000215 	stw	fp,8(sp)
   5abac:	df000204 	addi	fp,sp,8
   5abb0:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   5abb4:	0001883a 	nop
   5abb8:	e0bfff17 	ldw	r2,-4(fp)
   5abbc:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   5abc0:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   5abc4:	10000226 	beq	r2,zero,5abd0 <_exit+0x2c>
    ALT_SIM_FAIL();
   5abc8:	002af070 	cmpltui	zero,zero,43969
   5abcc:	00000106 	br	5abd4 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   5abd0:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   5abd4:	003fff06 	br	5abd4 <__alt_data_end+0xfffdc3d4>

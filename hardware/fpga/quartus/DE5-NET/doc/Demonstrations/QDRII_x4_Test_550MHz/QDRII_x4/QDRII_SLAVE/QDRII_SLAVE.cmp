	component QDRII_SLAVE is
		port (
			global_reset_n             : in  std_logic                     := 'X';             -- reset_n
			soft_reset_n               : in  std_logic                     := 'X';             -- reset_n
			afi_clk                    : in  std_logic                     := 'X';             -- clk
			afi_half_clk               : in  std_logic                     := 'X';             -- clk
			afi_reset_n                : in  std_logic                     := 'X';             -- reset_n
			mem_d                      : out std_logic_vector(17 downto 0);                    -- mem_d
			mem_wps_n                  : out std_logic_vector(0 downto 0);                     -- mem_wps_n
			mem_bws_n                  : out std_logic_vector(1 downto 0);                     -- mem_bws_n
			mem_a                      : out std_logic_vector(19 downto 0);                    -- mem_a
			mem_q                      : in  std_logic_vector(17 downto 0) := (others => 'X'); -- mem_q
			mem_rps_n                  : out std_logic_vector(0 downto 0);                     -- mem_rps_n
			mem_k                      : out std_logic_vector(0 downto 0);                     -- mem_k
			mem_k_n                    : out std_logic_vector(0 downto 0);                     -- mem_k_n
			mem_cq                     : in  std_logic_vector(0 downto 0)  := (others => 'X'); -- mem_cq
			mem_cq_n                   : in  std_logic_vector(0 downto 0)  := (others => 'X'); -- mem_cq_n
			mem_doff_n                 : out std_logic_vector(0 downto 0);                     -- mem_doff_n
			avl_w_write_req            : in  std_logic                     := 'X';             -- write
			avl_w_ready                : out std_logic;                                        -- waitrequest_n
			avl_w_addr                 : in  std_logic_vector(19 downto 0) := (others => 'X'); -- address
			avl_w_size                 : in  std_logic                     := 'X';             -- burstcount
			avl_w_wdata                : in  std_logic_vector(71 downto 0) := (others => 'X'); -- writedata
			avl_r_read_req             : in  std_logic                     := 'X';             -- read
			avl_r_ready                : out std_logic;                                        -- waitrequest_n
			avl_r_addr                 : in  std_logic_vector(19 downto 0) := (others => 'X'); -- address
			avl_r_size                 : in  std_logic                     := 'X';             -- burstcount
			avl_r_rdata_valid          : out std_logic;                                        -- readdatavalid
			avl_r_rdata                : out std_logic_vector(71 downto 0);                    -- readdata
			local_init_done            : out std_logic;                                        -- local_init_done
			local_cal_success          : out std_logic;                                        -- local_cal_success
			local_cal_fail             : out std_logic;                                        -- local_cal_fail
			seriesterminationcontrol   : in  std_logic_vector(15 downto 0) := (others => 'X'); -- seriesterminationcontrol
			parallelterminationcontrol : in  std_logic_vector(15 downto 0) := (others => 'X'); -- parallelterminationcontrol
			pll_mem_clk                : in  std_logic                     := 'X';             -- pll_mem_clk
			pll_write_clk              : in  std_logic                     := 'X';             -- pll_write_clk
			pll_locked                 : in  std_logic                     := 'X';             -- pll_locked
			pll_write_clk_pre_phy_clk  : in  std_logic                     := 'X';             -- pll_write_clk_pre_phy_clk
			pll_addr_cmd_clk           : in  std_logic                     := 'X';             -- pll_addr_cmd_clk
			pll_avl_clk                : in  std_logic                     := 'X';             -- pll_avl_clk
			pll_config_clk             : in  std_logic                     := 'X';             -- pll_config_clk
			pll_p2c_read_clk           : in  std_logic                     := 'X';             -- pll_p2c_read_clk
			pll_c2p_write_clk          : in  std_logic                     := 'X';             -- pll_c2p_write_clk
			dll_pll_locked             : out std_logic;                                        -- dll_pll_locked
			dll_delayctrl              : in  std_logic_vector(6 downto 0)  := (others => 'X')  -- dll_delayctrl
		);
	end component QDRII_SLAVE;


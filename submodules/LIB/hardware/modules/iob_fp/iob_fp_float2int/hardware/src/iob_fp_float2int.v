//This file was automatically generated by the python 'pipeliner' script
//This module has a latency of 2 clocks
`timescale 1ns / 1ps

module iob_fp_float2int
  (
   input         clk_i,
   input         rst_i,

   input         start_i,
   output        done_o,

   input [31:0]  op_i,
   output [31:0] res_o
   );

   localparam END_COUNT = 1;

   reg [3:0]     counter;
   assign done_o = (counter == END_COUNT)? 1'b1: 1'b0;
   always @(posedge clk_i, posedge rst) begin
      if (rst) begin
         counter <= END_COUNT;
      end else if (start_i) begin
         counter <= 0;
      end else if (~done_o) begin
         counter <= counter + 1'b1;
      end
   end

   wire [31:0]  s_0;
   wire [31:0]  s_1;
   wire [31:0]  s_2;
   wire [31:0]  s_3;
   wire [31:0]  s_4;
   wire [31:0]  s_5;
   wire [23:0]  s_6;
   wire [0:0]   s_7;
   wire [0:0]   s_8;
   wire [0:0]   s_9;
   wire [0:0]   s_10;
   wire [7:0]   s_11;
   wire [7:0]   s_12;
   wire [31:0]  s_13;
   wire [6:0]   s_14;
   wire [7:0]   s_15;
   wire [22:0]  s_16;
   wire [7:0]   s_17;
   wire [7:0]   s_18;
   wire [7:0]   s_19;
   wire [7:0]   s_20;
   wire [7:0]   s_21;
   wire [7:0]   s_22;
   wire [0:0]   s_23;
   wire [31:0]  s_24;
   wire [0:0]   s_25;
   wire [0:0]   s_26;

   assign s_0 = s_25?s_1:s_24;
   iob_fp_dq #(32, 1) dq_s_1 (clk_i, rst_i, s_1, s_2);
   assign s_2 = -s_3;
   iob_fp_dq #(32, 1) dq_s_3 (clk_i, rst_i, s_3, s_4);
   assign s_4 = s_5 >> s_18;
   assign s_5 = {s_6,s_17};
   assign s_6 = {s_7,s_16};
   assign s_7 = s_10?s_8:s_9;
   assign s_8 = 1'd0;
   assign s_9 = 1'd1;
   assign s_10 = s_11 == s_15;
   assign s_11 = s_12 - s_14;
   assign s_12 = s_13[30:23];
   assign s_13 = op_i;
   assign s_14 = 7'd127;
   assign s_15 = -8'd127;
   assign s_16 = s_13[22:0];
   assign s_17 = 8'd0;
   assign s_18 = s_19 - {7'h0,s_23};
   assign s_19 = s_20 - s_21;
   assign s_20 = 8'd32;
   assign s_21 = s_10?s_22:s_11;
   assign s_22 = -8'd126;
   assign s_23 = 1'd1;
   iob_fp_dq #(32, 1) dq_s_24 (clk_i, rst_i, s_24, s_3);
   iob_fp_dq #(1, 2) dq_s_25 (clk_i, rst_i, s_25, s_26);
   assign s_26 = s_13[31];
   assign res_o = s_0;

endmodule
